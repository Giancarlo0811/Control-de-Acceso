

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 18 13:12:13 2025

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F1937
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	cinit,global,class=CODE,merge=1,delta=2
    23                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    26                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    27                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    28                           	psect	clrtext,global,class=CODE,delta=2
    29                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    34                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    45                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    60                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text30,local,class=CODE,merge=1,delta=2
    64                           	psect	text31,local,class=CODE,merge=1,delta=2
    65                           	psect	text32,local,class=CODE,merge=1,delta=2
    66                           	psect	text33,local,class=CODE,merge=1,delta=2
    67                           	psect	text34,local,class=CODE,merge=1,delta=2
    68                           	psect	text35,local,class=CODE,merge=1,delta=2
    69                           	psect	text36,local,class=CODE,merge=1,delta=2
    70                           	psect	text37,local,class=CODE,merge=1,delta=2
    71                           	psect	text38,local,class=CODE,merge=1,delta=2
    72                           	psect	text39,local,class=CODE,merge=1,delta=2
    73                           	psect	text40,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	psect	text42,local,class=CODE,merge=1,delta=2
    76                           	psect	text43,local,class=CODE,merge=1,delta=2
    77                           	psect	text44,local,class=CODE,merge=1,delta=2
    78                           	psect	text45,local,class=CODE,merge=1,delta=2
    79                           	psect	text46,local,class=CODE,merge=1,delta=2
    80                           	psect	text47,local,class=CODE,merge=1,delta=2
    81                           	psect	text48,local,class=CODE,merge=1,delta=2,group=3
    82                           	psect	text49,local,class=CODE,merge=1,delta=2
    83                           	psect	text50,local,class=CODE,merge=1,delta=2
    84                           	psect	text51,local,class=CODE,merge=1,delta=2
    85                           	psect	text52,local,class=CODE,merge=1,delta=2
    86                           	psect	text53,local,class=CODE,merge=1,delta=2
    87                           	psect	text54,local,class=CODE,merge=1,delta=2
    88                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    89                           	dabs	1,0x7E,2
    90     0000                     
    91                           ; Generated 06/07/2023 GMT
    92                           ; 
    93                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution. Publication is not required when
   107                           ;        this file is used in an embedded application.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC16F1937 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0008                     	;# 
   134     0009                     	;# 
   135     000A                     	;# 
   136     000B                     	;# 
   137     000C                     	;# 
   138     000D                     	;# 
   139     000E                     	;# 
   140     000F                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0015                     	;# 
   146     0016                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001C                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     008F                     	;# 
   160     0090                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0095                     	;# 
   165     0096                     	;# 
   166     0097                     	;# 
   167     0098                     	;# 
   168     0099                     	;# 
   169     009A                     	;# 
   170     009B                     	;# 
   171     009B                     	;# 
   172     009C                     	;# 
   173     009D                     	;# 
   174     009E                     	;# 
   175     010C                     	;# 
   176     010D                     	;# 
   177     010E                     	;# 
   178     010F                     	;# 
   179     0110                     	;# 
   180     0111                     	;# 
   181     0112                     	;# 
   182     0113                     	;# 
   183     0114                     	;# 
   184     0115                     	;# 
   185     0116                     	;# 
   186     0117                     	;# 
   187     0118                     	;# 
   188     0119                     	;# 
   189     011A                     	;# 
   190     011B                     	;# 
   191     011D                     	;# 
   192     018C                     	;# 
   193     018D                     	;# 
   194     018F                     	;# 
   195     0190                     	;# 
   196     0191                     	;# 
   197     0191                     	;# 
   198     0192                     	;# 
   199     0193                     	;# 
   200     0193                     	;# 
   201     0193                     	;# 
   202     0194                     	;# 
   203     0195                     	;# 
   204     0196                     	;# 
   205     0199                     	;# 
   206     019A                     	;# 
   207     019B                     	;# 
   208     019B                     	;# 
   209     019B                     	;# 
   210     019B                     	;# 
   211     019C                     	;# 
   212     019C                     	;# 
   213     019D                     	;# 
   214     019E                     	;# 
   215     019F                     	;# 
   216     020D                     	;# 
   217     0210                     	;# 
   218     0211                     	;# 
   219     0212                     	;# 
   220     0213                     	;# 
   221     0214                     	;# 
   222     0215                     	;# 
   223     0215                     	;# 
   224     0216                     	;# 
   225     0217                     	;# 
   226     0291                     	;# 
   227     0291                     	;# 
   228     0292                     	;# 
   229     0293                     	;# 
   230     0294                     	;# 
   231     0295                     	;# 
   232     0295                     	;# 
   233     0296                     	;# 
   234     0298                     	;# 
   235     0298                     	;# 
   236     0299                     	;# 
   237     029A                     	;# 
   238     029B                     	;# 
   239     029C                     	;# 
   240     029C                     	;# 
   241     029D                     	;# 
   242     029E                     	;# 
   243     029F                     	;# 
   244     0311                     	;# 
   245     0311                     	;# 
   246     0312                     	;# 
   247     0313                     	;# 
   248     0314                     	;# 
   249     0315                     	;# 
   250     0315                     	;# 
   251     0316                     	;# 
   252     0318                     	;# 
   253     0318                     	;# 
   254     0319                     	;# 
   255     031A                     	;# 
   256     031C                     	;# 
   257     031C                     	;# 
   258     031D                     	;# 
   259     031E                     	;# 
   260     0394                     	;# 
   261     0395                     	;# 
   262     0396                     	;# 
   263     0415                     	;# 
   264     0416                     	;# 
   265     0417                     	;# 
   266     041C                     	;# 
   267     041D                     	;# 
   268     041E                     	;# 
   269     0791                     	;# 
   270     0792                     	;# 
   271     0793                     	;# 
   272     0794                     	;# 
   273     0795                     	;# 
   274     0798                     	;# 
   275     0799                     	;# 
   276     079A                     	;# 
   277     07A0                     	;# 
   278     07A1                     	;# 
   279     07A2                     	;# 
   280     07A3                     	;# 
   281     07A4                     	;# 
   282     07A5                     	;# 
   283     07A6                     	;# 
   284     07A7                     	;# 
   285     07A8                     	;# 
   286     07A9                     	;# 
   287     07AA                     	;# 
   288     07AB                     	;# 
   289     0FE4                     	;# 
   290     0FE5                     	;# 
   291     0FE6                     	;# 
   292     0FE7                     	;# 
   293     0FE8                     	;# 
   294     0FE9                     	;# 
   295     0FEA                     	;# 
   296     0FEB                     	;# 
   297     0FED                     	;# 
   298     0FEE                     	;# 
   299     0FEF                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000F                     	;# 
   316     0010                     	;# 
   317     0011                     	;# 
   318     0012                     	;# 
   319     0013                     	;# 
   320     0015                     	;# 
   321     0016                     	;# 
   322     0016                     	;# 
   323     0017                     	;# 
   324     0018                     	;# 
   325     0019                     	;# 
   326     001A                     	;# 
   327     001B                     	;# 
   328     001C                     	;# 
   329     001E                     	;# 
   330     001F                     	;# 
   331     008C                     	;# 
   332     008D                     	;# 
   333     008E                     	;# 
   334     008F                     	;# 
   335     0090                     	;# 
   336     0091                     	;# 
   337     0092                     	;# 
   338     0093                     	;# 
   339     0095                     	;# 
   340     0096                     	;# 
   341     0097                     	;# 
   342     0098                     	;# 
   343     0099                     	;# 
   344     009A                     	;# 
   345     009B                     	;# 
   346     009B                     	;# 
   347     009C                     	;# 
   348     009D                     	;# 
   349     009E                     	;# 
   350     010C                     	;# 
   351     010D                     	;# 
   352     010E                     	;# 
   353     010F                     	;# 
   354     0110                     	;# 
   355     0111                     	;# 
   356     0112                     	;# 
   357     0113                     	;# 
   358     0114                     	;# 
   359     0115                     	;# 
   360     0116                     	;# 
   361     0117                     	;# 
   362     0118                     	;# 
   363     0119                     	;# 
   364     011A                     	;# 
   365     011B                     	;# 
   366     011D                     	;# 
   367     018C                     	;# 
   368     018D                     	;# 
   369     018F                     	;# 
   370     0190                     	;# 
   371     0191                     	;# 
   372     0191                     	;# 
   373     0192                     	;# 
   374     0193                     	;# 
   375     0193                     	;# 
   376     0193                     	;# 
   377     0194                     	;# 
   378     0195                     	;# 
   379     0196                     	;# 
   380     0199                     	;# 
   381     019A                     	;# 
   382     019B                     	;# 
   383     019B                     	;# 
   384     019B                     	;# 
   385     019B                     	;# 
   386     019C                     	;# 
   387     019C                     	;# 
   388     019D                     	;# 
   389     019E                     	;# 
   390     019F                     	;# 
   391     020D                     	;# 
   392     0210                     	;# 
   393     0211                     	;# 
   394     0212                     	;# 
   395     0213                     	;# 
   396     0214                     	;# 
   397     0215                     	;# 
   398     0215                     	;# 
   399     0216                     	;# 
   400     0217                     	;# 
   401     0291                     	;# 
   402     0291                     	;# 
   403     0292                     	;# 
   404     0293                     	;# 
   405     0294                     	;# 
   406     0295                     	;# 
   407     0295                     	;# 
   408     0296                     	;# 
   409     0298                     	;# 
   410     0298                     	;# 
   411     0299                     	;# 
   412     029A                     	;# 
   413     029B                     	;# 
   414     029C                     	;# 
   415     029C                     	;# 
   416     029D                     	;# 
   417     029E                     	;# 
   418     029F                     	;# 
   419     0311                     	;# 
   420     0311                     	;# 
   421     0312                     	;# 
   422     0313                     	;# 
   423     0314                     	;# 
   424     0315                     	;# 
   425     0315                     	;# 
   426     0316                     	;# 
   427     0318                     	;# 
   428     0318                     	;# 
   429     0319                     	;# 
   430     031A                     	;# 
   431     031C                     	;# 
   432     031C                     	;# 
   433     031D                     	;# 
   434     031E                     	;# 
   435     0394                     	;# 
   436     0395                     	;# 
   437     0396                     	;# 
   438     0415                     	;# 
   439     0416                     	;# 
   440     0417                     	;# 
   441     041C                     	;# 
   442     041D                     	;# 
   443     041E                     	;# 
   444     0791                     	;# 
   445     0792                     	;# 
   446     0793                     	;# 
   447     0794                     	;# 
   448     0795                     	;# 
   449     0798                     	;# 
   450     0799                     	;# 
   451     079A                     	;# 
   452     07A0                     	;# 
   453     07A1                     	;# 
   454     07A2                     	;# 
   455     07A3                     	;# 
   456     07A4                     	;# 
   457     07A5                     	;# 
   458     07A6                     	;# 
   459     07A7                     	;# 
   460     07A8                     	;# 
   461     07A9                     	;# 
   462     07AA                     	;# 
   463     07AB                     	;# 
   464     0FE4                     	;# 
   465     0FE5                     	;# 
   466     0FE6                     	;# 
   467     0FE7                     	;# 
   468     0FE8                     	;# 
   469     0FE9                     	;# 
   470     0FEA                     	;# 
   471     0FEB                     	;# 
   472     0FED                     	;# 
   473     0FEE                     	;# 
   474     0FEF                     	;# 
   475     0000                     	;# 
   476     0001                     	;# 
   477     0002                     	;# 
   478     0003                     	;# 
   479     0004                     	;# 
   480     0005                     	;# 
   481     0006                     	;# 
   482     0007                     	;# 
   483     0008                     	;# 
   484     0009                     	;# 
   485     000A                     	;# 
   486     000B                     	;# 
   487     000C                     	;# 
   488     000D                     	;# 
   489     000E                     	;# 
   490     000F                     	;# 
   491     0010                     	;# 
   492     0011                     	;# 
   493     0012                     	;# 
   494     0013                     	;# 
   495     0015                     	;# 
   496     0016                     	;# 
   497     0016                     	;# 
   498     0017                     	;# 
   499     0018                     	;# 
   500     0019                     	;# 
   501     001A                     	;# 
   502     001B                     	;# 
   503     001C                     	;# 
   504     001E                     	;# 
   505     001F                     	;# 
   506     008C                     	;# 
   507     008D                     	;# 
   508     008E                     	;# 
   509     008F                     	;# 
   510     0090                     	;# 
   511     0091                     	;# 
   512     0092                     	;# 
   513     0093                     	;# 
   514     0095                     	;# 
   515     0096                     	;# 
   516     0097                     	;# 
   517     0098                     	;# 
   518     0099                     	;# 
   519     009A                     	;# 
   520     009B                     	;# 
   521     009B                     	;# 
   522     009C                     	;# 
   523     009D                     	;# 
   524     009E                     	;# 
   525     010C                     	;# 
   526     010D                     	;# 
   527     010E                     	;# 
   528     010F                     	;# 
   529     0110                     	;# 
   530     0111                     	;# 
   531     0112                     	;# 
   532     0113                     	;# 
   533     0114                     	;# 
   534     0115                     	;# 
   535     0116                     	;# 
   536     0117                     	;# 
   537     0118                     	;# 
   538     0119                     	;# 
   539     011A                     	;# 
   540     011B                     	;# 
   541     011D                     	;# 
   542     018C                     	;# 
   543     018D                     	;# 
   544     018F                     	;# 
   545     0190                     	;# 
   546     0191                     	;# 
   547     0191                     	;# 
   548     0192                     	;# 
   549     0193                     	;# 
   550     0193                     	;# 
   551     0193                     	;# 
   552     0194                     	;# 
   553     0195                     	;# 
   554     0196                     	;# 
   555     0199                     	;# 
   556     019A                     	;# 
   557     019B                     	;# 
   558     019B                     	;# 
   559     019B                     	;# 
   560     019B                     	;# 
   561     019C                     	;# 
   562     019C                     	;# 
   563     019D                     	;# 
   564     019E                     	;# 
   565     019F                     	;# 
   566     020D                     	;# 
   567     0210                     	;# 
   568     0211                     	;# 
   569     0212                     	;# 
   570     0213                     	;# 
   571     0214                     	;# 
   572     0215                     	;# 
   573     0215                     	;# 
   574     0216                     	;# 
   575     0217                     	;# 
   576     0291                     	;# 
   577     0291                     	;# 
   578     0292                     	;# 
   579     0293                     	;# 
   580     0294                     	;# 
   581     0295                     	;# 
   582     0295                     	;# 
   583     0296                     	;# 
   584     0298                     	;# 
   585     0298                     	;# 
   586     0299                     	;# 
   587     029A                     	;# 
   588     029B                     	;# 
   589     029C                     	;# 
   590     029C                     	;# 
   591     029D                     	;# 
   592     029E                     	;# 
   593     029F                     	;# 
   594     0311                     	;# 
   595     0311                     	;# 
   596     0312                     	;# 
   597     0313                     	;# 
   598     0314                     	;# 
   599     0315                     	;# 
   600     0315                     	;# 
   601     0316                     	;# 
   602     0318                     	;# 
   603     0318                     	;# 
   604     0319                     	;# 
   605     031A                     	;# 
   606     031C                     	;# 
   607     031C                     	;# 
   608     031D                     	;# 
   609     031E                     	;# 
   610     0394                     	;# 
   611     0395                     	;# 
   612     0396                     	;# 
   613     0415                     	;# 
   614     0416                     	;# 
   615     0417                     	;# 
   616     041C                     	;# 
   617     041D                     	;# 
   618     041E                     	;# 
   619     0791                     	;# 
   620     0792                     	;# 
   621     0793                     	;# 
   622     0794                     	;# 
   623     0795                     	;# 
   624     0798                     	;# 
   625     0799                     	;# 
   626     079A                     	;# 
   627     07A0                     	;# 
   628     07A1                     	;# 
   629     07A2                     	;# 
   630     07A3                     	;# 
   631     07A4                     	;# 
   632     07A5                     	;# 
   633     07A6                     	;# 
   634     07A7                     	;# 
   635     07A8                     	;# 
   636     07A9                     	;# 
   637     07AA                     	;# 
   638     07AB                     	;# 
   639     0FE4                     	;# 
   640     0FE5                     	;# 
   641     0FE6                     	;# 
   642     0FE7                     	;# 
   643     0FE8                     	;# 
   644     0FE9                     	;# 
   645     0FEA                     	;# 
   646     0FEB                     	;# 
   647     0FED                     	;# 
   648     0FEE                     	;# 
   649     0FEF                     	;# 
   650     0000                     	;# 
   651     0001                     	;# 
   652     0002                     	;# 
   653     0003                     	;# 
   654     0004                     	;# 
   655     0005                     	;# 
   656     0006                     	;# 
   657     0007                     	;# 
   658     0008                     	;# 
   659     0009                     	;# 
   660     000A                     	;# 
   661     000B                     	;# 
   662     000C                     	;# 
   663     000D                     	;# 
   664     000E                     	;# 
   665     000F                     	;# 
   666     0010                     	;# 
   667     0011                     	;# 
   668     0012                     	;# 
   669     0013                     	;# 
   670     0015                     	;# 
   671     0016                     	;# 
   672     0016                     	;# 
   673     0017                     	;# 
   674     0018                     	;# 
   675     0019                     	;# 
   676     001A                     	;# 
   677     001B                     	;# 
   678     001C                     	;# 
   679     001E                     	;# 
   680     001F                     	;# 
   681     008C                     	;# 
   682     008D                     	;# 
   683     008E                     	;# 
   684     008F                     	;# 
   685     0090                     	;# 
   686     0091                     	;# 
   687     0092                     	;# 
   688     0093                     	;# 
   689     0095                     	;# 
   690     0096                     	;# 
   691     0097                     	;# 
   692     0098                     	;# 
   693     0099                     	;# 
   694     009A                     	;# 
   695     009B                     	;# 
   696     009B                     	;# 
   697     009C                     	;# 
   698     009D                     	;# 
   699     009E                     	;# 
   700     010C                     	;# 
   701     010D                     	;# 
   702     010E                     	;# 
   703     010F                     	;# 
   704     0110                     	;# 
   705     0111                     	;# 
   706     0112                     	;# 
   707     0113                     	;# 
   708     0114                     	;# 
   709     0115                     	;# 
   710     0116                     	;# 
   711     0117                     	;# 
   712     0118                     	;# 
   713     0119                     	;# 
   714     011A                     	;# 
   715     011B                     	;# 
   716     011D                     	;# 
   717     018C                     	;# 
   718     018D                     	;# 
   719     018F                     	;# 
   720     0190                     	;# 
   721     0191                     	;# 
   722     0191                     	;# 
   723     0192                     	;# 
   724     0193                     	;# 
   725     0193                     	;# 
   726     0193                     	;# 
   727     0194                     	;# 
   728     0195                     	;# 
   729     0196                     	;# 
   730     0199                     	;# 
   731     019A                     	;# 
   732     019B                     	;# 
   733     019B                     	;# 
   734     019B                     	;# 
   735     019B                     	;# 
   736     019C                     	;# 
   737     019C                     	;# 
   738     019D                     	;# 
   739     019E                     	;# 
   740     019F                     	;# 
   741     020D                     	;# 
   742     0210                     	;# 
   743     0211                     	;# 
   744     0212                     	;# 
   745     0213                     	;# 
   746     0214                     	;# 
   747     0215                     	;# 
   748     0215                     	;# 
   749     0216                     	;# 
   750     0217                     	;# 
   751     0291                     	;# 
   752     0291                     	;# 
   753     0292                     	;# 
   754     0293                     	;# 
   755     0294                     	;# 
   756     0295                     	;# 
   757     0295                     	;# 
   758     0296                     	;# 
   759     0298                     	;# 
   760     0298                     	;# 
   761     0299                     	;# 
   762     029A                     	;# 
   763     029B                     	;# 
   764     029C                     	;# 
   765     029C                     	;# 
   766     029D                     	;# 
   767     029E                     	;# 
   768     029F                     	;# 
   769     0311                     	;# 
   770     0311                     	;# 
   771     0312                     	;# 
   772     0313                     	;# 
   773     0314                     	;# 
   774     0315                     	;# 
   775     0315                     	;# 
   776     0316                     	;# 
   777     0318                     	;# 
   778     0318                     	;# 
   779     0319                     	;# 
   780     031A                     	;# 
   781     031C                     	;# 
   782     031C                     	;# 
   783     031D                     	;# 
   784     031E                     	;# 
   785     0394                     	;# 
   786     0395                     	;# 
   787     0396                     	;# 
   788     0415                     	;# 
   789     0416                     	;# 
   790     0417                     	;# 
   791     041C                     	;# 
   792     041D                     	;# 
   793     041E                     	;# 
   794     0791                     	;# 
   795     0792                     	;# 
   796     0793                     	;# 
   797     0794                     	;# 
   798     0795                     	;# 
   799     0798                     	;# 
   800     0799                     	;# 
   801     079A                     	;# 
   802     07A0                     	;# 
   803     07A1                     	;# 
   804     07A2                     	;# 
   805     07A3                     	;# 
   806     07A4                     	;# 
   807     07A5                     	;# 
   808     07A6                     	;# 
   809     07A7                     	;# 
   810     07A8                     	;# 
   811     07A9                     	;# 
   812     07AA                     	;# 
   813     07AB                     	;# 
   814     0FE4                     	;# 
   815     0FE5                     	;# 
   816     0FE6                     	;# 
   817     0FE7                     	;# 
   818     0FE8                     	;# 
   819     0FE9                     	;# 
   820     0FEA                     	;# 
   821     0FEB                     	;# 
   822     0FED                     	;# 
   823     0FEE                     	;# 
   824     0FEF                     	;# 
   825                           
   826                           	psect	eeprom_data
   827     0000  0031 0032 0033 0034 00FF 00FF 00FF 00FF 	db	49,50,51,52,255,255,255,255	;# 
   828     0000                     	;# 
   829     0001                     	;# 
   830     0002                     	;# 
   831     0003                     	;# 
   832     0004                     	;# 
   833     0005                     	;# 
   834     0006                     	;# 
   835     0007                     	;# 
   836     0008                     	;# 
   837     0009                     	;# 
   838     000A                     	;# 
   839     000B                     	;# 
   840     000C                     	;# 
   841     000D                     	;# 
   842     000E                     	;# 
   843     000F                     	;# 
   844     0010                     	;# 
   845     0011                     	;# 
   846     0012                     	;# 
   847     0013                     	;# 
   848     0015                     	;# 
   849     0016                     	;# 
   850     0016                     	;# 
   851     0017                     	;# 
   852     0018                     	;# 
   853     0019                     	;# 
   854     001A                     	;# 
   855     001B                     	;# 
   856     001C                     	;# 
   857     001E                     	;# 
   858     001F                     	;# 
   859     008C                     	;# 
   860     008D                     	;# 
   861     008E                     	;# 
   862     008F                     	;# 
   863     0090                     	;# 
   864     0091                     	;# 
   865     0092                     	;# 
   866     0093                     	;# 
   867     0095                     	;# 
   868     0096                     	;# 
   869     0097                     	;# 
   870     0098                     	;# 
   871     0099                     	;# 
   872     009A                     	;# 
   873     009B                     	;# 
   874     009B                     	;# 
   875     009C                     	;# 
   876     009D                     	;# 
   877     009E                     	;# 
   878     010C                     	;# 
   879     010D                     	;# 
   880     010E                     	;# 
   881     010F                     	;# 
   882     0110                     	;# 
   883     0111                     	;# 
   884     0112                     	;# 
   885     0113                     	;# 
   886     0114                     	;# 
   887     0115                     	;# 
   888     0116                     	;# 
   889     0117                     	;# 
   890     0118                     	;# 
   891     0119                     	;# 
   892     011A                     	;# 
   893     011B                     	;# 
   894     011D                     	;# 
   895     018C                     	;# 
   896     018D                     	;# 
   897     018F                     	;# 
   898     0190                     	;# 
   899     0191                     	;# 
   900     0191                     	;# 
   901     0192                     	;# 
   902     0193                     	;# 
   903     0193                     	;# 
   904     0193                     	;# 
   905     0194                     	;# 
   906     0195                     	;# 
   907     0196                     	;# 
   908     0199                     	;# 
   909     019A                     	;# 
   910     019B                     	;# 
   911     019B                     	;# 
   912     019B                     	;# 
   913     019B                     	;# 
   914     019C                     	;# 
   915     019C                     	;# 
   916     019D                     	;# 
   917     019E                     	;# 
   918     019F                     	;# 
   919     020D                     	;# 
   920     0210                     	;# 
   921     0211                     	;# 
   922     0212                     	;# 
   923     0213                     	;# 
   924     0214                     	;# 
   925     0215                     	;# 
   926     0215                     	;# 
   927     0216                     	;# 
   928     0217                     	;# 
   929     0291                     	;# 
   930     0291                     	;# 
   931     0292                     	;# 
   932     0293                     	;# 
   933     0294                     	;# 
   934     0295                     	;# 
   935     0295                     	;# 
   936     0296                     	;# 
   937     0298                     	;# 
   938     0298                     	;# 
   939     0299                     	;# 
   940     029A                     	;# 
   941     029B                     	;# 
   942     029C                     	;# 
   943     029C                     	;# 
   944     029D                     	;# 
   945     029E                     	;# 
   946     029F                     	;# 
   947     0311                     	;# 
   948     0311                     	;# 
   949     0312                     	;# 
   950     0313                     	;# 
   951     0314                     	;# 
   952     0315                     	;# 
   953     0315                     	;# 
   954     0316                     	;# 
   955     0318                     	;# 
   956     0318                     	;# 
   957     0319                     	;# 
   958     031A                     	;# 
   959     031C                     	;# 
   960     031C                     	;# 
   961     031D                     	;# 
   962     031E                     	;# 
   963     0394                     	;# 
   964     0395                     	;# 
   965     0396                     	;# 
   966     0415                     	;# 
   967     0416                     	;# 
   968     0417                     	;# 
   969     041C                     	;# 
   970     041D                     	;# 
   971     041E                     	;# 
   972     0791                     	;# 
   973     0792                     	;# 
   974     0793                     	;# 
   975     0794                     	;# 
   976     0795                     	;# 
   977     0798                     	;# 
   978     0799                     	;# 
   979     079A                     	;# 
   980     07A0                     	;# 
   981     07A1                     	;# 
   982     07A2                     	;# 
   983     07A3                     	;# 
   984     07A4                     	;# 
   985     07A5                     	;# 
   986     07A6                     	;# 
   987     07A7                     	;# 
   988     07A8                     	;# 
   989     07A9                     	;# 
   990     07AA                     	;# 
   991     07AB                     	;# 
   992     0FE4                     	;# 
   993     0FE5                     	;# 
   994     0FE6                     	;# 
   995     0FE7                     	;# 
   996     0FE8                     	;# 
   997     0FE9                     	;# 
   998     0FEA                     	;# 
   999     0FEB                     	;# 
  1000     0FED                     	;# 
  1001     0FEE                     	;# 
  1002     0FEF                     	;# 
  1003     0000                     	;# 
  1004     0001                     	;# 
  1005     0002                     	;# 
  1006     0003                     	;# 
  1007     0004                     	;# 
  1008     0005                     	;# 
  1009     0006                     	;# 
  1010     0007                     	;# 
  1011     0008                     	;# 
  1012     0009                     	;# 
  1013     000A                     	;# 
  1014     000B                     	;# 
  1015     000C                     	;# 
  1016     000D                     	;# 
  1017     000E                     	;# 
  1018     000F                     	;# 
  1019     0010                     	;# 
  1020     0011                     	;# 
  1021     0012                     	;# 
  1022     0013                     	;# 
  1023     0015                     	;# 
  1024     0016                     	;# 
  1025     0016                     	;# 
  1026     0017                     	;# 
  1027     0018                     	;# 
  1028     0019                     	;# 
  1029     001A                     	;# 
  1030     001B                     	;# 
  1031     001C                     	;# 
  1032     001E                     	;# 
  1033     001F                     	;# 
  1034     008C                     	;# 
  1035     008D                     	;# 
  1036     008E                     	;# 
  1037     008F                     	;# 
  1038     0090                     	;# 
  1039     0091                     	;# 
  1040     0092                     	;# 
  1041     0093                     	;# 
  1042     0095                     	;# 
  1043     0096                     	;# 
  1044     0097                     	;# 
  1045     0098                     	;# 
  1046     0099                     	;# 
  1047     009A                     	;# 
  1048     009B                     	;# 
  1049     009B                     	;# 
  1050     009C                     	;# 
  1051     009D                     	;# 
  1052     009E                     	;# 
  1053     010C                     	;# 
  1054     010D                     	;# 
  1055     010E                     	;# 
  1056     010F                     	;# 
  1057     0110                     	;# 
  1058     0111                     	;# 
  1059     0112                     	;# 
  1060     0113                     	;# 
  1061     0114                     	;# 
  1062     0115                     	;# 
  1063     0116                     	;# 
  1064     0117                     	;# 
  1065     0118                     	;# 
  1066     0119                     	;# 
  1067     011A                     	;# 
  1068     011B                     	;# 
  1069     011D                     	;# 
  1070     018C                     	;# 
  1071     018D                     	;# 
  1072     018F                     	;# 
  1073     0190                     	;# 
  1074     0191                     	;# 
  1075     0191                     	;# 
  1076     0192                     	;# 
  1077     0193                     	;# 
  1078     0193                     	;# 
  1079     0193                     	;# 
  1080     0194                     	;# 
  1081     0195                     	;# 
  1082     0196                     	;# 
  1083     0199                     	;# 
  1084     019A                     	;# 
  1085     019B                     	;# 
  1086     019B                     	;# 
  1087     019B                     	;# 
  1088     019B                     	;# 
  1089     019C                     	;# 
  1090     019C                     	;# 
  1091     019D                     	;# 
  1092     019E                     	;# 
  1093     019F                     	;# 
  1094     020D                     	;# 
  1095     0210                     	;# 
  1096     0211                     	;# 
  1097     0212                     	;# 
  1098     0213                     	;# 
  1099     0214                     	;# 
  1100     0215                     	;# 
  1101     0215                     	;# 
  1102     0216                     	;# 
  1103     0217                     	;# 
  1104     0291                     	;# 
  1105     0291                     	;# 
  1106     0292                     	;# 
  1107     0293                     	;# 
  1108     0294                     	;# 
  1109     0295                     	;# 
  1110     0295                     	;# 
  1111     0296                     	;# 
  1112     0298                     	;# 
  1113     0298                     	;# 
  1114     0299                     	;# 
  1115     029A                     	;# 
  1116     029B                     	;# 
  1117     029C                     	;# 
  1118     029C                     	;# 
  1119     029D                     	;# 
  1120     029E                     	;# 
  1121     029F                     	;# 
  1122     0311                     	;# 
  1123     0311                     	;# 
  1124     0312                     	;# 
  1125     0313                     	;# 
  1126     0314                     	;# 
  1127     0315                     	;# 
  1128     0315                     	;# 
  1129     0316                     	;# 
  1130     0318                     	;# 
  1131     0318                     	;# 
  1132     0319                     	;# 
  1133     031A                     	;# 
  1134     031C                     	;# 
  1135     031C                     	;# 
  1136     031D                     	;# 
  1137     031E                     	;# 
  1138     0394                     	;# 
  1139     0395                     	;# 
  1140     0396                     	;# 
  1141     0415                     	;# 
  1142     0416                     	;# 
  1143     0417                     	;# 
  1144     041C                     	;# 
  1145     041D                     	;# 
  1146     041E                     	;# 
  1147     0791                     	;# 
  1148     0792                     	;# 
  1149     0793                     	;# 
  1150     0794                     	;# 
  1151     0795                     	;# 
  1152     0798                     	;# 
  1153     0799                     	;# 
  1154     079A                     	;# 
  1155     07A0                     	;# 
  1156     07A1                     	;# 
  1157     07A2                     	;# 
  1158     07A3                     	;# 
  1159     07A4                     	;# 
  1160     07A5                     	;# 
  1161     07A6                     	;# 
  1162     07A7                     	;# 
  1163     07A8                     	;# 
  1164     07A9                     	;# 
  1165     07AA                     	;# 
  1166     07AB                     	;# 
  1167     0FE4                     	;# 
  1168     0FE5                     	;# 
  1169     0FE6                     	;# 
  1170     0FE7                     	;# 
  1171     0FE8                     	;# 
  1172     0FE9                     	;# 
  1173     0FEA                     	;# 
  1174     0FEB                     	;# 
  1175     0FED                     	;# 
  1176     0FEE                     	;# 
  1177     0FEF                     	;# 
  1178     0000                     	;# 
  1179     0001                     	;# 
  1180     0002                     	;# 
  1181     0003                     	;# 
  1182     0004                     	;# 
  1183     0005                     	;# 
  1184     0006                     	;# 
  1185     0007                     	;# 
  1186     0008                     	;# 
  1187     0009                     	;# 
  1188     000A                     	;# 
  1189     000B                     	;# 
  1190     000C                     	;# 
  1191     000D                     	;# 
  1192     000E                     	;# 
  1193     000F                     	;# 
  1194     0010                     	;# 
  1195     0011                     	;# 
  1196     0012                     	;# 
  1197     0013                     	;# 
  1198     0015                     	;# 
  1199     0016                     	;# 
  1200     0016                     	;# 
  1201     0017                     	;# 
  1202     0018                     	;# 
  1203     0019                     	;# 
  1204     001A                     	;# 
  1205     001B                     	;# 
  1206     001C                     	;# 
  1207     001E                     	;# 
  1208     001F                     	;# 
  1209     008C                     	;# 
  1210     008D                     	;# 
  1211     008E                     	;# 
  1212     008F                     	;# 
  1213     0090                     	;# 
  1214     0091                     	;# 
  1215     0092                     	;# 
  1216     0093                     	;# 
  1217     0095                     	;# 
  1218     0096                     	;# 
  1219     0097                     	;# 
  1220     0098                     	;# 
  1221     0099                     	;# 
  1222     009A                     	;# 
  1223     009B                     	;# 
  1224     009B                     	;# 
  1225     009C                     	;# 
  1226     009D                     	;# 
  1227     009E                     	;# 
  1228     010C                     	;# 
  1229     010D                     	;# 
  1230     010E                     	;# 
  1231     010F                     	;# 
  1232     0110                     	;# 
  1233     0111                     	;# 
  1234     0112                     	;# 
  1235     0113                     	;# 
  1236     0114                     	;# 
  1237     0115                     	;# 
  1238     0116                     	;# 
  1239     0117                     	;# 
  1240     0118                     	;# 
  1241     0119                     	;# 
  1242     011A                     	;# 
  1243     011B                     	;# 
  1244     011D                     	;# 
  1245     018C                     	;# 
  1246     018D                     	;# 
  1247     018F                     	;# 
  1248     0190                     	;# 
  1249     0191                     	;# 
  1250     0191                     	;# 
  1251     0192                     	;# 
  1252     0193                     	;# 
  1253     0193                     	;# 
  1254     0193                     	;# 
  1255     0194                     	;# 
  1256     0195                     	;# 
  1257     0196                     	;# 
  1258     0199                     	;# 
  1259     019A                     	;# 
  1260     019B                     	;# 
  1261     019B                     	;# 
  1262     019B                     	;# 
  1263     019B                     	;# 
  1264     019C                     	;# 
  1265     019C                     	;# 
  1266     019D                     	;# 
  1267     019E                     	;# 
  1268     019F                     	;# 
  1269     020D                     	;# 
  1270     0210                     	;# 
  1271     0211                     	;# 
  1272     0212                     	;# 
  1273     0213                     	;# 
  1274     0214                     	;# 
  1275     0215                     	;# 
  1276     0215                     	;# 
  1277     0216                     	;# 
  1278     0217                     	;# 
  1279     0291                     	;# 
  1280     0291                     	;# 
  1281     0292                     	;# 
  1282     0293                     	;# 
  1283     0294                     	;# 
  1284     0295                     	;# 
  1285     0295                     	;# 
  1286     0296                     	;# 
  1287     0298                     	;# 
  1288     0298                     	;# 
  1289     0299                     	;# 
  1290     029A                     	;# 
  1291     029B                     	;# 
  1292     029C                     	;# 
  1293     029C                     	;# 
  1294     029D                     	;# 
  1295     029E                     	;# 
  1296     029F                     	;# 
  1297     0311                     	;# 
  1298     0311                     	;# 
  1299     0312                     	;# 
  1300     0313                     	;# 
  1301     0314                     	;# 
  1302     0315                     	;# 
  1303     0315                     	;# 
  1304     0316                     	;# 
  1305     0318                     	;# 
  1306     0318                     	;# 
  1307     0319                     	;# 
  1308     031A                     	;# 
  1309     031C                     	;# 
  1310     031C                     	;# 
  1311     031D                     	;# 
  1312     031E                     	;# 
  1313     0394                     	;# 
  1314     0395                     	;# 
  1315     0396                     	;# 
  1316     0415                     	;# 
  1317     0416                     	;# 
  1318     0417                     	;# 
  1319     041C                     	;# 
  1320     041D                     	;# 
  1321     041E                     	;# 
  1322     0791                     	;# 
  1323     0792                     	;# 
  1324     0793                     	;# 
  1325     0794                     	;# 
  1326     0795                     	;# 
  1327     0798                     	;# 
  1328     0799                     	;# 
  1329     079A                     	;# 
  1330     07A0                     	;# 
  1331     07A1                     	;# 
  1332     07A2                     	;# 
  1333     07A3                     	;# 
  1334     07A4                     	;# 
  1335     07A5                     	;# 
  1336     07A6                     	;# 
  1337     07A7                     	;# 
  1338     07A8                     	;# 
  1339     07A9                     	;# 
  1340     07AA                     	;# 
  1341     07AB                     	;# 
  1342     0FE4                     	;# 
  1343     0FE5                     	;# 
  1344     0FE6                     	;# 
  1345     0FE7                     	;# 
  1346     0FE8                     	;# 
  1347     0FE9                     	;# 
  1348     0FEA                     	;# 
  1349     0FEB                     	;# 
  1350     0FED                     	;# 
  1351     0FEE                     	;# 
  1352     0FEF                     	;# 
  1353     0000                     	;# 
  1354     0001                     	;# 
  1355     0002                     	;# 
  1356     0003                     	;# 
  1357     0004                     	;# 
  1358     0005                     	;# 
  1359     0006                     	;# 
  1360     0007                     	;# 
  1361     0008                     	;# 
  1362     0009                     	;# 
  1363     000A                     	;# 
  1364     000B                     	;# 
  1365     000C                     	;# 
  1366     000D                     	;# 
  1367     000E                     	;# 
  1368     000F                     	;# 
  1369     0010                     	;# 
  1370     0011                     	;# 
  1371     0012                     	;# 
  1372     0013                     	;# 
  1373     0015                     	;# 
  1374     0016                     	;# 
  1375     0016                     	;# 
  1376     0017                     	;# 
  1377     0018                     	;# 
  1378     0019                     	;# 
  1379     001A                     	;# 
  1380     001B                     	;# 
  1381     001C                     	;# 
  1382     001E                     	;# 
  1383     001F                     	;# 
  1384     008C                     	;# 
  1385     008D                     	;# 
  1386     008E                     	;# 
  1387     008F                     	;# 
  1388     0090                     	;# 
  1389     0091                     	;# 
  1390     0092                     	;# 
  1391     0093                     	;# 
  1392     0095                     	;# 
  1393     0096                     	;# 
  1394     0097                     	;# 
  1395     0098                     	;# 
  1396     0099                     	;# 
  1397     009A                     	;# 
  1398     009B                     	;# 
  1399     009B                     	;# 
  1400     009C                     	;# 
  1401     009D                     	;# 
  1402     009E                     	;# 
  1403     010C                     	;# 
  1404     010D                     	;# 
  1405     010E                     	;# 
  1406     010F                     	;# 
  1407     0110                     	;# 
  1408     0111                     	;# 
  1409     0112                     	;# 
  1410     0113                     	;# 
  1411     0114                     	;# 
  1412     0115                     	;# 
  1413     0116                     	;# 
  1414     0117                     	;# 
  1415     0118                     	;# 
  1416     0119                     	;# 
  1417     011A                     	;# 
  1418     011B                     	;# 
  1419     011D                     	;# 
  1420     018C                     	;# 
  1421     018D                     	;# 
  1422     018F                     	;# 
  1423     0190                     	;# 
  1424     0191                     	;# 
  1425     0191                     	;# 
  1426     0192                     	;# 
  1427     0193                     	;# 
  1428     0193                     	;# 
  1429     0193                     	;# 
  1430     0194                     	;# 
  1431     0195                     	;# 
  1432     0196                     	;# 
  1433     0199                     	;# 
  1434     019A                     	;# 
  1435     019B                     	;# 
  1436     019B                     	;# 
  1437     019B                     	;# 
  1438     019B                     	;# 
  1439     019C                     	;# 
  1440     019C                     	;# 
  1441     019D                     	;# 
  1442     019E                     	;# 
  1443     019F                     	;# 
  1444     020D                     	;# 
  1445     0210                     	;# 
  1446     0211                     	;# 
  1447     0212                     	;# 
  1448     0213                     	;# 
  1449     0214                     	;# 
  1450     0215                     	;# 
  1451     0215                     	;# 
  1452     0216                     	;# 
  1453     0217                     	;# 
  1454     0291                     	;# 
  1455     0291                     	;# 
  1456     0292                     	;# 
  1457     0293                     	;# 
  1458     0294                     	;# 
  1459     0295                     	;# 
  1460     0295                     	;# 
  1461     0296                     	;# 
  1462     0298                     	;# 
  1463     0298                     	;# 
  1464     0299                     	;# 
  1465     029A                     	;# 
  1466     029B                     	;# 
  1467     029C                     	;# 
  1468     029C                     	;# 
  1469     029D                     	;# 
  1470     029E                     	;# 
  1471     029F                     	;# 
  1472     0311                     	;# 
  1473     0311                     	;# 
  1474     0312                     	;# 
  1475     0313                     	;# 
  1476     0314                     	;# 
  1477     0315                     	;# 
  1478     0315                     	;# 
  1479     0316                     	;# 
  1480     0318                     	;# 
  1481     0318                     	;# 
  1482     0319                     	;# 
  1483     031A                     	;# 
  1484     031C                     	;# 
  1485     031C                     	;# 
  1486     031D                     	;# 
  1487     031E                     	;# 
  1488     0394                     	;# 
  1489     0395                     	;# 
  1490     0396                     	;# 
  1491     0415                     	;# 
  1492     0416                     	;# 
  1493     0417                     	;# 
  1494     041C                     	;# 
  1495     041D                     	;# 
  1496     041E                     	;# 
  1497     0791                     	;# 
  1498     0792                     	;# 
  1499     0793                     	;# 
  1500     0794                     	;# 
  1501     0795                     	;# 
  1502     0798                     	;# 
  1503     0799                     	;# 
  1504     079A                     	;# 
  1505     07A0                     	;# 
  1506     07A1                     	;# 
  1507     07A2                     	;# 
  1508     07A3                     	;# 
  1509     07A4                     	;# 
  1510     07A5                     	;# 
  1511     07A6                     	;# 
  1512     07A7                     	;# 
  1513     07A8                     	;# 
  1514     07A9                     	;# 
  1515     07AA                     	;# 
  1516     07AB                     	;# 
  1517     0FE4                     	;# 
  1518     0FE5                     	;# 
  1519     0FE6                     	;# 
  1520     0FE7                     	;# 
  1521     0FE8                     	;# 
  1522     0FE9                     	;# 
  1523     0FEA                     	;# 
  1524     0FEB                     	;# 
  1525     0FED                     	;# 
  1526     0FEE                     	;# 
  1527     0FEF                     	;# 
  1528     0012                     _PIR2bits	set	18
  1529     000D                     _PORTBbits	set	13
  1530     000B                     _INTCONbits	set	11
  1531     008F                     _TRISDbits	set	143
  1532     008D                     _TRISBbits	set	141
  1533     008E                     _TRISCbits	set	142
  1534     008C                     _TRISAbits	set	140
  1535     0095                     _OPTION_REGbits	set	149
  1536     008F                     _TRISD	set	143
  1537     008E                     _TRISC	set	142
  1538     008D                     _TRISB	set	141
  1539     008C                     _TRISA	set	140
  1540     0090                     _TRISE	set	144
  1541     0097                     _WDTCON	set	151
  1542     0098                     _OSCTUNE	set	152
  1543     0099                     _OSCCON	set	153
  1544     009D                     _ADCON0bits	set	157
  1545     009D                     _ADCON0	set	157
  1546     009C                     _ADRESH	set	156
  1547     009B                     _ADRESL	set	155
  1548     009E                     _ADCON1	set	158
  1549     010F                     _LATDbits	set	271
  1550     010D                     _LATBbits	set	269
  1551     010E                     _LATCbits	set	270
  1552     010C                     _LATAbits	set	268
  1553     011D                     _APFCON	set	285
  1554     010E                     _LATC	set	270
  1555     010D                     _LATB	set	269
  1556     010C                     _LATA	set	268
  1557     010F                     _LATD	set	271
  1558     0110                     _LATE	set	272
  1559     0116                     _BORCON	set	278
  1560     0193                     _EEDAT	set	403
  1561     0191                     _EEADR	set	401
  1562     0196                     _EECON2	set	406
  1563     0195                     _EECON1bits	set	405
  1564     018C                     _ANSELA	set	396
  1565     0190                     _ANSELE	set	400
  1566     018D                     _ANSELB	set	397
  1567     018F                     _ANSELD	set	399
  1568     0214                     _SSPSTATbits	set	532
  1569     0211                     _SSPBUF	set	529
  1570     0216                     _SSPCON2bits	set	534
  1571     0212                     _SSPADD	set	530
  1572     0215                     _SSPCONbits	set	533
  1573     0215                     _SSPCON1bits	set	533
  1574     020D                     _WPUB	set	525
  1575     0210                     _WPUE	set	528
  1576     0396                     _IOCBF	set	918
  1577     0395                     _IOCBN	set	917
  1578                           
  1579                           	psect	stringtext1
  1580     1800                     __pstringtext1:
  1581     1800                     STR_5:
  1582     1800  3431               	retlw	49	;'1'
  1583     1801  343A               	retlw	58	;':'
  1584     1802  3449               	retlw	73	;'I'
  1585     1803  344E               	retlw	78	;'N'
  1586     1804  3447               	retlw	71	;'G'
  1587     1805  3452               	retlw	82	;'R'
  1588     1806  3445               	retlw	69	;'E'
  1589     1807  3453               	retlw	83	;'S'
  1590     1808  3441               	retlw	65	;'A'
  1591     1809  3452               	retlw	82	;'R'
  1592     180A  3420               	retlw	32	;' '
  1593     180B  3443               	retlw	67	;'C'
  1594     180C  344C               	retlw	76	;'L'
  1595     180D  3441               	retlw	65	;'A'
  1596     180E  3456               	retlw	86	;'V'
  1597     180F  3445               	retlw	69	;'E'
  1598     1810  3400               	retlw	0
  1599                           
  1600                           	psect	stringtext2
  1601     1811                     __pstringtext2:
  1602     1811                     STR_6:
  1603     1811  3432               	retlw	50	;'2'
  1604     1812  343A               	retlw	58	;':'
  1605     1813  3443               	retlw	67	;'C'
  1606     1814  3441               	retlw	65	;'A'
  1607     1815  344D               	retlw	77	;'M'
  1608     1816  3442               	retlw	66	;'B'
  1609     1817  3449               	retlw	73	;'I'
  1610     1818  3441               	retlw	65	;'A'
  1611     1819  3452               	retlw	82	;'R'
  1612     181A  3420               	retlw	32	;' '
  1613     181B  3443               	retlw	67	;'C'
  1614     181C  344C               	retlw	76	;'L'
  1615     181D  3441               	retlw	65	;'A'
  1616     181E  3456               	retlw	86	;'V'
  1617     181F  3445               	retlw	69	;'E'
  1618     1820  3400               	retlw	0
  1619                           
  1620                           	psect	stringtext3
  1621     1821                     __pstringtext3:
  1622     1821                     STR_1:
  1623     1821  3443               	retlw	67	;'C'
  1624     1822  346F               	retlw	111	;'o'
  1625     1823  346E               	retlw	110	;'n'
  1626     1824  3474               	retlw	116	;'t'
  1627     1825  3472               	retlw	114	;'r'
  1628     1826  346F               	retlw	111	;'o'
  1629     1827  346C               	retlw	108	;'l'
  1630     1828  3454               	retlw	84	;'T'
  1631     1829  3465               	retlw	101	;'e'
  1632     182A  3463               	retlw	99	;'c'
  1633     182B  3468               	retlw	104	;'h'
  1634     182C  3420               	retlw	32	;' '
  1635     182D  3443               	retlw	67	;'C'
  1636     182E  3441               	retlw	65	;'A'
  1637     182F  3400               	retlw	0
  1638                           
  1639                           	psect	stringtext4
  1640     1830                     __pstringtext4:
  1641     1830                     STR_14:
  1642     1830  3443               	retlw	67	;'C'
  1643     1831  344C               	retlw	76	;'L'
  1644     1832  3441               	retlw	65	;'A'
  1645     1833  3456               	retlw	86	;'V'
  1646     1834  3445               	retlw	69	;'E'
  1647     1835  3420               	retlw	32	;' '
  1648     1836  3443               	retlw	67	;'C'
  1649     1837  3441               	retlw	65	;'A'
  1650     1838  344D               	retlw	77	;'M'
  1651     1839  3442               	retlw	66	;'B'
  1652     183A  3449               	retlw	73	;'I'
  1653     183B  3441               	retlw	65	;'A'
  1654     183C  3444               	retlw	68	;'D'
  1655     183D  3441               	retlw	65	;'A'
  1656     183E  3400               	retlw	0
  1657                           
  1658                           	psect	stringtext5
  1659     183F                     __pstringtext5:
  1660     183F                     STR_2:
  1661     183F  3425               	retlw	37	;'%'
  1662     1840  3464               	retlw	100	;'d'
  1663     1841  3425               	retlw	37	;'%'
  1664     1842  3464               	retlw	100	;'d'
  1665     1843  343A               	retlw	58	;':'
  1666     1844  3425               	retlw	37	;'%'
  1667     1845  3464               	retlw	100	;'d'
  1668     1846  3425               	retlw	37	;'%'
  1669     1847  3464               	retlw	100	;'d'
  1670     1848  343A               	retlw	58	;':'
  1671     1849  3425               	retlw	37	;'%'
  1672     184A  3464               	retlw	100	;'d'
  1673     184B  3425               	retlw	37	;'%'
  1674     184C  3464               	retlw	100	;'d'
  1675     184D  3400               	retlw	0
  1676                           
  1677                           	psect	stringtext6
  1678     184E                     __pstringtext6:
  1679     184E                     STR_15:
  1680     184E  3443               	retlw	67	;'C'
  1681     184F  344F               	retlw	79	;'O'
  1682     1850  3452               	retlw	82	;'R'
  1683     1851  3452               	retlw	82	;'R'
  1684     1852  3445               	retlw	69	;'E'
  1685     1853  3443               	retlw	67	;'C'
  1686     1854  3454               	retlw	84	;'T'
  1687     1855  3441               	retlw	65	;'A'
  1688     1856  344D               	retlw	77	;'M'
  1689     1857  3445               	retlw	69	;'E'
  1690     1858  344E               	retlw	78	;'N'
  1691     1859  3454               	retlw	84	;'T'
  1692     185A  3445               	retlw	69	;'E'
  1693     185B  3400               	retlw	0
  1694                           
  1695                           	psect	stringtext7
  1696     185C                     __pstringtext7:
  1697     185C                     STR_12:
  1698     185C  3443               	retlw	67	;'C'
  1699     185D  344C               	retlw	76	;'L'
  1700     185E  3441               	retlw	65	;'A'
  1701     185F  3456               	retlw	86	;'V'
  1702     1860  3445               	retlw	69	;'E'
  1703     1861  3420               	retlw	32	;' '
  1704     1862  3441               	retlw	65	;'A'
  1705     1863  3443               	retlw	67	;'C'
  1706     1864  3454               	retlw	84	;'T'
  1707     1865  3455               	retlw	85	;'U'
  1708     1866  3441               	retlw	65	;'A'
  1709     1867  344C               	retlw	76	;'L'
  1710     1868  3400               	retlw	0
  1711                           
  1712                           	psect	stringtext8
  1713     1869                     __pstringtext8:
  1714     1869                     STR_13:
  1715     1869  3443               	retlw	67	;'C'
  1716     186A  344C               	retlw	76	;'L'
  1717     186B  3441               	retlw	65	;'A'
  1718     186C  3456               	retlw	86	;'V'
  1719     186D  3445               	retlw	69	;'E'
  1720     186E  3420               	retlw	32	;' '
  1721     186F  344E               	retlw	78	;'N'
  1722     1870  3455               	retlw	85	;'U'
  1723     1871  3445               	retlw	69	;'E'
  1724     1872  3456               	retlw	86	;'V'
  1725     1873  3441               	retlw	65	;'A'
  1726     1874  3400               	retlw	0
  1727                           
  1728                           	psect	stringtext9
  1729     1875                     __pstringtext9:
  1730     1875                     STR_17:
  1731     1875  3449               	retlw	73	;'I'
  1732     1876  344E               	retlw	78	;'N'
  1733     1877  3443               	retlw	67	;'C'
  1734     1878  344F               	retlw	79	;'O'
  1735     1879  3452               	retlw	82	;'R'
  1736     187A  3452               	retlw	82	;'R'
  1737     187B  3445               	retlw	69	;'E'
  1738     187C  3443               	retlw	67	;'C'
  1739     187D  3454               	retlw	84	;'T'
  1740     187E  3441               	retlw	65	;'A'
  1741     187F  3400               	retlw	0
  1742                           
  1743                           	psect	stringtext10
  1744     1880                     __pstringtext10:
  1745     1880                     STR_9:
  1746     1880  3441               	retlw	65	;'A'
  1747     1881  3450               	retlw	80	;'P'
  1748     1882  3452               	retlw	82	;'R'
  1749     1883  344F               	retlw	79	;'O'
  1750     1884  3442               	retlw	66	;'B'
  1751     1885  3441               	retlw	65	;'A'
  1752     1886  3444               	retlw	68	;'D'
  1753     1887  344F               	retlw	79	;'O'
  1754     1888  3400               	retlw	0
  1755                           
  1756                           	psect	stringtext11
  1757     1889                     __pstringtext11:
  1758     1889                     STR_11:
  1759     1889  3444               	retlw	68	;'D'
  1760     188A  3445               	retlw	69	;'E'
  1761     188B  344E               	retlw	78	;'N'
  1762     188C  3445               	retlw	69	;'E'
  1763     188D  3447               	retlw	71	;'G'
  1764     188E  3441               	retlw	65	;'A'
  1765     188F  3444               	retlw	68	;'D'
  1766     1890  344F               	retlw	79	;'O'
  1767     1891  3400               	retlw	0
  1768                           
  1769                           	psect	stringtext12
  1770     1892                     __pstringtext12:
  1771     1892                     STR_3:
  1772     1892  3425               	retlw	37	;'%'
  1773     1893  3430               	retlw	48	;'0'
  1774     1894  342E               	retlw	46	;'.'
  1775     1895  3432               	retlw	50	;'2'
  1776     1896  3466               	retlw	102	;'f'
  1777     1897  34DF               	retlw	-33
  1778     1898  3400               	retlw	0
  1779                           
  1780                           	psect	stringtext13
  1781     1899                     __pstringtext13:
  1782     1899                     STR_8:
  1783     1899  3441               	retlw	65	;'A'
  1784     189A  3443               	retlw	67	;'C'
  1785     189B  3443               	retlw	67	;'C'
  1786     189C  3445               	retlw	69	;'E'
  1787     189D  3453               	retlw	83	;'S'
  1788     189E  344F               	retlw	79	;'O'
  1789     189F  3400               	retlw	0
  1790                           
  1791                           	psect	stringtext14
  1792     18A0                     __pstringtext14:
  1793     18A0                     STR_19:
  1794     18A0  3469               	retlw	105	;'i'
  1795     18A1  346E               	retlw	110	;'n'
  1796     18A2  3466               	retlw	102	;'f'
  1797     18A3  3400               	retlw	0
  1798                           
  1799                           	psect	stringtext15
  1800     18A4                     __pstringtext15:
  1801     18A4                     STR_22:
  1802     18A4  346E               	retlw	110	;'n'
  1803     18A5  3461               	retlw	97	;'a'
  1804     18A6  346E               	retlw	110	;'n'
  1805     18A7  3400               	retlw	0
  1806                           
  1807                           	psect	stringtext16
  1808     18A8                     __pstringtext16:
  1809     18A8                     STR_4:
  1810     18A8  3443               	retlw	67	;'C'
  1811     18A9  3400               	retlw	0
  1812                           
  1813                           	psect	stringtext17
  1814     0000                     __pstringtext17:
  1815     1821                     
  1816                           	psect	cinit
  1817     026B                     start_initialization:	
  1818                           ; #config settings
  1819                           
  1820     026B                     __initialization:
  1821                           
  1822                           ; Clear objects allocated to COMMON
  1823     026B  01FC               	clrf	__pbssCOMMON& (0+127)
  1824     026C  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1825                           
  1826                           ; Clear objects allocated to BANK1
  1827     026D  0021               	movlb	1	; select bank1
  1828     026E  01ED               	clrf	__pbssBANK1& (0+127)
  1829     026F  01EE               	clrf	(__pbssBANK1+1)& (0+127)
  1830     0270  01EF               	clrf	(__pbssBANK1+2)& (0+127)
  1831                           
  1832                           ; Clear objects allocated to BANK2
  1833     0271  3020               	movlw	low __pbssBANK2
  1834     0272  0084               	movwf	4
  1835     0273  3001               	movlw	high __pbssBANK2
  1836     0274  0085               	movwf	5
  1837     0275  3020               	movlw	32
  1838     0276  3199  213D  3182   	fcall	clear_ram0
  1839                           
  1840                           ; Clear objects allocated to BANK3
  1841     0279  30A0               	movlw	low __pbssBANK3
  1842     027A  0084               	movwf	4
  1843     027B  3001               	movlw	high __pbssBANK3
  1844     027C  0085               	movwf	5
  1845     027D  3014               	movlw	20
  1846     027E  3199  213D  3182   	fcall	clear_ram0
  1847                           
  1848                           ; Clear objects allocated to BANK4
  1849     0281  3020               	movlw	low __pbssBANK4
  1850     0282  0084               	movwf	4
  1851     0283  3002               	movlw	high __pbssBANK4
  1852     0284  0085               	movwf	5
  1853     0285  3050               	movlw	80
  1854     0286  3199  213D  3182   	fcall	clear_ram0
  1855     0289                     end_of_initialization:	
  1856                           ;End of C runtime variable initialization code
  1857                           
  1858     0289                     __end_of__initialization:
  1859     0289  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1860     028A  0020               	movlb	0
  1861     028B  3184  2CC8         	ljmp	_main	;jump to C main() function
  1862                           
  1863                           	psect	bssCOMMON
  1864     007C                     __pbssCOMMON:
  1865     007C                     _cont_key:
  1866     007C                     	ds	1
  1867     007D                     _tecla:
  1868     007D                     	ds	1
  1869                           
  1870                           	psect	bssBANK1
  1871     00ED                     __pbssBANK1:
  1872     00ED                     _prec:
  1873     00ED                     	ds	2
  1874     00EF                     _seg:
  1875     00EF                     	ds	1
  1876                           
  1877                           	psect	bssBANK2
  1878     0120                     __pbssBANK2:
  1879     0120                     floorf@F521:
  1880     0120                     	ds	4
  1881     0124                     ___fpclassifyf@F465:
  1882     0124                     	ds	4
  1883     0128                     _temp:
  1884     0128                     	ds	4
  1885     012C                     _width:
  1886     012C                     	ds	2
  1887     012E                     _ADC_InterruptHandler:
  1888     012E                     	ds	2
  1889     0130                     _flags:
  1890     0130                     	ds	1
  1891     0131                     _hor:
  1892     0131                     	ds	1
  1893     0132                     _min:
  1894     0132                     	ds	1
  1895     0133                     _estado:
  1896     0133                     	ds	1
  1897     0134                     _clave_enter:
  1898     0134                     	ds	5
  1899     0139                     _clave:
  1900     0139                     	ds	5
  1901     013E                     _convertedValue:
  1902     013E                     	ds	2
  1903                           
  1904                           	psect	bssBANK3
  1905     01A0                     __pbssBANK3:
  1906     01A0                     _buffer:
  1907     01A0                     	ds	20
  1908                           
  1909                           	psect	bssBANK4
  1910     0220                     __pbssBANK4:
  1911     0220                     _dbuf:
  1912     0220                     	ds	80
  1913                           
  1914                           	psect	clrtext
  1915     193D                     clear_ram0:	
  1916                           ;	Called with FSR0 containing the base address, and
  1917                           ;	WREG with the size to clear
  1918                           
  1919     193D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1920     193E                     clrloop0:
  1921     193E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1922     193F  3101               	addfsr 0,1
  1923     1940  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1924     1941  293E               	goto	clrloop0	;have we reached the end yet?
  1925     1942  3400               	retlw	0	;all done for this memory range, return
  1926                           
  1927                           	psect	cstackBANK2
  1928     0140                     __pcstackBANK2:
  1929     0140                     sprintf@s:
  1930                           
  1931                           ; 1 bytes @ 0x0
  1932     0140                     	ds	1
  1933     0141                     sprintf@ap:
  1934                           
  1935                           ; 1 bytes @ 0x1
  1936     0141                     	ds	1
  1937     0142                     sprintf@f:
  1938                           
  1939                           ; 11 bytes @ 0x2
  1940     0142                     	ds	11
  1941     014D                     ??_main:
  1942                           
  1943                           ; 1 bytes @ 0xD
  1944     014D                     	ds	18
  1945                           
  1946                           	psect	cstackBANK1
  1947     00A0                     __pcstackBANK1:
  1948     00A0                     efgtoa@ne:
  1949                           
  1950                           ; 2 bytes @ 0x0
  1951     00A0                     	ds	2
  1952     00A2                     efgtoa@p:
  1953                           
  1954                           ; 2 bytes @ 0x2
  1955     00A2                     	ds	2
  1956     00A4                     efgtoa@t:
  1957                           
  1958                           ; 2 bytes @ 0x4
  1959     00A4                     	ds	2
  1960     00A6                     _efgtoa$1448:
  1961                           
  1962                           ; 2 bytes @ 0x6
  1963     00A6                     	ds	2
  1964     00A8                     efgtoa@pp:
  1965                           
  1966                           ; 1 bytes @ 0x8
  1967     00A8                     	ds	1
  1968     00A9                     efgtoa@mode:
  1969                           
  1970                           ; 1 bytes @ 0x9
  1971     00A9                     	ds	1
  1972     00AA                     efgtoa@nmode:
  1973                           
  1974                           ; 1 bytes @ 0xA
  1975     00AA                     	ds	1
  1976     00AB                     efgtoa@d:
  1977                           
  1978                           ; 2 bytes @ 0xB
  1979     00AB                     	ds	2
  1980     00AD                     efgtoa@m:
  1981                           
  1982                           ; 2 bytes @ 0xD
  1983     00AD                     	ds	2
  1984     00AF                     efgtoa@fp:
  1985                           
  1986                           ; 1 bytes @ 0xF
  1987     00AF                     	ds	1
  1988     00B0                     efgtoa@e:
  1989                           
  1990                           ; 2 bytes @ 0x10
  1991     00B0                     	ds	2
  1992     00B2                     efgtoa@w:
  1993                           
  1994                           ; 2 bytes @ 0x12
  1995     00B2                     	ds	2
  1996     00B4                     efgtoa@ou:
  1997                           
  1998                           ; 4 bytes @ 0x14
  1999     00B4                     	ds	4
  2000     00B8                     efgtoa@h:
  2001                           
  2002                           ; 4 bytes @ 0x18
  2003     00B8                     	ds	4
  2004     00BC                     efgtoa@l:
  2005                           
  2006                           ; 4 bytes @ 0x1C
  2007     00BC                     	ds	4
  2008     00C0                     efgtoa@i:
  2009                           
  2010                           ; 2 bytes @ 0x20
  2011     00C0                     	ds	2
  2012     00C2                     efgtoa@sign:
  2013                           
  2014                           ; 1 bytes @ 0x22
  2015     00C2                     	ds	1
  2016     00C3                     efgtoa@g:
  2017                           
  2018                           ; 4 bytes @ 0x23
  2019     00C3                     	ds	4
  2020     00C7                     efgtoa@n:
  2021                           
  2022                           ; 2 bytes @ 0x27
  2023     00C7                     	ds	2
  2024     00C9                     efgtoa@u:
  2025                           
  2026                           ; 4 bytes @ 0x29
  2027     00C9                     	ds	4
  2028     00CD                     ??_vfpfcnvrt:
  2029                           
  2030                           ; 1 bytes @ 0x2D
  2031     00CD                     	ds	4
  2032     00D1                     vfpfcnvrt@done:
  2033                           
  2034                           ; 1 bytes @ 0x31
  2035     00D1                     	ds	1
  2036     00D2                     vfpfcnvrt@convarg:
  2037                           
  2038                           ; 4 bytes @ 0x32
  2039     00D2                     	ds	4
  2040     00D6                     vfpfcnvrt@c:
  2041                           
  2042                           ; 1 bytes @ 0x36
  2043     00D6                     	ds	1
  2044     00D7                     vfpfcnvrt@fp:
  2045                           
  2046                           ; 1 bytes @ 0x37
  2047     00D7                     	ds	1
  2048     00D8                     vfpfcnvrt@cp:
  2049                           
  2050                           ; 2 bytes @ 0x38
  2051     00D8                     	ds	2
  2052     00DA                     ??_vfprintf:
  2053                           
  2054                           ; 1 bytes @ 0x3A
  2055     00DA                     	ds	1
  2056     00DB                     vfprintf@fp:
  2057                           
  2058                           ; 1 bytes @ 0x3B
  2059     00DB                     	ds	1
  2060     00DC                     vfprintf@cfmt:
  2061                           
  2062                           ; 2 bytes @ 0x3C
  2063     00DC                     	ds	2
  2064     00DE                     ?_sprintf:
  2065     00DE                     sprintf@fmt:	
  2066                           ; 2 bytes @ 0x3E
  2067                           
  2068                           
  2069                           ; 2 bytes @ 0x3E
  2070     00DE                     	ds	14
  2071     00EC                     ??_sprintf:
  2072                           
  2073                           ; 1 bytes @ 0x4C
  2074     00EC                     	ds	1
  2075                           
  2076                           	psect	cstackCOMMON
  2077     0070                     __pcstackCOMMON:
  2078     0070                     ?_Lcd_Init:
  2079     0070                     ?_Lcd_Clear:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082     0070                     ?_Keypad_Init:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085     0070                     ??_Keypad_Init:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088     0070                     ?_Keypad_Get_Char:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091     0070                     ??_Keypad_Get_Char:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094     0070                     ?_Lcd_Write_Char:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097     0070                     ?_Leer_Clave:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100     0070                     ?_Escribir_Clave:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103     0070                     ?_EEPROM_Write:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106     0070                     ?_EEPROM_Read:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109     0070                     ??_EEPROM_Read:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112     0070                     ?_putch:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115     0070                     ?_ADC_Initialize:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118     0070                     ?_ADC_StartConversion:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121     0070                     ?_ADC_IsConversionDone:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124     0070                     ?_main:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127     0070                     ?_IOC:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130     0070                     ?_Lcd_Port:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133     0070                     ?_Lcd_Cmd:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136     0070                     ?i1_Lcd_Port:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139     0070                     ??i1_Lcd_Port:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142     0070                     ?i1_Lcd_Cmd:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145     0070                     ?i1_Lcd_Clear:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148     0070                     ?i1_Lcd_Write_Char:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151     0070                     ?_strcmp:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154     0070                     EEPROM_Write@data:	
  2155                           ; 2 bytes @ 0x0
  2156                           
  2157     0070                     putch@c:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160     0070                     strcmp@r:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163     0070                     i1Lcd_Port@a:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166                           
  2167                           ; 1 bytes @ 0x0
  2168     0070                     	ds	1
  2169     0071                     ??_EEPROM_Write:
  2170     0071                     ??i1_Lcd_Cmd:	
  2171                           ; 1 bytes @ 0x1
  2172                           
  2173     0071                     ??i1_Lcd_Write_Char:	
  2174                           ; 1 bytes @ 0x1
  2175                           
  2176                           
  2177                           ; 1 bytes @ 0x1
  2178     0071                     	ds	1
  2179     0072                     ??_strcmp:
  2180     0072                     EEPROM_Read@dir:	
  2181                           ; 1 bytes @ 0x2
  2182                           
  2183     0072                     i1Lcd_Cmd@a:	
  2184                           ; 1 bytes @ 0x2
  2185                           
  2186     0072                     i1Lcd_Write_Char@temp:	
  2187                           ; 1 bytes @ 0x2
  2188                           
  2189                           
  2190                           ; 1 bytes @ 0x2
  2191     0072                     	ds	1
  2192     0073                     ??_Leer_Clave:
  2193     0073                     ??i1_Lcd_Clear:	
  2194                           ; 1 bytes @ 0x3
  2195                           
  2196     0073                     ?i1_Lcd_Set_Cursor:	
  2197                           ; 1 bytes @ 0x3
  2198                           
  2199     0073                     EEPROM_Write@dir:	
  2200                           ; 1 bytes @ 0x3
  2201                           
  2202     0073                     strcmp@l:	
  2203                           ; 1 bytes @ 0x3
  2204                           
  2205     0073                     i1Lcd_Set_Cursor@b:	
  2206                           ; 1 bytes @ 0x3
  2207                           
  2208     0073                     i1Lcd_Write_Char@y:	
  2209                           ; 1 bytes @ 0x3
  2210                           
  2211                           
  2212                           ; 1 bytes @ 0x3
  2213     0073                     	ds	1
  2214     0074                     ??_Escribir_Clave:
  2215     0074                     ??i1_Lcd_Set_Cursor:	
  2216                           ; 1 bytes @ 0x4
  2217                           
  2218     0074                     Leer_Clave@str:	
  2219                           ; 1 bytes @ 0x4
  2220                           
  2221     0074                     i1Lcd_Write_Char@a:	
  2222                           ; 1 bytes @ 0x4
  2223                           
  2224                           
  2225                           ; 1 bytes @ 0x4
  2226     0074                     	ds	1
  2227     0075                     ?i1_Lcd_Write_String:
  2228     0075                     Escribir_Clave@str:	
  2229                           ; 1 bytes @ 0x5
  2230                           
  2231     0075                     Leer_Clave@pos:	
  2232                           ; 1 bytes @ 0x5
  2233                           
  2234     0075                     i1Lcd_Set_Cursor@a:	
  2235                           ; 1 bytes @ 0x5
  2236                           
  2237     0075                     i1Lcd_Write_String@a:	
  2238                           ; 1 bytes @ 0x5
  2239                           
  2240                           
  2241                           ; 2 bytes @ 0x5
  2242     0075                     	ds	1
  2243     0076                     Escribir_Clave@pos:
  2244     0076                     i1Lcd_Set_Cursor@z:	
  2245                           ; 1 bytes @ 0x6
  2246                           
  2247                           
  2248                           ; 1 bytes @ 0x6
  2249     0076                     	ds	1
  2250     0077                     ??i1_Lcd_Write_String:
  2251     0077                     i1Lcd_Set_Cursor@y:	
  2252                           ; 1 bytes @ 0x7
  2253                           
  2254                           
  2255                           ; 1 bytes @ 0x7
  2256     0077                     	ds	1
  2257     0078                     i1Lcd_Set_Cursor@temp:
  2258     0078                     i1Lcd_Write_String@i:	
  2259                           ; 1 bytes @ 0x8
  2260                           
  2261                           
  2262                           ; 2 bytes @ 0x8
  2263     0078                     	ds	2
  2264     007A                     ??_IOC:
  2265                           
  2266                           ; 1 bytes @ 0xA
  2267     007A                     	ds	2
  2268                           
  2269                           	psect	cstackBANK0
  2270     0020                     __pcstackBANK0:
  2271     0020                     ?___fleq:
  2272     0020                     ?_strcpy:	
  2273                           ; 1 bit 
  2274                           
  2275     0020                     ?_memcpy:	
  2276                           ; 1 bytes @ 0x0
  2277                           
  2278     0020                     ??_putch:	
  2279                           ; 1 bytes @ 0x0
  2280                           
  2281     0020                     ??_ADC_Initialize:	
  2282                           ; 1 bytes @ 0x0
  2283                           
  2284     0020                     ??_ADC_StartConversion:	
  2285                           ; 1 bytes @ 0x0
  2286                           
  2287     0020                     ??_ADC_IsConversionDone:	
  2288                           ; 1 bytes @ 0x0
  2289                           
  2290     0020                     ??_Lcd_Port:	
  2291                           ; 1 bytes @ 0x0
  2292                           
  2293     0020                     ?__Umul8_16:	
  2294                           ; 1 bytes @ 0x0
  2295                           
  2296     0020                     ?_fputc:	
  2297                           ; 2 bytes @ 0x0
  2298                           
  2299     0020                     ?___fpclassifyf:	
  2300                           ; 2 bytes @ 0x0
  2301                           
  2302     0020                     ?_ADC_GetConversionResult:	
  2303                           ; 2 bytes @ 0x0
  2304                           
  2305     0020                     ?___wmul:	
  2306                           ; 2 bytes @ 0x0
  2307                           
  2308     0020                     ?___awdiv:	
  2309                           ; 2 bytes @ 0x0
  2310                           
  2311     0020                     ?___awmod:	
  2312                           ; 2 bytes @ 0x0
  2313                           
  2314     0020                     ?_labs:	
  2315                           ; 2 bytes @ 0x0
  2316                           
  2317     0020                     ?___flneg:	
  2318                           ; 4 bytes @ 0x0
  2319                           
  2320     0020                     ?___fltol:	
  2321                           ; 4 bytes @ 0x0
  2322                           
  2323     0020                     ?___fladd:	
  2324                           ; 4 bytes @ 0x0
  2325                           
  2326     0020                     Lcd_Port@a:	
  2327                           ; 4 bytes @ 0x0
  2328                           
  2329     0020                     __Umul8_16@multiplicand:	
  2330                           ; 1 bytes @ 0x0
  2331                           
  2332     0020                     memcpy@s1:	
  2333                           ; 1 bytes @ 0x0
  2334                           
  2335     0020                     ___wmul@multiplier:	
  2336                           ; 1 bytes @ 0x0
  2337                           
  2338     0020                     ___awdiv@divisor:	
  2339                           ; 2 bytes @ 0x0
  2340                           
  2341     0020                     ___awmod@divisor:	
  2342                           ; 2 bytes @ 0x0
  2343                           
  2344     0020                     fputc@c:	
  2345                           ; 2 bytes @ 0x0
  2346                           
  2347     0020                     strcpy@src:	
  2348                           ; 2 bytes @ 0x0
  2349                           
  2350     0020                     ___fleq@ff1:	
  2351                           ; 2 bytes @ 0x0
  2352                           
  2353     0020                     ___flneg@f1:	
  2354                           ; 4 bytes @ 0x0
  2355                           
  2356     0020                     ___fltol@f1:	
  2357                           ; 4 bytes @ 0x0
  2358                           
  2359     0020                     ___fladd@b:	
  2360                           ; 4 bytes @ 0x0
  2361                           
  2362     0020                     ___fpclassifyf@x:	
  2363                           ; 4 bytes @ 0x0
  2364                           
  2365     0020                     labs@a:	
  2366                           ; 4 bytes @ 0x0
  2367                           
  2368                           
  2369                           ; 4 bytes @ 0x0
  2370     0020                     	ds	1
  2371     0021                     ??_Lcd_Write_Char:
  2372     0021                     ??_Lcd_Cmd:	
  2373                           ; 1 bytes @ 0x1
  2374                           
  2375     0021                     memcpy@n:	
  2376                           ; 1 bytes @ 0x1
  2377                           
  2378                           
  2379                           ; 2 bytes @ 0x1
  2380     0021                     	ds	1
  2381     0022                     ??__Umul8_16:
  2382     0022                     ??_strcpy:	
  2383                           ; 1 bytes @ 0x2
  2384                           
  2385     0022                     ??_ADC_GetConversionResult:	
  2386                           ; 1 bytes @ 0x2
  2387                           
  2388     0022                     Lcd_Cmd@a:	
  2389                           ; 1 bytes @ 0x2
  2390                           
  2391     0022                     Lcd_Write_Char@temp:	
  2392                           ; 1 bytes @ 0x2
  2393                           
  2394     0022                     fputc@fp:	
  2395                           ; 1 bytes @ 0x2
  2396                           
  2397     0022                     ___wmul@multiplicand:	
  2398                           ; 1 bytes @ 0x2
  2399                           
  2400     0022                     ___awdiv@dividend:	
  2401                           ; 2 bytes @ 0x2
  2402                           
  2403     0022                     ___awmod@dividend:	
  2404                           ; 2 bytes @ 0x2
  2405                           
  2406                           
  2407                           ; 2 bytes @ 0x2
  2408     0022                     	ds	1
  2409     0023                     ??_Lcd_Init:
  2410     0023                     ??_Lcd_Clear:	
  2411                           ; 1 bytes @ 0x3
  2412                           
  2413     0023                     ?_Lcd_Set_Cursor:	
  2414                           ; 1 bytes @ 0x3
  2415                           
  2416     0023                     ??_fputc:	
  2417                           ; 1 bytes @ 0x3
  2418                           
  2419     0023                     ??_memcpy:	
  2420                           ; 1 bytes @ 0x3
  2421                           
  2422     0023                     Lcd_Set_Cursor@b:	
  2423                           ; 1 bytes @ 0x3
  2424                           
  2425     0023                     Lcd_Write_Char@y:	
  2426                           ; 1 bytes @ 0x3
  2427                           
  2428                           
  2429                           ; 1 bytes @ 0x3
  2430     0023                     	ds	1
  2431     0024                     ??_Lcd_Set_Cursor:
  2432     0024                     ??___fpclassifyf:	
  2433                           ; 1 bytes @ 0x4
  2434                           
  2435     0024                     ??_labs:	
  2436                           ; 1 bytes @ 0x4
  2437                           
  2438     0024                     ??___wmul:	
  2439                           ; 1 bytes @ 0x4
  2440                           
  2441     0024                     ??___awdiv:	
  2442                           ; 1 bytes @ 0x4
  2443                           
  2444     0024                     ??___awmod:	
  2445                           ; 1 bytes @ 0x4
  2446                           
  2447     0024                     ??___flneg:	
  2448                           ; 1 bytes @ 0x4
  2449                           
  2450     0024                     ??___fltol:	
  2451                           ; 1 bytes @ 0x4
  2452                           
  2453     0024                     Lcd_Write_Char@a:	
  2454                           ; 1 bytes @ 0x4
  2455                           
  2456     0024                     memcpy@tmp:	
  2457                           ; 1 bytes @ 0x4
  2458                           
  2459     0024                     strcpy@d:	
  2460                           ; 1 bytes @ 0x4
  2461                           
  2462     0024                     ___wmul@product:	
  2463                           ; 1 bytes @ 0x4
  2464                           
  2465     0024                     __Umul8_16@product:	
  2466                           ; 2 bytes @ 0x4
  2467                           
  2468     0024                     ___fleq@ff2:	
  2469                           ; 2 bytes @ 0x4
  2470                           
  2471     0024                     ___fladd@a:	
  2472                           ; 4 bytes @ 0x4
  2473                           
  2474                           
  2475                           ; 4 bytes @ 0x4
  2476     0024                     	ds	1
  2477     0025                     ?_Lcd_Write_String:
  2478     0025                     Lcd_Set_Cursor@a:	
  2479                           ; 1 bytes @ 0x5
  2480                           
  2481     0025                     ___awdiv@counter:	
  2482                           ; 1 bytes @ 0x5
  2483                           
  2484     0025                     ___awmod@counter:	
  2485                           ; 1 bytes @ 0x5
  2486                           
  2487     0025                     memcpy@d1:	
  2488                           ; 1 bytes @ 0x5
  2489                           
  2490     0025                     strcpy@dest:	
  2491                           ; 1 bytes @ 0x5
  2492                           
  2493     0025                     Lcd_Write_String@a:	
  2494                           ; 1 bytes @ 0x5
  2495                           
  2496                           
  2497                           ; 2 bytes @ 0x5
  2498     0025                     	ds	1
  2499     0026                     ?_read_prec_or_width:
  2500     0026                     ?___xxtofl:	
  2501                           ; 2 bytes @ 0x6
  2502                           
  2503     0026                     Lcd_Set_Cursor@z:	
  2504                           ; 4 bytes @ 0x6
  2505                           
  2506     0026                     ___awdiv@sign:	
  2507                           ; 1 bytes @ 0x6
  2508                           
  2509     0026                     ___awmod@sign:	
  2510                           ; 1 bytes @ 0x6
  2511                           
  2512     0026                     read_prec_or_width@ap:	
  2513                           ; 1 bytes @ 0x6
  2514                           
  2515     0026                     memcpy@d:	
  2516                           ; 1 bytes @ 0x6
  2517                           
  2518     0026                     __Umul8_16@word_mpld:	
  2519                           ; 1 bytes @ 0x6
  2520                           
  2521     0026                     ___xxtofl@val:	
  2522                           ; 2 bytes @ 0x6
  2523                           
  2524                           
  2525                           ; 4 bytes @ 0x6
  2526     0026                     	ds	1
  2527     0027                     ??_Lcd_Write_String:
  2528     0027                     ?_abs:	
  2529                           ; 1 bytes @ 0x7
  2530                           
  2531     0027                     Lcd_Set_Cursor@y:	
  2532                           ; 2 bytes @ 0x7
  2533                           
  2534     0027                     memcpy@s:	
  2535                           ; 1 bytes @ 0x7
  2536                           
  2537     0027                     ___awdiv@quotient:	
  2538                           ; 1 bytes @ 0x7
  2539                           
  2540     0027                     abs@a:	
  2541                           ; 2 bytes @ 0x7
  2542                           
  2543                           
  2544                           ; 2 bytes @ 0x7
  2545     0027                     	ds	1
  2546     0028                     ??___fleq:
  2547     0028                     ??___fladd:	
  2548                           ; 1 bytes @ 0x8
  2549                           
  2550     0028                     ??_read_prec_or_width:	
  2551                           ; 1 bytes @ 0x8
  2552                           
  2553     0028                     ?_fputs:	
  2554                           ; 1 bytes @ 0x8
  2555                           
  2556     0028                     Lcd_Set_Cursor@temp:	
  2557                           ; 2 bytes @ 0x8
  2558                           
  2559     0028                     ___fltol@sign1:	
  2560                           ; 1 bytes @ 0x8
  2561                           
  2562     0028                     __Umul8_16@multiplier:	
  2563                           ; 1 bytes @ 0x8
  2564                           
  2565     0028                     fputs@fp:	
  2566                           ; 1 bytes @ 0x8
  2567                           
  2568     0028                     Lcd_Write_String@i:	
  2569                           ; 1 bytes @ 0x8
  2570                           
  2571                           
  2572                           ; 2 bytes @ 0x8
  2573     0028                     	ds	1
  2574     0029                     ??_fputs:
  2575     0029                     ??_abs:	
  2576                           ; 1 bytes @ 0x9
  2577                           
  2578     0029                     ?___flmul:	
  2579                           ; 1 bytes @ 0x9
  2580                           
  2581     0029                     ___fltol@exp1:	
  2582                           ; 4 bytes @ 0x9
  2583                           
  2584     0029                     ___flmul@b:	
  2585                           ; 1 bytes @ 0x9
  2586                           
  2587                           
  2588                           ; 4 bytes @ 0x9
  2589     0029                     	ds	1
  2590     002A                     ??___xxtofl:
  2591     002A                     ___fpclassifyf@e:	
  2592                           ; 1 bytes @ 0xA
  2593                           
  2594                           
  2595                           ; 2 bytes @ 0xA
  2596     002A                     	ds	1
  2597     002B                     read_prec_or_width@c:
  2598     002B                     fputs@c:	
  2599                           ; 1 bytes @ 0xB
  2600                           
  2601                           
  2602                           ; 1 bytes @ 0xB
  2603     002B                     	ds	1
  2604     002C                     read_prec_or_width@n:
  2605     002C                     fputs@i:	
  2606                           ; 2 bytes @ 0xC
  2607                           
  2608     002C                     ___fpclassifyf@u:	
  2609                           ; 2 bytes @ 0xC
  2610                           
  2611                           
  2612                           ; 4 bytes @ 0xC
  2613     002C                     	ds	1
  2614     002D                     ___flmul@a:
  2615                           
  2616                           ; 4 bytes @ 0xD
  2617     002D                     	ds	1
  2618     002E                     ___xxtofl@sign:
  2619     002E                     read_prec_or_width@fmt:	
  2620                           ; 1 bytes @ 0xE
  2621                           
  2622     002E                     fputs@s:	
  2623                           ; 1 bytes @ 0xE
  2624                           
  2625                           
  2626                           ; 1 bytes @ 0xE
  2627     002E                     	ds	1
  2628     002F                     ?_pad:
  2629     002F                     ___xxtofl@exp:	
  2630                           ; 1 bytes @ 0xF
  2631                           
  2632     002F                     pad@buf:	
  2633                           ; 1 bytes @ 0xF
  2634                           
  2635                           
  2636                           ; 1 bytes @ 0xF
  2637     002F                     	ds	1
  2638     0030                     ___fladd@signs:
  2639     0030                     pad@p:	
  2640                           ; 1 bytes @ 0x10
  2641                           
  2642     0030                     ___xxtofl@arg:	
  2643                           ; 2 bytes @ 0x10
  2644                           
  2645                           
  2646                           ; 4 bytes @ 0x10
  2647     0030                     	ds	1
  2648     0031                     ??___flmul:
  2649     0031                     ___fladd@aexp:	
  2650                           ; 1 bytes @ 0x11
  2651                           
  2652                           
  2653                           ; 1 bytes @ 0x11
  2654     0031                     	ds	1
  2655     0032                     ??_pad:
  2656     0032                     ___fladd@bexp:	
  2657                           ; 1 bytes @ 0x12
  2658                           
  2659                           
  2660                           ; 1 bytes @ 0x12
  2661     0032                     	ds	1
  2662     0033                     ___fladd@grs:
  2663     0033                     pad@i:	
  2664                           ; 1 bytes @ 0x13
  2665                           
  2666                           
  2667                           ; 2 bytes @ 0x13
  2668     0033                     	ds	1
  2669     0034                     ?___fldiv:
  2670     0034                     ___fldiv@a:	
  2671                           ; 4 bytes @ 0x14
  2672                           
  2673                           
  2674                           ; 4 bytes @ 0x14
  2675     0034                     	ds	1
  2676     0035                     pad@fp:
  2677                           
  2678                           ; 1 bytes @ 0x15
  2679     0035                     	ds	1
  2680     0036                     ?_dtoa:
  2681     0036                     ___flmul@sign:	
  2682                           ; 1 bytes @ 0x16
  2683                           
  2684     0036                     dtoa@d:	
  2685                           ; 1 bytes @ 0x16
  2686                           
  2687                           
  2688                           ; 2 bytes @ 0x16
  2689     0036                     	ds	1
  2690     0037                     ___flmul@grs:
  2691                           
  2692                           ; 4 bytes @ 0x17
  2693     0037                     	ds	1
  2694     0038                     ??_dtoa:
  2695     0038                     ___fldiv@b:	
  2696                           ; 1 bytes @ 0x18
  2697                           
  2698                           
  2699                           ; 4 bytes @ 0x18
  2700     0038                     	ds	1
  2701     0039                     _dtoa$1417:
  2702                           
  2703                           ; 2 bytes @ 0x19
  2704     0039                     	ds	2
  2705     003B                     ___flmul@aexp:
  2706     003B                     dtoa@fp:	
  2707                           ; 1 bytes @ 0x1B
  2708                           
  2709                           
  2710                           ; 1 bytes @ 0x1B
  2711     003B                     	ds	1
  2712     003C                     ??___fldiv:
  2713     003C                     ___flmul@bexp:	
  2714                           ; 1 bytes @ 0x1C
  2715                           
  2716     003C                     dtoa@p:	
  2717                           ; 1 bytes @ 0x1C
  2718                           
  2719                           
  2720                           ; 2 bytes @ 0x1C
  2721     003C                     	ds	1
  2722     003D                     ___flmul@prod:
  2723                           
  2724                           ; 4 bytes @ 0x1D
  2725     003D                     	ds	1
  2726     003E                     dtoa@w:
  2727                           
  2728                           ; 2 bytes @ 0x1E
  2729     003E                     	ds	2
  2730     0040                     dtoa@s:
  2731                           
  2732                           ; 1 bytes @ 0x20
  2733     0040                     	ds	1
  2734     0041                     ___flmul@temp:
  2735     0041                     dtoa@i:	
  2736                           ; 2 bytes @ 0x21
  2737                           
  2738     0041                     ___fldiv@rem:	
  2739                           ; 2 bytes @ 0x21
  2740                           
  2741                           
  2742                           ; 4 bytes @ 0x21
  2743     0041                     	ds	2
  2744     0043                     ?___flge:
  2745     0043                     ?___flsub:	
  2746                           ; 1 bit 
  2747                           
  2748     0043                     ___flge@ff1:	
  2749                           ; 4 bytes @ 0x23
  2750                           
  2751     0043                     ___flsub@a:	
  2752                           ; 4 bytes @ 0x23
  2753                           
  2754                           
  2755                           ; 4 bytes @ 0x23
  2756     0043                     	ds	2
  2757     0045                     ___fldiv@sign:
  2758                           
  2759                           ; 1 bytes @ 0x25
  2760     0045                     	ds	1
  2761     0046                     ___fldiv@new_exp:
  2762                           
  2763                           ; 2 bytes @ 0x26
  2764     0046                     	ds	1
  2765     0047                     ___flge@ff2:
  2766     0047                     ___flsub@b:	
  2767                           ; 4 bytes @ 0x27
  2768                           
  2769                           
  2770                           ; 4 bytes @ 0x27
  2771     0047                     	ds	1
  2772     0048                     ___fldiv@grs:
  2773                           
  2774                           ; 4 bytes @ 0x28
  2775     0048                     	ds	3
  2776     004B                     ??___flge:
  2777     004B                     ??___flsub:	
  2778                           ; 1 bytes @ 0x2B
  2779                           
  2780                           
  2781                           ; 1 bytes @ 0x2B
  2782     004B                     	ds	1
  2783     004C                     ___fldiv@bexp:
  2784                           
  2785                           ; 1 bytes @ 0x2C
  2786     004C                     	ds	1
  2787     004D                     ___fldiv@aexp:
  2788                           
  2789                           ; 1 bytes @ 0x2D
  2790     004D                     	ds	1
  2791     004E                     ?_floorf:
  2792     004E                     floorf@x:	
  2793                           ; 4 bytes @ 0x2E
  2794                           
  2795                           
  2796                           ; 4 bytes @ 0x2E
  2797     004E                     	ds	4
  2798     0052                     ??_floorf:
  2799                           
  2800                           ; 1 bytes @ 0x32
  2801     0052                     	ds	6
  2802     0058                     floorf@m:
  2803                           
  2804                           ; 4 bytes @ 0x38
  2805     0058                     	ds	4
  2806     005C                     floorf@e:
  2807                           
  2808                           ; 2 bytes @ 0x3C
  2809     005C                     	ds	2
  2810     005E                     floorf@u:
  2811                           
  2812                           ; 4 bytes @ 0x3E
  2813     005E                     	ds	4
  2814     0062                     ?_efgtoa:
  2815     0062                     efgtoa@f:	
  2816                           ; 1 bytes @ 0x42
  2817                           
  2818                           
  2819                           ; 4 bytes @ 0x42
  2820     0062                     	ds	4
  2821     0066                     efgtoa@c:
  2822                           
  2823                           ; 1 bytes @ 0x46
  2824     0066                     	ds	1
  2825     0067                     ??_efgtoa:
  2826                           
  2827                           ; 1 bytes @ 0x47
  2828     0067                     	ds	4
  2829     006B                     ?_vfpfcnvrt:
  2830     006B                     vfpfcnvrt@fmt:	
  2831                           ; 1 bytes @ 0x4B
  2832                           
  2833                           
  2834                           ; 1 bytes @ 0x4B
  2835     006B                     	ds	1
  2836     006C                     vfpfcnvrt@ap:
  2837                           
  2838                           ; 1 bytes @ 0x4C
  2839     006C                     	ds	1
  2840     006D                     ?_vfprintf:
  2841     006D                     vfprintf@fmt:	
  2842                           ; 2 bytes @ 0x4D
  2843                           
  2844                           
  2845                           ; 2 bytes @ 0x4D
  2846     006D                     	ds	2
  2847     006F                     vfprintf@ap:
  2848                           
  2849                           ; 1 bytes @ 0x4F
  2850     006F                     	ds	1
  2851                           
  2852                           	psect	maintext
  2853     04C8                     __pmaintext:	
  2854 ;;
  2855 ;;Main: autosize = 0, tempsize = 18, incstack = 0, save=0
  2856 ;;
  2857 ;; *************** function _main *****************
  2858 ;; Defined at:
  2859 ;;		line 44 in file "main.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : B1F/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2873 ;;      Params:         0       0       0       0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0       0       0       0
  2875 ;;      Temps:          0       0       0      18       0       0       0       0
  2876 ;;      Totals:         0       0       0      18       0       0       0       0
  2877 ;;Total ram usage:       18 bytes
  2878 ;; Hardware stack levels required when called: 12
  2879 ;; This function calls:
  2880 ;;		_ADC_GetConversionResult
  2881 ;;		_ADC_Initialize
  2882 ;;		_ADC_IsConversionDone
  2883 ;;		_ADC_StartConversion
  2884 ;;		_Lcd_Clear
  2885 ;;		_Lcd_Init
  2886 ;;		_Lcd_Set_Cursor
  2887 ;;		_Lcd_Write_String
  2888 ;;		___fldiv
  2889 ;;		___wmul
  2890 ;;		___xxtofl
  2891 ;;		_sprintf
  2892 ;; This function is called by:
  2893 ;;		Startup code after reset
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897     04C8                     _main:	
  2898                           ;psect for function _main
  2899                           
  2900     04C8                     l5174:	
  2901                           ;incstack = 0
  2902                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2903                           
  2904                           
  2905                           ;main.c: 47:     ANSELB = 0;
  2906     04C8  0023               	movlb	3	; select bank3
  2907     04C9  018D               	clrf	13	;volatile
  2908     04CA                     l5176:
  2909                           
  2910                           ;main.c: 48:     TRISAbits.TRISA1 = 0;
  2911     04CA  0021               	movlb	1	; select bank1
  2912     04CB  108C               	bcf	12,1	;volatile
  2913     04CC                     l5178:
  2914                           
  2915                           ;main.c: 49:     TRISAbits.TRISA2 = 0;
  2916     04CC  110C               	bcf	12,2	;volatile
  2917     04CD                     l5180:
  2918                           
  2919                           ;main.c: 50:     TRISAbits.TRISA3 = 0;
  2920     04CD  118C               	bcf	12,3	;volatile
  2921     04CE                     l5182:
  2922                           
  2923                           ;main.c: 51:     TRISCbits.TRISC2 = 0;
  2924     04CE  110E               	bcf	14,2	;volatile
  2925     04CF                     l5184:
  2926                           
  2927                           ;main.c: 52:     TRISCbits.TRISC5 = 0;
  2928     04CF  128E               	bcf	14,5	;volatile
  2929     04D0                     l5186:
  2930                           
  2931                           ;main.c: 53:     TRISCbits.TRISC3 = 1;
  2932     04D0  158E               	bsf	14,3	;volatile
  2933     04D1                     l5188:
  2934                           
  2935                           ;main.c: 54:     TRISCbits.TRISC4 = 1;
  2936     04D1  160E               	bsf	14,4	;volatile
  2937     04D2                     l5190:
  2938                           
  2939                           ;main.c: 55:     LATAbits.LATA1 = 1;
  2940     04D2  0022               	movlb	2	; select bank2
  2941     04D3  148C               	bsf	12,1	;volatile
  2942     04D4                     l5192:
  2943                           
  2944                           ;main.c: 56:     LATAbits.LATA2 = 1;
  2945     04D4  150C               	bsf	12,2	;volatile
  2946     04D5                     l5194:
  2947                           
  2948                           ;main.c: 57:     LATAbits.LATA3 = 1;
  2949     04D5  158C               	bsf	12,3	;volatile
  2950     04D6                     l5196:
  2951                           
  2952                           ;main.c: 58:     LATCbits.LATC2 = 0;
  2953     04D6  110E               	bcf	14,2	;volatile
  2954     04D7                     l5198:
  2955                           
  2956                           ;main.c: 59:     LATCbits.LATC5 = 1;
  2957     04D7  168E               	bsf	14,5	;volatile
  2958     04D8                     l5200:
  2959                           
  2960                           ;main.c: 62:     OPTION_REGbits.nWPUEN = 0;
  2961     04D8  0021               	movlb	1	; select bank1
  2962     04D9  1395               	bcf	21,7	;volatile
  2963     04DA                     l5202:
  2964                           
  2965                           ;main.c: 63:     WPUB = 0b00001110;
  2966     04DA  300E               	movlw	14
  2967     04DB  0024               	movlb	4	; select bank4
  2968     04DC  008D               	movwf	13	;volatile
  2969     04DD                     l5204:
  2970                           
  2971                           ;main.c: 66:     TRISBbits.TRISB1 = 0;
  2972     04DD  0021               	movlb	1	; select bank1
  2973     04DE  108D               	bcf	13,1	;volatile
  2974     04DF                     l5206:
  2975                           
  2976                           ;main.c: 67:     LATBbits.LATB1 = 0;
  2977     04DF  0022               	movlb	2	; select bank2
  2978     04E0  108D               	bcf	13,1	;volatile
  2979     04E1                     l5208:
  2980                           
  2981                           ;main.c: 68:     TRISBbits.TRISB2 = 0;
  2982     04E1  0021               	movlb	1	; select bank1
  2983     04E2  110D               	bcf	13,2	;volatile
  2984     04E3                     l5210:
  2985                           
  2986                           ;main.c: 69:     LATBbits.LATB2 = 0;
  2987     04E3  0022               	movlb	2	; select bank2
  2988     04E4  110D               	bcf	13,2	;volatile
  2989     04E5                     l5212:
  2990                           
  2991                           ;main.c: 70:     TRISBbits.TRISB3 = 0;
  2992     04E5  0021               	movlb	1	; select bank1
  2993     04E6  118D               	bcf	13,3	;volatile
  2994     04E7                     l5214:
  2995                           
  2996                           ;main.c: 71:     LATBbits.LATB3 = 0;
  2997     04E7  0022               	movlb	2	; select bank2
  2998     04E8  118D               	bcf	13,3	;volatile
  2999     04E9                     l5216:
  3000                           
  3001                           ;main.c: 74:     INTCONbits.GIE = 1;
  3002     04E9  178B               	bsf	11,7	;volatile
  3003     04EA                     l5218:
  3004                           
  3005                           ;main.c: 75:     INTCONbits.IOCIE = 0;
  3006     04EA  118B               	bcf	11,3	;volatile
  3007     04EB                     l5220:
  3008                           
  3009                           ;main.c: 76:     INTCONbits.IOCIE = 1;
  3010     04EB  158B               	bsf	11,3	;volatile
  3011     04EC                     l5222:
  3012                           
  3013                           ;main.c: 78:     IOCBN = 0b11110000;
  3014     04EC  30F0               	movlw	240
  3015     04ED  0027               	movlb	7	; select bank7
  3016     04EE  0095               	movwf	21	;volatile
  3017                           
  3018                           ;main.c: 79:     IOCBF = 0;
  3019     04EF  0196               	clrf	22	;volatile
  3020     04F0                     l5224:
  3021                           
  3022                           ;main.c: 82:     SSPCON1bits.SSPEN = 1;
  3023     04F0  0024               	movlb	4	; select bank4
  3024     04F1  1695               	bsf	21,5	;volatile
  3025     04F2                     l5226:
  3026                           
  3027                           ;main.c: 83:     SSPCON1bits.SSPM3 = 1;
  3028     04F2  1595               	bsf	21,3	;volatile
  3029     04F3                     l5228:
  3030                           
  3031                           ;main.c: 84:     SSPCONbits.SSPM2 = 0;
  3032     04F3  1115               	bcf	21,2	;volatile
  3033     04F4                     l5230:
  3034                           
  3035                           ;main.c: 85:     SSPCONbits.SSPM1 = 0;
  3036     04F4  1095               	bcf	21,1	;volatile
  3037     04F5                     l5232:
  3038                           
  3039                           ;main.c: 86:     SSPCON1bits.SSPM0 = 0;
  3040     04F5  1015               	bcf	21,0	;volatile
  3041     04F6                     l5234:
  3042                           
  3043                           ;main.c: 87:     SSPADD = 0x4F;
  3044     04F6  304F               	movlw	79
  3045     04F7  0092               	movwf	18	;volatile
  3046     04F8                     l5236:
  3047                           
  3048                           ;main.c: 90:     ADC_Initialize();
  3049     04F8  3199  214A  3184   	fcall	_ADC_Initialize
  3050     04FB                     l5238:
  3051                           
  3052                           ;main.c: 91:     Lcd_Init();
  3053     04FB  319C  2462  3184   	fcall	_Lcd_Init
  3054     04FE                     l5240:
  3055                           
  3056                           ;main.c: 92:     Lcd_Clear();
  3057     04FE  3199  216D  3184   	fcall	_Lcd_Clear
  3058     0501                     l5242:
  3059                           
  3060                           ;main.c: 94:     _delay((unsigned long)((200)*(4000000/4000.0)));
  3061     0501  3002               	movlw	2
  3062     0502  0022               	movlb	2	; select bank2
  3063     0503  00CE               	movwf	(??_main^(0+256)+1)
  3064     0504  3004               	movlw	4
  3065     0505  00CD               	movwf	??_main^(0+256)
  3066     0506  30BA               	movlw	186
  3067     0507                     u6867:
  3068     0507  0B89               	decfsz	9,f
  3069     0508  2D07               	goto	u6867
  3070     0509  0BCD               	decfsz	??_main^(0+256),f
  3071     050A  2D07               	goto	u6867
  3072     050B  0BCE               	decfsz	(??_main^(0+256)+1),f
  3073     050C  2D07               	goto	u6867
  3074     050D  0000               	nop
  3075     050E                     l5244:
  3076                           
  3077                           ;main.c: 98:     SSPCON2bits.SEN = 1;
  3078     050E  0024               	movlb	4	; select bank4
  3079     050F  1416               	bsf	22,0	;volatile
  3080     0510                     l204:	
  3081                           ;main.c: 99:     while(SSPCON2bits.SEN);
  3082                           
  3083     0510  1816               	btfsc	22,0	;volatile
  3084     0511  2D13               	goto	u6441
  3085     0512  2D14               	goto	u6440
  3086     0513                     u6441:
  3087     0513  2D10               	goto	l204
  3088     0514                     u6440:
  3089     0514                     l5246:
  3090                           
  3091                           ;main.c: 100:     SSPBUF = 0b11010000;
  3092     0514  30D0               	movlw	208
  3093     0515  0091               	movwf	17	;volatile
  3094     0516                     l207:	
  3095                           ;main.c: 101:     while(SSPSTATbits.BF);
  3096                           
  3097     0516  1814               	btfsc	20,0	;volatile
  3098     0517  2D19               	goto	u6451
  3099     0518  2D1A               	goto	u6450
  3100     0519                     u6451:
  3101     0519  2D16               	goto	l207
  3102     051A                     u6450:
  3103     051A                     l210:
  3104     051A  1914               	btfsc	20,2	;volatile
  3105     051B  2D1D               	goto	u6461
  3106     051C  2D1E               	goto	u6460
  3107     051D                     u6461:
  3108     051D  2D1A               	goto	l210
  3109     051E                     u6460:
  3110     051E                     l5248:
  3111                           
  3112                           ;main.c: 103:     SSPBUF = 0;
  3113     051E  0191               	clrf	17	;volatile
  3114     051F                     l213:	
  3115                           ;main.c: 104:     while(SSPSTATbits.BF);
  3116                           
  3117     051F  1814               	btfsc	20,0	;volatile
  3118     0520  2D22               	goto	u6471
  3119     0521  2D23               	goto	u6470
  3120     0522                     u6471:
  3121     0522  2D1F               	goto	l213
  3122     0523                     u6470:
  3123     0523                     l216:
  3124     0523  1914               	btfsc	20,2	;volatile
  3125     0524  2D26               	goto	u6481
  3126     0525  2D27               	goto	u6480
  3127     0526                     u6481:
  3128     0526  2D23               	goto	l216
  3129     0527                     u6480:
  3130     0527                     l5250:
  3131                           
  3132                           ;main.c: 106:     SSPBUF = 0;
  3133     0527  0191               	clrf	17	;volatile
  3134     0528                     l219:	
  3135                           ;main.c: 107:     while(SSPSTATbits.BF);
  3136                           
  3137     0528  1814               	btfsc	20,0	;volatile
  3138     0529  2D2B               	goto	u6491
  3139     052A  2D2C               	goto	u6490
  3140     052B                     u6491:
  3141     052B  2D28               	goto	l219
  3142     052C                     u6490:
  3143     052C                     l222:
  3144     052C  1914               	btfsc	20,2	;volatile
  3145     052D  2D2F               	goto	u6501
  3146     052E  2D30               	goto	u6500
  3147     052F                     u6501:
  3148     052F  2D2C               	goto	l222
  3149     0530                     u6500:
  3150     0530                     l5252:
  3151                           
  3152                           ;main.c: 109:     SSPBUF = 0;
  3153     0530  0191               	clrf	17	;volatile
  3154     0531                     l225:	
  3155                           ;main.c: 110:     while(SSPSTATbits.BF);
  3156                           
  3157     0531  1814               	btfsc	20,0	;volatile
  3158     0532  2D34               	goto	u6511
  3159     0533  2D35               	goto	u6510
  3160     0534                     u6511:
  3161     0534  2D31               	goto	l225
  3162     0535                     u6510:
  3163     0535                     l228:
  3164     0535  1914               	btfsc	20,2	;volatile
  3165     0536  2D38               	goto	u6521
  3166     0537  2D39               	goto	u6520
  3167     0538                     u6521:
  3168     0538  2D35               	goto	l228
  3169     0539                     u6520:
  3170     0539                     l5254:
  3171                           
  3172                           ;main.c: 112:     SSPBUF = 0b00010101;
  3173     0539  3015               	movlw	21
  3174     053A  0091               	movwf	17	;volatile
  3175     053B                     l231:	
  3176                           ;main.c: 113:     while(SSPSTATbits.BF);
  3177                           
  3178     053B  1814               	btfsc	20,0	;volatile
  3179     053C  2D3E               	goto	u6531
  3180     053D  2D3F               	goto	u6530
  3181     053E                     u6531:
  3182     053E  2D3B               	goto	l231
  3183     053F                     u6530:
  3184     053F                     l234:
  3185     053F  1914               	btfsc	20,2	;volatile
  3186     0540  2D42               	goto	u6541
  3187     0541  2D43               	goto	u6540
  3188     0542                     u6541:
  3189     0542  2D3F               	goto	l234
  3190     0543                     u6540:
  3191     0543                     l236:
  3192                           
  3193                           ;main.c: 115:     SSPCON2bits.PEN = 1;
  3194     0543  1516               	bsf	22,2	;volatile
  3195     0544                     l237:	
  3196                           ;main.c: 116:     while(SSPCON2bits.PEN);
  3197                           
  3198     0544  1916               	btfsc	22,2	;volatile
  3199     0545  2D47               	goto	u6551
  3200     0546  2D48               	goto	u6550
  3201     0547                     u6551:
  3202     0547  2D44               	goto	l237
  3203     0548                     u6550:
  3204     0548                     l5256:
  3205                           
  3206                           ;main.c: 119:     Lcd_Set_Cursor(1,2);
  3207     0548  3002               	movlw	2
  3208     0549  0020               	movlb	0	; select bank0
  3209     054A  00A3               	movwf	Lcd_Set_Cursor@b
  3210     054B  3001               	movlw	1
  3211     054C  319F  2707  3184   	fcall	_Lcd_Set_Cursor
  3212     054F                     l5258:
  3213                           
  3214                           ;main.c: 120:     Lcd_Write_String("ControlTech CA");
  3215     054F  3021               	movlw	low (STR_1| (0+32768))
  3216     0550  0020               	movlb	0	; select bank0
  3217     0551  00A5               	movwf	Lcd_Write_String@a
  3218     0552  3098               	movlw	high (STR_1| (0+32768))
  3219     0553  00A6               	movwf	Lcd_Write_String@a+1
  3220     0554  319A  2255  3184   	fcall	_Lcd_Write_String
  3221     0557                     l5260:
  3222                           
  3223                           ;main.c: 122:     _delay((unsigned long)((200)*(4000000/4000.0)));
  3224     0557  3002               	movlw	2
  3225     0558  0022               	movlb	2	; select bank2
  3226     0559  00CE               	movwf	(??_main^(0+256)+1)
  3227     055A  3004               	movlw	4
  3228     055B  00CD               	movwf	??_main^(0+256)
  3229     055C  30BA               	movlw	186
  3230     055D                     u6877:
  3231     055D  0B89               	decfsz	9,f
  3232     055E  2D5D               	goto	u6877
  3233     055F  0BCD               	decfsz	??_main^(0+256),f
  3234     0560  2D5D               	goto	u6877
  3235     0561  0BCE               	decfsz	(??_main^(0+256)+1),f
  3236     0562  2D5D               	goto	u6877
  3237     0563  0000               	nop
  3238     0564                     l5262:
  3239                           
  3240                           ;main.c: 127:         SSPCON2bits.SEN = 1;
  3241     0564  0024               	movlb	4	; select bank4
  3242     0565  1416               	bsf	22,0	;volatile
  3243     0566                     l241:	
  3244                           ;main.c: 128:         while(SSPCON2bits.SEN);
  3245                           
  3246     0566  1816               	btfsc	22,0	;volatile
  3247     0567  2D69               	goto	u6561
  3248     0568  2D6A               	goto	u6560
  3249     0569                     u6561:
  3250     0569  2D66               	goto	l241
  3251     056A                     u6560:
  3252     056A                     l5264:
  3253                           
  3254                           ;main.c: 129:         SSPBUF = 0b11010000;
  3255     056A  30D0               	movlw	208
  3256     056B  0091               	movwf	17	;volatile
  3257     056C                     l244:	
  3258                           ;main.c: 130:         while(SSPSTATbits.BF);
  3259                           
  3260     056C  1814               	btfsc	20,0	;volatile
  3261     056D  2D6F               	goto	u6571
  3262     056E  2D70               	goto	u6570
  3263     056F                     u6571:
  3264     056F  2D6C               	goto	l244
  3265     0570                     u6570:
  3266     0570                     l247:
  3267     0570  1914               	btfsc	20,2	;volatile
  3268     0571  2D73               	goto	u6581
  3269     0572  2D74               	goto	u6580
  3270     0573                     u6581:
  3271     0573  2D70               	goto	l247
  3272     0574                     u6580:
  3273     0574                     l5266:
  3274                           
  3275                           ;main.c: 132:         SSPBUF = 0;
  3276     0574  0191               	clrf	17	;volatile
  3277     0575                     l250:	
  3278                           ;main.c: 133:         while(SSPSTATbits.BF);
  3279                           
  3280     0575  1814               	btfsc	20,0	;volatile
  3281     0576  2D78               	goto	u6591
  3282     0577  2D79               	goto	u6590
  3283     0578                     u6591:
  3284     0578  2D75               	goto	l250
  3285     0579                     u6590:
  3286     0579                     l253:
  3287     0579  1914               	btfsc	20,2	;volatile
  3288     057A  2D7C               	goto	u6601
  3289     057B  2D7D               	goto	u6600
  3290     057C                     u6601:
  3291     057C  2D79               	goto	l253
  3292     057D                     u6600:
  3293     057D                     l255:
  3294                           
  3295                           ;main.c: 135:         SSPCON2bits.RSEN = 1;
  3296     057D  1496               	bsf	22,1	;volatile
  3297     057E                     l256:	
  3298                           ;main.c: 136:         while(SSPCON2bits.RSEN);
  3299                           
  3300     057E  1896               	btfsc	22,1	;volatile
  3301     057F  2D81               	goto	u6611
  3302     0580  2D82               	goto	u6610
  3303     0581                     u6611:
  3304     0581  2D7E               	goto	l256
  3305     0582                     u6610:
  3306     0582                     l5268:
  3307                           
  3308                           ;main.c: 137:         SSPBUF = 0b11010001;
  3309     0582  30D1               	movlw	209
  3310     0583  0091               	movwf	17	;volatile
  3311     0584                     l259:	
  3312                           ;main.c: 138:         while(SSPSTATbits.BF);
  3313                           
  3314     0584  1814               	btfsc	20,0	;volatile
  3315     0585  2D87               	goto	u6621
  3316     0586  2D88               	goto	u6620
  3317     0587                     u6621:
  3318     0587  2D84               	goto	l259
  3319     0588                     u6620:
  3320     0588                     l262:
  3321     0588  1914               	btfsc	20,2	;volatile
  3322     0589  2D8B               	goto	u6631
  3323     058A  2D8C               	goto	u6630
  3324     058B                     u6631:
  3325     058B  2D88               	goto	l262
  3326     058C                     u6630:
  3327     058C                     l264:
  3328                           
  3329                           ;main.c: 140:         SSPCON2bits.RCEN = 1;
  3330     058C  1596               	bsf	22,3	;volatile
  3331     058D                     l265:	
  3332                           ;main.c: 141:         while(SSPSTATbits.BF==0);
  3333                           
  3334     058D  1C14               	btfss	20,0	;volatile
  3335     058E  2D90               	goto	u6641
  3336     058F  2D91               	goto	u6640
  3337     0590                     u6641:
  3338     0590  2D8D               	goto	l265
  3339     0591                     u6640:
  3340     0591                     l5270:
  3341                           
  3342                           ;main.c: 142:         seg = SSPBUF;
  3343     0591  0811               	movf	17,w	;volatile
  3344     0592  0021               	movlb	1	; select bank1
  3345     0593  00EF               	movwf	_seg^(0+128)
  3346     0594                     l5272:
  3347                           
  3348                           ;main.c: 143:         SSPCON2bits.ACKDT = 0;
  3349     0594  0024               	movlb	4	; select bank4
  3350     0595  1296               	bcf	22,5	;volatile
  3351     0596                     l5274:
  3352                           
  3353                           ;main.c: 144:         SSPCON2bits.ACKEN = 1;
  3354     0596  1616               	bsf	22,4	;volatile
  3355     0597                     l268:	
  3356                           ;main.c: 145:         while(SSPCON2bits.ACKEN);
  3357                           
  3358     0597  1A16               	btfsc	22,4	;volatile
  3359     0598  2D9A               	goto	u6651
  3360     0599  2D9B               	goto	u6650
  3361     059A                     u6651:
  3362     059A  2D97               	goto	l268
  3363     059B                     u6650:
  3364     059B                     l270:
  3365                           
  3366                           ;main.c: 146:         SSPCON2bits.RCEN = 1;
  3367     059B  1596               	bsf	22,3	;volatile
  3368     059C                     l271:	
  3369                           ;main.c: 147:         while(SSPSTATbits.BF==0);
  3370                           
  3371     059C  1C14               	btfss	20,0	;volatile
  3372     059D  2D9F               	goto	u6661
  3373     059E  2DA0               	goto	u6660
  3374     059F                     u6661:
  3375     059F  2D9C               	goto	l271
  3376     05A0                     u6660:
  3377     05A0                     l5276:
  3378                           
  3379                           ;main.c: 148:         min = SSPBUF;
  3380     05A0  0811               	movf	17,w	;volatile
  3381     05A1  0022               	movlb	2	; select bank2
  3382     05A2  00B2               	movwf	_min^(0+256)
  3383     05A3                     l5278:
  3384                           
  3385                           ;main.c: 149:         SSPCON2bits.ACKDT = 0;
  3386     05A3  0024               	movlb	4	; select bank4
  3387     05A4  1296               	bcf	22,5	;volatile
  3388     05A5                     l5280:
  3389                           
  3390                           ;main.c: 150:         SSPCON2bits.ACKEN = 1;
  3391     05A5  1616               	bsf	22,4	;volatile
  3392     05A6                     l274:	
  3393                           ;main.c: 151:         while(SSPCON2bits.ACKEN);
  3394                           
  3395     05A6  1A16               	btfsc	22,4	;volatile
  3396     05A7  2DA9               	goto	u6671
  3397     05A8  2DAA               	goto	u6670
  3398     05A9                     u6671:
  3399     05A9  2DA6               	goto	l274
  3400     05AA                     u6670:
  3401     05AA                     l276:
  3402                           
  3403                           ;main.c: 152:         SSPCON2bits.RCEN = 1;
  3404     05AA  1596               	bsf	22,3	;volatile
  3405     05AB                     l277:	
  3406                           ;main.c: 153:         while(SSPSTATbits.BF==0);
  3407                           
  3408     05AB  1C14               	btfss	20,0	;volatile
  3409     05AC  2DAE               	goto	u6681
  3410     05AD  2DAF               	goto	u6680
  3411     05AE                     u6681:
  3412     05AE  2DAB               	goto	l277
  3413     05AF                     u6680:
  3414     05AF                     l5282:
  3415                           
  3416                           ;main.c: 154:         hor = SSPBUF;
  3417     05AF  0811               	movf	17,w	;volatile
  3418     05B0  0022               	movlb	2	; select bank2
  3419     05B1  00B1               	movwf	_hor^(0+256)
  3420     05B2                     l5284:
  3421                           
  3422                           ;main.c: 155:         SSPCON2bits.ACKDT = 1;
  3423     05B2  0024               	movlb	4	; select bank4
  3424     05B3  1696               	bsf	22,5	;volatile
  3425     05B4                     l5286:
  3426                           
  3427                           ;main.c: 156:         SSPCON2bits.ACKEN = 1;
  3428     05B4  1616               	bsf	22,4	;volatile
  3429     05B5                     l280:	
  3430                           ;main.c: 157:         while(SSPCON2bits.ACKEN);
  3431                           
  3432     05B5  1A16               	btfsc	22,4	;volatile
  3433     05B6  2DB8               	goto	u6691
  3434     05B7  2DB9               	goto	u6690
  3435     05B8                     u6691:
  3436     05B8  2DB5               	goto	l280
  3437     05B9                     u6690:
  3438     05B9                     l282:
  3439                           
  3440                           ;main.c: 158:         SSPCON2bits.PEN = 1;
  3441     05B9  1516               	bsf	22,2	;volatile
  3442     05BA                     l283:	
  3443                           ;main.c: 159:         while(SSPCON2bits.PEN);
  3444                           
  3445     05BA  1916               	btfsc	22,2	;volatile
  3446     05BB  2DBD               	goto	u6701
  3447     05BC  2DBE               	goto	u6700
  3448     05BD                     u6701:
  3449     05BD  2DBA               	goto	l283
  3450     05BE                     u6700:
  3451     05BE                     l5288:
  3452                           
  3453                           ;main.c: 162:         ADC_StartConversion();
  3454     05BE  3187  27FC  3184   	fcall	_ADC_StartConversion
  3455     05C1                     l5290:	
  3456                           ;main.c: 163:         while (!ADC_IsConversionDone());
  3457                           
  3458     05C1  3199  2143  3184   	fcall	_ADC_IsConversionDone
  3459     05C4  3A00               	xorlw	0
  3460     05C5  1903               	skipnz
  3461     05C6  2DC8               	goto	u6711
  3462     05C7  2DC9               	goto	u6710
  3463     05C8                     u6711:
  3464     05C8  2DC1               	goto	l5290
  3465     05C9                     u6710:
  3466     05C9                     l5292:
  3467                           
  3468                           ;main.c: 164:         convertedValue = ADC_GetConversionResult();
  3469     05C9  3199  2164  3184   	fcall	_ADC_GetConversionResult
  3470     05CC  0020               	movlb	0	; select bank0
  3471     05CD  0821               	movf	?_ADC_GetConversionResult+1,w
  3472     05CE  0022               	movlb	2	; select bank2
  3473     05CF  00BF               	movwf	(_convertedValue+1)^(0+256)
  3474     05D0  0020               	movlb	0	; select bank0
  3475     05D1  0820               	movf	?_ADC_GetConversionResult,w
  3476     05D2  0022               	movlb	2	; select bank2
  3477     05D3  00BE               	movwf	_convertedValue^(0+256)
  3478     05D4                     l5294:
  3479                           
  3480                           ;main.c: 165:         temp = (float)(convertedValue*5*100)/1024;
  3481     05D4  3044               	movlw	68
  3482     05D5  0020               	movlb	0	; select bank0
  3483     05D6  00B7               	movwf	___fldiv@a+3
  3484     05D7  3080               	movlw	128
  3485     05D8  00B6               	movwf	___fldiv@a+2
  3486     05D9  3000               	movlw	0
  3487     05DA  00B5               	movwf	___fldiv@a+1
  3488     05DB  3000               	movlw	0
  3489     05DC  00B4               	movwf	___fldiv@a
  3490     05DD  30F4               	movlw	244
  3491     05DE  00A2               	movwf	___wmul@multiplicand
  3492     05DF  3001               	movlw	1
  3493     05E0  00A3               	movwf	___wmul@multiplicand+1
  3494     05E1  0022               	movlb	2	; select bank2
  3495     05E2  083F               	movf	(_convertedValue+1)^(0+256),w
  3496     05E3  0020               	movlb	0	; select bank0
  3497     05E4  00A1               	movwf	___wmul@multiplier+1
  3498     05E5  0022               	movlb	2	; select bank2
  3499     05E6  083E               	movf	_convertedValue^(0+256),w
  3500     05E7  0020               	movlb	0	; select bank0
  3501     05E8  00A0               	movwf	___wmul@multiplier
  3502     05E9  319A  22B4  3184   	fcall	___wmul
  3503     05EC  0020               	movlb	0	; select bank0
  3504     05ED  0820               	movf	?___wmul,w
  3505     05EE  0022               	movlb	2	; select bank2
  3506     05EF  00CD               	movwf	??_main^(0+256)
  3507     05F0  0020               	movlb	0	; select bank0
  3508     05F1  0821               	movf	?___wmul+1,w
  3509     05F2  0022               	movlb	2	; select bank2
  3510     05F3  00CE               	movwf	(??_main^(0+256)+1)
  3511     05F4  01CF               	clrf	(??_main^(0+256)+2)
  3512     05F5  01D0               	clrf	(??_main^(0+256)+3)
  3513     05F6  0850               	movf	(??_main+3)^(0+256),w
  3514     05F7  0020               	movlb	0	; select bank0
  3515     05F8  00A9               	movwf	___xxtofl@val+3
  3516     05F9  0022               	movlb	2	; select bank2
  3517     05FA  084F               	movf	(??_main+2)^(0+256),w
  3518     05FB  0020               	movlb	0	; select bank0
  3519     05FC  00A8               	movwf	___xxtofl@val+2
  3520     05FD  0022               	movlb	2	; select bank2
  3521     05FE  084E               	movf	(??_main+1)^(0+256),w
  3522     05FF  0020               	movlb	0	; select bank0
  3523     0600  00A7               	movwf	___xxtofl@val+1
  3524     0601  0022               	movlb	2	; select bank2
  3525     0602  084D               	movf	??_main^(0+256),w
  3526     0603  0020               	movlb	0	; select bank0
  3527     0604  00A6               	movwf	___xxtofl@val
  3528     0605  3000               	movlw	0
  3529     0606  3190  20B9  3184   	fcall	___xxtofl
  3530     0609  0020               	movlb	0	; select bank0
  3531     060A  0829               	movf	?___xxtofl+3,w
  3532     060B  00BB               	movwf	___fldiv@b+3
  3533     060C  0828               	movf	?___xxtofl+2,w
  3534     060D  00BA               	movwf	___fldiv@b+2
  3535     060E  0827               	movf	?___xxtofl+1,w
  3536     060F  00B9               	movwf	___fldiv@b+1
  3537     0610  0826               	movf	?___xxtofl,w
  3538     0611  00B8               	movwf	___fldiv@b
  3539     0612  3194  244E  3184   	fcall	___fldiv
  3540     0615  0020               	movlb	0	; select bank0
  3541     0616  0837               	movf	?___fldiv+3,w
  3542     0617  0022               	movlb	2	; select bank2
  3543     0618  00AB               	movwf	(_temp+3)^(0+256)
  3544     0619  0020               	movlb	0	; select bank0
  3545     061A  0836               	movf	?___fldiv+2,w
  3546     061B  0022               	movlb	2	; select bank2
  3547     061C  00AA               	movwf	(_temp+2)^(0+256)
  3548     061D  0020               	movlb	0	; select bank0
  3549     061E  0835               	movf	?___fldiv+1,w
  3550     061F  0022               	movlb	2	; select bank2
  3551     0620  00A9               	movwf	(_temp+1)^(0+256)
  3552     0621  0020               	movlb	0	; select bank0
  3553     0622  0834               	movf	?___fldiv,w
  3554     0623  0022               	movlb	2	; select bank2
  3555     0624  00A8               	movwf	_temp^(0+256)
  3556     0625                     l5296:
  3557                           
  3558                           ;main.c: 168:         sprintf(buffer,"%d%d:%d%d:%d%d",hor>>4,hor&=0x0F,min>>4,min&=0x0F,
      +                          seg>>4,seg&=0x0F);
  3559     0625  303F               	movlw	low (STR_2| (0+32768))
  3560     0626  0021               	movlb	1	; select bank1
  3561     0627  00DE               	movwf	sprintf@fmt^(0+128)
  3562     0628  3098               	movlw	high (STR_2| (0+32768))
  3563     0629  00DF               	movwf	(sprintf@fmt^(0+128)+1)
  3564     062A  0022               	movlb	2	; select bank2
  3565     062B  0831               	movf	_hor^(0+256),w
  3566     062C  00CD               	movwf	??_main^(0+256)
  3567     062D  3004               	movlw	4
  3568     062E                     u6725:
  3569     062E  36CD               	lsrf	??_main^(0+256),f
  3570     062F  0B89               	decfsz	9,f
  3571     0630  2E2E               	goto	u6725
  3572     0631  084D               	movf	??_main^(0+256),w
  3573     0632  00CE               	movwf	(??_main+1)^(0+256)
  3574     0633  01CF               	clrf	((??_main+1)^(0+256)+1)
  3575     0634  084E               	movf	(??_main+1)^(0+256),w
  3576     0635  0021               	movlb	1	; select bank1
  3577     0636  00E0               	movwf	(?_sprintf^(0+128)+2)
  3578     0637  0022               	movlb	2	; select bank2
  3579     0638  084F               	movf	(??_main+2)^(0+256),w
  3580     0639  0021               	movlb	1	; select bank1
  3581     063A  00E1               	movwf	((?_sprintf+1)^(0+128)+2)
  3582     063B  300F               	movlw	15
  3583     063C  0022               	movlb	2	; select bank2
  3584     063D  00D0               	movwf	(??_main+3)^(0+256)
  3585     063E  0850               	movf	(??_main+3)^(0+256),w
  3586     063F  05B1               	andwf	_hor^(0+256),f
  3587     0640  0831               	movf	_hor^(0+256),w
  3588     0641  00D1               	movwf	(??_main+4)^(0+256)
  3589     0642  01D2               	clrf	((??_main+4)^(0+256)+1)
  3590     0643  0851               	movf	(??_main+4)^(0+256),w
  3591     0644  0021               	movlb	1	; select bank1
  3592     0645  00E2               	movwf	(?_sprintf^(0+128)+4)
  3593     0646  0022               	movlb	2	; select bank2
  3594     0647  0852               	movf	(??_main+5)^(0+256),w
  3595     0648  0021               	movlb	1	; select bank1
  3596     0649  00E3               	movwf	((?_sprintf+1)^(0+128)+4)
  3597     064A  0022               	movlb	2	; select bank2
  3598     064B  0832               	movf	_min^(0+256),w
  3599     064C  00D3               	movwf	(??_main+6)^(0+256)
  3600     064D  3004               	movlw	4
  3601     064E                     u6735:
  3602     064E  36D3               	lsrf	(??_main+6)^(0+256),f
  3603     064F  0B89               	decfsz	9,f
  3604     0650  2E4E               	goto	u6735
  3605     0651  0853               	movf	(??_main+6)^(0+256),w
  3606     0652  00D4               	movwf	(??_main+7)^(0+256)
  3607     0653  01D5               	clrf	((??_main+7)^(0+256)+1)
  3608     0654  0854               	movf	(??_main+7)^(0+256),w
  3609     0655  0021               	movlb	1	; select bank1
  3610     0656  00E4               	movwf	(?_sprintf^(0+128)+6)
  3611     0657  0022               	movlb	2	; select bank2
  3612     0658  0855               	movf	(??_main+8)^(0+256),w
  3613     0659  0021               	movlb	1	; select bank1
  3614     065A  00E5               	movwf	((?_sprintf+1)^(0+128)+6)
  3615     065B  300F               	movlw	15
  3616     065C  0022               	movlb	2	; select bank2
  3617     065D  00D6               	movwf	(??_main+9)^(0+256)
  3618     065E  0856               	movf	(??_main+9)^(0+256),w
  3619     065F  05B2               	andwf	_min^(0+256),f
  3620     0660  0832               	movf	_min^(0+256),w
  3621     0661  00D7               	movwf	(??_main+10)^(0+256)
  3622     0662  01D8               	clrf	((??_main+10)^(0+256)+1)
  3623     0663  0857               	movf	(??_main+10)^(0+256),w
  3624     0664  0021               	movlb	1	; select bank1
  3625     0665  00E6               	movwf	(?_sprintf^(0+128)+8)
  3626     0666  0022               	movlb	2	; select bank2
  3627     0667  0858               	movf	(??_main+11)^(0+256),w
  3628     0668  0021               	movlb	1	; select bank1
  3629     0669  00E7               	movwf	((?_sprintf+1)^(0+128)+8)
  3630     066A  086F               	movf	_seg^(0+128),w
  3631     066B  0022               	movlb	2	; select bank2
  3632     066C  00D9               	movwf	(??_main+12)^(0+256)
  3633     066D  3004               	movlw	4
  3634     066E                     u6745:
  3635     066E  36D9               	lsrf	(??_main+12)^(0+256),f
  3636     066F  0B89               	decfsz	9,f
  3637     0670  2E6E               	goto	u6745
  3638     0671  0859               	movf	(??_main+12)^(0+256),w
  3639     0672  00DA               	movwf	(??_main+13)^(0+256)
  3640     0673  01DB               	clrf	((??_main+13)^(0+256)+1)
  3641     0674  085A               	movf	(??_main+13)^(0+256),w
  3642     0675  0021               	movlb	1	; select bank1
  3643     0676  00E8               	movwf	(?_sprintf^(0+128)+10)
  3644     0677  0022               	movlb	2	; select bank2
  3645     0678  085B               	movf	(??_main+14)^(0+256),w
  3646     0679  0021               	movlb	1	; select bank1
  3647     067A  00E9               	movwf	((?_sprintf+1)^(0+128)+10)
  3648     067B  300F               	movlw	15
  3649     067C  0022               	movlb	2	; select bank2
  3650     067D  00DC               	movwf	(??_main+15)^(0+256)
  3651     067E  085C               	movf	(??_main+15)^(0+256),w
  3652     067F  0021               	movlb	1	; select bank1
  3653     0680  05EF               	andwf	_seg^(0+128),f
  3654     0681  086F               	movf	_seg^(0+128),w
  3655     0682  0022               	movlb	2	; select bank2
  3656     0683  00DD               	movwf	(??_main+16)^(0+256)
  3657     0684  01DE               	clrf	((??_main+16)^(0+256)+1)
  3658     0685  085D               	movf	(??_main+16)^(0+256),w
  3659     0686  0021               	movlb	1	; select bank1
  3660     0687  00EA               	movwf	(?_sprintf^(0+128)+12)
  3661     0688  0022               	movlb	2	; select bank2
  3662     0689  085E               	movf	(??_main+17)^(0+256),w
  3663     068A  0021               	movlb	1	; select bank1
  3664     068B  00EB               	movwf	((?_sprintf+1)^(0+128)+12)
  3665     068C  30A0               	movlw	(low (_buffer| (0+256)))& (0+255)
  3666     068D  319A  22F7  3184   	fcall	_sprintf
  3667     0690                     l5298:
  3668                           
  3669                           ;main.c: 169:         Lcd_Set_Cursor(2,1);
  3670     0690  0020               	movlb	0	; select bank0
  3671     0691  01A3               	clrf	Lcd_Set_Cursor@b
  3672     0692  0AA3               	incf	Lcd_Set_Cursor@b,f
  3673     0693  3002               	movlw	2
  3674     0694  319F  2707  3184   	fcall	_Lcd_Set_Cursor
  3675     0697                     l5300:
  3676                           
  3677                           ;main.c: 170:         Lcd_Write_String(buffer);
  3678     0697  30A0               	movlw	low _buffer
  3679     0698  0020               	movlb	0	; select bank0
  3680     0699  00A5               	movwf	Lcd_Write_String@a
  3681     069A  3001               	movlw	high _buffer
  3682     069B  00A6               	movwf	Lcd_Write_String@a+1
  3683     069C  319A  2255  3184   	fcall	_Lcd_Write_String
  3684     069F                     l5302:
  3685                           
  3686                           ;main.c: 173:         Lcd_Set_Cursor(2,10);
  3687     069F  300A               	movlw	10
  3688     06A0  0020               	movlb	0	; select bank0
  3689     06A1  00A3               	movwf	Lcd_Set_Cursor@b
  3690     06A2  3002               	movlw	2
  3691     06A3  319F  2707  3184   	fcall	_Lcd_Set_Cursor
  3692     06A6                     l5304:
  3693                           
  3694                           ;main.c: 174:         sprintf(buffer,"%0.2f\xDF",temp);
  3695     06A6  3092               	movlw	low (STR_3| (0+32768))
  3696     06A7  0021               	movlb	1	; select bank1
  3697     06A8  00DE               	movwf	sprintf@fmt^(0+128)
  3698     06A9  3098               	movlw	high (STR_3| (0+32768))
  3699     06AA  00DF               	movwf	(sprintf@fmt^(0+128)+1)
  3700     06AB  0022               	movlb	2	; select bank2
  3701     06AC  082B               	movf	(_temp+3)^(0+256),w
  3702     06AD  0021               	movlb	1	; select bank1
  3703     06AE  00E3               	movwf	((?_sprintf+3)^(0+128)+2)
  3704     06AF  0022               	movlb	2	; select bank2
  3705     06B0  082A               	movf	(_temp+2)^(0+256),w
  3706     06B1  0021               	movlb	1	; select bank1
  3707     06B2  00E2               	movwf	((?_sprintf+2)^(0+128)+2)
  3708     06B3  0022               	movlb	2	; select bank2
  3709     06B4  0829               	movf	(_temp+1)^(0+256),w
  3710     06B5  0021               	movlb	1	; select bank1
  3711     06B6  00E1               	movwf	((?_sprintf+1)^(0+128)+2)
  3712     06B7  0022               	movlb	2	; select bank2
  3713     06B8  0828               	movf	_temp^(0+256),w
  3714     06B9  0021               	movlb	1	; select bank1
  3715     06BA  00E0               	movwf	(?_sprintf^(0+128)+2)
  3716     06BB  30A0               	movlw	(low (_buffer| (0+256)))& (0+255)
  3717     06BC  319A  22F7  3184   	fcall	_sprintf
  3718     06BF                     l5306:
  3719                           
  3720                           ;main.c: 175:         Lcd_Write_String(buffer);
  3721     06BF  30A0               	movlw	low _buffer
  3722     06C0  0020               	movlb	0	; select bank0
  3723     06C1  00A5               	movwf	Lcd_Write_String@a
  3724     06C2  3001               	movlw	high _buffer
  3725     06C3  00A6               	movwf	Lcd_Write_String@a+1
  3726     06C4  319A  2255  3184   	fcall	_Lcd_Write_String
  3727     06C7                     l5308:
  3728                           
  3729                           ;main.c: 176:         Lcd_Set_Cursor(2,16);
  3730     06C7  3010               	movlw	16
  3731     06C8  0020               	movlb	0	; select bank0
  3732     06C9  00A3               	movwf	Lcd_Set_Cursor@b
  3733     06CA  3002               	movlw	2
  3734     06CB  319F  2707  3184   	fcall	_Lcd_Set_Cursor
  3735     06CE                     l5310:
  3736                           
  3737                           ;main.c: 177:         Lcd_Write_String("C");
  3738     06CE  30A8               	movlw	low (STR_4| (0+32768))
  3739     06CF  0020               	movlb	0	; select bank0
  3740     06D0  00A5               	movwf	Lcd_Write_String@a
  3741     06D1  3098               	movlw	high (STR_4| (0+32768))
  3742     06D2  00A6               	movwf	Lcd_Write_String@a+1
  3743     06D3  319A  2255  3184   	fcall	_Lcd_Write_String
  3744     06D6                     l5312:
  3745                           
  3746                           ;main.c: 179:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  3747     06D6  3006               	movlw	6
  3748     06D7  0022               	movlb	2	; select bank2
  3749     06D8  00CE               	movwf	(??_main^(0+256)+1)
  3750     06D9  3013               	movlw	19
  3751     06DA  00CD               	movwf	??_main^(0+256)
  3752     06DB  30AD               	movlw	173
  3753     06DC                     u6887:
  3754     06DC  0B89               	decfsz	9,f
  3755     06DD  2EDC               	goto	u6887
  3756     06DE  0BCD               	decfsz	??_main^(0+256),f
  3757     06DF  2EDC               	goto	u6887
  3758     06E0  0BCE               	decfsz	(??_main^(0+256)+1),f
  3759     06E1  2EDC               	goto	u6887
  3760     06E2  3200               	nop2
  3761     06E3  2D64               	goto	l5262
  3762     06E4  3182  2A69         	ljmp	start
  3763     06E6                     __end_of_main:
  3764                           
  3765                           	psect	text1
  3766     1AF7                     __ptext1:	
  3767 ;; *************** function _sprintf *****************
  3768 ;; Defined at:
  3769 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  s               1    wreg     PTR unsigned char 
  3772 ;;		 -> buffer(20), 
  3773 ;;  fmt             2   62[BANK1 ] PTR const unsigned char 
  3774 ;;		 -> STR_3(7), STR_2(15), 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  s               1    0[BANK2 ] PTR unsigned char 
  3777 ;;		 -> buffer(20), 
  3778 ;;  f              11    2[BANK2 ] struct _IO_FILE
  3779 ;;  ret             2    0        int 
  3780 ;;  ap              1    1[BANK2 ] PTR void [1]
  3781 ;;		 -> ?_sprintf(2), 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  2   62[BANK1 ] int 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3791 ;;      Params:         0       0      14       0       0       0       0       0
  3792 ;;      Locals:         0       0       0      13       0       0       0       0
  3793 ;;      Temps:          0       0       1       0       0       0       0       0
  3794 ;;      Totals:         0       0      15      13       0       0       0       0
  3795 ;;Total ram usage:       28 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 11
  3798 ;; This function calls:
  3799 ;;		_vfprintf
  3800 ;; This function is called by:
  3801 ;;		_main
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805     1AF7                     _sprintf:	
  3806                           ;psect for function _sprintf
  3807                           
  3808                           
  3809                           ;incstack = 0
  3810                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3811                           ;sprintf@s stored from wreg
  3812     1AF7  0022               	movlb	2	; select bank2
  3813     1AF8  00C0               	movwf	sprintf@s^(0+256)
  3814     1AF9                     l4948:
  3815     1AF9  30E0               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3816     1AFA  00C1               	movwf	sprintf@ap^(0+256)
  3817     1AFB  0840               	movf	sprintf@s^(0+256),w
  3818     1AFC  00C2               	movwf	sprintf@f^(0+256)
  3819     1AFD                     l4950:
  3820     1AFD  01C4               	clrf	(sprintf@f^(0+256)+2)
  3821     1AFE  01C5               	clrf	((sprintf@f+1)^(0+256)+2)
  3822     1AFF                     l4952:
  3823     1AFF  01CB               	clrf	(sprintf@f^(0+256)+9)
  3824     1B00  01CC               	clrf	((sprintf@f+1)^(0+256)+9)
  3825     1B01                     l4954:
  3826     1B01  0021               	movlb	1	; select bank1
  3827     1B02  085F               	movf	(sprintf@fmt+1)^(0+128),w
  3828     1B03  0020               	movlb	0	; select bank0
  3829     1B04  00EE               	movwf	vfprintf@fmt+1
  3830     1B05  0021               	movlb	1	; select bank1
  3831     1B06  085E               	movf	sprintf@fmt^(0+128),w
  3832     1B07  0020               	movlb	0	; select bank0
  3833     1B08  00ED               	movwf	vfprintf@fmt
  3834     1B09  3041               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  3835     1B0A  00EF               	movwf	vfprintf@ap
  3836     1B0B  3042               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  3837     1B0C  319A  22D4  319A   	fcall	_vfprintf
  3838     1B0F                     l4956:
  3839     1B0F  0022               	movlb	2	; select bank2
  3840     1B10  0844               	movf	(sprintf@f^(0+256)+2),w
  3841     1B11  0740               	addwf	sprintf@s^(0+256),w
  3842     1B12  0021               	movlb	1	; select bank1
  3843     1B13  00EC               	movwf	??_sprintf^(0+128)
  3844     1B14  086C               	movf	??_sprintf^(0+128),w
  3845     1B15  0086               	movwf	6
  3846     1B16  3001               	movlw	1	; select bank2/3
  3847     1B17  0087               	movwf	7
  3848     1B18  0181               	clrf	1
  3849     1B19                     l1102:
  3850     1B19  0008               	return
  3851     1B1A                     __end_of_sprintf:
  3852                           
  3853                           	psect	text2
  3854     1AD4                     __ptext2:	
  3855 ;; *************** function _vfprintf *****************
  3856 ;; Defined at:
  3857 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  fp              1    wreg     PTR struct _IO_FILE
  3860 ;;		 -> sprintf@f(11), 
  3861 ;;  fmt             2   77[BANK0 ] PTR const unsigned char 
  3862 ;;		 -> STR_3(7), STR_2(15), 
  3863 ;;  ap              1   79[BANK0 ] PTR PTR void 
  3864 ;;		 -> sprintf@ap(1), 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  fp              1   59[BANK1 ] PTR struct _IO_FILE
  3867 ;;		 -> sprintf@f(11), 
  3868 ;;  cfmt            2   60[BANK1 ] PTR unsigned char 
  3869 ;;		 -> STR_3(7), STR_2(15), 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  2   77[BANK0 ] int 
  3872 ;; Registers used:
  3873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3879 ;;      Params:         0       3       0       0       0       0       0       0
  3880 ;;      Locals:         0       0       3       0       0       0       0       0
  3881 ;;      Temps:          0       0       1       0       0       0       0       0
  3882 ;;      Totals:         0       3       4       0       0       0       0       0
  3883 ;;Total ram usage:        7 bytes
  3884 ;; Hardware stack levels used: 1
  3885 ;; Hardware stack levels required when called: 10
  3886 ;; This function calls:
  3887 ;;		_vfpfcnvrt
  3888 ;; This function is called by:
  3889 ;;		_sprintf
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893     1AD4                     _vfprintf:	
  3894                           ;psect for function _vfprintf
  3895                           
  3896                           
  3897                           ;incstack = 0
  3898                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3899                           ;vfprintf@fp stored from wreg
  3900     1AD4  0021               	movlb	1	; select bank1
  3901     1AD5  00DB               	movwf	vfprintf@fp^(0+128)
  3902     1AD6                     l4832:
  3903                           
  3904                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3905     1AD6  0020               	movlb	0	; select bank0
  3906     1AD7  086E               	movf	vfprintf@fmt+1,w
  3907     1AD8  0021               	movlb	1	; select bank1
  3908     1AD9  00DD               	movwf	(vfprintf@cfmt+1)^(0+128)
  3909     1ADA  0020               	movlb	0	; select bank0
  3910     1ADB  086D               	movf	vfprintf@fmt,w
  3911     1ADC  0021               	movlb	1	; select bank1
  3912     1ADD  00DC               	movwf	vfprintf@cfmt^(0+128)
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3915     1ADE  2AE9               	goto	l4836
  3916     1ADF                     l4834:
  3917                           
  3918                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3919     1ADF  30DC               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3920     1AE0  0020               	movlb	0	; select bank0
  3921     1AE1  00EB               	movwf	vfpfcnvrt@fmt
  3922     1AE2  086F               	movf	vfprintf@ap,w
  3923     1AE3  00EC               	movwf	vfpfcnvrt@ap
  3924     1AE4  0021               	movlb	1	; select bank1
  3925     1AE5  085B               	movf	vfprintf@fp^(0+128),w
  3926     1AE6  3192  22A8  319A   	fcall	_vfpfcnvrt
  3927     1AE9                     l4836:
  3928                           
  3929                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3930     1AE9  0021               	movlb	1	; select bank1
  3931     1AEA  085C               	movf	vfprintf@cfmt^(0+128),w
  3932     1AEB  0084               	movwf	4
  3933     1AEC  085D               	movf	(vfprintf@cfmt+1)^(0+128),w
  3934     1AED  0085               	movwf	5
  3935     1AEE  0012               	moviw fsr0++
  3936     1AEF  1D03               	btfss	3,2
  3937     1AF0  2AF2               	goto	u5821
  3938     1AF1  2AF3               	goto	u5820
  3939     1AF2                     u5821:
  3940     1AF2  2ADF               	goto	l4834
  3941     1AF3                     u5820:
  3942     1AF3                     l4838:
  3943                           
  3944                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3945     1AF3  0020               	movlb	0	; select bank0
  3946     1AF4  01ED               	clrf	?_vfprintf
  3947     1AF5  01EE               	clrf	?_vfprintf+1
  3948     1AF6                     l1259:
  3949     1AF6  0008               	return
  3950     1AF7                     __end_of_vfprintf:
  3951                           
  3952                           	psect	text3
  3953     12A8                     __ptext3:	
  3954 ;; *************** function _vfpfcnvrt *****************
  3955 ;; Defined at:
  3956 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  fp              1    wreg     PTR struct _IO_FILE
  3959 ;;		 -> sprintf@f(11), 
  3960 ;;  fmt             1   75[BANK0 ] PTR PTR unsigned char 
  3961 ;;		 -> vfprintf@cfmt(2), 
  3962 ;;  ap              1   76[BANK0 ] PTR PTR void 
  3963 ;;		 -> sprintf@ap(1), 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  fp              1   55[BANK1 ] PTR struct _IO_FILE
  3966 ;;		 -> sprintf@f(11), 
  3967 ;;  convarg         4   50[BANK1 ] struct .
  3968 ;;  cp              2   56[BANK1 ] PTR unsigned char 
  3969 ;;		 -> STR_3(7), STR_2(15), 
  3970 ;;  c               1   54[BANK1 ] unsigned char 
  3971 ;;  done            1   49[BANK1 ] _Bool 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3981 ;;      Params:         0       2       0       0       0       0       0       0
  3982 ;;      Locals:         0       0       9       0       0       0       0       0
  3983 ;;      Temps:          0       0       4       0       0       0       0       0
  3984 ;;      Totals:         0       2      13       0       0       0       0       0
  3985 ;;Total ram usage:       15 bytes
  3986 ;; Hardware stack levels used: 1
  3987 ;; Hardware stack levels required when called: 9
  3988 ;; This function calls:
  3989 ;;		_dtoa
  3990 ;;		_efgtoa
  3991 ;;		_fputc
  3992 ;;		_read_prec_or_width
  3993 ;; This function is called by:
  3994 ;;		_vfprintf
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998     12A8                     _vfpfcnvrt:	
  3999                           ;psect for function _vfpfcnvrt
  4000                           
  4001                           
  4002                           ;incstack = 0
  4003                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4004                           ;vfpfcnvrt@fp stored from wreg
  4005     12A8  0021               	movlb	1	; select bank1
  4006     12A9  00D7               	movwf	vfpfcnvrt@fp^(0+128)
  4007     12AA                     l4680:
  4008                           
  4009                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4010     12AA  0020               	movlb	0	; select bank0
  4011     12AB  086B               	movf	vfpfcnvrt@fmt,w
  4012     12AC  0086               	movwf	6
  4013     12AD  0187               	clrf	7
  4014     12AE  3F40               	moviw [0]fsr1
  4015     12AF  0021               	movlb	1	; select bank1
  4016     12B0  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4017     12B1  3F41               	moviw [1]fsr1
  4018     12B2  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4019     12B3  084D               	movf	??_vfpfcnvrt^(0+128),w
  4020     12B4  0084               	movwf	4
  4021     12B5  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4022     12B6  0085               	movwf	5
  4023     12B7  0012               	moviw fsr0++
  4024     12B8  3A25               	xorlw	37
  4025     12B9  1D03               	btfss	3,2
  4026     12BA  2ABC               	goto	u5701
  4027     12BB  2ABD               	goto	u5700
  4028     12BC                     u5701:
  4029     12BC  2C2E               	goto	l4756
  4030     12BD                     u5700:
  4031     12BD                     l4682:
  4032                           
  4033                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4034     12BD  0020               	movlb	0	; select bank0
  4035     12BE  086B               	movf	vfpfcnvrt@fmt,w
  4036     12BF  0086               	movwf	6
  4037     12C0  0187               	clrf	7
  4038     12C1  3001               	movlw	1
  4039     12C2  0781               	addwf	1,f
  4040     12C3  3141               	addfsr 1,1
  4041     12C4  1803               	skipnc
  4042     12C5  0A81               	incf	1,f
  4043     12C6                     l4684:
  4044                           
  4045                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4046     12C6  0022               	movlb	2	; select bank2
  4047     12C7  01AC               	clrf	_width^(0+256)
  4048     12C8  01AD               	clrf	(_width+1)^(0+256)
  4049     12C9  1003               	clrc
  4050     12CA  3000               	movlw	0
  4051     12CB  1803               	btfsc	3,0
  4052     12CC  3001               	movlw	1
  4053     12CD  00B0               	movwf	_flags^(0+256)
  4054     12CE                     l4686:
  4055                           
  4056                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4057     12CE  30FF               	movlw	255
  4058     12CF  0021               	movlb	1	; select bank1
  4059     12D0  00ED               	movwf	_prec^(0+128)
  4060     12D1  30FF               	movlw	255
  4061     12D2  00EE               	movwf	(_prec^(0+128)+1)
  4062     12D3                     l4688:
  4063                           
  4064                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  4065     12D3  01D1               	clrf	vfpfcnvrt@done^(0+128)
  4066                           
  4067                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  4068     12D4  2AFE               	goto	l4696
  4069     12D5                     l1229:	
  4070                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  4071                           
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  4074     12D5  0022               	movlb	2	; select bank2
  4075     12D6  14B0               	bsf	_flags^(0+256),1
  4076     12D7                     l4690:
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  4079     12D7  0020               	movlb	0	; select bank0
  4080     12D8  086B               	movf	vfpfcnvrt@fmt,w
  4081     12D9  0086               	movwf	6
  4082     12DA  0187               	clrf	7
  4083     12DB  3001               	movlw	1
  4084     12DC  0781               	addwf	1,f
  4085     12DD  3141               	addfsr 1,1
  4086     12DE  1803               	skipnc
  4087     12DF  0A81               	incf	1,f
  4088                           
  4089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  4090     12E0  2AFE               	goto	l4696
  4091     12E1                     l1231:	
  4092                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  4093                           
  4094                           
  4095                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  4096     12E1  01D1               	clrf	vfpfcnvrt@done^(0+128)
  4097     12E2  0AD1               	incf	vfpfcnvrt@done^(0+128),f
  4098                           
  4099                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  4100     12E3  2AFE               	goto	l4696
  4101     12E4                     l4694:
  4102     12E4  0020               	movlb	0	; select bank0
  4103     12E5  086B               	movf	vfpfcnvrt@fmt,w
  4104     12E6  0086               	movwf	6
  4105     12E7  0187               	clrf	7
  4106     12E8  3F40               	moviw [0]fsr1
  4107     12E9  0021               	movlb	1	; select bank1
  4108     12EA  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4109     12EB  3F41               	moviw [1]fsr1
  4110     12EC  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4111     12ED  084D               	movf	??_vfpfcnvrt^(0+128),w
  4112     12EE  0084               	movwf	4
  4113     12EF  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4114     12F0  0085               	movwf	5
  4115     12F1  0800               	movf	0,w	;code access
  4116     12F2  00CF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4117     12F3  01D0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  4118                           
  4119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4120                           ; Switch size 1, requested type "simple"
  4121                           ; Number of cases is 1, Range of values is 0 to 0
  4122                           ; switch strategies available:
  4123                           ; Name         Instructions Cycles
  4124                           ; simple_byte            4     3 (average)
  4125                           ; direct_byte            8     6 (fixed)
  4126                           ; jumptable            260     6 (fixed)
  4127                           ;	Chosen strategy is simple_byte
  4128     12F4  0850               	movf	(??_vfpfcnvrt+3)^(0+128),w
  4129     12F5  3A00               	xorlw	0	; case 0
  4130     12F6  1903               	skipnz
  4131     12F7  2AF9               	goto	l5746
  4132     12F8  2AE1               	goto	l1231
  4133     12F9                     l5746:
  4134                           
  4135                           ; Switch size 1, requested type "simple"
  4136                           ; Number of cases is 1, Range of values is 48 to 48
  4137                           ; switch strategies available:
  4138                           ; Name         Instructions Cycles
  4139                           ; simple_byte            4     3 (average)
  4140                           ; direct_byte           11     9 (fixed)
  4141                           ; jumptable            263     9 (fixed)
  4142                           ;	Chosen strategy is simple_byte
  4143     12F9  084F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  4144     12FA  3A30               	xorlw	48	; case 48
  4145     12FB  1903               	skipnz
  4146     12FC  2AD5               	goto	l1229
  4147     12FD  2AE1               	goto	l1231
  4148     12FE                     l4696:
  4149                           
  4150                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  4151     12FE  0021               	movlb	1	; select bank1
  4152     12FF  0851               	movf	vfpfcnvrt@done^(0+128),w
  4153     1300  1903               	btfsc	3,2
  4154     1301  2B03               	goto	u5711
  4155     1302  2B04               	goto	u5710
  4156     1303                     u5711:
  4157     1303  2AE4               	goto	l4694
  4158     1304                     u5710:
  4159     1304                     l4698:
  4160                           
  4161                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  4162     1304  0020               	movlb	0	; select bank0
  4163     1305  086B               	movf	vfpfcnvrt@fmt,w
  4164     1306  0086               	movwf	6
  4165     1307  0187               	clrf	7
  4166     1308  3F40               	moviw [0]fsr1
  4167     1309  0021               	movlb	1	; select bank1
  4168     130A  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4169     130B  3F41               	moviw [1]fsr1
  4170     130C  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4171     130D  084D               	movf	??_vfpfcnvrt^(0+128),w
  4172     130E  0084               	movwf	4
  4173     130F  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4174     1310  0085               	movwf	5
  4175     1311  0012               	moviw fsr0++
  4176     1312  3A2E               	xorlw	46
  4177     1313  1D03               	btfss	3,2
  4178     1314  2B16               	goto	u5721
  4179     1315  2B17               	goto	u5720
  4180     1316                     u5721:
  4181     1316  2B2E               	goto	l4704
  4182     1317                     u5720:
  4183     1317                     l4700:
  4184                           
  4185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  4186     1317  0020               	movlb	0	; select bank0
  4187     1318  086B               	movf	vfpfcnvrt@fmt,w
  4188     1319  0086               	movwf	6
  4189     131A  0187               	clrf	7
  4190     131B  3001               	movlw	1
  4191     131C  0781               	addwf	1,f
  4192     131D  3141               	addfsr 1,1
  4193     131E  1803               	skipnc
  4194     131F  0A81               	incf	1,f
  4195     1320                     l4702:
  4196                           
  4197                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  4198     1320  086C               	movf	vfpfcnvrt@ap,w
  4199     1321  00A6               	movwf	read_prec_or_width@ap
  4200     1322  086B               	movf	vfpfcnvrt@fmt,w
  4201     1323  319D  25C0  3192   	fcall	_read_prec_or_width
  4202     1326  0020               	movlb	0	; select bank0
  4203     1327  0827               	movf	?_read_prec_or_width+1,w
  4204     1328  0021               	movlb	1	; select bank1
  4205     1329  00EE               	movwf	(_prec+1)^(0+128)
  4206     132A  0020               	movlb	0	; select bank0
  4207     132B  0826               	movf	?_read_prec_or_width,w
  4208     132C  0021               	movlb	1	; select bank1
  4209     132D  00ED               	movwf	_prec^(0+128)
  4210     132E                     l4704:
  4211                           
  4212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4213     132E  0020               	movlb	0	; select bank0
  4214     132F  086B               	movf	vfpfcnvrt@fmt,w
  4215     1330  0086               	movwf	6
  4216     1331  0187               	clrf	7
  4217     1332  3F40               	moviw [0]fsr1
  4218     1333  0021               	movlb	1	; select bank1
  4219     1334  00D8               	movwf	vfpfcnvrt@cp^(0+128)
  4220     1335  3F41               	moviw [1]fsr1
  4221     1336  00D9               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4222     1337                     l4706:
  4223                           
  4224                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4225     1337  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4226     1338  0084               	movwf	4
  4227     1339  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4228     133A  0085               	movwf	5
  4229     133B  0012               	moviw fsr0++
  4230     133C  3A64               	xorlw	100
  4231     133D  1903               	btfsc	3,2
  4232     133E  2B40               	goto	u5731
  4233     133F  2B41               	goto	u5730
  4234     1340                     u5731:
  4235     1340  2B4B               	goto	l4710
  4236     1341                     u5730:
  4237     1341                     l4708:
  4238     1341  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4239     1342  0084               	movwf	4
  4240     1343  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4241     1344  0085               	movwf	5
  4242     1345  0012               	moviw fsr0++
  4243     1346  3A69               	xorlw	105
  4244     1347  1D03               	btfss	3,2
  4245     1348  2B4A               	goto	u5741
  4246     1349  2B4B               	goto	u5740
  4247     134A                     u5741:
  4248     134A  2B76               	goto	l4718
  4249     134B                     u5740:
  4250     134B                     l4710:
  4251                           
  4252                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4253     134B  0020               	movlb	0	; select bank0
  4254     134C  086C               	movf	vfpfcnvrt@ap,w
  4255     134D  0086               	movwf	6
  4256     134E  3001               	movlw	1	; select bank2/3
  4257     134F  0087               	movwf	7
  4258     1350  0801               	movf	1,w
  4259     1351  0084               	movwf	4
  4260     1352  0185               	clrf	5
  4261     1353  3002               	movlw	2
  4262     1354  0781               	addwf	1,f
  4263     1355  3F00               	moviw [0]fsr0
  4264     1356  0021               	movlb	1	; select bank1
  4265     1357  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
  4266     1358  3F01               	moviw [1]fsr0
  4267     1359  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4268     135A                     l4712:
  4269                           
  4270                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4271     135A  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4272     135B  3E01               	addlw	1
  4273     135C  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4274     135D  3000               	movlw	0
  4275     135E  3D59               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4276     135F  00CE               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4277     1360  0020               	movlb	0	; select bank0
  4278     1361  086B               	movf	vfpfcnvrt@fmt,w
  4279     1362  0086               	movwf	6
  4280     1363  0187               	clrf	7
  4281     1364  0021               	movlb	1	; select bank1
  4282     1365  084D               	movf	??_vfpfcnvrt^(0+128),w
  4283     1366  3FC0               	movwi [0]fsr1
  4284     1367  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4285     1368  3FC1               	movwi [1]fsr1
  4286     1369                     l4714:
  4287                           
  4288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  4289     1369  0853               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4290     136A  0020               	movlb	0	; select bank0
  4291     136B  00B7               	movwf	dtoa@d+1
  4292     136C  0021               	movlb	1	; select bank1
  4293     136D  0852               	movf	vfpfcnvrt@convarg^(0+128),w
  4294     136E  0020               	movlb	0	; select bank0
  4295     136F  00B6               	movwf	dtoa@d
  4296     1370  0021               	movlb	1	; select bank1
  4297     1371  0857               	movf	vfpfcnvrt@fp^(0+128),w
  4298     1372  3188  2017  3192   	fcall	_dtoa
  4299     1375  2C4D               	goto	l1237
  4300     1376                     l4718:
  4301                           
  4302                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  4303     1376  0020               	movlb	0	; select bank0
  4304     1377  086B               	movf	vfpfcnvrt@fmt,w
  4305     1378  0086               	movwf	6
  4306     1379  0187               	clrf	7
  4307     137A  3F40               	moviw [0]fsr1
  4308     137B  0021               	movlb	1	; select bank1
  4309     137C  00D8               	movwf	vfpfcnvrt@cp^(0+128)
  4310     137D  3F41               	moviw [1]fsr1
  4311     137E  00D9               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4312     137F                     l4720:
  4313                           
  4314                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  4315     137F  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4316     1380  0084               	movwf	4
  4317     1381  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4318     1382  0085               	movwf	5
  4319     1383  0800               	movf	0,w	;code access
  4320     1384  00D6               	movwf	vfpfcnvrt@c^(0+128)
  4321                           
  4322                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  4323     1385  2B90               	goto	l4730
  4324     1386                     l4722:
  4325                           
  4326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  4327     1386  3001               	movlw	1
  4328     1387  07D8               	addwf	vfpfcnvrt@cp^(0+128),f
  4329     1388  3000               	movlw	0
  4330     1389  3DD9               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
  4331                           
  4332                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  4333     138A  2BA3               	goto	l4732
  4334     138B                     l4724:
  4335                           
  4336                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  4337     138B  306C               	movlw	108
  4338     138C  00D6               	movwf	vfpfcnvrt@c^(0+128)
  4339                           
  4340                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  4341     138D  2BA3               	goto	l4732
  4342     138E                     l4726:
  4343                           
  4344                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  4345     138E  01D6               	clrf	vfpfcnvrt@c^(0+128)
  4346                           
  4347                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  4348     138F  2BA3               	goto	l4732
  4349     1390                     l4730:
  4350     1390  0856               	movf	vfpfcnvrt@c^(0+128),w
  4351     1391  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4352     1392  01CE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4353                           
  4354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4355                           ; Switch size 1, requested type "simple"
  4356                           ; Number of cases is 1, Range of values is 0 to 0
  4357                           ; switch strategies available:
  4358                           ; Name         Instructions Cycles
  4359                           ; simple_byte            4     3 (average)
  4360                           ; direct_byte            8     6 (fixed)
  4361                           ; jumptable            260     6 (fixed)
  4362                           ;	Chosen strategy is simple_byte
  4363     1393  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4364     1394  3A00               	xorlw	0	; case 0
  4365     1395  1903               	skipnz
  4366     1396  2B98               	goto	l5748
  4367     1397  2B8E               	goto	l4726
  4368     1398                     l5748:
  4369                           
  4370                           ; Switch size 1, requested type "simple"
  4371                           ; Number of cases is 3, Range of values is 76 to 108
  4372                           ; switch strategies available:
  4373                           ; Name         Instructions Cycles
  4374                           ; simple_byte           10     6 (average)
  4375                           ; direct_byte           75     9 (fixed)
  4376                           ; jumptable            263     9 (fixed)
  4377                           ;	Chosen strategy is simple_byte
  4378     1398  084D               	movf	??_vfpfcnvrt^(0+128),w
  4379     1399  3A4C               	xorlw	76	; case 76
  4380     139A  1903               	skipnz
  4381     139B  2B86               	goto	l4722
  4382     139C  3A2A               	xorlw	42	; case 102
  4383     139D  1903               	skipnz
  4384     139E  2B8B               	goto	l4724
  4385     139F  3A0A               	xorlw	10	; case 108
  4386     13A0  1903               	skipnz
  4387     13A1  2B86               	goto	l4722
  4388     13A2  2B8E               	goto	l4726
  4389     13A3                     l4732:
  4390     13A3  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4391     13A4  0084               	movwf	4
  4392     13A5  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4393     13A6  0085               	movwf	5
  4394     13A7  0012               	moviw fsr0++
  4395     13A8  3A66               	xorlw	102
  4396     13A9  1D03               	btfss	3,2
  4397     13AA  2BAC               	goto	u5751
  4398     13AB  2BAD               	goto	u5750
  4399     13AC                     u5751:
  4400     13AC  2C24               	goto	l4752
  4401     13AD                     u5750:
  4402     13AD  2BD6               	goto	l4740
  4403     13AE                     l4734:
  4404                           
  4405                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4406     13AE  0020               	movlb	0	; select bank0
  4407     13AF  086C               	movf	vfpfcnvrt@ap,w
  4408     13B0  0086               	movwf	6
  4409     13B1  3001               	movlw	1	; select bank2/3
  4410     13B2  0087               	movwf	7
  4411     13B3  0801               	movf	1,w
  4412     13B4  0084               	movwf	4
  4413     13B5  0185               	clrf	5
  4414     13B6  3004               	movlw	4
  4415     13B7  0781               	addwf	1,f
  4416     13B8  3F00               	moviw [0]fsr0
  4417     13B9  0021               	movlb	1	; select bank1
  4418     13BA  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
  4419     13BB  3F01               	moviw [1]fsr0
  4420     13BC  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4421     13BD  3F02               	moviw [2]fsr0
  4422     13BE  00D4               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4423     13BF  3F03               	moviw [3]fsr0
  4424     13C0  00D5               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4425                           
  4426                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  4427     13C1  2BE6               	goto	l4742
  4428     13C2                     l4736:
  4429                           
  4430                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4431     13C2  0020               	movlb	0	; select bank0
  4432     13C3  086C               	movf	vfpfcnvrt@ap,w
  4433     13C4  0086               	movwf	6
  4434     13C5  3001               	movlw	1	; select bank2/3
  4435     13C6  0087               	movwf	7
  4436     13C7  0801               	movf	1,w
  4437     13C8  0084               	movwf	4
  4438     13C9  0185               	clrf	5
  4439     13CA  3004               	movlw	4
  4440     13CB  0781               	addwf	1,f
  4441     13CC  3F00               	moviw [0]fsr0
  4442     13CD  0021               	movlb	1	; select bank1
  4443     13CE  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
  4444     13CF  3F01               	moviw [1]fsr0
  4445     13D0  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4446     13D1  3F02               	moviw [2]fsr0
  4447     13D2  00D4               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4448     13D3  3F03               	moviw [3]fsr0
  4449     13D4  00D5               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4450                           
  4451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  4452     13D5  2BE6               	goto	l4742
  4453     13D6                     l4740:
  4454     13D6  0856               	movf	vfpfcnvrt@c^(0+128),w
  4455     13D7  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4456     13D8  01CE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4457                           
  4458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4459                           ; Switch size 1, requested type "simple"
  4460                           ; Number of cases is 1, Range of values is 0 to 0
  4461                           ; switch strategies available:
  4462                           ; Name         Instructions Cycles
  4463                           ; simple_byte            4     3 (average)
  4464                           ; direct_byte            8     6 (fixed)
  4465                           ; jumptable            260     6 (fixed)
  4466                           ;	Chosen strategy is simple_byte
  4467     13D9  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4468     13DA  3A00               	xorlw	0	; case 0
  4469     13DB  1903               	skipnz
  4470     13DC  2BDE               	goto	l5750
  4471     13DD  2BE6               	goto	l4742
  4472     13DE                     l5750:
  4473                           
  4474                           ; Switch size 1, requested type "simple"
  4475                           ; Number of cases is 2, Range of values is 76 to 108
  4476                           ; switch strategies available:
  4477                           ; Name         Instructions Cycles
  4478                           ; simple_byte            7     4 (average)
  4479                           ; direct_byte           75     9 (fixed)
  4480                           ; jumptable            263     9 (fixed)
  4481                           ;	Chosen strategy is simple_byte
  4482     13DE  084D               	movf	??_vfpfcnvrt^(0+128),w
  4483     13DF  3A4C               	xorlw	76	; case 76
  4484     13E0  1903               	skipnz
  4485     13E1  2BC2               	goto	l4736
  4486     13E2  3A20               	xorlw	32	; case 108
  4487     13E3  1903               	skipnz
  4488     13E4  2BAE               	goto	l4734
  4489     13E5  2BE6               	goto	l4742
  4490     13E6                     l4742:
  4491                           
  4492                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  4493     13E6  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4494     13E7  3E01               	addlw	1
  4495     13E8  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4496     13E9  3000               	movlw	0
  4497     13EA  3D59               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4498     13EB  00CE               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4499     13EC  0020               	movlb	0	; select bank0
  4500     13ED  086B               	movf	vfpfcnvrt@fmt,w
  4501     13EE  0086               	movwf	6
  4502     13EF  0187               	clrf	7
  4503     13F0  0021               	movlb	1	; select bank1
  4504     13F1  084D               	movf	??_vfpfcnvrt^(0+128),w
  4505     13F2  3FC0               	movwi [0]fsr1
  4506     13F3  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4507     13F4  3FC1               	movwi [1]fsr1
  4508                           
  4509                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  4510     13F5  2C13               	goto	l4750
  4511     13F6                     l4744:
  4512                           
  4513                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  4514     13F6  0855               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  4515     13F7  0020               	movlb	0	; select bank0
  4516     13F8  00E5               	movwf	efgtoa@f+3
  4517     13F9  0021               	movlb	1	; select bank1
  4518     13FA  0854               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  4519     13FB  0020               	movlb	0	; select bank0
  4520     13FC  00E4               	movwf	efgtoa@f+2
  4521     13FD  0021               	movlb	1	; select bank1
  4522     13FE  0853               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4523     13FF  0020               	movlb	0	; select bank0
  4524     1400  00E3               	movwf	efgtoa@f+1
  4525     1401  0021               	movlb	1	; select bank1
  4526     1402  0852               	movf	vfpfcnvrt@convarg^(0+128),w
  4527     1403  0020               	movlb	0	; select bank0
  4528     1404  00E2               	movwf	efgtoa@f
  4529     1405  0021               	movlb	1	; select bank1
  4530     1406  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4531     1407  0084               	movwf	4
  4532     1408  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4533     1409  0085               	movwf	5
  4534     140A  0800               	movf	0,w	;code access
  4535     140B  0020               	movlb	0	; select bank0
  4536     140C  00E6               	movwf	efgtoa@c
  4537     140D  0021               	movlb	1	; select bank1
  4538     140E  0857               	movf	vfpfcnvrt@fp^(0+128),w
  4539     140F  3188  20F0  3192   	fcall	_efgtoa
  4540     1412  2C4D               	goto	l1237
  4541     1413                     l4750:
  4542     1413  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4543     1414  0084               	movwf	4
  4544     1415  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4545     1416  0085               	movwf	5
  4546     1417  0800               	movf	0,w	;code access
  4547     1418  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4548     1419  01CE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4549                           
  4550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4551                           ; Switch size 1, requested type "simple"
  4552                           ; Number of cases is 1, Range of values is 0 to 0
  4553                           ; switch strategies available:
  4554                           ; Name         Instructions Cycles
  4555                           ; simple_byte            4     3 (average)
  4556                           ; direct_byte            8     6 (fixed)
  4557                           ; jumptable            260     6 (fixed)
  4558                           ;	Chosen strategy is simple_byte
  4559     141A  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4560     141B  3A00               	xorlw	0	; case 0
  4561     141C  1903               	skipnz
  4562     141D  2C1F               	goto	l5752
  4563     141E  2C24               	goto	l4752
  4564     141F                     l5752:
  4565                           
  4566                           ; Switch size 1, requested type "simple"
  4567                           ; Number of cases is 1, Range of values is 102 to 102
  4568                           ; switch strategies available:
  4569                           ; Name         Instructions Cycles
  4570                           ; simple_byte            4     3 (average)
  4571                           ; direct_byte           11     9 (fixed)
  4572                           ; jumptable            263     9 (fixed)
  4573                           ;	Chosen strategy is simple_byte
  4574     141F  084D               	movf	??_vfpfcnvrt^(0+128),w
  4575     1420  3A66               	xorlw	102	; case 102
  4576     1421  1903               	skipnz
  4577     1422  2BF6               	goto	l4744
  4578     1423  2C24               	goto	l4752
  4579     1424                     l4752:
  4580                           
  4581                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4582     1424  0020               	movlb	0	; select bank0
  4583     1425  086B               	movf	vfpfcnvrt@fmt,w
  4584     1426  0086               	movwf	6
  4585     1427  0187               	clrf	7
  4586     1428  3001               	movlw	1
  4587     1429  0781               	addwf	1,f
  4588     142A  3141               	addfsr 1,1
  4589     142B  1803               	skipnc
  4590     142C  0A81               	incf	1,f
  4591     142D  2C4D               	goto	l1237
  4592     142E                     l4756:
  4593                           
  4594                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4595     142E  0020               	movlb	0	; select bank0
  4596     142F  086B               	movf	vfpfcnvrt@fmt,w
  4597     1430  0086               	movwf	6
  4598     1431  0187               	clrf	7
  4599     1432  3F40               	moviw [0]fsr1
  4600     1433  0021               	movlb	1	; select bank1
  4601     1434  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4602     1435  3F41               	moviw [1]fsr1
  4603     1436  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4604     1437  084D               	movf	??_vfpfcnvrt^(0+128),w
  4605     1438  0084               	movwf	4
  4606     1439  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4607     143A  0085               	movwf	5
  4608     143B  0800               	movf	0,w	;code access
  4609     143C  00CF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4610     143D  01D0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  4611     143E  084F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  4612     143F  0020               	movlb	0	; select bank0
  4613     1440  00A0               	movwf	fputc@c
  4614     1441  0021               	movlb	1	; select bank1
  4615     1442  0850               	movf	(??_vfpfcnvrt+3)^(0+128),w
  4616     1443  0020               	movlb	0	; select bank0
  4617     1444  00A1               	movwf	fputc@c+1
  4618     1445  0021               	movlb	1	; select bank1
  4619     1446  0857               	movf	vfpfcnvrt@fp^(0+128),w
  4620     1447  0020               	movlb	0	; select bank0
  4621     1448  00A2               	movwf	fputc@fp
  4622     1449  319D  2507  3192   	fcall	_fputc
  4623     144C  2C24               	goto	l4752
  4624     144D                     l1237:
  4625     144D  0008               	return
  4626     144E                     __end_of_vfpfcnvrt:
  4627                           
  4628                           	psect	text4
  4629     1DC0                     __ptext4:	
  4630 ;; *************** function _read_prec_or_width *****************
  4631 ;; Defined at:
  4632 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  fmt             1    wreg     PTR PTR const unsigned c
  4635 ;;		 -> vfprintf@cfmt(2), 
  4636 ;;  ap              1    6[BANK0 ] PTR PTR void [1]
  4637 ;;		 -> sprintf@ap(1), 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  fmt             1   14[BANK0 ] PTR PTR const unsigned c
  4640 ;;		 -> vfprintf@cfmt(2), 
  4641 ;;  c               1   11[BANK0 ] unsigned char 
  4642 ;;  n               2   12[BANK0 ] int 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  2    6[BANK0 ] int 
  4645 ;; Registers used:
  4646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4652 ;;      Params:         0       2       0       0       0       0       0       0
  4653 ;;      Locals:         0       4       0       0       0       0       0       0
  4654 ;;      Temps:          0       3       0       0       0       0       0       0
  4655 ;;      Totals:         0       9       0       0       0       0       0       0
  4656 ;;Total ram usage:        9 bytes
  4657 ;; Hardware stack levels used: 1
  4658 ;; Hardware stack levels required when called: 5
  4659 ;; This function calls:
  4660 ;;		___wmul
  4661 ;; This function is called by:
  4662 ;;		_vfpfcnvrt
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666     1DC0                     _read_prec_or_width:	
  4667                           ;psect for function _read_prec_or_width
  4668                           
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4672                           ;read_prec_or_width@fmt stored from wreg
  4673     1DC0  0020               	movlb	0	; select bank0
  4674     1DC1  00AE               	movwf	read_prec_or_width@fmt
  4675     1DC2                     l4652:
  4676                           
  4677                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  4678     1DC2  01AC               	clrf	read_prec_or_width@n
  4679     1DC3  01AD               	clrf	read_prec_or_width@n+1
  4680     1DC4                     l4654:
  4681                           
  4682                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  4683     1DC4  082E               	movf	read_prec_or_width@fmt,w
  4684     1DC5  0086               	movwf	6
  4685     1DC6  0187               	clrf	7
  4686     1DC7  3F40               	moviw [0]fsr1
  4687     1DC8  00A8               	movwf	??_read_prec_or_width
  4688     1DC9  3F41               	moviw [1]fsr1
  4689     1DCA  00A9               	movwf	??_read_prec_or_width+1
  4690     1DCB  0828               	movf	??_read_prec_or_width,w
  4691     1DCC  0084               	movwf	4
  4692     1DCD  0829               	movf	??_read_prec_or_width+1,w
  4693     1DCE  0085               	movwf	5
  4694     1DCF  0012               	moviw fsr0++
  4695     1DD0  3A2A               	xorlw	42
  4696     1DD1  1D03               	btfss	3,2
  4697     1DD2  2DD4               	goto	u5681
  4698     1DD3  2DD5               	goto	u5680
  4699     1DD4                     u5681:
  4700     1DD4  2E08               	goto	l4664
  4701     1DD5                     u5680:
  4702     1DD5                     l4656:
  4703                           
  4704                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  4705     1DD5  082E               	movf	read_prec_or_width@fmt,w
  4706     1DD6  0086               	movwf	6
  4707     1DD7  0187               	clrf	7
  4708     1DD8  3001               	movlw	1
  4709     1DD9  0781               	addwf	1,f
  4710     1DDA  3141               	addfsr 1,1
  4711     1DDB  1803               	skipnc
  4712     1DDC  0A81               	incf	1,f
  4713     1DDD                     l4658:
  4714                           
  4715                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4716     1DDD  0826               	movf	read_prec_or_width@ap,w
  4717     1DDE  0086               	movwf	6
  4718     1DDF  3001               	movlw	1	; select bank2/3
  4719     1DE0  0087               	movwf	7
  4720     1DE1  0801               	movf	1,w
  4721     1DE2  0084               	movwf	4
  4722     1DE3  0185               	clrf	5
  4723     1DE4  3002               	movlw	2
  4724     1DE5  0781               	addwf	1,f
  4725     1DE6  3F00               	moviw [0]fsr0
  4726     1DE7  00AC               	movwf	read_prec_or_width@n
  4727     1DE8  3F01               	moviw [1]fsr0
  4728     1DE9  00AD               	movwf	read_prec_or_width@n+1
  4729                           
  4730                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  4731     1DEA  2E1C               	goto	l4666
  4732     1DEB                     l4660:
  4733                           
  4734                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  4735     1DEB  082B               	movf	read_prec_or_width@c,w
  4736     1DEC  00A8               	movwf	??_read_prec_or_width
  4737     1DED  01A9               	clrf	??_read_prec_or_width+1
  4738     1DEE  082D               	movf	read_prec_or_width@n+1,w
  4739     1DEF  00A1               	movwf	___wmul@multiplier+1
  4740     1DF0  082C               	movf	read_prec_or_width@n,w
  4741     1DF1  00A0               	movwf	___wmul@multiplier
  4742     1DF2  300A               	movlw	10
  4743     1DF3  00A2               	movwf	___wmul@multiplicand
  4744     1DF4  3000               	movlw	0
  4745     1DF5  00A3               	movwf	___wmul@multiplicand+1
  4746     1DF6  319A  22B4  319D   	fcall	___wmul
  4747     1DF9  0020               	movlb	0	; select bank0
  4748     1DFA  0828               	movf	??_read_prec_or_width,w
  4749     1DFB  0720               	addwf	?___wmul,w
  4750     1DFC  00AC               	movwf	read_prec_or_width@n
  4751     1DFD  0829               	movf	??_read_prec_or_width+1,w
  4752     1DFE  3D21               	addwfc	?___wmul+1,w
  4753     1DFF  00AD               	movwf	read_prec_or_width@n+1
  4754     1E00                     l4662:
  4755                           
  4756                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  4757     1E00  082E               	movf	read_prec_or_width@fmt,w
  4758     1E01  0086               	movwf	6
  4759     1E02  0187               	clrf	7
  4760     1E03  3001               	movlw	1
  4761     1E04  0781               	addwf	1,f
  4762     1E05  3141               	addfsr 1,1
  4763     1E06  1803               	skipnc
  4764     1E07  0A81               	incf	1,f
  4765     1E08                     l4664:
  4766                           
  4767                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4768     1E08  082E               	movf	read_prec_or_width@fmt,w
  4769     1E09  0086               	movwf	6
  4770     1E0A  0187               	clrf	7
  4771     1E0B  3F40               	moviw [0]fsr1
  4772     1E0C  00A8               	movwf	??_read_prec_or_width
  4773     1E0D  3F41               	moviw [1]fsr1
  4774     1E0E  00A9               	movwf	??_read_prec_or_width+1
  4775     1E0F  0828               	movf	??_read_prec_or_width,w
  4776     1E10  0084               	movwf	4
  4777     1E11  0829               	movf	??_read_prec_or_width+1,w
  4778     1E12  0085               	movwf	5
  4779     1E13  0800               	movf	0,w	;code access
  4780     1E14  3ED0               	addlw	208
  4781     1E15  00AB               	movwf	read_prec_or_width@c
  4782     1E16  300A               	movlw	10
  4783     1E17  022B               	subwf	read_prec_or_width@c,w
  4784     1E18  1C03               	skipc
  4785     1E19  2E1B               	goto	u5691
  4786     1E1A  2E1C               	goto	u5690
  4787     1E1B                     u5691:
  4788     1E1B  2DEB               	goto	l4660
  4789     1E1C                     u5690:
  4790     1E1C                     l4666:
  4791                           
  4792                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  4793     1E1C  082D               	movf	read_prec_or_width@n+1,w
  4794     1E1D  00A7               	movwf	?_read_prec_or_width+1
  4795     1E1E  082C               	movf	read_prec_or_width@n,w
  4796     1E1F  00A6               	movwf	?_read_prec_or_width
  4797     1E20                     l1222:
  4798     1E20  0008               	return
  4799     1E21                     __end_of_read_prec_or_width:
  4800                           
  4801                           	psect	text5
  4802     1AB4                     __ptext5:	
  4803 ;; *************** function ___wmul *****************
  4804 ;; Defined at:
  4805 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4808 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  product         2    4[BANK0 ] unsigned int 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  2    0[BANK0 ] unsigned int 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4820 ;;      Params:         0       4       0       0       0       0       0       0
  4821 ;;      Locals:         0       2       0       0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0       0
  4823 ;;      Totals:         0       6       0       0       0       0       0       0
  4824 ;;Total ram usage:        6 bytes
  4825 ;; Hardware stack levels used: 1
  4826 ;; Hardware stack levels required when called: 4
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_main
  4831 ;;		_read_prec_or_width
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835     1AB4                     ___wmul:	
  4836                           ;psect for function ___wmul
  4837                           
  4838     1AB4                     l3816:	
  4839                           ;incstack = 0
  4840                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4841                           
  4842     1AB4  0020               	movlb	0	; select bank0
  4843     1AB5  01A4               	clrf	___wmul@product
  4844     1AB6  01A5               	clrf	___wmul@product+1
  4845     1AB7                     l3818:
  4846     1AB7  1C20               	btfss	___wmul@multiplier,0
  4847     1AB8  2ABA               	goto	u3951
  4848     1AB9  2ABB               	goto	u3950
  4849     1ABA                     u3951:
  4850     1ABA  2ABF               	goto	l639
  4851     1ABB                     u3950:
  4852     1ABB                     l3820:
  4853     1ABB  0822               	movf	___wmul@multiplicand,w
  4854     1ABC  07A4               	addwf	___wmul@product,f
  4855     1ABD  0823               	movf	___wmul@multiplicand+1,w
  4856     1ABE  3DA5               	addwfc	___wmul@product+1,f
  4857     1ABF                     l639:
  4858     1ABF  3001               	movlw	1
  4859     1AC0                     u3965:
  4860     1AC0  35A2               	lslf	___wmul@multiplicand,f
  4861     1AC1  0DA3               	rlf	___wmul@multiplicand+1,f
  4862     1AC2  0B89               	decfsz	9,f
  4863     1AC3  2AC0               	goto	u3965
  4864     1AC4                     l3822:
  4865     1AC4  3001               	movlw	1
  4866     1AC5                     u3975:
  4867     1AC5  36A1               	lsrf	___wmul@multiplier+1,f
  4868     1AC6  0CA0               	rrf	___wmul@multiplier,f
  4869     1AC7  0B89               	decfsz	9,f
  4870     1AC8  2AC5               	goto	u3975
  4871     1AC9                     l3824:
  4872     1AC9  0820               	movf	___wmul@multiplier,w
  4873     1ACA  0421               	iorwf	___wmul@multiplier+1,w
  4874     1ACB  1D03               	btfss	3,2
  4875     1ACC  2ACE               	goto	u3981
  4876     1ACD  2ACF               	goto	u3980
  4877     1ACE                     u3981:
  4878     1ACE  2AB7               	goto	l3818
  4879     1ACF                     u3980:
  4880     1ACF                     l3826:
  4881     1ACF  0825               	movf	___wmul@product+1,w
  4882     1AD0  00A1               	movwf	?___wmul+1
  4883     1AD1  0824               	movf	___wmul@product,w
  4884     1AD2  00A0               	movwf	?___wmul
  4885     1AD3                     l641:
  4886     1AD3  0008               	return
  4887     1AD4                     __end_of___wmul:
  4888                           
  4889                           	psect	text6
  4890     08F0                     __ptext6:	
  4891 ;; *************** function _efgtoa *****************
  4892 ;; Defined at:
  4893 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  fp              1    wreg     PTR struct _IO_FILE
  4896 ;;		 -> sprintf@f(11), 
  4897 ;;  f               4   66[BANK0 ] PTR struct _IO_FILE
  4898 ;;  c               1   70[BANK0 ] unsigned char 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  fp              1   15[BANK1 ] PTR struct _IO_FILE
  4901 ;;		 -> sprintf@f(11), 
  4902 ;;  u               4   41[BANK1 ] struct flui
  4903 ;;  g               4   35[BANK1 ] struct flui
  4904 ;;  l               4   28[BANK1 ] struct flui
  4905 ;;  h               4   24[BANK1 ] struct flui
  4906 ;;  ou              4   20[BANK1 ] struct flui
  4907 ;;  n               2   39[BANK1 ] int 
  4908 ;;  i               2   32[BANK1 ] int 
  4909 ;;  w               2   18[BANK1 ] int 
  4910 ;;  e               2   16[BANK1 ] int 
  4911 ;;  m               2   13[BANK1 ] int 
  4912 ;;  d               2   11[BANK1 ] int 
  4913 ;;  t               2    4[BANK1 ] int 
  4914 ;;  p               2    2[BANK1 ] int 
  4915 ;;  ne              2    0[BANK1 ] int 
  4916 ;;  sign            1   34[BANK1 ] unsigned char 
  4917 ;;  nmode           1   10[BANK1 ] unsigned char 
  4918 ;;  mode            1    9[BANK1 ] unsigned char 
  4919 ;;  pp              1    8[BANK1 ] unsigned char 
  4920 ;;  esign           1    0        unsigned char 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1    wreg      void 
  4923 ;; Registers used:
  4924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4930 ;;      Params:         0       5       0       0       0       0       0       0
  4931 ;;      Locals:         0       0      45       0       0       0       0       0
  4932 ;;      Temps:          0       4       0       0       0       0       0       0
  4933 ;;      Totals:         0       9      45       0       0       0       0       0
  4934 ;;Total ram usage:       54 bytes
  4935 ;; Hardware stack levels used: 1
  4936 ;; Hardware stack levels required when called: 8
  4937 ;; This function calls:
  4938 ;;		___fladd
  4939 ;;		___fldiv
  4940 ;;		___fleq
  4941 ;;		___flge
  4942 ;;		___flmul
  4943 ;;		___flneg
  4944 ;;		___flsub
  4945 ;;		___fltol
  4946 ;;		___fpclassifyf
  4947 ;;		_floorf
  4948 ;;		_labs
  4949 ;;		_memcpy
  4950 ;;		_pad
  4951 ;;		_strcpy
  4952 ;; This function is called by:
  4953 ;;		_vfpfcnvrt
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957     08F0                     _efgtoa:	
  4958                           ;psect for function _efgtoa
  4959                           
  4960                           
  4961                           ;incstack = 0
  4962                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4963                           ;efgtoa@fp stored from wreg
  4964     08F0  0021               	movlb	1	; select bank1
  4965     08F1  00AF               	movwf	efgtoa@fp^(0+128)
  4966     08F2                     l4438:
  4967                           
  4968                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  4969     08F2  01C2               	clrf	efgtoa@sign^(0+128)
  4970     08F3                     l4440:
  4971                           
  4972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  4973     08F3  0020               	movlb	0	; select bank0
  4974     08F4  0865               	movf	efgtoa@f+3,w
  4975     08F5  0021               	movlb	1	; select bank1
  4976     08F6  00C6               	movwf	(efgtoa@g+3)^(0+128)
  4977     08F7  0020               	movlb	0	; select bank0
  4978     08F8  0864               	movf	efgtoa@f+2,w
  4979     08F9  0021               	movlb	1	; select bank1
  4980     08FA  00C5               	movwf	(efgtoa@g+2)^(0+128)
  4981     08FB  0020               	movlb	0	; select bank0
  4982     08FC  0863               	movf	efgtoa@f+1,w
  4983     08FD  0021               	movlb	1	; select bank1
  4984     08FE  00C4               	movwf	(efgtoa@g+1)^(0+128)
  4985     08FF  0020               	movlb	0	; select bank0
  4986     0900  0862               	movf	efgtoa@f,w
  4987     0901  0021               	movlb	1	; select bank1
  4988     0902  00C3               	movwf	efgtoa@g^(0+128)
  4989     0903                     l4442:
  4990                           
  4991                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  4992     0903  0846               	movf	(efgtoa@g+3)^(0+128),w
  4993     0904  0020               	movlb	0	; select bank0
  4994     0905  00C6               	movwf	___flge@ff1+3
  4995     0906  0021               	movlb	1	; select bank1
  4996     0907  0845               	movf	(efgtoa@g+2)^(0+128),w
  4997     0908  0020               	movlb	0	; select bank0
  4998     0909  00C5               	movwf	___flge@ff1+2
  4999     090A  0021               	movlb	1	; select bank1
  5000     090B  0844               	movf	(efgtoa@g+1)^(0+128),w
  5001     090C  0020               	movlb	0	; select bank0
  5002     090D  00C4               	movwf	___flge@ff1+1
  5003     090E  0021               	movlb	1	; select bank1
  5004     090F  0843               	movf	efgtoa@g^(0+128),w
  5005     0910  0020               	movlb	0	; select bank0
  5006     0911  00C3               	movwf	___flge@ff1
  5007     0912  3000               	movlw	0
  5008     0913  00CA               	movwf	___flge@ff2+3
  5009     0914  3000               	movlw	0
  5010     0915  00C9               	movwf	___flge@ff2+2
  5011     0916  3000               	movlw	0
  5012     0917  00C8               	movwf	___flge@ff2+1
  5013     0918  3000               	movlw	0
  5014     0919  00C7               	movwf	___flge@ff2
  5015     091A  3190  202E  3188   	fcall	___flge
  5016     091D  1803               	btfsc	3,0
  5017     091E  2920               	goto	u5331
  5018     091F  2921               	goto	u5330
  5019     0920                     u5331:
  5020     0920  2946               	goto	l4448
  5021     0921                     u5330:
  5022     0921                     l4444:
  5023                           
  5024                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  5025     0921  0021               	movlb	1	; select bank1
  5026     0922  01C2               	clrf	efgtoa@sign^(0+128)
  5027     0923  0AC2               	incf	efgtoa@sign^(0+128),f
  5028     0924                     l4446:
  5029                           
  5030                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  5031     0924  0846               	movf	(efgtoa@g+3)^(0+128),w
  5032     0925  0020               	movlb	0	; select bank0
  5033     0926  00A3               	movwf	___flneg@f1+3
  5034     0927  0021               	movlb	1	; select bank1
  5035     0928  0845               	movf	(efgtoa@g+2)^(0+128),w
  5036     0929  0020               	movlb	0	; select bank0
  5037     092A  00A2               	movwf	___flneg@f1+2
  5038     092B  0021               	movlb	1	; select bank1
  5039     092C  0844               	movf	(efgtoa@g+1)^(0+128),w
  5040     092D  0020               	movlb	0	; select bank0
  5041     092E  00A1               	movwf	___flneg@f1+1
  5042     092F  0021               	movlb	1	; select bank1
  5043     0930  0843               	movf	efgtoa@g^(0+128),w
  5044     0931  0020               	movlb	0	; select bank0
  5045     0932  00A0               	movwf	___flneg@f1
  5046     0933  3199  2176  3188   	fcall	___flneg
  5047     0936  0020               	movlb	0	; select bank0
  5048     0937  0823               	movf	?___flneg+3,w
  5049     0938  0021               	movlb	1	; select bank1
  5050     0939  00C6               	movwf	(efgtoa@g+3)^(0+128)
  5051     093A  0020               	movlb	0	; select bank0
  5052     093B  0822               	movf	?___flneg+2,w
  5053     093C  0021               	movlb	1	; select bank1
  5054     093D  00C5               	movwf	(efgtoa@g+2)^(0+128)
  5055     093E  0020               	movlb	0	; select bank0
  5056     093F  0821               	movf	?___flneg+1,w
  5057     0940  0021               	movlb	1	; select bank1
  5058     0941  00C4               	movwf	(efgtoa@g+1)^(0+128)
  5059     0942  0020               	movlb	0	; select bank0
  5060     0943  0820               	movf	?___flneg,w
  5061     0944  0021               	movlb	1	; select bank1
  5062     0945  00C3               	movwf	efgtoa@g^(0+128)
  5063     0946                     l4448:
  5064                           
  5065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  5066     0946  0021               	movlb	1	; select bank1
  5067     0947  01C7               	clrf	efgtoa@n^(0+128)
  5068     0948  01C8               	clrf	(efgtoa@n+1)^(0+128)
  5069     0949                     l4450:
  5070                           
  5071                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  5072     0949  0022               	movlb	2	; select bank2
  5073     094A  082D               	movf	(_width+1)^(0+256),w
  5074     094B  0021               	movlb	1	; select bank1
  5075     094C  00B3               	movwf	(efgtoa@w+1)^(0+128)
  5076     094D  0022               	movlb	2	; select bank2
  5077     094E  082C               	movf	_width^(0+256),w
  5078     094F  0021               	movlb	1	; select bank1
  5079     0950  00B2               	movwf	efgtoa@w^(0+128)
  5080     0951                     l4452:
  5081                           
  5082                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  5083     0951  0842               	movf	efgtoa@sign^(0+128),w
  5084     0952  1903               	btfsc	3,2
  5085     0953  2955               	goto	u5341
  5086     0954  2956               	goto	u5340
  5087     0955                     u5341:
  5088     0955  2966               	goto	l4460
  5089     0956                     u5340:
  5090     0956                     l4454:
  5091                           
  5092                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  5093     0956  0842               	movf	efgtoa@sign^(0+128),w
  5094     0957  1D03               	btfss	3,2
  5095     0958  295A               	goto	u5351
  5096     0959  295B               	goto	u5350
  5097     095A                     u5351:
  5098     095A  2960               	goto	l4458
  5099     095B                     u5350:
  5100     095B                     l4456:
  5101     095B  302B               	movlw	43
  5102     095C  00A6               	movwf	_efgtoa$1448^(0+128)
  5103     095D  3000               	movlw	0
  5104     095E  00A7               	movwf	(_efgtoa$1448^(0+128)+1)
  5105     095F  2964               	goto	l1164
  5106     0960                     l4458:
  5107     0960  302D               	movlw	45
  5108     0961  00A6               	movwf	_efgtoa$1448^(0+128)
  5109     0962  3000               	movlw	0
  5110     0963  00A7               	movwf	(_efgtoa$1448^(0+128)+1)
  5111     0964                     l1164:
  5112     0964  0826               	movf	_efgtoa$1448^(0+128),w
  5113     0965  00C2               	movwf	efgtoa@sign^(0+128)
  5114     0966                     l4460:
  5115                           
  5116                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  5117     0966  0846               	movf	(efgtoa@g+3)^(0+128),w
  5118     0967  0020               	movlb	0	; select bank0
  5119     0968  00A3               	movwf	___fpclassifyf@x+3
  5120     0969  0021               	movlb	1	; select bank1
  5121     096A  0845               	movf	(efgtoa@g+2)^(0+128),w
  5122     096B  0020               	movlb	0	; select bank0
  5123     096C  00A2               	movwf	___fpclassifyf@x+2
  5124     096D  0021               	movlb	1	; select bank1
  5125     096E  0844               	movf	(efgtoa@g+1)^(0+128),w
  5126     096F  0020               	movlb	0	; select bank0
  5127     0970  00A1               	movwf	___fpclassifyf@x+1
  5128     0971  0021               	movlb	1	; select bank1
  5129     0972  0843               	movf	efgtoa@g^(0+128),w
  5130     0973  0020               	movlb	0	; select bank0
  5131     0974  00A0               	movwf	___fpclassifyf@x
  5132     0975  319F  2781  3188   	fcall	___fpclassifyf
  5133     0978  0020               	movlb	0	; select bank0
  5134     0979  0320               	decf	?___fpclassifyf,w
  5135     097A  0421               	iorwf	?___fpclassifyf+1,w
  5136     097B  1D03               	btfss	3,2
  5137     097C  297E               	goto	u5361
  5138     097D  297F               	goto	u5360
  5139     097E                     u5361:
  5140     097E  29B2               	goto	l4472
  5141     097F                     u5360:
  5142     097F                     l4462:
  5143                           
  5144                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  5145     097F  0021               	movlb	1	; select bank1
  5146     0980  0842               	movf	efgtoa@sign^(0+128),w
  5147     0981  1903               	btfsc	3,2
  5148     0982  2984               	goto	u5371
  5149     0983  2985               	goto	u5370
  5150     0984                     u5371:
  5151     0984  2991               	goto	l4466
  5152     0985                     u5370:
  5153     0985                     l4464:
  5154                           
  5155                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  5156     0985  0842               	movf	efgtoa@sign^(0+128),w
  5157     0986  0024               	movlb	4	; select bank4
  5158     0987  00A0               	movwf	_dbuf^(0+512)
  5159                           
  5160                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  5161     0988  30FF               	movlw	255
  5162     0989  0021               	movlb	1	; select bank1
  5163     098A  07B2               	addwf	efgtoa@w^(0+128),f
  5164     098B  30FF               	movlw	255
  5165     098C  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  5166                           
  5167                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  5168     098D  3001               	movlw	1
  5169     098E  00C7               	movwf	efgtoa@n^(0+128)
  5170     098F  3000               	movlw	0
  5171     0990  00C8               	movwf	(efgtoa@n^(0+128)+1)
  5172     0991                     l4466:
  5173                           
  5174                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  5175     0991  30A0               	movlw	low (STR_19| (0+32768))
  5176     0992  0020               	movlb	0	; select bank0
  5177     0993  00A0               	movwf	strcpy@src
  5178     0994  3098               	movlw	high (STR_19| (0+32768))
  5179     0995  00A1               	movwf	strcpy@src+1
  5180     0996  0021               	movlb	1	; select bank1
  5181     0997  0847               	movf	efgtoa@n^(0+128),w
  5182     0998  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5183     0999  3199  21FE  3188   	fcall	_strcpy
  5184     099C                     l4468:
  5185                           
  5186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  5187     099C  30FD               	movlw	253
  5188     099D  0021               	movlb	1	; select bank1
  5189     099E  07B2               	addwf	efgtoa@w^(0+128),f
  5190     099F  30FF               	movlw	255
  5191     09A0  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  5192                           
  5193                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  5194     09A1  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  5195     09A2  0020               	movlb	0	; select bank0
  5196     09A3  00AF               	movwf	pad@buf
  5197     09A4  0021               	movlb	1	; select bank1
  5198     09A5  0833               	movf	(efgtoa@w+1)^(0+128),w
  5199     09A6  0020               	movlb	0	; select bank0
  5200     09A7  00B1               	movwf	pad@p+1
  5201     09A8  0021               	movlb	1	; select bank1
  5202     09A9  0832               	movf	efgtoa@w^(0+128),w
  5203     09AA  0020               	movlb	0	; select bank0
  5204     09AB  00B0               	movwf	pad@p
  5205     09AC  0021               	movlb	1	; select bank1
  5206     09AD  082F               	movf	efgtoa@fp^(0+128),w
  5207     09AE  319B  23E3  3188   	fcall	_pad
  5208     09B1  2FFF               	goto	l1167
  5209     09B2                     l4472:
  5210                           
  5211                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  5212     09B2  0021               	movlb	1	; select bank1
  5213     09B3  0846               	movf	(efgtoa@g+3)^(0+128),w
  5214     09B4  0020               	movlb	0	; select bank0
  5215     09B5  00A3               	movwf	___fpclassifyf@x+3
  5216     09B6  0021               	movlb	1	; select bank1
  5217     09B7  0845               	movf	(efgtoa@g+2)^(0+128),w
  5218     09B8  0020               	movlb	0	; select bank0
  5219     09B9  00A2               	movwf	___fpclassifyf@x+2
  5220     09BA  0021               	movlb	1	; select bank1
  5221     09BB  0844               	movf	(efgtoa@g+1)^(0+128),w
  5222     09BC  0020               	movlb	0	; select bank0
  5223     09BD  00A1               	movwf	___fpclassifyf@x+1
  5224     09BE  0021               	movlb	1	; select bank1
  5225     09BF  0843               	movf	efgtoa@g^(0+128),w
  5226     09C0  0020               	movlb	0	; select bank0
  5227     09C1  00A0               	movwf	___fpclassifyf@x
  5228     09C2  319F  2781  3188   	fcall	___fpclassifyf
  5229     09C5  0020               	movlb	0	; select bank0
  5230     09C6  0820               	movf	?___fpclassifyf,w
  5231     09C7  0421               	iorwf	?___fpclassifyf+1,w
  5232     09C8  1D03               	btfss	3,2
  5233     09C9  29CB               	goto	u5381
  5234     09CA  29CC               	goto	u5380
  5235     09CB                     u5381:
  5236     09CB  29FF               	goto	l4484
  5237     09CC                     u5380:
  5238     09CC                     l4474:
  5239                           
  5240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  5241     09CC  0021               	movlb	1	; select bank1
  5242     09CD  0842               	movf	efgtoa@sign^(0+128),w
  5243     09CE  1903               	btfsc	3,2
  5244     09CF  29D1               	goto	u5391
  5245     09D0  29D2               	goto	u5390
  5246     09D1                     u5391:
  5247     09D1  29DE               	goto	l4478
  5248     09D2                     u5390:
  5249     09D2                     l4476:
  5250                           
  5251                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  5252     09D2  0842               	movf	efgtoa@sign^(0+128),w
  5253     09D3  0024               	movlb	4	; select bank4
  5254     09D4  00A0               	movwf	_dbuf^(0+512)
  5255                           
  5256                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  5257     09D5  30FF               	movlw	255
  5258     09D6  0021               	movlb	1	; select bank1
  5259     09D7  07B2               	addwf	efgtoa@w^(0+128),f
  5260     09D8  30FF               	movlw	255
  5261     09D9  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  5262                           
  5263                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  5264     09DA  3001               	movlw	1
  5265     09DB  00C7               	movwf	efgtoa@n^(0+128)
  5266     09DC  3000               	movlw	0
  5267     09DD  00C8               	movwf	(efgtoa@n^(0+128)+1)
  5268     09DE                     l4478:
  5269                           
  5270                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  5271     09DE  30A4               	movlw	low (STR_22| (0+32768))
  5272     09DF  0020               	movlb	0	; select bank0
  5273     09E0  00A0               	movwf	strcpy@src
  5274     09E1  3098               	movlw	high (STR_22| (0+32768))
  5275     09E2  00A1               	movwf	strcpy@src+1
  5276     09E3  0021               	movlb	1	; select bank1
  5277     09E4  0847               	movf	efgtoa@n^(0+128),w
  5278     09E5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5279     09E6  3199  21FE  3188   	fcall	_strcpy
  5280     09E9                     l4480:
  5281                           
  5282                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 651:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 652:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
  5283     09E9  30FD               	movlw	253
  5284     09EA  0021               	movlb	1	; select bank1
  5285     09EB  07B2               	addwf	efgtoa@w^(0+128),f
  5286     09EC  30FF               	movlw	255
  5287     09ED  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  5288                           
  5289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 653:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  5290     09EE  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  5291     09EF  0020               	movlb	0	; select bank0
  5292     09F0  00AF               	movwf	pad@buf
  5293     09F1  0021               	movlb	1	; select bank1
  5294     09F2  0833               	movf	(efgtoa@w+1)^(0+128),w
  5295     09F3  0020               	movlb	0	; select bank0
  5296     09F4  00B1               	movwf	pad@p+1
  5297     09F5  0021               	movlb	1	; select bank1
  5298     09F6  0832               	movf	efgtoa@w^(0+128),w
  5299     09F7  0020               	movlb	0	; select bank0
  5300     09F8  00B0               	movwf	pad@p
  5301     09F9  0021               	movlb	1	; select bank1
  5302     09FA  082F               	movf	efgtoa@fp^(0+128),w
  5303     09FB  319B  23E3  3188   	fcall	_pad
  5304     09FE  2FFF               	goto	l1167
  5305     09FF                     l4484:
  5306                           
  5307                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  5308     09FF  303F               	movlw	63
  5309     0A00  0021               	movlb	1	; select bank1
  5310     0A01  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5311     0A02  3080               	movlw	128
  5312     0A03  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5313     0A04  3000               	movlw	0
  5314     0A05  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5315     0A06  3000               	movlw	0
  5316     0A07  00C9               	movwf	efgtoa@u^(0+128)
  5317     0A08                     l4486:
  5318                           
  5319                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  5320     0A08  01B0               	clrf	efgtoa@e^(0+128)
  5321     0A09  01B1               	clrf	(efgtoa@e+1)^(0+128)
  5322     0A0A                     l4488:
  5323                           
  5324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  5325     0A0A  0846               	movf	(efgtoa@g+3)^(0+128),w
  5326     0A0B  0020               	movlb	0	; select bank0
  5327     0A0C  00A3               	movwf	___fleq@ff1+3
  5328     0A0D  0021               	movlb	1	; select bank1
  5329     0A0E  0845               	movf	(efgtoa@g+2)^(0+128),w
  5330     0A0F  0020               	movlb	0	; select bank0
  5331     0A10  00A2               	movwf	___fleq@ff1+2
  5332     0A11  0021               	movlb	1	; select bank1
  5333     0A12  0844               	movf	(efgtoa@g+1)^(0+128),w
  5334     0A13  0020               	movlb	0	; select bank0
  5335     0A14  00A1               	movwf	___fleq@ff1+1
  5336     0A15  0021               	movlb	1	; select bank1
  5337     0A16  0843               	movf	efgtoa@g^(0+128),w
  5338     0A17  0020               	movlb	0	; select bank0
  5339     0A18  00A0               	movwf	___fleq@ff1
  5340     0A19  3000               	movlw	0
  5341     0A1A  00A7               	movwf	___fleq@ff2+3
  5342     0A1B  3000               	movlw	0
  5343     0A1C  00A6               	movwf	___fleq@ff2+2
  5344     0A1D  3000               	movlw	0
  5345     0A1E  00A5               	movwf	___fleq@ff2+1
  5346     0A1F  3000               	movlw	0
  5347     0A20  00A4               	movwf	___fleq@ff2
  5348     0A21  319C  2413  3188   	fcall	___fleq
  5349     0A24  1803               	btfsc	3,0
  5350     0A25  2A27               	goto	u5401
  5351     0A26  2A28               	goto	u5400
  5352     0A27                     u5401:
  5353     0A27  2B7C               	goto	l4514
  5354     0A28                     u5400:
  5355     0A28  2A36               	goto	l4494
  5356     0A29                     l4492:
  5357                           
  5358                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  5359     0A29  0021               	movlb	1	; select bank1
  5360     0A2A  0837               	movf	(efgtoa@ou+3)^(0+128),w
  5361     0A2B  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5362     0A2C  0836               	movf	(efgtoa@ou+2)^(0+128),w
  5363     0A2D  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5364     0A2E  0835               	movf	(efgtoa@ou+1)^(0+128),w
  5365     0A2F  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5366     0A30  0834               	movf	efgtoa@ou^(0+128),w
  5367     0A31  00C9               	movwf	efgtoa@u^(0+128)
  5368                           
  5369                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  5370     0A32  3001               	movlw	1
  5371     0A33  07B0               	addwf	efgtoa@e^(0+128),f
  5372     0A34  3000               	movlw	0
  5373     0A35  3DB1               	addwfc	(efgtoa@e+1)^(0+128),f
  5374     0A36                     l4494:
  5375                           
  5376                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  5377     0A36  3041               	movlw	65
  5378     0A37  0020               	movlb	0	; select bank0
  5379     0A38  00AC               	movwf	___flmul@b+3
  5380     0A39  3020               	movlw	32
  5381     0A3A  00AB               	movwf	___flmul@b+2
  5382     0A3B  3000               	movlw	0
  5383     0A3C  00AA               	movwf	___flmul@b+1
  5384     0A3D  3000               	movlw	0
  5385     0A3E  00A9               	movwf	___flmul@b
  5386     0A3F  0021               	movlb	1	; select bank1
  5387     0A40  084C               	movf	(efgtoa@u+3)^(0+128),w
  5388     0A41  0020               	movlb	0	; select bank0
  5389     0A42  00B0               	movwf	___flmul@a+3
  5390     0A43  0021               	movlb	1	; select bank1
  5391     0A44  084B               	movf	(efgtoa@u+2)^(0+128),w
  5392     0A45  0020               	movlb	0	; select bank0
  5393     0A46  00AF               	movwf	___flmul@a+2
  5394     0A47  0021               	movlb	1	; select bank1
  5395     0A48  084A               	movf	(efgtoa@u+1)^(0+128),w
  5396     0A49  0020               	movlb	0	; select bank0
  5397     0A4A  00AE               	movwf	___flmul@a+1
  5398     0A4B  0021               	movlb	1	; select bank1
  5399     0A4C  0849               	movf	efgtoa@u^(0+128),w
  5400     0A4D  0020               	movlb	0	; select bank0
  5401     0A4E  00AD               	movwf	___flmul@a
  5402     0A4F  3182  228D  3188   	fcall	___flmul
  5403     0A52  0020               	movlb	0	; select bank0
  5404     0A53  082C               	movf	?___flmul+3,w
  5405     0A54  0021               	movlb	1	; select bank1
  5406     0A55  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  5407     0A56  0020               	movlb	0	; select bank0
  5408     0A57  082B               	movf	?___flmul+2,w
  5409     0A58  0021               	movlb	1	; select bank1
  5410     0A59  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  5411     0A5A  0020               	movlb	0	; select bank0
  5412     0A5B  082A               	movf	?___flmul+1,w
  5413     0A5C  0021               	movlb	1	; select bank1
  5414     0A5D  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  5415     0A5E  0020               	movlb	0	; select bank0
  5416     0A5F  0829               	movf	?___flmul,w
  5417     0A60  0021               	movlb	1	; select bank1
  5418     0A61  00B4               	movwf	efgtoa@ou^(0+128)
  5419     0A62                     l4496:
  5420     0A62  0834               	movf	efgtoa@ou^(0+128),w
  5421     0A63  0243               	subwf	efgtoa@g^(0+128),w
  5422     0A64  0020               	movlb	0	; select bank0
  5423     0A65  00E7               	movwf	??_efgtoa
  5424     0A66  0021               	movlb	1	; select bank1
  5425     0A67  0835               	movf	(efgtoa@ou+1)^(0+128),w
  5426     0A68  3B44               	subwfb	(efgtoa@g+1)^(0+128),w
  5427     0A69  0020               	movlb	0	; select bank0
  5428     0A6A  00E8               	movwf	??_efgtoa+1
  5429     0A6B  0021               	movlb	1	; select bank1
  5430     0A6C  0836               	movf	(efgtoa@ou+2)^(0+128),w
  5431     0A6D  3B45               	subwfb	(efgtoa@g+2)^(0+128),w
  5432     0A6E  0020               	movlb	0	; select bank0
  5433     0A6F  00E9               	movwf	??_efgtoa+2
  5434     0A70  0021               	movlb	1	; select bank1
  5435     0A71  0837               	movf	(efgtoa@ou+3)^(0+128),w
  5436     0A72  3B46               	subwfb	(efgtoa@g+3)^(0+128),w
  5437     0A73  0020               	movlb	0	; select bank0
  5438     0A74  00EA               	movwf	??_efgtoa+3
  5439     0A75  086A               	movf	??_efgtoa+3,w
  5440     0A76  00A3               	movwf	labs@a+3
  5441     0A77  0869               	movf	??_efgtoa+2,w
  5442     0A78  00A2               	movwf	labs@a+2
  5443     0A79  0868               	movf	??_efgtoa+1,w
  5444     0A7A  00A1               	movwf	labs@a+1
  5445     0A7B  0867               	movf	??_efgtoa,w
  5446     0A7C  00A0               	movwf	labs@a
  5447     0A7D  3199  21B5  3188   	fcall	_labs
  5448     0A80  0020               	movlb	0	; select bank0
  5449     0A81  1BA3               	btfsc	?_labs+3,7
  5450     0A82  2A91               	goto	u5411
  5451     0A83  0823               	movf	?_labs+3,w
  5452     0A84  1D03               	btfss	3,2
  5453     0A85  2A92               	goto	u5410
  5454     0A86  0822               	movf	?_labs+2,w
  5455     0A87  1D03               	btfss	3,2
  5456     0A88  2A92               	goto	u5410
  5457     0A89  0821               	movf	?_labs+1,w
  5458     0A8A  1D03               	btfss	3,2
  5459     0A8B  2A92               	goto	u5410
  5460     0A8C  3002               	movlw	2
  5461     0A8D  0220               	subwf	?_labs,w
  5462     0A8E  1C03               	btfss	3,0
  5463     0A8F  2A91               	goto	u5411
  5464     0A90  2A92               	goto	u5410
  5465     0A91                     u5411:
  5466     0A91  2A29               	goto	l4492
  5467     0A92                     u5410:
  5468     0A92                     l4498:
  5469     0A92  0021               	movlb	1	; select bank1
  5470     0A93  0837               	movf	(efgtoa@ou+3)^(0+128),w
  5471     0A94  0020               	movlb	0	; select bank0
  5472     0A95  00C6               	movwf	___flge@ff1+3
  5473     0A96  0021               	movlb	1	; select bank1
  5474     0A97  0836               	movf	(efgtoa@ou+2)^(0+128),w
  5475     0A98  0020               	movlb	0	; select bank0
  5476     0A99  00C5               	movwf	___flge@ff1+2
  5477     0A9A  0021               	movlb	1	; select bank1
  5478     0A9B  0835               	movf	(efgtoa@ou+1)^(0+128),w
  5479     0A9C  0020               	movlb	0	; select bank0
  5480     0A9D  00C4               	movwf	___flge@ff1+1
  5481     0A9E  0021               	movlb	1	; select bank1
  5482     0A9F  0834               	movf	efgtoa@ou^(0+128),w
  5483     0AA0  0020               	movlb	0	; select bank0
  5484     0AA1  00C3               	movwf	___flge@ff1
  5485     0AA2  0021               	movlb	1	; select bank1
  5486     0AA3  0846               	movf	(efgtoa@g+3)^(0+128),w
  5487     0AA4  0020               	movlb	0	; select bank0
  5488     0AA5  00CA               	movwf	___flge@ff2+3
  5489     0AA6  0021               	movlb	1	; select bank1
  5490     0AA7  0845               	movf	(efgtoa@g+2)^(0+128),w
  5491     0AA8  0020               	movlb	0	; select bank0
  5492     0AA9  00C9               	movwf	___flge@ff2+2
  5493     0AAA  0021               	movlb	1	; select bank1
  5494     0AAB  0844               	movf	(efgtoa@g+1)^(0+128),w
  5495     0AAC  0020               	movlb	0	; select bank0
  5496     0AAD  00C8               	movwf	___flge@ff2+1
  5497     0AAE  0021               	movlb	1	; select bank1
  5498     0AAF  0843               	movf	efgtoa@g^(0+128),w
  5499     0AB0  0020               	movlb	0	; select bank0
  5500     0AB1  00C7               	movwf	___flge@ff2
  5501     0AB2  3190  202E  3188   	fcall	___flge
  5502     0AB5  1C03               	btfss	3,0
  5503     0AB6  2AB8               	goto	u5421
  5504     0AB7  2AB9               	goto	u5420
  5505     0AB8                     u5421:
  5506     0AB8  2A29               	goto	l4492
  5507     0AB9                     u5420:
  5508     0AB9                     l4500:
  5509                           
  5510                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  5511     0AB9  0021               	movlb	1	; select bank1
  5512     0ABA  0849               	movf	efgtoa@u^(0+128),w
  5513     0ABB  0243               	subwf	efgtoa@g^(0+128),w
  5514     0ABC  0020               	movlb	0	; select bank0
  5515     0ABD  00E7               	movwf	??_efgtoa
  5516     0ABE  0021               	movlb	1	; select bank1
  5517     0ABF  084A               	movf	(efgtoa@u+1)^(0+128),w
  5518     0AC0  3B44               	subwfb	(efgtoa@g+1)^(0+128),w
  5519     0AC1  0020               	movlb	0	; select bank0
  5520     0AC2  00E8               	movwf	??_efgtoa+1
  5521     0AC3  0021               	movlb	1	; select bank1
  5522     0AC4  084B               	movf	(efgtoa@u+2)^(0+128),w
  5523     0AC5  3B45               	subwfb	(efgtoa@g+2)^(0+128),w
  5524     0AC6  0020               	movlb	0	; select bank0
  5525     0AC7  00E9               	movwf	??_efgtoa+2
  5526     0AC8  0021               	movlb	1	; select bank1
  5527     0AC9  084C               	movf	(efgtoa@u+3)^(0+128),w
  5528     0ACA  3B46               	subwfb	(efgtoa@g+3)^(0+128),w
  5529     0ACB  0020               	movlb	0	; select bank0
  5530     0ACC  00EA               	movwf	??_efgtoa+3
  5531     0ACD  086A               	movf	??_efgtoa+3,w
  5532     0ACE  00A3               	movwf	labs@a+3
  5533     0ACF  0869               	movf	??_efgtoa+2,w
  5534     0AD0  00A2               	movwf	labs@a+2
  5535     0AD1  0868               	movf	??_efgtoa+1,w
  5536     0AD2  00A1               	movwf	labs@a+1
  5537     0AD3  0867               	movf	??_efgtoa,w
  5538     0AD4  00A0               	movwf	labs@a
  5539     0AD5  3199  21B5  3188   	fcall	_labs
  5540     0AD8  0020               	movlb	0	; select bank0
  5541     0AD9  1BA3               	btfsc	?_labs+3,7
  5542     0ADA  2AEA               	goto	u5430
  5543     0ADB  0823               	movf	?_labs+3,w
  5544     0ADC  1D03               	btfss	3,2
  5545     0ADD  2AE9               	goto	u5431
  5546     0ADE  0822               	movf	?_labs+2,w
  5547     0ADF  1D03               	btfss	3,2
  5548     0AE0  2AE9               	goto	u5431
  5549     0AE1  0821               	movf	?_labs+1,w
  5550     0AE2  1D03               	btfss	3,2
  5551     0AE3  2AE9               	goto	u5431
  5552     0AE4  3002               	movlw	2
  5553     0AE5  0220               	subwf	?_labs,w
  5554     0AE6  1803               	btfsc	3,0
  5555     0AE7  2AE9               	goto	u5431
  5556     0AE8  2AEA               	goto	u5430
  5557     0AE9                     u5431:
  5558     0AE9  2B55               	goto	l4512
  5559     0AEA                     u5430:
  5560     0AEA                     l4502:
  5561                           
  5562                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  5563     0AEA  0021               	movlb	1	; select bank1
  5564     0AEB  084C               	movf	(efgtoa@u+3)^(0+128),w
  5565     0AEC  00C6               	movwf	(efgtoa@g+3)^(0+128)
  5566     0AED  084B               	movf	(efgtoa@u+2)^(0+128),w
  5567     0AEE  00C5               	movwf	(efgtoa@g+2)^(0+128)
  5568     0AEF  084A               	movf	(efgtoa@u+1)^(0+128),w
  5569     0AF0  00C4               	movwf	(efgtoa@g+1)^(0+128)
  5570     0AF1  0849               	movf	efgtoa@u^(0+128),w
  5571     0AF2  00C3               	movwf	efgtoa@g^(0+128)
  5572                           
  5573                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  5574     0AF3  2B7C               	goto	l4514
  5575     0AF4                     l4504:
  5576                           
  5577                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  5578     0AF4  3041               	movlw	65
  5579     0AF5  0020               	movlb	0	; select bank0
  5580     0AF6  00B7               	movwf	___fldiv@a+3
  5581     0AF7  3020               	movlw	32
  5582     0AF8  00B6               	movwf	___fldiv@a+2
  5583     0AF9  3000               	movlw	0
  5584     0AFA  00B5               	movwf	___fldiv@a+1
  5585     0AFB  3000               	movlw	0
  5586     0AFC  00B4               	movwf	___fldiv@a
  5587     0AFD  0021               	movlb	1	; select bank1
  5588     0AFE  084C               	movf	(efgtoa@u+3)^(0+128),w
  5589     0AFF  0020               	movlb	0	; select bank0
  5590     0B00  00BB               	movwf	___fldiv@b+3
  5591     0B01  0021               	movlb	1	; select bank1
  5592     0B02  084B               	movf	(efgtoa@u+2)^(0+128),w
  5593     0B03  0020               	movlb	0	; select bank0
  5594     0B04  00BA               	movwf	___fldiv@b+2
  5595     0B05  0021               	movlb	1	; select bank1
  5596     0B06  084A               	movf	(efgtoa@u+1)^(0+128),w
  5597     0B07  0020               	movlb	0	; select bank0
  5598     0B08  00B9               	movwf	___fldiv@b+1
  5599     0B09  0021               	movlb	1	; select bank1
  5600     0B0A  0849               	movf	efgtoa@u^(0+128),w
  5601     0B0B  0020               	movlb	0	; select bank0
  5602     0B0C  00B8               	movwf	___fldiv@b
  5603     0B0D  3194  244E  3188   	fcall	___fldiv
  5604     0B10  0020               	movlb	0	; select bank0
  5605     0B11  0837               	movf	?___fldiv+3,w
  5606     0B12  0021               	movlb	1	; select bank1
  5607     0B13  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5608     0B14  0020               	movlb	0	; select bank0
  5609     0B15  0836               	movf	?___fldiv+2,w
  5610     0B16  0021               	movlb	1	; select bank1
  5611     0B17  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5612     0B18  0020               	movlb	0	; select bank0
  5613     0B19  0835               	movf	?___fldiv+1,w
  5614     0B1A  0021               	movlb	1	; select bank1
  5615     0B1B  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5616     0B1C  0020               	movlb	0	; select bank0
  5617     0B1D  0834               	movf	?___fldiv,w
  5618     0B1E  0021               	movlb	1	; select bank1
  5619     0B1F  00C9               	movwf	efgtoa@u^(0+128)
  5620     0B20                     l4506:
  5621                           
  5622                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  5623     0B20  30FF               	movlw	255
  5624     0B21  07B0               	addwf	efgtoa@e^(0+128),f
  5625     0B22  30FF               	movlw	255
  5626     0B23  3DB1               	addwfc	(efgtoa@e+1)^(0+128),f
  5627     0B24                     l4508:
  5628                           
  5629                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  5630     0B24  0849               	movf	efgtoa@u^(0+128),w
  5631     0B25  0243               	subwf	efgtoa@g^(0+128),w
  5632     0B26  0020               	movlb	0	; select bank0
  5633     0B27  00E7               	movwf	??_efgtoa
  5634     0B28  0021               	movlb	1	; select bank1
  5635     0B29  084A               	movf	(efgtoa@u+1)^(0+128),w
  5636     0B2A  3B44               	subwfb	(efgtoa@g+1)^(0+128),w
  5637     0B2B  0020               	movlb	0	; select bank0
  5638     0B2C  00E8               	movwf	??_efgtoa+1
  5639     0B2D  0021               	movlb	1	; select bank1
  5640     0B2E  084B               	movf	(efgtoa@u+2)^(0+128),w
  5641     0B2F  3B45               	subwfb	(efgtoa@g+2)^(0+128),w
  5642     0B30  0020               	movlb	0	; select bank0
  5643     0B31  00E9               	movwf	??_efgtoa+2
  5644     0B32  0021               	movlb	1	; select bank1
  5645     0B33  084C               	movf	(efgtoa@u+3)^(0+128),w
  5646     0B34  3B46               	subwfb	(efgtoa@g+3)^(0+128),w
  5647     0B35  0020               	movlb	0	; select bank0
  5648     0B36  00EA               	movwf	??_efgtoa+3
  5649     0B37  086A               	movf	??_efgtoa+3,w
  5650     0B38  00A3               	movwf	labs@a+3
  5651     0B39  0869               	movf	??_efgtoa+2,w
  5652     0B3A  00A2               	movwf	labs@a+2
  5653     0B3B  0868               	movf	??_efgtoa+1,w
  5654     0B3C  00A1               	movwf	labs@a+1
  5655     0B3D  0867               	movf	??_efgtoa,w
  5656     0B3E  00A0               	movwf	labs@a
  5657     0B3F  3199  21B5  3188   	fcall	_labs
  5658     0B42  0020               	movlb	0	; select bank0
  5659     0B43  1BA3               	btfsc	?_labs+3,7
  5660     0B44  2B54               	goto	u5440
  5661     0B45  0823               	movf	?_labs+3,w
  5662     0B46  1D03               	btfss	3,2
  5663     0B47  2B53               	goto	u5441
  5664     0B48  0822               	movf	?_labs+2,w
  5665     0B49  1D03               	btfss	3,2
  5666     0B4A  2B53               	goto	u5441
  5667     0B4B  0821               	movf	?_labs+1,w
  5668     0B4C  1D03               	btfss	3,2
  5669     0B4D  2B53               	goto	u5441
  5670     0B4E  3002               	movlw	2
  5671     0B4F  0220               	subwf	?_labs,w
  5672     0B50  1803               	btfsc	3,0
  5673     0B51  2B53               	goto	u5441
  5674     0B52  2B54               	goto	u5440
  5675     0B53                     u5441:
  5676     0B53  2B55               	goto	l4512
  5677     0B54                     u5440:
  5678     0B54  2AEA               	goto	l4502
  5679     0B55                     l4512:
  5680                           
  5681                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  5682     0B55  0021               	movlb	1	; select bank1
  5683     0B56  0846               	movf	(efgtoa@g+3)^(0+128),w
  5684     0B57  0020               	movlb	0	; select bank0
  5685     0B58  00C6               	movwf	___flge@ff1+3
  5686     0B59  0021               	movlb	1	; select bank1
  5687     0B5A  0845               	movf	(efgtoa@g+2)^(0+128),w
  5688     0B5B  0020               	movlb	0	; select bank0
  5689     0B5C  00C5               	movwf	___flge@ff1+2
  5690     0B5D  0021               	movlb	1	; select bank1
  5691     0B5E  0844               	movf	(efgtoa@g+1)^(0+128),w
  5692     0B5F  0020               	movlb	0	; select bank0
  5693     0B60  00C4               	movwf	___flge@ff1+1
  5694     0B61  0021               	movlb	1	; select bank1
  5695     0B62  0843               	movf	efgtoa@g^(0+128),w
  5696     0B63  0020               	movlb	0	; select bank0
  5697     0B64  00C3               	movwf	___flge@ff1
  5698     0B65  0021               	movlb	1	; select bank1
  5699     0B66  084C               	movf	(efgtoa@u+3)^(0+128),w
  5700     0B67  0020               	movlb	0	; select bank0
  5701     0B68  00CA               	movwf	___flge@ff2+3
  5702     0B69  0021               	movlb	1	; select bank1
  5703     0B6A  084B               	movf	(efgtoa@u+2)^(0+128),w
  5704     0B6B  0020               	movlb	0	; select bank0
  5705     0B6C  00C9               	movwf	___flge@ff2+2
  5706     0B6D  0021               	movlb	1	; select bank1
  5707     0B6E  084A               	movf	(efgtoa@u+1)^(0+128),w
  5708     0B6F  0020               	movlb	0	; select bank0
  5709     0B70  00C8               	movwf	___flge@ff2+1
  5710     0B71  0021               	movlb	1	; select bank1
  5711     0B72  0849               	movf	efgtoa@u^(0+128),w
  5712     0B73  0020               	movlb	0	; select bank0
  5713     0B74  00C7               	movwf	___flge@ff2
  5714     0B75  3190  202E  3188   	fcall	___flge
  5715     0B78  1C03               	btfss	3,0
  5716     0B79  2B7B               	goto	u5451
  5717     0B7A  2B7C               	goto	u5450
  5718     0B7B                     u5451:
  5719     0B7B  2AF4               	goto	l4504
  5720     0B7C                     u5450:
  5721     0B7C                     l4514:
  5722                           
  5723                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  5724     0B7C  0020               	movlb	0	; select bank0
  5725     0B7D  0866               	movf	efgtoa@c,w
  5726     0B7E  0021               	movlb	1	; select bank1
  5727     0B7F  00A9               	movwf	efgtoa@mode^(0+128)
  5728                           
  5729                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  5730     0B80  0829               	movf	efgtoa@mode^(0+128),w
  5731     0B81  00AA               	movwf	efgtoa@nmode^(0+128)
  5732     0B82                     l4516:
  5733                           
  5734                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  5735     0B82  1BEE               	btfsc	(_prec+1)^(0+128),7
  5736     0B83  2B85               	goto	u5461
  5737     0B84  2B86               	goto	u5460
  5738     0B85                     u5461:
  5739     0B85  2B8B               	goto	l4520
  5740     0B86                     u5460:
  5741     0B86                     l4518:
  5742     0B86  086E               	movf	(_prec+1)^(0+128),w
  5743     0B87  00A3               	movwf	(efgtoa@p+1)^(0+128)
  5744     0B88  086D               	movf	_prec^(0+128),w
  5745     0B89  00A2               	movwf	efgtoa@p^(0+128)
  5746     0B8A  2B8F               	goto	l1183
  5747     0B8B                     l4520:
  5748     0B8B  3006               	movlw	6
  5749     0B8C  00A2               	movwf	efgtoa@p^(0+128)
  5750     0B8D  3000               	movlw	0
  5751     0B8E  00A3               	movwf	(efgtoa@p^(0+128)+1)
  5752     0B8F                     l1183:
  5753                           
  5754                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  5755     0B8F  0823               	movf	(efgtoa@p+1)^(0+128),w
  5756     0B90  00AE               	movwf	(efgtoa@m+1)^(0+128)
  5757     0B91  0822               	movf	efgtoa@p^(0+128),w
  5758     0B92  00AD               	movwf	efgtoa@m^(0+128)
  5759                           
  5760                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  5761     0B93  3001               	movlw	1
  5762     0B94  07AD               	addwf	efgtoa@m^(0+128),f
  5763     0B95  3000               	movlw	0
  5764     0B96  3DAE               	addwfc	(efgtoa@m+1)^(0+128),f
  5765     0B97                     l4522:
  5766                           
  5767                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  5768     0B97  3066               	movlw	102
  5769     0B98  062A               	xorwf	efgtoa@nmode^(0+128),w
  5770     0B99  1D03               	btfss	3,2
  5771     0B9A  2B9C               	goto	u5471
  5772     0B9B  2B9D               	goto	u5470
  5773     0B9C                     u5471:
  5774     0B9C  2BB5               	goto	l4534
  5775     0B9D                     u5470:
  5776     0B9D                     l4524:
  5777                           
  5778                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  5779     0B9D  1FB1               	btfss	(efgtoa@e+1)^(0+128),7
  5780     0B9E  2BA0               	goto	u5481
  5781     0B9F  2BA1               	goto	u5480
  5782     0BA0                     u5481:
  5783     0BA0  2BAB               	goto	l4530
  5784     0BA1                     u5480:
  5785     0BA1                     l4526:
  5786                           
  5787                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  5788     0BA1  303F               	movlw	63
  5789     0BA2  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5790     0BA3  3080               	movlw	128
  5791     0BA4  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5792     0BA5  3000               	movlw	0
  5793     0BA6  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5794     0BA7  3000               	movlw	0
  5795     0BA8  00C9               	movwf	efgtoa@u^(0+128)
  5796     0BA9                     l4528:
  5797                           
  5798                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  5799     0BA9  01B0               	clrf	efgtoa@e^(0+128)
  5800     0BAA  01B1               	clrf	(efgtoa@e+1)^(0+128)
  5801     0BAB                     l4530:
  5802                           
  5803                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  5804     0BAB  3067               	movlw	103
  5805     0BAC  0629               	xorwf	efgtoa@mode^(0+128),w
  5806     0BAD  1903               	btfsc	3,2
  5807     0BAE  2BB0               	goto	u5491
  5808     0BAF  2BB1               	goto	u5490
  5809     0BB0                     u5491:
  5810     0BB0  2BB5               	goto	l4534
  5811     0BB1                     u5490:
  5812     0BB1                     l4532:
  5813                           
  5814                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  5815     0BB1  0830               	movf	efgtoa@e^(0+128),w
  5816     0BB2  07AD               	addwf	efgtoa@m^(0+128),f
  5817     0BB3  0831               	movf	(efgtoa@e+1)^(0+128),w
  5818     0BB4  3DAE               	addwfc	(efgtoa@m+1)^(0+128),f
  5819     0BB5                     l4534:
  5820                           
  5821                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  5822     0BB5  01C0               	clrf	efgtoa@i^(0+128)
  5823     0BB6  01C1               	clrf	(efgtoa@i+1)^(0+128)
  5824     0BB7                     l4536:
  5825                           
  5826                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  5827     0BB7  0846               	movf	(efgtoa@g+3)^(0+128),w
  5828     0BB8  00BB               	movwf	(efgtoa@h+3)^(0+128)
  5829     0BB9  0845               	movf	(efgtoa@g+2)^(0+128),w
  5830     0BBA  00BA               	movwf	(efgtoa@h+2)^(0+128)
  5831     0BBB  0844               	movf	(efgtoa@g+1)^(0+128),w
  5832     0BBC  00B9               	movwf	(efgtoa@h+1)^(0+128)
  5833     0BBD  0843               	movf	efgtoa@g^(0+128),w
  5834     0BBE  00B8               	movwf	efgtoa@h^(0+128)
  5835     0BBF                     l4538:
  5836                           
  5837                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  5838     0BBF  084C               	movf	(efgtoa@u+3)^(0+128),w
  5839     0BC0  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  5840     0BC1  084B               	movf	(efgtoa@u+2)^(0+128),w
  5841     0BC2  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  5842     0BC3  084A               	movf	(efgtoa@u+1)^(0+128),w
  5843     0BC4  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  5844     0BC5  0849               	movf	efgtoa@u^(0+128),w
  5845     0BC6  00B4               	movwf	efgtoa@ou^(0+128)
  5846                           
  5847                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  5848     0BC7  2C9F               	goto	l4544
  5849     0BC8                     l4540:
  5850                           
  5851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  5852     0BC8  0021               	movlb	1	; select bank1
  5853     0BC9  084C               	movf	(efgtoa@u+3)^(0+128),w
  5854     0BCA  0020               	movlb	0	; select bank0
  5855     0BCB  00B7               	movwf	___fldiv@a+3
  5856     0BCC  0021               	movlb	1	; select bank1
  5857     0BCD  084B               	movf	(efgtoa@u+2)^(0+128),w
  5858     0BCE  0020               	movlb	0	; select bank0
  5859     0BCF  00B6               	movwf	___fldiv@a+2
  5860     0BD0  0021               	movlb	1	; select bank1
  5861     0BD1  084A               	movf	(efgtoa@u+1)^(0+128),w
  5862     0BD2  0020               	movlb	0	; select bank0
  5863     0BD3  00B5               	movwf	___fldiv@a+1
  5864     0BD4  0021               	movlb	1	; select bank1
  5865     0BD5  0849               	movf	efgtoa@u^(0+128),w
  5866     0BD6  0020               	movlb	0	; select bank0
  5867     0BD7  00B4               	movwf	___fldiv@a
  5868     0BD8  0021               	movlb	1	; select bank1
  5869     0BD9  083B               	movf	(efgtoa@h+3)^(0+128),w
  5870     0BDA  0020               	movlb	0	; select bank0
  5871     0BDB  00BB               	movwf	___fldiv@b+3
  5872     0BDC  0021               	movlb	1	; select bank1
  5873     0BDD  083A               	movf	(efgtoa@h+2)^(0+128),w
  5874     0BDE  0020               	movlb	0	; select bank0
  5875     0BDF  00BA               	movwf	___fldiv@b+2
  5876     0BE0  0021               	movlb	1	; select bank1
  5877     0BE1  0839               	movf	(efgtoa@h+1)^(0+128),w
  5878     0BE2  0020               	movlb	0	; select bank0
  5879     0BE3  00B9               	movwf	___fldiv@b+1
  5880     0BE4  0021               	movlb	1	; select bank1
  5881     0BE5  0838               	movf	efgtoa@h^(0+128),w
  5882     0BE6  0020               	movlb	0	; select bank0
  5883     0BE7  00B8               	movwf	___fldiv@b
  5884     0BE8  3194  244E  3188   	fcall	___fldiv
  5885     0BEB  0020               	movlb	0	; select bank0
  5886     0BEC  0837               	movf	?___fldiv+3,w
  5887     0BED  00D1               	movwf	floorf@x+3
  5888     0BEE  0836               	movf	?___fldiv+2,w
  5889     0BEF  00D0               	movwf	floorf@x+2
  5890     0BF0  0835               	movf	?___fldiv+1,w
  5891     0BF1  00CF               	movwf	floorf@x+1
  5892     0BF2  0834               	movf	?___fldiv,w
  5893     0BF3  00CE               	movwf	floorf@x
  5894     0BF4  3186  26E6  3188   	fcall	_floorf
  5895     0BF7  0020               	movlb	0	; select bank0
  5896     0BF8  0851               	movf	?_floorf+3,w
  5897     0BF9  0021               	movlb	1	; select bank1
  5898     0BFA  00BF               	movwf	(efgtoa@l+3)^(0+128)
  5899     0BFB  0020               	movlb	0	; select bank0
  5900     0BFC  0850               	movf	?_floorf+2,w
  5901     0BFD  0021               	movlb	1	; select bank1
  5902     0BFE  00BE               	movwf	(efgtoa@l+2)^(0+128)
  5903     0BFF  0020               	movlb	0	; select bank0
  5904     0C00  084F               	movf	?_floorf+1,w
  5905     0C01  0021               	movlb	1	; select bank1
  5906     0C02  00BD               	movwf	(efgtoa@l+1)^(0+128)
  5907     0C03  0020               	movlb	0	; select bank0
  5908     0C04  084E               	movf	?_floorf,w
  5909     0C05  0021               	movlb	1	; select bank1
  5910     0C06  00BC               	movwf	efgtoa@l^(0+128)
  5911                           
  5912                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  5913     0C07  083F               	movf	(efgtoa@l+3)^(0+128),w
  5914     0C08  0020               	movlb	0	; select bank0
  5915     0C09  00A3               	movwf	___fltol@f1+3
  5916     0C0A  0021               	movlb	1	; select bank1
  5917     0C0B  083E               	movf	(efgtoa@l+2)^(0+128),w
  5918     0C0C  0020               	movlb	0	; select bank0
  5919     0C0D  00A2               	movwf	___fltol@f1+2
  5920     0C0E  0021               	movlb	1	; select bank1
  5921     0C0F  083D               	movf	(efgtoa@l+1)^(0+128),w
  5922     0C10  0020               	movlb	0	; select bank0
  5923     0C11  00A1               	movwf	___fltol@f1+1
  5924     0C12  0021               	movlb	1	; select bank1
  5925     0C13  083C               	movf	efgtoa@l^(0+128),w
  5926     0C14  0020               	movlb	0	; select bank0
  5927     0C15  00A0               	movwf	___fltol@f1
  5928     0C16  319E  2621  3188   	fcall	___fltol
  5929     0C19  0020               	movlb	0	; select bank0
  5930     0C1A  0821               	movf	?___fltol+1,w
  5931     0C1B  0021               	movlb	1	; select bank1
  5932     0C1C  00AC               	movwf	(efgtoa@d+1)^(0+128)
  5933     0C1D  0020               	movlb	0	; select bank0
  5934     0C1E  0820               	movf	?___fltol,w
  5935     0C1F  0021               	movlb	1	; select bank1
  5936     0C20  00AB               	movwf	efgtoa@d^(0+128)
  5937                           
  5938                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  5939     0C21  084C               	movf	(efgtoa@u+3)^(0+128),w
  5940     0C22  0020               	movlb	0	; select bank0
  5941     0C23  00B0               	movwf	___flmul@a+3
  5942     0C24  0021               	movlb	1	; select bank1
  5943     0C25  084B               	movf	(efgtoa@u+2)^(0+128),w
  5944     0C26  0020               	movlb	0	; select bank0
  5945     0C27  00AF               	movwf	___flmul@a+2
  5946     0C28  0021               	movlb	1	; select bank1
  5947     0C29  084A               	movf	(efgtoa@u+1)^(0+128),w
  5948     0C2A  0020               	movlb	0	; select bank0
  5949     0C2B  00AE               	movwf	___flmul@a+1
  5950     0C2C  0021               	movlb	1	; select bank1
  5951     0C2D  0849               	movf	efgtoa@u^(0+128),w
  5952     0C2E  0020               	movlb	0	; select bank0
  5953     0C2F  00AD               	movwf	___flmul@a
  5954     0C30  0021               	movlb	1	; select bank1
  5955     0C31  083F               	movf	(efgtoa@l+3)^(0+128),w
  5956     0C32  0020               	movlb	0	; select bank0
  5957     0C33  00AC               	movwf	___flmul@b+3
  5958     0C34  0021               	movlb	1	; select bank1
  5959     0C35  083E               	movf	(efgtoa@l+2)^(0+128),w
  5960     0C36  0020               	movlb	0	; select bank0
  5961     0C37  00AB               	movwf	___flmul@b+2
  5962     0C38  0021               	movlb	1	; select bank1
  5963     0C39  083D               	movf	(efgtoa@l+1)^(0+128),w
  5964     0C3A  0020               	movlb	0	; select bank0
  5965     0C3B  00AA               	movwf	___flmul@b+1
  5966     0C3C  0021               	movlb	1	; select bank1
  5967     0C3D  083C               	movf	efgtoa@l^(0+128),w
  5968     0C3E  0020               	movlb	0	; select bank0
  5969     0C3F  00A9               	movwf	___flmul@b
  5970     0C40  3182  228D  3188   	fcall	___flmul
  5971     0C43  0020               	movlb	0	; select bank0
  5972     0C44  082C               	movf	?___flmul+3,w
  5973     0C45  00C6               	movwf	___flsub@a+3
  5974     0C46  082B               	movf	?___flmul+2,w
  5975     0C47  00C5               	movwf	___flsub@a+2
  5976     0C48  082A               	movf	?___flmul+1,w
  5977     0C49  00C4               	movwf	___flsub@a+1
  5978     0C4A  0829               	movf	?___flmul,w
  5979     0C4B  00C3               	movwf	___flsub@a
  5980     0C4C  0021               	movlb	1	; select bank1
  5981     0C4D  083B               	movf	(efgtoa@h+3)^(0+128),w
  5982     0C4E  0020               	movlb	0	; select bank0
  5983     0C4F  00CA               	movwf	___flsub@b+3
  5984     0C50  0021               	movlb	1	; select bank1
  5985     0C51  083A               	movf	(efgtoa@h+2)^(0+128),w
  5986     0C52  0020               	movlb	0	; select bank0
  5987     0C53  00C9               	movwf	___flsub@b+2
  5988     0C54  0021               	movlb	1	; select bank1
  5989     0C55  0839               	movf	(efgtoa@h+1)^(0+128),w
  5990     0C56  0020               	movlb	0	; select bank0
  5991     0C57  00C8               	movwf	___flsub@b+1
  5992     0C58  0021               	movlb	1	; select bank1
  5993     0C59  0838               	movf	efgtoa@h^(0+128),w
  5994     0C5A  0020               	movlb	0	; select bank0
  5995     0C5B  00C7               	movwf	___flsub@b
  5996     0C5C  319A  2294  3188   	fcall	___flsub
  5997     0C5F  0020               	movlb	0	; select bank0
  5998     0C60  0846               	movf	?___flsub+3,w
  5999     0C61  0021               	movlb	1	; select bank1
  6000     0C62  00BB               	movwf	(efgtoa@h+3)^(0+128)
  6001     0C63  0020               	movlb	0	; select bank0
  6002     0C64  0845               	movf	?___flsub+2,w
  6003     0C65  0021               	movlb	1	; select bank1
  6004     0C66  00BA               	movwf	(efgtoa@h+2)^(0+128)
  6005     0C67  0020               	movlb	0	; select bank0
  6006     0C68  0844               	movf	?___flsub+1,w
  6007     0C69  0021               	movlb	1	; select bank1
  6008     0C6A  00B9               	movwf	(efgtoa@h+1)^(0+128)
  6009     0C6B  0020               	movlb	0	; select bank0
  6010     0C6C  0843               	movf	?___flsub,w
  6011     0C6D  0021               	movlb	1	; select bank1
  6012     0C6E  00B8               	movwf	efgtoa@h^(0+128)
  6013                           
  6014                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  6015     0C6F  3041               	movlw	65
  6016     0C70  0020               	movlb	0	; select bank0
  6017     0C71  00B7               	movwf	___fldiv@a+3
  6018     0C72  3020               	movlw	32
  6019     0C73  00B6               	movwf	___fldiv@a+2
  6020     0C74  3000               	movlw	0
  6021     0C75  00B5               	movwf	___fldiv@a+1
  6022     0C76  3000               	movlw	0
  6023     0C77  00B4               	movwf	___fldiv@a
  6024     0C78  0021               	movlb	1	; select bank1
  6025     0C79  084C               	movf	(efgtoa@u+3)^(0+128),w
  6026     0C7A  0020               	movlb	0	; select bank0
  6027     0C7B  00BB               	movwf	___fldiv@b+3
  6028     0C7C  0021               	movlb	1	; select bank1
  6029     0C7D  084B               	movf	(efgtoa@u+2)^(0+128),w
  6030     0C7E  0020               	movlb	0	; select bank0
  6031     0C7F  00BA               	movwf	___fldiv@b+2
  6032     0C80  0021               	movlb	1	; select bank1
  6033     0C81  084A               	movf	(efgtoa@u+1)^(0+128),w
  6034     0C82  0020               	movlb	0	; select bank0
  6035     0C83  00B9               	movwf	___fldiv@b+1
  6036     0C84  0021               	movlb	1	; select bank1
  6037     0C85  0849               	movf	efgtoa@u^(0+128),w
  6038     0C86  0020               	movlb	0	; select bank0
  6039     0C87  00B8               	movwf	___fldiv@b
  6040     0C88  3194  244E  3188   	fcall	___fldiv
  6041     0C8B  0020               	movlb	0	; select bank0
  6042     0C8C  0837               	movf	?___fldiv+3,w
  6043     0C8D  0021               	movlb	1	; select bank1
  6044     0C8E  00CC               	movwf	(efgtoa@u+3)^(0+128)
  6045     0C8F  0020               	movlb	0	; select bank0
  6046     0C90  0836               	movf	?___fldiv+2,w
  6047     0C91  0021               	movlb	1	; select bank1
  6048     0C92  00CB               	movwf	(efgtoa@u+2)^(0+128)
  6049     0C93  0020               	movlb	0	; select bank0
  6050     0C94  0835               	movf	?___fldiv+1,w
  6051     0C95  0021               	movlb	1	; select bank1
  6052     0C96  00CA               	movwf	(efgtoa@u+1)^(0+128)
  6053     0C97  0020               	movlb	0	; select bank0
  6054     0C98  0834               	movf	?___fldiv,w
  6055     0C99  0021               	movlb	1	; select bank1
  6056     0C9A  00C9               	movwf	efgtoa@u^(0+128)
  6057     0C9B                     l4542:
  6058                           
  6059                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  6060     0C9B  3001               	movlw	1
  6061     0C9C  07C0               	addwf	efgtoa@i^(0+128),f
  6062     0C9D  3000               	movlw	0
  6063     0C9E  3DC1               	addwfc	(efgtoa@i+1)^(0+128),f
  6064     0C9F                     l4544:
  6065                           
  6066                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  6067     0C9F  0841               	movf	(efgtoa@i+1)^(0+128),w
  6068     0CA0  3A80               	xorlw	128
  6069     0CA1  0020               	movlb	0	; select bank0
  6070     0CA2  00E7               	movwf	??_efgtoa
  6071     0CA3  0021               	movlb	1	; select bank1
  6072     0CA4  082E               	movf	(efgtoa@m+1)^(0+128),w
  6073     0CA5  3A80               	xorlw	128
  6074     0CA6  0020               	movlb	0	; select bank0
  6075     0CA7  0267               	subwf	??_efgtoa,w
  6076     0CA8  1D03               	skipz
  6077     0CA9  2CAD               	goto	u5505
  6078     0CAA  0021               	movlb	1	; select bank1
  6079     0CAB  082D               	movf	efgtoa@m^(0+128),w
  6080     0CAC  0240               	subwf	efgtoa@i^(0+128),w
  6081     0CAD                     u5505:
  6082     0CAD  1C03               	skipc
  6083     0CAE  2CB0               	goto	u5501
  6084     0CAF  2CB1               	goto	u5500
  6085     0CB0                     u5501:
  6086     0CB0  2BC8               	goto	l4540
  6087     0CB1                     u5500:
  6088     0CB1                     l4546:
  6089                           
  6090                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  6091     0CB1  3040               	movlw	64
  6092     0CB2  0020               	movlb	0	; select bank0
  6093     0CB3  00AC               	movwf	___flmul@b+3
  6094     0CB4  30A0               	movlw	160
  6095     0CB5  00AB               	movwf	___flmul@b+2
  6096     0CB6  3000               	movlw	0
  6097     0CB7  00AA               	movwf	___flmul@b+1
  6098     0CB8  3000               	movlw	0
  6099     0CB9  00A9               	movwf	___flmul@b
  6100     0CBA  0021               	movlb	1	; select bank1
  6101     0CBB  084C               	movf	(efgtoa@u+3)^(0+128),w
  6102     0CBC  0020               	movlb	0	; select bank0
  6103     0CBD  00B0               	movwf	___flmul@a+3
  6104     0CBE  0021               	movlb	1	; select bank1
  6105     0CBF  084B               	movf	(efgtoa@u+2)^(0+128),w
  6106     0CC0  0020               	movlb	0	; select bank0
  6107     0CC1  00AF               	movwf	___flmul@a+2
  6108     0CC2  0021               	movlb	1	; select bank1
  6109     0CC3  084A               	movf	(efgtoa@u+1)^(0+128),w
  6110     0CC4  0020               	movlb	0	; select bank0
  6111     0CC5  00AE               	movwf	___flmul@a+1
  6112     0CC6  0021               	movlb	1	; select bank1
  6113     0CC7  0849               	movf	efgtoa@u^(0+128),w
  6114     0CC8  0020               	movlb	0	; select bank0
  6115     0CC9  00AD               	movwf	___flmul@a
  6116     0CCA  3182  228D  3188   	fcall	___flmul
  6117     0CCD  0020               	movlb	0	; select bank0
  6118     0CCE  082C               	movf	?___flmul+3,w
  6119     0CCF  0021               	movlb	1	; select bank1
  6120     0CD0  00BF               	movwf	(efgtoa@l+3)^(0+128)
  6121     0CD1  0020               	movlb	0	; select bank0
  6122     0CD2  082B               	movf	?___flmul+2,w
  6123     0CD3  0021               	movlb	1	; select bank1
  6124     0CD4  00BE               	movwf	(efgtoa@l+2)^(0+128)
  6125     0CD5  0020               	movlb	0	; select bank0
  6126     0CD6  082A               	movf	?___flmul+1,w
  6127     0CD7  0021               	movlb	1	; select bank1
  6128     0CD8  00BD               	movwf	(efgtoa@l+1)^(0+128)
  6129     0CD9  0020               	movlb	0	; select bank0
  6130     0CDA  0829               	movf	?___flmul,w
  6131     0CDB  0021               	movlb	1	; select bank1
  6132     0CDC  00BC               	movwf	efgtoa@l^(0+128)
  6133                           
  6134                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  6135     0CDD  083B               	movf	(efgtoa@h+3)^(0+128),w
  6136     0CDE  0020               	movlb	0	; select bank0
  6137     0CDF  00C6               	movwf	___flge@ff1+3
  6138     0CE0  0021               	movlb	1	; select bank1
  6139     0CE1  083A               	movf	(efgtoa@h+2)^(0+128),w
  6140     0CE2  0020               	movlb	0	; select bank0
  6141     0CE3  00C5               	movwf	___flge@ff1+2
  6142     0CE4  0021               	movlb	1	; select bank1
  6143     0CE5  0839               	movf	(efgtoa@h+1)^(0+128),w
  6144     0CE6  0020               	movlb	0	; select bank0
  6145     0CE7  00C4               	movwf	___flge@ff1+1
  6146     0CE8  0021               	movlb	1	; select bank1
  6147     0CE9  0838               	movf	efgtoa@h^(0+128),w
  6148     0CEA  0020               	movlb	0	; select bank0
  6149     0CEB  00C3               	movwf	___flge@ff1
  6150     0CEC  0021               	movlb	1	; select bank1
  6151     0CED  083F               	movf	(efgtoa@l+3)^(0+128),w
  6152     0CEE  0020               	movlb	0	; select bank0
  6153     0CEF  00CA               	movwf	___flge@ff2+3
  6154     0CF0  0021               	movlb	1	; select bank1
  6155     0CF1  083E               	movf	(efgtoa@l+2)^(0+128),w
  6156     0CF2  0020               	movlb	0	; select bank0
  6157     0CF3  00C9               	movwf	___flge@ff2+2
  6158     0CF4  0021               	movlb	1	; select bank1
  6159     0CF5  083D               	movf	(efgtoa@l+1)^(0+128),w
  6160     0CF6  0020               	movlb	0	; select bank0
  6161     0CF7  00C8               	movwf	___flge@ff2+1
  6162     0CF8  0021               	movlb	1	; select bank1
  6163     0CF9  083C               	movf	efgtoa@l^(0+128),w
  6164     0CFA  0020               	movlb	0	; select bank0
  6165     0CFB  00C7               	movwf	___flge@ff2
  6166     0CFC  3190  202E  3188   	fcall	___flge
  6167     0CFF  1803               	btfsc	3,0
  6168     0D00  2D02               	goto	u5511
  6169     0D01  2D03               	goto	u5510
  6170     0D02                     u5511:
  6171     0D02  2D0D               	goto	l4550
  6172     0D03                     u5510:
  6173     0D03                     l4548:
  6174                           
  6175                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  6176     0D03  3000               	movlw	0
  6177     0D04  0021               	movlb	1	; select bank1
  6178     0D05  00BF               	movwf	(efgtoa@l+3)^(0+128)
  6179     0D06  3000               	movlw	0
  6180     0D07  00BE               	movwf	(efgtoa@l+2)^(0+128)
  6181     0D08  3000               	movlw	0
  6182     0D09  00BD               	movwf	(efgtoa@l+1)^(0+128)
  6183     0D0A  3000               	movlw	0
  6184     0D0B  00BC               	movwf	efgtoa@l^(0+128)
  6185                           
  6186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  6187     0D0C  2D41               	goto	l4556
  6188     0D0D                     l4550:
  6189                           
  6190                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  6191     0D0D  0021               	movlb	1	; select bank1
  6192     0D0E  083B               	movf	(efgtoa@h+3)^(0+128),w
  6193     0D0F  0020               	movlb	0	; select bank0
  6194     0D10  00A3               	movwf	___fleq@ff1+3
  6195     0D11  0021               	movlb	1	; select bank1
  6196     0D12  083A               	movf	(efgtoa@h+2)^(0+128),w
  6197     0D13  0020               	movlb	0	; select bank0
  6198     0D14  00A2               	movwf	___fleq@ff1+2
  6199     0D15  0021               	movlb	1	; select bank1
  6200     0D16  0839               	movf	(efgtoa@h+1)^(0+128),w
  6201     0D17  0020               	movlb	0	; select bank0
  6202     0D18  00A1               	movwf	___fleq@ff1+1
  6203     0D19  0021               	movlb	1	; select bank1
  6204     0D1A  0838               	movf	efgtoa@h^(0+128),w
  6205     0D1B  0020               	movlb	0	; select bank0
  6206     0D1C  00A0               	movwf	___fleq@ff1
  6207     0D1D  0021               	movlb	1	; select bank1
  6208     0D1E  083F               	movf	(efgtoa@l+3)^(0+128),w
  6209     0D1F  0020               	movlb	0	; select bank0
  6210     0D20  00A7               	movwf	___fleq@ff2+3
  6211     0D21  0021               	movlb	1	; select bank1
  6212     0D22  083E               	movf	(efgtoa@l+2)^(0+128),w
  6213     0D23  0020               	movlb	0	; select bank0
  6214     0D24  00A6               	movwf	___fleq@ff2+2
  6215     0D25  0021               	movlb	1	; select bank1
  6216     0D26  083D               	movf	(efgtoa@l+1)^(0+128),w
  6217     0D27  0020               	movlb	0	; select bank0
  6218     0D28  00A5               	movwf	___fleq@ff2+1
  6219     0D29  0021               	movlb	1	; select bank1
  6220     0D2A  083C               	movf	efgtoa@l^(0+128),w
  6221     0D2B  0020               	movlb	0	; select bank0
  6222     0D2C  00A4               	movwf	___fleq@ff2
  6223     0D2D  319C  2413  3188   	fcall	___fleq
  6224     0D30  1C03               	btfss	3,0
  6225     0D31  2D33               	goto	u5521
  6226     0D32  2D34               	goto	u5520
  6227     0D33                     u5521:
  6228     0D33  2D41               	goto	l4556
  6229     0D34                     u5520:
  6230     0D34                     l4552:
  6231     0D34  0021               	movlb	1	; select bank1
  6232     0D35  182B               	btfsc	efgtoa@d^(0+128),0
  6233     0D36  2D38               	goto	u5531
  6234     0D37  2D39               	goto	u5530
  6235     0D38                     u5531:
  6236     0D38  2D41               	goto	l4556
  6237     0D39                     u5530:
  6238     0D39                     l4554:
  6239                           
  6240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  6241     0D39  3000               	movlw	0
  6242     0D3A  00BF               	movwf	(efgtoa@l+3)^(0+128)
  6243     0D3B  3000               	movlw	0
  6244     0D3C  00BE               	movwf	(efgtoa@l+2)^(0+128)
  6245     0D3D  3000               	movlw	0
  6246     0D3E  00BD               	movwf	(efgtoa@l+1)^(0+128)
  6247     0D3F  3000               	movlw	0
  6248     0D40  00BC               	movwf	efgtoa@l^(0+128)
  6249     0D41                     l4556:
  6250                           
  6251                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  6252     0D41  0021               	movlb	1	; select bank1
  6253     0D42  083F               	movf	(efgtoa@l+3)^(0+128),w
  6254     0D43  0020               	movlb	0	; select bank0
  6255     0D44  00A3               	movwf	___fladd@b+3
  6256     0D45  0021               	movlb	1	; select bank1
  6257     0D46  083E               	movf	(efgtoa@l+2)^(0+128),w
  6258     0D47  0020               	movlb	0	; select bank0
  6259     0D48  00A2               	movwf	___fladd@b+2
  6260     0D49  0021               	movlb	1	; select bank1
  6261     0D4A  083D               	movf	(efgtoa@l+1)^(0+128),w
  6262     0D4B  0020               	movlb	0	; select bank0
  6263     0D4C  00A1               	movwf	___fladd@b+1
  6264     0D4D  0021               	movlb	1	; select bank1
  6265     0D4E  083C               	movf	efgtoa@l^(0+128),w
  6266     0D4F  0020               	movlb	0	; select bank0
  6267     0D50  00A0               	movwf	___fladd@b
  6268     0D51  0021               	movlb	1	; select bank1
  6269     0D52  0846               	movf	(efgtoa@g+3)^(0+128),w
  6270     0D53  0020               	movlb	0	; select bank0
  6271     0D54  00A7               	movwf	___fladd@a+3
  6272     0D55  0021               	movlb	1	; select bank1
  6273     0D56  0845               	movf	(efgtoa@g+2)^(0+128),w
  6274     0D57  0020               	movlb	0	; select bank0
  6275     0D58  00A6               	movwf	___fladd@a+2
  6276     0D59  0021               	movlb	1	; select bank1
  6277     0D5A  0844               	movf	(efgtoa@g+1)^(0+128),w
  6278     0D5B  0020               	movlb	0	; select bank0
  6279     0D5C  00A5               	movwf	___fladd@a+1
  6280     0D5D  0021               	movlb	1	; select bank1
  6281     0D5E  0843               	movf	efgtoa@g^(0+128),w
  6282     0D5F  0020               	movlb	0	; select bank0
  6283     0D60  00A4               	movwf	___fladd@a
  6284     0D61  3195  25F8  3188   	fcall	___fladd
  6285     0D64  0020               	movlb	0	; select bank0
  6286     0D65  0823               	movf	?___fladd+3,w
  6287     0D66  0021               	movlb	1	; select bank1
  6288     0D67  00BB               	movwf	(efgtoa@h+3)^(0+128)
  6289     0D68  0020               	movlb	0	; select bank0
  6290     0D69  0822               	movf	?___fladd+2,w
  6291     0D6A  0021               	movlb	1	; select bank1
  6292     0D6B  00BA               	movwf	(efgtoa@h+2)^(0+128)
  6293     0D6C  0020               	movlb	0	; select bank0
  6294     0D6D  0821               	movf	?___fladd+1,w
  6295     0D6E  0021               	movlb	1	; select bank1
  6296     0D6F  00B9               	movwf	(efgtoa@h+1)^(0+128)
  6297     0D70  0020               	movlb	0	; select bank0
  6298     0D71  0820               	movf	?___fladd,w
  6299     0D72  0021               	movlb	1	; select bank1
  6300     0D73  00B8               	movwf	efgtoa@h^(0+128)
  6301     0D74                     l4558:
  6302                           
  6303                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  6304     0D74  083B               	movf	(efgtoa@h+3)^(0+128),w
  6305     0D75  0020               	movlb	0	; select bank0
  6306     0D76  00C6               	movwf	___flge@ff1+3
  6307     0D77  0021               	movlb	1	; select bank1
  6308     0D78  083A               	movf	(efgtoa@h+2)^(0+128),w
  6309     0D79  0020               	movlb	0	; select bank0
  6310     0D7A  00C5               	movwf	___flge@ff1+2
  6311     0D7B  0021               	movlb	1	; select bank1
  6312     0D7C  0839               	movf	(efgtoa@h+1)^(0+128),w
  6313     0D7D  0020               	movlb	0	; select bank0
  6314     0D7E  00C4               	movwf	___flge@ff1+1
  6315     0D7F  0021               	movlb	1	; select bank1
  6316     0D80  0838               	movf	efgtoa@h^(0+128),w
  6317     0D81  0020               	movlb	0	; select bank0
  6318     0D82  00C3               	movwf	___flge@ff1
  6319     0D83  3041               	movlw	65
  6320     0D84  00AC               	movwf	___flmul@b+3
  6321     0D85  3020               	movlw	32
  6322     0D86  00AB               	movwf	___flmul@b+2
  6323     0D87  3000               	movlw	0
  6324     0D88  00AA               	movwf	___flmul@b+1
  6325     0D89  3000               	movlw	0
  6326     0D8A  00A9               	movwf	___flmul@b
  6327     0D8B  0021               	movlb	1	; select bank1
  6328     0D8C  0837               	movf	(efgtoa@ou+3)^(0+128),w
  6329     0D8D  0020               	movlb	0	; select bank0
  6330     0D8E  00B0               	movwf	___flmul@a+3
  6331     0D8F  0021               	movlb	1	; select bank1
  6332     0D90  0836               	movf	(efgtoa@ou+2)^(0+128),w
  6333     0D91  0020               	movlb	0	; select bank0
  6334     0D92  00AF               	movwf	___flmul@a+2
  6335     0D93  0021               	movlb	1	; select bank1
  6336     0D94  0835               	movf	(efgtoa@ou+1)^(0+128),w
  6337     0D95  0020               	movlb	0	; select bank0
  6338     0D96  00AE               	movwf	___flmul@a+1
  6339     0D97  0021               	movlb	1	; select bank1
  6340     0D98  0834               	movf	efgtoa@ou^(0+128),w
  6341     0D99  0020               	movlb	0	; select bank0
  6342     0D9A  00AD               	movwf	___flmul@a
  6343     0D9B  3182  228D  3188   	fcall	___flmul
  6344     0D9E  0020               	movlb	0	; select bank0
  6345     0D9F  082C               	movf	?___flmul+3,w
  6346     0DA0  00CA               	movwf	___flge@ff2+3
  6347     0DA1  082B               	movf	?___flmul+2,w
  6348     0DA2  00C9               	movwf	___flge@ff2+2
  6349     0DA3  082A               	movf	?___flmul+1,w
  6350     0DA4  00C8               	movwf	___flge@ff2+1
  6351     0DA5  0829               	movf	?___flmul,w
  6352     0DA6  00C7               	movwf	___flge@ff2
  6353     0DA7  3190  202E  3188   	fcall	___flge
  6354     0DAA  1C03               	btfss	3,0
  6355     0DAB  2DAD               	goto	u5541
  6356     0DAC  2DAE               	goto	u5540
  6357     0DAD                     u5541:
  6358     0DAD  2DE9               	goto	l1193
  6359     0DAE                     u5540:
  6360     0DAE                     l4560:
  6361                           
  6362                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  6363     0DAE  3001               	movlw	1
  6364     0DAF  0021               	movlb	1	; select bank1
  6365     0DB0  07B0               	addwf	efgtoa@e^(0+128),f
  6366     0DB1  3000               	movlw	0
  6367     0DB2  3DB1               	addwfc	(efgtoa@e+1)^(0+128),f
  6368     0DB3                     l4562:
  6369                           
  6370                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  6371     0DB3  3041               	movlw	65
  6372     0DB4  0020               	movlb	0	; select bank0
  6373     0DB5  00AC               	movwf	___flmul@b+3
  6374     0DB6  3020               	movlw	32
  6375     0DB7  00AB               	movwf	___flmul@b+2
  6376     0DB8  3000               	movlw	0
  6377     0DB9  00AA               	movwf	___flmul@b+1
  6378     0DBA  3000               	movlw	0
  6379     0DBB  00A9               	movwf	___flmul@b
  6380     0DBC  0021               	movlb	1	; select bank1
  6381     0DBD  0837               	movf	(efgtoa@ou+3)^(0+128),w
  6382     0DBE  0020               	movlb	0	; select bank0
  6383     0DBF  00B0               	movwf	___flmul@a+3
  6384     0DC0  0021               	movlb	1	; select bank1
  6385     0DC1  0836               	movf	(efgtoa@ou+2)^(0+128),w
  6386     0DC2  0020               	movlb	0	; select bank0
  6387     0DC3  00AF               	movwf	___flmul@a+2
  6388     0DC4  0021               	movlb	1	; select bank1
  6389     0DC5  0835               	movf	(efgtoa@ou+1)^(0+128),w
  6390     0DC6  0020               	movlb	0	; select bank0
  6391     0DC7  00AE               	movwf	___flmul@a+1
  6392     0DC8  0021               	movlb	1	; select bank1
  6393     0DC9  0834               	movf	efgtoa@ou^(0+128),w
  6394     0DCA  0020               	movlb	0	; select bank0
  6395     0DCB  00AD               	movwf	___flmul@a
  6396     0DCC  3182  228D  3188   	fcall	___flmul
  6397     0DCF  0020               	movlb	0	; select bank0
  6398     0DD0  082C               	movf	?___flmul+3,w
  6399     0DD1  0021               	movlb	1	; select bank1
  6400     0DD2  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  6401     0DD3  0020               	movlb	0	; select bank0
  6402     0DD4  082B               	movf	?___flmul+2,w
  6403     0DD5  0021               	movlb	1	; select bank1
  6404     0DD6  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  6405     0DD7  0020               	movlb	0	; select bank0
  6406     0DD8  082A               	movf	?___flmul+1,w
  6407     0DD9  0021               	movlb	1	; select bank1
  6408     0DDA  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  6409     0DDB  0020               	movlb	0	; select bank0
  6410     0DDC  0829               	movf	?___flmul,w
  6411     0DDD  0021               	movlb	1	; select bank1
  6412     0DDE  00B4               	movwf	efgtoa@ou^(0+128)
  6413     0DDF                     l4564:
  6414                           
  6415                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  6416     0DDF  3066               	movlw	102
  6417     0DE0  062A               	xorwf	efgtoa@nmode^(0+128),w
  6418     0DE1  1D03               	btfss	3,2
  6419     0DE2  2DE4               	goto	u5551
  6420     0DE3  2DE5               	goto	u5550
  6421     0DE4                     u5551:
  6422     0DE4  2DE9               	goto	l1193
  6423     0DE5                     u5550:
  6424     0DE5                     l4566:
  6425                           
  6426                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  6427     0DE5  3001               	movlw	1
  6428     0DE6  07AD               	addwf	efgtoa@m^(0+128),f
  6429     0DE7  3000               	movlw	0
  6430     0DE8  3DAE               	addwfc	(efgtoa@m+1)^(0+128),f
  6431     0DE9                     l1193:	
  6432                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 767:  }
  6433                           
  6434                           
  6435                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  6436     0DE9  0021               	movlb	1	; select bank1
  6437     0DEA  0837               	movf	(efgtoa@ou+3)^(0+128),w
  6438     0DEB  00CC               	movwf	(efgtoa@u+3)^(0+128)
  6439     0DEC  0836               	movf	(efgtoa@ou+2)^(0+128),w
  6440     0DED  00CB               	movwf	(efgtoa@u+2)^(0+128)
  6441     0DEE  0835               	movf	(efgtoa@ou+1)^(0+128),w
  6442     0DEF  00CA               	movwf	(efgtoa@u+1)^(0+128)
  6443     0DF0  0834               	movf	efgtoa@ou^(0+128),w
  6444     0DF1  00C9               	movwf	efgtoa@u^(0+128)
  6445                           
  6446                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  6447     0DF2  0831               	movf	(efgtoa@e+1)^(0+128),w
  6448     0DF3  00A1               	movwf	(efgtoa@ne+1)^(0+128)
  6449     0DF4  0830               	movf	efgtoa@e^(0+128),w
  6450     0DF5  00A0               	movwf	efgtoa@ne^(0+128)
  6451     0DF6                     l4568:
  6452                           
  6453                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  6454     0DF6  01A8               	clrf	efgtoa@pp^(0+128)
  6455     0DF7                     l4570:
  6456                           
  6457                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  6458     0DF7  01A4               	clrf	efgtoa@t^(0+128)
  6459     0DF8  01A5               	clrf	(efgtoa@t+1)^(0+128)
  6460     0DF9                     l4572:
  6461                           
  6462                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  6463     0DF9  01C0               	clrf	efgtoa@i^(0+128)
  6464     0DFA  01C1               	clrf	(efgtoa@i+1)^(0+128)
  6465                           
  6466                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6467     0DFB  2F42               	goto	l4616
  6468     0DFC                     l4574:
  6469                           
  6470                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  6471     0DFC  0021               	movlb	1	; select bank1
  6472     0DFD  084C               	movf	(efgtoa@u+3)^(0+128),w
  6473     0DFE  0020               	movlb	0	; select bank0
  6474     0DFF  00B7               	movwf	___fldiv@a+3
  6475     0E00  0021               	movlb	1	; select bank1
  6476     0E01  084B               	movf	(efgtoa@u+2)^(0+128),w
  6477     0E02  0020               	movlb	0	; select bank0
  6478     0E03  00B6               	movwf	___fldiv@a+2
  6479     0E04  0021               	movlb	1	; select bank1
  6480     0E05  084A               	movf	(efgtoa@u+1)^(0+128),w
  6481     0E06  0020               	movlb	0	; select bank0
  6482     0E07  00B5               	movwf	___fldiv@a+1
  6483     0E08  0021               	movlb	1	; select bank1
  6484     0E09  0849               	movf	efgtoa@u^(0+128),w
  6485     0E0A  0020               	movlb	0	; select bank0
  6486     0E0B  00B4               	movwf	___fldiv@a
  6487     0E0C  0021               	movlb	1	; select bank1
  6488     0E0D  083B               	movf	(efgtoa@h+3)^(0+128),w
  6489     0E0E  0020               	movlb	0	; select bank0
  6490     0E0F  00BB               	movwf	___fldiv@b+3
  6491     0E10  0021               	movlb	1	; select bank1
  6492     0E11  083A               	movf	(efgtoa@h+2)^(0+128),w
  6493     0E12  0020               	movlb	0	; select bank0
  6494     0E13  00BA               	movwf	___fldiv@b+2
  6495     0E14  0021               	movlb	1	; select bank1
  6496     0E15  0839               	movf	(efgtoa@h+1)^(0+128),w
  6497     0E16  0020               	movlb	0	; select bank0
  6498     0E17  00B9               	movwf	___fldiv@b+1
  6499     0E18  0021               	movlb	1	; select bank1
  6500     0E19  0838               	movf	efgtoa@h^(0+128),w
  6501     0E1A  0020               	movlb	0	; select bank0
  6502     0E1B  00B8               	movwf	___fldiv@b
  6503     0E1C  3194  244E  3188   	fcall	___fldiv
  6504     0E1F  0020               	movlb	0	; select bank0
  6505     0E20  0837               	movf	?___fldiv+3,w
  6506     0E21  00D1               	movwf	floorf@x+3
  6507     0E22  0836               	movf	?___fldiv+2,w
  6508     0E23  00D0               	movwf	floorf@x+2
  6509     0E24  0835               	movf	?___fldiv+1,w
  6510     0E25  00CF               	movwf	floorf@x+1
  6511     0E26  0834               	movf	?___fldiv,w
  6512     0E27  00CE               	movwf	floorf@x
  6513     0E28  3186  26E6  3188   	fcall	_floorf
  6514     0E2B  0020               	movlb	0	; select bank0
  6515     0E2C  0851               	movf	?_floorf+3,w
  6516     0E2D  0021               	movlb	1	; select bank1
  6517     0E2E  00BF               	movwf	(efgtoa@l+3)^(0+128)
  6518     0E2F  0020               	movlb	0	; select bank0
  6519     0E30  0850               	movf	?_floorf+2,w
  6520     0E31  0021               	movlb	1	; select bank1
  6521     0E32  00BE               	movwf	(efgtoa@l+2)^(0+128)
  6522     0E33  0020               	movlb	0	; select bank0
  6523     0E34  084F               	movf	?_floorf+1,w
  6524     0E35  0021               	movlb	1	; select bank1
  6525     0E36  00BD               	movwf	(efgtoa@l+1)^(0+128)
  6526     0E37  0020               	movlb	0	; select bank0
  6527     0E38  084E               	movf	?_floorf,w
  6528     0E39  0021               	movlb	1	; select bank1
  6529     0E3A  00BC               	movwf	efgtoa@l^(0+128)
  6530                           
  6531                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  6532     0E3B  083F               	movf	(efgtoa@l+3)^(0+128),w
  6533     0E3C  0020               	movlb	0	; select bank0
  6534     0E3D  00A3               	movwf	___fltol@f1+3
  6535     0E3E  0021               	movlb	1	; select bank1
  6536     0E3F  083E               	movf	(efgtoa@l+2)^(0+128),w
  6537     0E40  0020               	movlb	0	; select bank0
  6538     0E41  00A2               	movwf	___fltol@f1+2
  6539     0E42  0021               	movlb	1	; select bank1
  6540     0E43  083D               	movf	(efgtoa@l+1)^(0+128),w
  6541     0E44  0020               	movlb	0	; select bank0
  6542     0E45  00A1               	movwf	___fltol@f1+1
  6543     0E46  0021               	movlb	1	; select bank1
  6544     0E47  083C               	movf	efgtoa@l^(0+128),w
  6545     0E48  0020               	movlb	0	; select bank0
  6546     0E49  00A0               	movwf	___fltol@f1
  6547     0E4A  319E  2621  3188   	fcall	___fltol
  6548     0E4D  0020               	movlb	0	; select bank0
  6549     0E4E  0821               	movf	?___fltol+1,w
  6550     0E4F  3A80               	xorlw	128
  6551     0E50  00E7               	movwf	??_efgtoa
  6552     0E51  3080               	movlw	128
  6553     0E52  0267               	subwf	??_efgtoa,w
  6554     0E53  1D03               	skipz
  6555     0E54  2E57               	goto	u5565
  6556     0E55  300A               	movlw	10
  6557     0E56  0220               	subwf	?___fltol,w
  6558     0E57                     u5565:
  6559     0E57  1803               	skipnc
  6560     0E58  2E5A               	goto	u5561
  6561     0E59  2E5B               	goto	u5560
  6562     0E5A                     u5561:
  6563     0E5A  2E77               	goto	l4578
  6564     0E5B                     u5560:
  6565     0E5B                     l4576:
  6566     0E5B  0021               	movlb	1	; select bank1
  6567     0E5C  083F               	movf	(efgtoa@l+3)^(0+128),w
  6568     0E5D  0020               	movlb	0	; select bank0
  6569     0E5E  00A3               	movwf	___fltol@f1+3
  6570     0E5F  0021               	movlb	1	; select bank1
  6571     0E60  083E               	movf	(efgtoa@l+2)^(0+128),w
  6572     0E61  0020               	movlb	0	; select bank0
  6573     0E62  00A2               	movwf	___fltol@f1+2
  6574     0E63  0021               	movlb	1	; select bank1
  6575     0E64  083D               	movf	(efgtoa@l+1)^(0+128),w
  6576     0E65  0020               	movlb	0	; select bank0
  6577     0E66  00A1               	movwf	___fltol@f1+1
  6578     0E67  0021               	movlb	1	; select bank1
  6579     0E68  083C               	movf	efgtoa@l^(0+128),w
  6580     0E69  0020               	movlb	0	; select bank0
  6581     0E6A  00A0               	movwf	___fltol@f1
  6582     0E6B  319E  2621  3188   	fcall	___fltol
  6583     0E6E  0020               	movlb	0	; select bank0
  6584     0E6F  0821               	movf	?___fltol+1,w
  6585     0E70  0021               	movlb	1	; select bank1
  6586     0E71  00AC               	movwf	(efgtoa@d+1)^(0+128)
  6587     0E72  0020               	movlb	0	; select bank0
  6588     0E73  0820               	movf	?___fltol,w
  6589     0E74  0021               	movlb	1	; select bank1
  6590     0E75  00AB               	movwf	efgtoa@d^(0+128)
  6591     0E76  2E7C               	goto	l4580
  6592     0E77                     l4578:
  6593     0E77  3009               	movlw	9
  6594     0E78  0021               	movlb	1	; select bank1
  6595     0E79  00AB               	movwf	efgtoa@d^(0+128)
  6596     0E7A  3000               	movlw	0
  6597     0E7B  00AC               	movwf	(efgtoa@d^(0+128)+1)
  6598     0E7C                     l4580:
  6599                           
  6600                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  6601     0E7C  0828               	movf	efgtoa@pp^(0+128),w
  6602     0E7D  1D03               	btfss	3,2
  6603     0E7E  2E80               	goto	u5571
  6604     0E7F  2E81               	goto	u5570
  6605     0E80                     u5571:
  6606     0E80  2EAA               	goto	l4600
  6607     0E81                     u5570:
  6608     0E81                     l4582:
  6609     0E81  1FA1               	btfss	(efgtoa@ne+1)^(0+128),7
  6610     0E82  2E84               	goto	u5581
  6611     0E83  2E85               	goto	u5580
  6612     0E84                     u5581:
  6613     0E84  2EAA               	goto	l4600
  6614     0E85                     u5580:
  6615     0E85                     l4584:
  6616                           
  6617                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  6618     0E85  0847               	movf	efgtoa@n^(0+128),w
  6619     0E86  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6620     0E87  0086               	movwf	6
  6621     0E88  3002               	movlw	2	; select bank4/5
  6622     0E89  0087               	movwf	7
  6623     0E8A  302E               	movlw	46
  6624     0E8B  0081               	movwf	1
  6625     0E8C                     l4586:
  6626     0E8C  3001               	movlw	1
  6627     0E8D  07C7               	addwf	efgtoa@n^(0+128),f
  6628     0E8E  3000               	movlw	0
  6629     0E8F  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6630     0E90                     l4588:
  6631                           
  6632                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  6633     0E90  30FF               	movlw	255
  6634     0E91  07B2               	addwf	efgtoa@w^(0+128),f
  6635     0E92  30FF               	movlw	255
  6636     0E93  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  6637     0E94                     l4590:
  6638                           
  6639                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  6640     0E94  01A8               	clrf	efgtoa@pp^(0+128)
  6641     0E95  0AA8               	incf	efgtoa@pp^(0+128),f
  6642     0E96  2EAA               	goto	l4600
  6643     0E97                     l4592:
  6644                           
  6645                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  6646     0E97  0847               	movf	efgtoa@n^(0+128),w
  6647     0E98  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6648     0E99  0086               	movwf	6
  6649     0E9A  3002               	movlw	2	; select bank4/5
  6650     0E9B  0087               	movwf	7
  6651     0E9C  3030               	movlw	48
  6652     0E9D  0081               	movwf	1
  6653     0E9E                     l4594:
  6654     0E9E  3001               	movlw	1
  6655     0E9F  07C7               	addwf	efgtoa@n^(0+128),f
  6656     0EA0  3000               	movlw	0
  6657     0EA1  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6658     0EA2                     l4596:
  6659                           
  6660                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  6661     0EA2  30FF               	movlw	255
  6662     0EA3  07B2               	addwf	efgtoa@w^(0+128),f
  6663     0EA4  30FF               	movlw	255
  6664     0EA5  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  6665     0EA6                     l4598:
  6666                           
  6667                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  6668     0EA6  30FF               	movlw	255
  6669     0EA7  07A4               	addwf	efgtoa@t^(0+128),f
  6670     0EA8  30FF               	movlw	255
  6671     0EA9  3DA5               	addwfc	(efgtoa@t+1)^(0+128),f
  6672     0EAA                     l4600:
  6673                           
  6674                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  6675     0EAA  0824               	movf	efgtoa@t^(0+128),w
  6676     0EAB  0425               	iorwf	(efgtoa@t+1)^(0+128),w
  6677     0EAC  1D03               	btfss	3,2
  6678     0EAD  2EAF               	goto	u5591
  6679     0EAE  2EB0               	goto	u5590
  6680     0EAF                     u5591:
  6681     0EAF  2E97               	goto	l4592
  6682     0EB0                     u5590:
  6683     0EB0                     l4602:
  6684                           
  6685                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6686     0EB0  0847               	movf	efgtoa@n^(0+128),w
  6687     0EB1  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6688     0EB2  0086               	movwf	6
  6689     0EB3  3002               	movlw	2	; select bank4/5
  6690     0EB4  0087               	movwf	7
  6691     0EB5  082B               	movf	efgtoa@d^(0+128),w
  6692     0EB6  3E30               	addlw	48
  6693     0EB7  0081               	movwf	1
  6694     0EB8                     l4604:
  6695     0EB8  3001               	movlw	1
  6696     0EB9  07C7               	addwf	efgtoa@n^(0+128),f
  6697     0EBA  3000               	movlw	0
  6698     0EBB  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6699     0EBC                     l4606:
  6700                           
  6701                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  6702     0EBC  30FF               	movlw	255
  6703     0EBD  07B2               	addwf	efgtoa@w^(0+128),f
  6704     0EBE  30FF               	movlw	255
  6705     0EBF  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  6706     0EC0                     l4608:
  6707                           
  6708                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  6709     0EC0  084C               	movf	(efgtoa@u+3)^(0+128),w
  6710     0EC1  0020               	movlb	0	; select bank0
  6711     0EC2  00B0               	movwf	___flmul@a+3
  6712     0EC3  0021               	movlb	1	; select bank1
  6713     0EC4  084B               	movf	(efgtoa@u+2)^(0+128),w
  6714     0EC5  0020               	movlb	0	; select bank0
  6715     0EC6  00AF               	movwf	___flmul@a+2
  6716     0EC7  0021               	movlb	1	; select bank1
  6717     0EC8  084A               	movf	(efgtoa@u+1)^(0+128),w
  6718     0EC9  0020               	movlb	0	; select bank0
  6719     0ECA  00AE               	movwf	___flmul@a+1
  6720     0ECB  0021               	movlb	1	; select bank1
  6721     0ECC  0849               	movf	efgtoa@u^(0+128),w
  6722     0ECD  0020               	movlb	0	; select bank0
  6723     0ECE  00AD               	movwf	___flmul@a
  6724     0ECF  0021               	movlb	1	; select bank1
  6725     0ED0  083F               	movf	(efgtoa@l+3)^(0+128),w
  6726     0ED1  0020               	movlb	0	; select bank0
  6727     0ED2  00AC               	movwf	___flmul@b+3
  6728     0ED3  0021               	movlb	1	; select bank1
  6729     0ED4  083E               	movf	(efgtoa@l+2)^(0+128),w
  6730     0ED5  0020               	movlb	0	; select bank0
  6731     0ED6  00AB               	movwf	___flmul@b+2
  6732     0ED7  0021               	movlb	1	; select bank1
  6733     0ED8  083D               	movf	(efgtoa@l+1)^(0+128),w
  6734     0ED9  0020               	movlb	0	; select bank0
  6735     0EDA  00AA               	movwf	___flmul@b+1
  6736     0EDB  0021               	movlb	1	; select bank1
  6737     0EDC  083C               	movf	efgtoa@l^(0+128),w
  6738     0EDD  0020               	movlb	0	; select bank0
  6739     0EDE  00A9               	movwf	___flmul@b
  6740     0EDF  3182  228D  3188   	fcall	___flmul
  6741     0EE2  0020               	movlb	0	; select bank0
  6742     0EE3  082C               	movf	?___flmul+3,w
  6743     0EE4  00C6               	movwf	___flsub@a+3
  6744     0EE5  082B               	movf	?___flmul+2,w
  6745     0EE6  00C5               	movwf	___flsub@a+2
  6746     0EE7  082A               	movf	?___flmul+1,w
  6747     0EE8  00C4               	movwf	___flsub@a+1
  6748     0EE9  0829               	movf	?___flmul,w
  6749     0EEA  00C3               	movwf	___flsub@a
  6750     0EEB  0021               	movlb	1	; select bank1
  6751     0EEC  083B               	movf	(efgtoa@h+3)^(0+128),w
  6752     0EED  0020               	movlb	0	; select bank0
  6753     0EEE  00CA               	movwf	___flsub@b+3
  6754     0EEF  0021               	movlb	1	; select bank1
  6755     0EF0  083A               	movf	(efgtoa@h+2)^(0+128),w
  6756     0EF1  0020               	movlb	0	; select bank0
  6757     0EF2  00C9               	movwf	___flsub@b+2
  6758     0EF3  0021               	movlb	1	; select bank1
  6759     0EF4  0839               	movf	(efgtoa@h+1)^(0+128),w
  6760     0EF5  0020               	movlb	0	; select bank0
  6761     0EF6  00C8               	movwf	___flsub@b+1
  6762     0EF7  0021               	movlb	1	; select bank1
  6763     0EF8  0838               	movf	efgtoa@h^(0+128),w
  6764     0EF9  0020               	movlb	0	; select bank0
  6765     0EFA  00C7               	movwf	___flsub@b
  6766     0EFB  319A  2294  3188   	fcall	___flsub
  6767     0EFE  0020               	movlb	0	; select bank0
  6768     0EFF  0846               	movf	?___flsub+3,w
  6769     0F00  0021               	movlb	1	; select bank1
  6770     0F01  00BB               	movwf	(efgtoa@h+3)^(0+128)
  6771     0F02  0020               	movlb	0	; select bank0
  6772     0F03  0845               	movf	?___flsub+2,w
  6773     0F04  0021               	movlb	1	; select bank1
  6774     0F05  00BA               	movwf	(efgtoa@h+2)^(0+128)
  6775     0F06  0020               	movlb	0	; select bank0
  6776     0F07  0844               	movf	?___flsub+1,w
  6777     0F08  0021               	movlb	1	; select bank1
  6778     0F09  00B9               	movwf	(efgtoa@h+1)^(0+128)
  6779     0F0A  0020               	movlb	0	; select bank0
  6780     0F0B  0843               	movf	?___flsub,w
  6781     0F0C  0021               	movlb	1	; select bank1
  6782     0F0D  00B8               	movwf	efgtoa@h^(0+128)
  6783     0F0E                     l4610:
  6784                           
  6785                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  6786     0F0E  3041               	movlw	65
  6787     0F0F  0020               	movlb	0	; select bank0
  6788     0F10  00B7               	movwf	___fldiv@a+3
  6789     0F11  3020               	movlw	32
  6790     0F12  00B6               	movwf	___fldiv@a+2
  6791     0F13  3000               	movlw	0
  6792     0F14  00B5               	movwf	___fldiv@a+1
  6793     0F15  3000               	movlw	0
  6794     0F16  00B4               	movwf	___fldiv@a
  6795     0F17  0021               	movlb	1	; select bank1
  6796     0F18  084C               	movf	(efgtoa@u+3)^(0+128),w
  6797     0F19  0020               	movlb	0	; select bank0
  6798     0F1A  00BB               	movwf	___fldiv@b+3
  6799     0F1B  0021               	movlb	1	; select bank1
  6800     0F1C  084B               	movf	(efgtoa@u+2)^(0+128),w
  6801     0F1D  0020               	movlb	0	; select bank0
  6802     0F1E  00BA               	movwf	___fldiv@b+2
  6803     0F1F  0021               	movlb	1	; select bank1
  6804     0F20  084A               	movf	(efgtoa@u+1)^(0+128),w
  6805     0F21  0020               	movlb	0	; select bank0
  6806     0F22  00B9               	movwf	___fldiv@b+1
  6807     0F23  0021               	movlb	1	; select bank1
  6808     0F24  0849               	movf	efgtoa@u^(0+128),w
  6809     0F25  0020               	movlb	0	; select bank0
  6810     0F26  00B8               	movwf	___fldiv@b
  6811     0F27  3194  244E  3188   	fcall	___fldiv
  6812     0F2A  0020               	movlb	0	; select bank0
  6813     0F2B  0837               	movf	?___fldiv+3,w
  6814     0F2C  0021               	movlb	1	; select bank1
  6815     0F2D  00CC               	movwf	(efgtoa@u+3)^(0+128)
  6816     0F2E  0020               	movlb	0	; select bank0
  6817     0F2F  0836               	movf	?___fldiv+2,w
  6818     0F30  0021               	movlb	1	; select bank1
  6819     0F31  00CB               	movwf	(efgtoa@u+2)^(0+128)
  6820     0F32  0020               	movlb	0	; select bank0
  6821     0F33  0835               	movf	?___fldiv+1,w
  6822     0F34  0021               	movlb	1	; select bank1
  6823     0F35  00CA               	movwf	(efgtoa@u+1)^(0+128)
  6824     0F36  0020               	movlb	0	; select bank0
  6825     0F37  0834               	movf	?___fldiv,w
  6826     0F38  0021               	movlb	1	; select bank1
  6827     0F39  00C9               	movwf	efgtoa@u^(0+128)
  6828     0F3A                     l4612:
  6829                           
  6830                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  6831     0F3A  30FF               	movlw	255
  6832     0F3B  07A0               	addwf	efgtoa@ne^(0+128),f
  6833     0F3C  30FF               	movlw	255
  6834     0F3D  3DA1               	addwfc	(efgtoa@ne+1)^(0+128),f
  6835     0F3E                     l4614:
  6836                           
  6837                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  6838     0F3E  3001               	movlw	1
  6839     0F3F  07C0               	addwf	efgtoa@i^(0+128),f
  6840     0F40  3000               	movlw	0
  6841     0F41  3DC1               	addwfc	(efgtoa@i+1)^(0+128),f
  6842     0F42                     l4616:
  6843                           
  6844                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6845     0F42  0841               	movf	(efgtoa@i+1)^(0+128),w
  6846     0F43  3A80               	xorlw	128
  6847     0F44  0020               	movlb	0	; select bank0
  6848     0F45  00E7               	movwf	??_efgtoa
  6849     0F46  0021               	movlb	1	; select bank1
  6850     0F47  082E               	movf	(efgtoa@m+1)^(0+128),w
  6851     0F48  3A80               	xorlw	128
  6852     0F49  0020               	movlb	0	; select bank0
  6853     0F4A  0267               	subwf	??_efgtoa,w
  6854     0F4B  1D03               	skipz
  6855     0F4C  2F50               	goto	u5605
  6856     0F4D  0021               	movlb	1	; select bank1
  6857     0F4E  082D               	movf	efgtoa@m^(0+128),w
  6858     0F4F  0240               	subwf	efgtoa@i^(0+128),w
  6859     0F50                     u5605:
  6860     0F50  1803               	skipnc
  6861     0F51  2F53               	goto	u5601
  6862     0F52  2F54               	goto	u5600
  6863     0F53                     u5601:
  6864     0F53  2F64               	goto	l4620
  6865     0F54                     u5600:
  6866     0F54                     l4618:
  6867     0F54  0021               	movlb	1	; select bank1
  6868     0F55  0848               	movf	(efgtoa@n+1)^(0+128),w
  6869     0F56  3A80               	xorlw	128
  6870     0F57  0020               	movlb	0	; select bank0
  6871     0F58  00E7               	movwf	??_efgtoa
  6872     0F59  3080               	movlw	128
  6873     0F5A  0267               	subwf	??_efgtoa,w
  6874     0F5B  1D03               	skipz
  6875     0F5C  2F60               	goto	u5615
  6876     0F5D  304B               	movlw	75
  6877     0F5E  0021               	movlb	1	; select bank1
  6878     0F5F  0247               	subwf	efgtoa@n^(0+128),w
  6879     0F60                     u5615:
  6880     0F60  1C03               	skipc
  6881     0F61  2F63               	goto	u5611
  6882     0F62  2F64               	goto	u5610
  6883     0F63                     u5611:
  6884     0F63  2DFC               	goto	l4574
  6885     0F64                     u5610:
  6886     0F64                     l4620:
  6887                           
  6888                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  6889     0F64  304F               	movlw	79
  6890     0F65  0021               	movlb	1	; select bank1
  6891     0F66  00C0               	movwf	efgtoa@i^(0+128)
  6892     0F67  3000               	movlw	0
  6893     0F68  00C1               	movwf	(efgtoa@i^(0+128)+1)
  6894     0F69                     l4622:
  6895                           
  6896                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  6897     0F69  0840               	movf	efgtoa@i^(0+128),w
  6898     0F6A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6899     0F6B  0086               	movwf	6
  6900     0F6C  3002               	movlw	2	; select bank4/5
  6901     0F6D  0087               	movwf	7
  6902     0F6E  0181               	clrf	1
  6903     0F6F                     l4624:
  6904                           
  6905                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  6906     0F6F  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6907     0F70  0020               	movlb	0	; select bank0
  6908     0F71  00A0               	movwf	memcpy@s1
  6909     0F72  0021               	movlb	1	; select bank1
  6910     0F73  0848               	movf	(efgtoa@n+1)^(0+128),w
  6911     0F74  0020               	movlb	0	; select bank0
  6912     0F75  00A2               	movwf	memcpy@n+1
  6913     0F76  0021               	movlb	1	; select bank1
  6914     0F77  0847               	movf	efgtoa@n^(0+128),w
  6915     0F78  0020               	movlb	0	; select bank0
  6916     0F79  00A1               	movwf	memcpy@n
  6917     0F7A  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6918     0F7B  00E7               	movwf	??_efgtoa
  6919     0F7C  0021               	movlb	1	; select bank1
  6920     0F7D  0847               	movf	efgtoa@n^(0+128),w
  6921     0F7E  0020               	movlb	0	; select bank0
  6922     0F7F  0267               	subwf	??_efgtoa,w
  6923     0F80  0021               	movlb	1	; select bank1
  6924     0F81  0740               	addwf	efgtoa@i^(0+128),w
  6925     0F82  319B  238B  3188   	fcall	_memcpy
  6926     0F85                     l4626:
  6927                           
  6928                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  6929     0F85  0021               	movlb	1	; select bank1
  6930     0F86  0847               	movf	efgtoa@n^(0+128),w
  6931     0F87  0240               	subwf	efgtoa@i^(0+128),w
  6932     0F88  00C7               	movwf	efgtoa@n^(0+128)
  6933     0F89  0848               	movf	(efgtoa@n+1)^(0+128),w
  6934     0F8A  3B41               	subwfb	(efgtoa@i+1)^(0+128),w
  6935     0F8B  00C8               	movwf	(efgtoa@n+1)^(0+128)
  6936     0F8C                     l4628:
  6937                           
  6938                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  6939     0F8C  0842               	movf	efgtoa@sign^(0+128),w
  6940     0F8D  1D03               	btfss	3,2
  6941     0F8E  2F90               	goto	u5621
  6942     0F8F  2F92               	goto	u5620
  6943     0F90                     u5621:
  6944     0F90  3001               	movlw	1
  6945     0F91  2F93               	goto	u5630
  6946     0F92                     u5620:
  6947     0F92  3000               	movlw	0
  6948     0F93                     u5630:
  6949     0F93  0020               	movlb	0	; select bank0
  6950     0F94  00E7               	movwf	??_efgtoa
  6951     0F95  01E8               	clrf	??_efgtoa+1
  6952     0F96  0867               	movf	??_efgtoa,w
  6953     0F97  0021               	movlb	1	; select bank1
  6954     0F98  00C0               	movwf	efgtoa@i^(0+128)
  6955     0F99  0020               	movlb	0	; select bank0
  6956     0F9A  0868               	movf	??_efgtoa+1,w
  6957     0F9B  0021               	movlb	1	; select bank1
  6958     0F9C  00C1               	movwf	(efgtoa@i+1)^(0+128)
  6959     0F9D                     l4630:
  6960                           
  6961                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
  6962     0F9D  0022               	movlb	2	; select bank2
  6963     0F9E  1CB0               	btfss	_flags^(0+256),1
  6964     0F9F  2FA1               	goto	u5641
  6965     0FA0  2FA2               	goto	u5640
  6966     0FA1                     u5641:
  6967     0FA1  2FD9               	goto	l4642
  6968     0FA2                     u5640:
  6969     0FA2  2FB3               	goto	l4638
  6970     0FA3                     l4634:
  6971                           
  6972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
  6973     0FA3  30FF               	movlw	255
  6974     0FA4  0021               	movlb	1	; select bank1
  6975     0FA5  07C7               	addwf	efgtoa@n^(0+128),f
  6976     0FA6  30FF               	movlw	255
  6977     0FA7  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6978     0FA8  0847               	movf	efgtoa@n^(0+128),w
  6979     0FA9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6980     0FAA  0086               	movwf	6
  6981     0FAB  3002               	movlw	2	; select bank4/5
  6982     0FAC  0087               	movwf	7
  6983     0FAD  3030               	movlw	48
  6984     0FAE  0081               	movwf	1
  6985     0FAF                     l4636:
  6986                           
  6987                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 856:    w--;
  6988     0FAF  30FF               	movlw	255
  6989     0FB0  07B2               	addwf	efgtoa@w^(0+128),f
  6990     0FB1  30FF               	movlw	255
  6991     0FB2  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  6992     0FB3                     l4638:
  6993                           
  6994                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
  6995     0FB3  0021               	movlb	1	; select bank1
  6996     0FB4  0841               	movf	(efgtoa@i+1)^(0+128),w
  6997     0FB5  3A80               	xorlw	128
  6998     0FB6  0020               	movlb	0	; select bank0
  6999     0FB7  00E7               	movwf	??_efgtoa
  7000     0FB8  0021               	movlb	1	; select bank1
  7001     0FB9  0833               	movf	(efgtoa@w+1)^(0+128),w
  7002     0FBA  3A80               	xorlw	128
  7003     0FBB  0020               	movlb	0	; select bank0
  7004     0FBC  0267               	subwf	??_efgtoa,w
  7005     0FBD  1D03               	skipz
  7006     0FBE  2FC2               	goto	u5655
  7007     0FBF  0021               	movlb	1	; select bank1
  7008     0FC0  0832               	movf	efgtoa@w^(0+128),w
  7009     0FC1  0240               	subwf	efgtoa@i^(0+128),w
  7010     0FC2                     u5655:
  7011     0FC2  1803               	skipnc
  7012     0FC3  2FC5               	goto	u5651
  7013     0FC4  2FC6               	goto	u5650
  7014     0FC5                     u5651:
  7015     0FC5  2FD9               	goto	l4642
  7016     0FC6                     u5650:
  7017     0FC6                     l4640:
  7018     0FC6  0021               	movlb	1	; select bank1
  7019     0FC7  0841               	movf	(efgtoa@i+1)^(0+128),w
  7020     0FC8  3A80               	xorlw	128
  7021     0FC9  0020               	movlb	0	; select bank0
  7022     0FCA  00E7               	movwf	??_efgtoa
  7023     0FCB  0021               	movlb	1	; select bank1
  7024     0FCC  0848               	movf	(efgtoa@n+1)^(0+128),w
  7025     0FCD  3A80               	xorlw	128
  7026     0FCE  0020               	movlb	0	; select bank0
  7027     0FCF  0267               	subwf	??_efgtoa,w
  7028     0FD0  1D03               	skipz
  7029     0FD1  2FD5               	goto	u5665
  7030     0FD2  0021               	movlb	1	; select bank1
  7031     0FD3  0847               	movf	efgtoa@n^(0+128),w
  7032     0FD4  0240               	subwf	efgtoa@i^(0+128),w
  7033     0FD5                     u5665:
  7034     0FD5  1C03               	skipc
  7035     0FD6  2FD8               	goto	u5661
  7036     0FD7  2FD9               	goto	u5660
  7037     0FD8                     u5661:
  7038     0FD8  2FA3               	goto	l4634
  7039     0FD9                     u5660:
  7040     0FD9                     l4642:
  7041                           
  7042                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  7043     0FD9  0021               	movlb	1	; select bank1
  7044     0FDA  0842               	movf	efgtoa@sign^(0+128),w
  7045     0FDB  1903               	btfsc	3,2
  7046     0FDC  2FDE               	goto	u5671
  7047     0FDD  2FDF               	goto	u5670
  7048     0FDE                     u5671:
  7049     0FDE  2FEA               	goto	l4646
  7050     0FDF                     u5670:
  7051     0FDF                     l4644:
  7052                           
  7053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  7054     0FDF  30FF               	movlw	255
  7055     0FE0  07C7               	addwf	efgtoa@n^(0+128),f
  7056     0FE1  30FF               	movlw	255
  7057     0FE2  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  7058     0FE3  0847               	movf	efgtoa@n^(0+128),w
  7059     0FE4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7060     0FE5  0086               	movwf	6
  7061     0FE6  3002               	movlw	2	; select bank4/5
  7062     0FE7  0087               	movwf	7
  7063     0FE8  0842               	movf	efgtoa@sign^(0+128),w
  7064     0FE9  0081               	movwf	1
  7065     0FEA                     l4646:
  7066                           
  7067                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  7068     0FEA  0840               	movf	efgtoa@i^(0+128),w
  7069     0FEB  02B2               	subwf	efgtoa@w^(0+128),f
  7070     0FEC  0841               	movf	(efgtoa@i+1)^(0+128),w
  7071     0FED  3BB3               	subwfb	(efgtoa@w+1)^(0+128),f
  7072     0FEE                     l4648:
  7073                           
  7074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  7075     0FEE  0847               	movf	efgtoa@n^(0+128),w
  7076     0FEF  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7077     0FF0  0020               	movlb	0	; select bank0
  7078     0FF1  00AF               	movwf	pad@buf
  7079     0FF2  0021               	movlb	1	; select bank1
  7080     0FF3  0833               	movf	(efgtoa@w+1)^(0+128),w
  7081     0FF4  0020               	movlb	0	; select bank0
  7082     0FF5  00B1               	movwf	pad@p+1
  7083     0FF6  0021               	movlb	1	; select bank1
  7084     0FF7  0832               	movf	efgtoa@w^(0+128),w
  7085     0FF8  0020               	movlb	0	; select bank0
  7086     0FF9  00B0               	movwf	pad@p
  7087     0FFA  0021               	movlb	1	; select bank1
  7088     0FFB  082F               	movf	efgtoa@fp^(0+128),w
  7089     0FFC  319B  23E3  3188   	fcall	_pad
  7090     0FFF                     l1167:
  7091     0FFF  0008               	return
  7092     1000                     __end_of_efgtoa:
  7093                           
  7094                           	psect	text7
  7095     19FE                     __ptext7:	
  7096 ;; *************** function _strcpy *****************
  7097 ;; Defined at:
  7098 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;  dest            1    wreg     PTR unsigned char 
  7101 ;;		 -> dbuf(80), 
  7102 ;;  src             2    0[BANK0 ] PTR const unsigned char 
  7103 ;;		 -> STR_22(4), STR_19(4), 
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;  dest            1    5[BANK0 ] PTR unsigned char 
  7106 ;;		 -> dbuf(80), 
  7107 ;;  d               1    4[BANK0 ] PTR unsigned char 
  7108 ;;		 -> dbuf(80), 
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  1    wreg      PTR unsigned char 
  7111 ;; Registers used:
  7112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7118 ;;      Params:         0       2       0       0       0       0       0       0
  7119 ;;      Locals:         0       2       0       0       0       0       0       0
  7120 ;;      Temps:          0       2       0       0       0       0       0       0
  7121 ;;      Totals:         0       6       0       0       0       0       0       0
  7122 ;;Total ram usage:        6 bytes
  7123 ;; Hardware stack levels used: 1
  7124 ;; Hardware stack levels required when called: 4
  7125 ;; This function calls:
  7126 ;;		Nothing
  7127 ;; This function is called by:
  7128 ;;		_efgtoa
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132     19FE                     _strcpy:	
  7133                           ;psect for function _strcpy
  7134                           
  7135                           
  7136                           ;incstack = 0
  7137                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  7138                           ;strcpy@dest stored from wreg
  7139     19FE  0020               	movlb	0	; select bank0
  7140     19FF  00A5               	movwf	strcpy@dest
  7141     1A00                     l4318:
  7142     1A00  0825               	movf	strcpy@dest,w
  7143     1A01  00A4               	movwf	strcpy@d
  7144     1A02                     l4320:
  7145     1A02  0824               	movf	strcpy@d,w
  7146     1A03  0086               	movwf	6
  7147     1A04  3002               	movlw	2	; select bank4/5
  7148     1A05  0087               	movwf	7
  7149     1A06  0AA4               	incf	strcpy@d,f
  7150     1A07  0821               	movf	strcpy@src+1,w
  7151     1A08  00A3               	movwf	??_strcpy+1
  7152     1A09  0820               	movf	strcpy@src,w
  7153     1A0A  00A2               	movwf	??_strcpy
  7154     1A0B  0AA0               	incf	strcpy@src,f
  7155     1A0C  1903               	skipnz
  7156     1A0D  0AA1               	incf	strcpy@src+1,f
  7157     1A0E  0822               	movf	??_strcpy,w
  7158     1A0F  0084               	movwf	4
  7159     1A10  0823               	movf	??_strcpy+1,w
  7160     1A11  0085               	movwf	5
  7161     1A12  0800               	movf	0,w	;code access
  7162     1A13  3FC0               	movwi [0]fsr1
  7163     1A14  0889               	movf	9,f
  7164     1A15  1D03               	btfss	3,2
  7165     1A16  2A18               	goto	u5031
  7166     1A17  2A19               	goto	u5030
  7167     1A18                     u5031:
  7168     1A18  2A02               	goto	l4320
  7169     1A19                     u5030:
  7170     1A19                     l1340:
  7171     1A19  0008               	return
  7172     1A1A                     __end_of_strcpy:
  7173                           
  7174                           	psect	text8
  7175     1B8B                     __ptext8:	
  7176 ;; *************** function _memcpy *****************
  7177 ;; Defined at:
  7178 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  d1              1    wreg     PTR void 
  7181 ;;		 -> dbuf(80), 
  7182 ;;  s1              1    0[BANK0 ] PTR const void 
  7183 ;;		 -> dbuf(80), 
  7184 ;;  n               2    1[BANK0 ] unsigned int 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  d1              1    5[BANK0 ] PTR void 
  7187 ;;		 -> dbuf(80), 
  7188 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  7189 ;;		 -> dbuf(80), 
  7190 ;;  d               1    6[BANK0 ] PTR unsigned char 
  7191 ;;		 -> dbuf(80), 
  7192 ;;  tmp             1    4[BANK0 ] unsigned char 
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  1    wreg      PTR void 
  7195 ;; Registers used:
  7196 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7202 ;;      Params:         0       3       0       0       0       0       0       0
  7203 ;;      Locals:         0       4       0       0       0       0       0       0
  7204 ;;      Temps:          0       1       0       0       0       0       0       0
  7205 ;;      Totals:         0       8       0       0       0       0       0       0
  7206 ;;Total ram usage:        8 bytes
  7207 ;; Hardware stack levels used: 1
  7208 ;; Hardware stack levels required when called: 4
  7209 ;; This function calls:
  7210 ;;		Nothing
  7211 ;; This function is called by:
  7212 ;;		_efgtoa
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216     1B8B                     _memcpy:	
  7217                           ;psect for function _memcpy
  7218                           
  7219                           
  7220                           ;incstack = 0
  7221                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  7222                           ;memcpy@d1 stored from wreg
  7223     1B8B  0020               	movlb	0	; select bank0
  7224     1B8C  00A5               	movwf	memcpy@d1
  7225     1B8D                     l4360:
  7226     1B8D  0820               	movf	memcpy@s1,w
  7227     1B8E  00A7               	movwf	memcpy@s
  7228     1B8F  0825               	movf	memcpy@d1,w
  7229     1B90  00A6               	movwf	memcpy@d
  7230     1B91  2BA6               	goto	l1300
  7231     1B92                     l4362:
  7232     1B92  0827               	movf	memcpy@s,w
  7233     1B93  0086               	movwf	6
  7234     1B94  3002               	movlw	2	; select bank4/5
  7235     1B95  0087               	movwf	7
  7236     1B96  0801               	movf	1,w
  7237     1B97  00A4               	movwf	memcpy@tmp
  7238     1B98                     l4364:
  7239     1B98  3001               	movlw	1
  7240     1B99  00A3               	movwf	??_memcpy
  7241     1B9A  0823               	movf	??_memcpy,w
  7242     1B9B  07A7               	addwf	memcpy@s,f
  7243     1B9C                     l4366:
  7244     1B9C  0826               	movf	memcpy@d,w
  7245     1B9D  0086               	movwf	6
  7246     1B9E  3002               	movlw	2	; select bank4/5
  7247     1B9F  0087               	movwf	7
  7248     1BA0  0824               	movf	memcpy@tmp,w
  7249     1BA1  0081               	movwf	1
  7250     1BA2  3001               	movlw	1
  7251     1BA3  00A3               	movwf	??_memcpy
  7252     1BA4  0823               	movf	??_memcpy,w
  7253     1BA5  07A6               	addwf	memcpy@d,f
  7254     1BA6                     l1300:
  7255     1BA6  3001               	movlw	1
  7256     1BA7  02A1               	subwf	memcpy@n,f
  7257     1BA8  3000               	movlw	0
  7258     1BA9  3BA2               	subwfb	memcpy@n+1,f
  7259     1BAA  0A21               	incf	memcpy@n,w
  7260     1BAB  1D03               	skipz
  7261     1BAC  2BB1               	goto	u5161
  7262     1BAD  0A22               	incf	memcpy@n+1,w
  7263     1BAE  1D03               	btfss	3,2
  7264     1BAF  2BB1               	goto	u5161
  7265     1BB0  2BB2               	goto	u5160
  7266     1BB1                     u5161:
  7267     1BB1  2B92               	goto	l4362
  7268     1BB2                     u5160:
  7269     1BB2                     l1303:
  7270     1BB2  0008               	return
  7271     1BB3                     __end_of_memcpy:
  7272                           
  7273                           	psect	text9
  7274     19B5                     __ptext9:	
  7275 ;; *************** function _labs *****************
  7276 ;; Defined at:
  7277 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;  a               4    0[BANK0 ] long 
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;		None
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  4    0[BANK0 ] long 
  7284 ;; Registers used:
  7285 ;;		wreg, status,2, status,0
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7291 ;;      Params:         0       4       0       0       0       0       0       0
  7292 ;;      Locals:         0       0       0       0       0       0       0       0
  7293 ;;      Temps:          0       0       0       0       0       0       0       0
  7294 ;;      Totals:         0       4       0       0       0       0       0       0
  7295 ;;Total ram usage:        4 bytes
  7296 ;; Hardware stack levels used: 1
  7297 ;; Hardware stack levels required when called: 4
  7298 ;; This function calls:
  7299 ;;		Nothing
  7300 ;; This function is called by:
  7301 ;;		_efgtoa
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305     19B5                     _labs:	
  7306                           ;psect for function _labs
  7307                           
  7308     19B5                     l4322:	
  7309                           ;incstack = 0
  7310                           ; Regs used in _labs: [wreg+status,2+status,0]
  7311                           
  7312     19B5  0020               	movlb	0	; select bank0
  7313     19B6  1BA3               	btfsc	labs@a+3,7
  7314     19B7  29B9               	goto	u5041
  7315     19B8  29BA               	goto	u5040
  7316     19B9                     u5041:
  7317     19B9  29BB               	goto	l4326
  7318     19BA                     u5040:
  7319     19BA                     l4324:
  7320     19BA  29CA               	goto	l1297
  7321     19BB                     l4326:
  7322     19BB  0920               	comf	labs@a,w
  7323     19BC  00A0               	movwf	?_labs
  7324     19BD  0921               	comf	labs@a+1,w
  7325     19BE  00A1               	movwf	?_labs+1
  7326     19BF  0922               	comf	labs@a+2,w
  7327     19C0  00A2               	movwf	?_labs+2
  7328     19C1  0923               	comf	labs@a+3,w
  7329     19C2  00A3               	movwf	?_labs+3
  7330     19C3  0AA0               	incf	?_labs,f
  7331     19C4  1903               	skipnz
  7332     19C5  0AA1               	incf	?_labs+1,f
  7333     19C6  1903               	skipnz
  7334     19C7  0AA2               	incf	?_labs+2,f
  7335     19C8  1903               	skipnz
  7336     19C9  0AA3               	incf	?_labs+3,f
  7337     19CA                     l1297:
  7338     19CA  0008               	return
  7339     19CB                     __end_of_labs:
  7340                           
  7341                           	psect	text10
  7342     06E6                     __ptext10:	
  7343 ;; *************** function _floorf *****************
  7344 ;; Defined at:
  7345 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;  x               4   46[BANK0 ] float 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;  u               4   62[BANK0 ] struct .
  7350 ;;  m               4   56[BANK0 ] unsigned long 
  7351 ;;  e               2   60[BANK0 ] int 
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  4   46[BANK0 ] float 
  7354 ;; Registers used:
  7355 ;;		wreg, status,2, status,0
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7361 ;;      Params:         0       4       0       0       0       0       0       0
  7362 ;;      Locals:         0      10       0       0       0       0       0       0
  7363 ;;      Temps:          0       6       0       0       0       0       0       0
  7364 ;;      Totals:         0      20       0       0       0       0       0       0
  7365 ;;Total ram usage:       20 bytes
  7366 ;; Hardware stack levels used: 1
  7367 ;; Hardware stack levels required when called: 4
  7368 ;; This function calls:
  7369 ;;		Nothing
  7370 ;; This function is called by:
  7371 ;;		_efgtoa
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375     06E6                     _floorf:	
  7376                           ;psect for function _floorf
  7377                           
  7378     06E6                     l4330:	
  7379                           ;incstack = 0
  7380                           ; Regs used in _floorf: [wreg+status,2+status,0]
  7381                           
  7382     06E6  0022               	movlb	2	; select bank2
  7383     06E7  0823               	movf	(floorf@F521+3)^(0+256),w
  7384     06E8  0020               	movlb	0	; select bank0
  7385     06E9  00E1               	movwf	floorf@u+3
  7386     06EA  0022               	movlb	2	; select bank2
  7387     06EB  0822               	movf	(floorf@F521+2)^(0+256),w
  7388     06EC  0020               	movlb	0	; select bank0
  7389     06ED  00E0               	movwf	floorf@u+2
  7390     06EE  0022               	movlb	2	; select bank2
  7391     06EF  0821               	movf	(floorf@F521+1)^(0+256),w
  7392     06F0  0020               	movlb	0	; select bank0
  7393     06F1  00DF               	movwf	floorf@u+1
  7394     06F2  0022               	movlb	2	; select bank2
  7395     06F3  0820               	movf	floorf@F521^(0+256),w
  7396     06F4  0020               	movlb	0	; select bank0
  7397     06F5  00DE               	movwf	floorf@u
  7398     06F6  0851               	movf	floorf@x+3,w
  7399     06F7  00E1               	movwf	floorf@u+3
  7400     06F8  0850               	movf	floorf@x+2,w
  7401     06F9  00E0               	movwf	floorf@u+2
  7402     06FA  084F               	movf	floorf@x+1,w
  7403     06FB  00DF               	movwf	floorf@u+1
  7404     06FC  084E               	movf	floorf@x,w
  7405     06FD  00DE               	movwf	floorf@u
  7406     06FE                     l4332:
  7407     06FE  085E               	movf	floorf@u,w
  7408     06FF  00D2               	movwf	??_floorf
  7409     0700  085F               	movf	floorf@u+1,w
  7410     0701  00D3               	movwf	??_floorf+1
  7411     0702  0860               	movf	floorf@u+2,w
  7412     0703  00D4               	movwf	??_floorf+2
  7413     0704  0861               	movf	floorf@u+3,w
  7414     0705  00D5               	movwf	??_floorf+3
  7415     0706  3017               	movlw	23
  7416     0707                     u5055:
  7417     0707  36D5               	lsrf	??_floorf+3,f
  7418     0708  0CD4               	rrf	??_floorf+2,f
  7419     0709  0CD3               	rrf	??_floorf+1,f
  7420     070A  0CD2               	rrf	??_floorf,f
  7421     070B                     u5050:
  7422     070B  0B89               	decfsz	9,f
  7423     070C  2F07               	goto	u5055
  7424     070D  30FF               	movlw	255
  7425     070E  0552               	andwf	??_floorf,w
  7426     070F  00D6               	movwf	??_floorf+4
  7427     0710  3000               	movlw	0
  7428     0711  0553               	andwf	??_floorf+1,w
  7429     0712  00D7               	movwf	??_floorf+5
  7430     0713  0856               	movf	??_floorf+4,w
  7431     0714  3E81               	addlw	129
  7432     0715  00DC               	movwf	floorf@e
  7433     0716  30FF               	movlw	255
  7434     0717  3D57               	addwfc	??_floorf+5,w
  7435     0718  00DD               	movwf	floorf@e+1
  7436     0719                     l4334:
  7437     0719  085D               	movf	floorf@e+1,w
  7438     071A  3A80               	xorlw	128
  7439     071B  00D2               	movwf	??_floorf
  7440     071C  3080               	movlw	128
  7441     071D  0252               	subwf	??_floorf,w
  7442     071E  1D03               	skipz
  7443     071F  2F22               	goto	u5065
  7444     0720  3017               	movlw	23
  7445     0721  025C               	subwf	floorf@e,w
  7446     0722                     u5065:
  7447     0722  1C03               	skipc
  7448     0723  2F25               	goto	u5061
  7449     0724  2F26               	goto	u5060
  7450     0725                     u5061:
  7451     0725  2F27               	goto	l1282
  7452     0726                     u5060:
  7453     0726                     l4336:
  7454     0726  2FD0               	goto	l1283
  7455     0727                     l1282:
  7456     0727  0020               	movlb	0	; select bank0
  7457     0728  1BDD               	btfsc	floorf@e+1,7
  7458     0729  2F2B               	goto	u5071
  7459     072A  2F2C               	goto	u5070
  7460     072B                     u5071:
  7461     072B  2F89               	goto	l4350
  7462     072C                     u5070:
  7463     072C                     l4338:
  7464     072C  30FF               	movlw	255
  7465     072D  00D2               	movwf	??_floorf
  7466     072E  30FF               	movlw	255
  7467     072F  00D3               	movwf	??_floorf+1
  7468     0730  307F               	movlw	127
  7469     0731  00D4               	movwf	??_floorf+2
  7470     0732  3000               	movlw	0
  7471     0733  00D5               	movwf	??_floorf+3
  7472     0734  0A5C               	incf	floorf@e,w
  7473     0735  2F3A               	goto	u5080
  7474     0736                     u5085:
  7475     0736  37D5               	asrf	??_floorf+3,f
  7476     0737  0CD4               	rrf	??_floorf+2,f
  7477     0738  0CD3               	rrf	??_floorf+1,f
  7478     0739  0CD2               	rrf	??_floorf,f
  7479     073A                     u5080:
  7480     073A  0B89               	decfsz	9,f
  7481     073B  2F36               	goto	u5085
  7482     073C  0855               	movf	??_floorf+3,w
  7483     073D  00DB               	movwf	floorf@m+3
  7484     073E  0854               	movf	??_floorf+2,w
  7485     073F  00DA               	movwf	floorf@m+2
  7486     0740  0853               	movf	??_floorf+1,w
  7487     0741  00D9               	movwf	floorf@m+1
  7488     0742  0852               	movf	??_floorf,w
  7489     0743  00D8               	movwf	floorf@m
  7490     0744                     l4340:
  7491     0744  085E               	movf	floorf@u,w
  7492     0745  0558               	andwf	floorf@m,w
  7493     0746  00D2               	movwf	??_floorf
  7494     0747  085F               	movf	floorf@u+1,w
  7495     0748  0559               	andwf	floorf@m+1,w
  7496     0749  00D3               	movwf	??_floorf+1
  7497     074A  0860               	movf	floorf@u+2,w
  7498     074B  055A               	andwf	floorf@m+2,w
  7499     074C  00D4               	movwf	??_floorf+2
  7500     074D  0861               	movf	floorf@u+3,w
  7501     074E  055B               	andwf	floorf@m+3,w
  7502     074F  00D5               	movwf	??_floorf+3
  7503     0750  0855               	movf	??_floorf+3,w
  7504     0751  0454               	iorwf	??_floorf+2,w
  7505     0752  0453               	iorwf	??_floorf+1,w
  7506     0753  0452               	iorwf	??_floorf,w
  7507     0754  1D03               	skipz
  7508     0755  2F57               	goto	u5091
  7509     0756  2F58               	goto	u5090
  7510     0757                     u5091:
  7511     0757  2F59               	goto	l4344
  7512     0758                     u5090:
  7513     0758  2F26               	goto	l4336
  7514     0759                     l4344:
  7515     0759  085E               	movf	floorf@u,w
  7516     075A  00D2               	movwf	??_floorf
  7517     075B  085F               	movf	floorf@u+1,w
  7518     075C  00D3               	movwf	??_floorf+1
  7519     075D  0860               	movf	floorf@u+2,w
  7520     075E  00D4               	movwf	??_floorf+2
  7521     075F  0861               	movf	floorf@u+3,w
  7522     0760  00D5               	movwf	??_floorf+3
  7523     0761  301F               	movlw	31
  7524     0762                     u5105:
  7525     0762  36D5               	lsrf	??_floorf+3,f
  7526     0763  0CD4               	rrf	??_floorf+2,f
  7527     0764  0CD3               	rrf	??_floorf+1,f
  7528     0765  0CD2               	rrf	??_floorf,f
  7529     0766                     u5100:
  7530     0766  0B89               	decfsz	9,f
  7531     0767  2F62               	goto	u5105
  7532     0768  0855               	movf	??_floorf+3,w
  7533     0769  0454               	iorwf	??_floorf+2,w
  7534     076A  0453               	iorwf	??_floorf+1,w
  7535     076B  0452               	iorwf	??_floorf,w
  7536     076C  1903               	skipnz
  7537     076D  2F6F               	goto	u5111
  7538     076E  2F70               	goto	u5110
  7539     076F                     u5111:
  7540     076F  2F78               	goto	l4348
  7541     0770                     u5110:
  7542     0770                     l4346:
  7543     0770  0858               	movf	floorf@m,w
  7544     0771  07DE               	addwf	floorf@u,f
  7545     0772  0859               	movf	floorf@m+1,w
  7546     0773  3DDF               	addwfc	floorf@u+1,f
  7547     0774  085A               	movf	floorf@m+2,w
  7548     0775  3DE0               	addwfc	floorf@u+2,f
  7549     0776  085B               	movf	floorf@m+3,w
  7550     0777  3DE1               	addwfc	floorf@u+3,f
  7551     0778                     l4348:
  7552     0778  0958               	comf	floorf@m,w
  7553     0779  00D2               	movwf	??_floorf
  7554     077A  0959               	comf	floorf@m+1,w
  7555     077B  00D3               	movwf	??_floorf+1
  7556     077C  095A               	comf	floorf@m+2,w
  7557     077D  00D4               	movwf	??_floorf+2
  7558     077E  095B               	comf	floorf@m+3,w
  7559     077F  00D5               	movwf	??_floorf+3
  7560     0780  0852               	movf	??_floorf,w
  7561     0781  05DE               	andwf	floorf@u,f
  7562     0782  0853               	movf	??_floorf+1,w
  7563     0783  05DF               	andwf	floorf@u+1,f
  7564     0784  0854               	movf	??_floorf+2,w
  7565     0785  05E0               	andwf	floorf@u+2,f
  7566     0786  0855               	movf	??_floorf+3,w
  7567     0787  05E1               	andwf	floorf@u+3,f
  7568     0788  2FC8               	goto	l1287
  7569     0789                     l4350:
  7570     0789  085E               	movf	floorf@u,w
  7571     078A  00D2               	movwf	??_floorf
  7572     078B  085F               	movf	floorf@u+1,w
  7573     078C  00D3               	movwf	??_floorf+1
  7574     078D  0860               	movf	floorf@u+2,w
  7575     078E  00D4               	movwf	??_floorf+2
  7576     078F  0861               	movf	floorf@u+3,w
  7577     0790  00D5               	movwf	??_floorf+3
  7578     0791  301F               	movlw	31
  7579     0792                     u5125:
  7580     0792  36D5               	lsrf	??_floorf+3,f
  7581     0793  0CD4               	rrf	??_floorf+2,f
  7582     0794  0CD3               	rrf	??_floorf+1,f
  7583     0795  0CD2               	rrf	??_floorf,f
  7584     0796                     u5120:
  7585     0796  0B89               	decfsz	9,f
  7586     0797  2F92               	goto	u5125
  7587     0798  0855               	movf	??_floorf+3,w
  7588     0799  0454               	iorwf	??_floorf+2,w
  7589     079A  0453               	iorwf	??_floorf+1,w
  7590     079B  0452               	iorwf	??_floorf,w
  7591     079C  1D03               	skipz
  7592     079D  2F9F               	goto	u5131
  7593     079E  2FA0               	goto	u5130
  7594     079F                     u5131:
  7595     079F  2FA9               	goto	l4354
  7596     07A0                     u5130:
  7597     07A0                     l4352:
  7598     07A0  3000               	movlw	0
  7599     07A1  00E1               	movwf	floorf@u+3
  7600     07A2  3000               	movlw	0
  7601     07A3  00E0               	movwf	floorf@u+2
  7602     07A4  3000               	movlw	0
  7603     07A5  00DF               	movwf	floorf@u+1
  7604     07A6  3000               	movlw	0
  7605     07A7  00DE               	movwf	floorf@u
  7606     07A8  2FC8               	goto	l1287
  7607     07A9                     l4354:
  7608     07A9  085E               	movf	floorf@u,w
  7609     07AA  00D2               	movwf	??_floorf
  7610     07AB  085F               	movf	floorf@u+1,w
  7611     07AC  00D3               	movwf	??_floorf+1
  7612     07AD  0860               	movf	floorf@u+2,w
  7613     07AE  00D4               	movwf	??_floorf+2
  7614     07AF  0861               	movf	floorf@u+3,w
  7615     07B0  00D5               	movwf	??_floorf+3
  7616     07B1  3001               	movlw	1
  7617     07B2                     u5145:
  7618     07B2  35D2               	lslf	??_floorf,f
  7619     07B3  0DD3               	rlf	??_floorf+1,f
  7620     07B4  0DD4               	rlf	??_floorf+2,f
  7621     07B5  0DD5               	rlf	??_floorf+3,f
  7622     07B6                     u5140:
  7623     07B6  0B89               	decfsz	9,f
  7624     07B7  2FB2               	goto	u5145
  7625     07B8  0855               	movf	??_floorf+3,w
  7626     07B9  0454               	iorwf	??_floorf+2,w
  7627     07BA  0453               	iorwf	??_floorf+1,w
  7628     07BB  0452               	iorwf	??_floorf,w
  7629     07BC  1903               	skipnz
  7630     07BD  2FBF               	goto	u5151
  7631     07BE  2FC0               	goto	u5150
  7632     07BF                     u5151:
  7633     07BF  2FC8               	goto	l1287
  7634     07C0                     u5150:
  7635     07C0                     l4356:
  7636     07C0  30BF               	movlw	191
  7637     07C1  00E1               	movwf	floorf@u+3
  7638     07C2  3080               	movlw	128
  7639     07C3  00E0               	movwf	floorf@u+2
  7640     07C4  3000               	movlw	0
  7641     07C5  00DF               	movwf	floorf@u+1
  7642     07C6  3000               	movlw	0
  7643     07C7  00DE               	movwf	floorf@u
  7644     07C8                     l1287:
  7645     07C8  0861               	movf	floorf@u+3,w
  7646     07C9  00D1               	movwf	?_floorf+3
  7647     07CA  0860               	movf	floorf@u+2,w
  7648     07CB  00D0               	movwf	?_floorf+2
  7649     07CC  085F               	movf	floorf@u+1,w
  7650     07CD  00CF               	movwf	?_floorf+1
  7651     07CE  085E               	movf	floorf@u,w
  7652     07CF  00CE               	movwf	?_floorf
  7653     07D0                     l1283:
  7654     07D0  0008               	return
  7655     07D1                     __end_of_floorf:
  7656                           
  7657                           	psect	text11
  7658     1F81                     __ptext11:	
  7659 ;; *************** function ___fpclassifyf *****************
  7660 ;; Defined at:
  7661 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;  x               4    0[BANK0 ] float 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  u               4   12[BANK0 ] struct .
  7666 ;;  e               2   10[BANK0 ] int 
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  2    0[BANK0 ] int 
  7669 ;; Registers used:
  7670 ;;		wreg, status,2, status,0
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7676 ;;      Params:         0       4       0       0       0       0       0       0
  7677 ;;      Locals:         0       6       0       0       0       0       0       0
  7678 ;;      Temps:          0       6       0       0       0       0       0       0
  7679 ;;      Totals:         0      16       0       0       0       0       0       0
  7680 ;;Total ram usage:       16 bytes
  7681 ;; Hardware stack levels used: 1
  7682 ;; Hardware stack levels required when called: 4
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		_efgtoa
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690     1F81                     ___fpclassifyf:	
  7691                           ;psect for function ___fpclassifyf
  7692                           
  7693     1F81                     l4294:	
  7694                           ;incstack = 0
  7695                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  7696                           
  7697     1F81  0022               	movlb	2	; select bank2
  7698     1F82  0827               	movf	(___fpclassifyf@F465+3)^(0+256),w
  7699     1F83  0020               	movlb	0	; select bank0
  7700     1F84  00AF               	movwf	___fpclassifyf@u+3
  7701     1F85  0022               	movlb	2	; select bank2
  7702     1F86  0826               	movf	(___fpclassifyf@F465+2)^(0+256),w
  7703     1F87  0020               	movlb	0	; select bank0
  7704     1F88  00AE               	movwf	___fpclassifyf@u+2
  7705     1F89  0022               	movlb	2	; select bank2
  7706     1F8A  0825               	movf	(___fpclassifyf@F465+1)^(0+256),w
  7707     1F8B  0020               	movlb	0	; select bank0
  7708     1F8C  00AD               	movwf	___fpclassifyf@u+1
  7709     1F8D  0022               	movlb	2	; select bank2
  7710     1F8E  0824               	movf	___fpclassifyf@F465^(0+256),w
  7711     1F8F  0020               	movlb	0	; select bank0
  7712     1F90  00AC               	movwf	___fpclassifyf@u
  7713     1F91  0823               	movf	___fpclassifyf@x+3,w
  7714     1F92  00AF               	movwf	___fpclassifyf@u+3
  7715     1F93  0822               	movf	___fpclassifyf@x+2,w
  7716     1F94  00AE               	movwf	___fpclassifyf@u+2
  7717     1F95  0821               	movf	___fpclassifyf@x+1,w
  7718     1F96  00AD               	movwf	___fpclassifyf@u+1
  7719     1F97  0820               	movf	___fpclassifyf@x,w
  7720     1F98  00AC               	movwf	___fpclassifyf@u
  7721     1F99                     l4296:
  7722     1F99  082C               	movf	___fpclassifyf@u,w
  7723     1F9A  00A4               	movwf	??___fpclassifyf
  7724     1F9B  082D               	movf	___fpclassifyf@u+1,w
  7725     1F9C  00A5               	movwf	??___fpclassifyf+1
  7726     1F9D  082E               	movf	___fpclassifyf@u+2,w
  7727     1F9E  00A6               	movwf	??___fpclassifyf+2
  7728     1F9F  082F               	movf	___fpclassifyf@u+3,w
  7729     1FA0  00A7               	movwf	??___fpclassifyf+3
  7730     1FA1  3017               	movlw	23
  7731     1FA2                     u4955:
  7732     1FA2  36A7               	lsrf	??___fpclassifyf+3,f
  7733     1FA3  0CA6               	rrf	??___fpclassifyf+2,f
  7734     1FA4  0CA5               	rrf	??___fpclassifyf+1,f
  7735     1FA5  0CA4               	rrf	??___fpclassifyf,f
  7736     1FA6                     u4950:
  7737     1FA6  0B89               	decfsz	9,f
  7738     1FA7  2FA2               	goto	u4955
  7739     1FA8  30FF               	movlw	255
  7740     1FA9  0524               	andwf	??___fpclassifyf,w
  7741     1FAA  00AA               	movwf	___fpclassifyf@e
  7742     1FAB  3000               	movlw	0
  7743     1FAC  0525               	andwf	??___fpclassifyf+1,w
  7744     1FAD  00AB               	movwf	___fpclassifyf@e+1
  7745     1FAE                     l4298:
  7746     1FAE  082A               	movf	___fpclassifyf@e,w
  7747     1FAF  042B               	iorwf	___fpclassifyf@e+1,w
  7748     1FB0  1D03               	btfss	3,2
  7749     1FB1  2FB3               	goto	u4961
  7750     1FB2  2FB4               	goto	u4960
  7751     1FB3                     u4961:
  7752     1FB3  2FD5               	goto	l4308
  7753     1FB4                     u4960:
  7754     1FB4                     l4300:
  7755     1FB4  082C               	movf	___fpclassifyf@u,w
  7756     1FB5  00A4               	movwf	??___fpclassifyf
  7757     1FB6  082D               	movf	___fpclassifyf@u+1,w
  7758     1FB7  00A5               	movwf	??___fpclassifyf+1
  7759     1FB8  082E               	movf	___fpclassifyf@u+2,w
  7760     1FB9  00A6               	movwf	??___fpclassifyf+2
  7761     1FBA  082F               	movf	___fpclassifyf@u+3,w
  7762     1FBB  00A7               	movwf	??___fpclassifyf+3
  7763     1FBC  3001               	movlw	1
  7764     1FBD                     u4975:
  7765     1FBD  35A4               	lslf	??___fpclassifyf,f
  7766     1FBE  0DA5               	rlf	??___fpclassifyf+1,f
  7767     1FBF  0DA6               	rlf	??___fpclassifyf+2,f
  7768     1FC0  0DA7               	rlf	??___fpclassifyf+3,f
  7769     1FC1                     u4970:
  7770     1FC1  0B89               	decfsz	9,f
  7771     1FC2  2FBD               	goto	u4975
  7772     1FC3  0827               	movf	??___fpclassifyf+3,w
  7773     1FC4  0426               	iorwf	??___fpclassifyf+2,w
  7774     1FC5  0425               	iorwf	??___fpclassifyf+1,w
  7775     1FC6  0424               	iorwf	??___fpclassifyf,w
  7776     1FC7  1D03               	skipz
  7777     1FC8  2FCA               	goto	u4981
  7778     1FC9  2FCB               	goto	u4980
  7779     1FCA                     u4981:
  7780     1FCA  2FD0               	goto	l4304
  7781     1FCB                     u4980:
  7782     1FCB                     l4302:
  7783     1FCB  3002               	movlw	2
  7784     1FCC  00A0               	movwf	?___fpclassifyf
  7785     1FCD  3000               	movlw	0
  7786     1FCE  00A1               	movwf	?___fpclassifyf+1
  7787     1FCF  2FFF               	goto	l1269
  7788     1FD0                     l4304:
  7789     1FD0  3003               	movlw	3
  7790     1FD1  00A0               	movwf	?___fpclassifyf
  7791     1FD2  3000               	movlw	0
  7792     1FD3  00A1               	movwf	?___fpclassifyf+1
  7793     1FD4  2FFF               	goto	l1269
  7794     1FD5                     l4308:
  7795     1FD5  0A2A               	incf	___fpclassifyf@e,w
  7796     1FD6  042B               	iorwf	___fpclassifyf@e+1,w
  7797     1FD7  1D03               	btfss	3,2
  7798     1FD8  2FDA               	goto	u4991
  7799     1FD9  2FDB               	goto	u4990
  7800     1FDA                     u4991:
  7801     1FDA  2FFB               	goto	l4314
  7802     1FDB                     u4990:
  7803     1FDB                     l4310:
  7804     1FDB  082C               	movf	___fpclassifyf@u,w
  7805     1FDC  00A4               	movwf	??___fpclassifyf
  7806     1FDD  082D               	movf	___fpclassifyf@u+1,w
  7807     1FDE  00A5               	movwf	??___fpclassifyf+1
  7808     1FDF  082E               	movf	___fpclassifyf@u+2,w
  7809     1FE0  00A6               	movwf	??___fpclassifyf+2
  7810     1FE1  082F               	movf	___fpclassifyf@u+3,w
  7811     1FE2  00A7               	movwf	??___fpclassifyf+3
  7812     1FE3  3009               	movlw	9
  7813     1FE4                     u5005:
  7814     1FE4  35A4               	lslf	??___fpclassifyf,f
  7815     1FE5  0DA5               	rlf	??___fpclassifyf+1,f
  7816     1FE6  0DA6               	rlf	??___fpclassifyf+2,f
  7817     1FE7  0DA7               	rlf	??___fpclassifyf+3,f
  7818     1FE8                     u5000:
  7819     1FE8  0B89               	decfsz	9,f
  7820     1FE9  2FE4               	goto	u5005
  7821     1FEA  0827               	movf	??___fpclassifyf+3,w
  7822     1FEB  0426               	iorwf	??___fpclassifyf+2,w
  7823     1FEC  0425               	iorwf	??___fpclassifyf+1,w
  7824     1FED  0424               	iorwf	??___fpclassifyf,w
  7825     1FEE  1903               	skipnz
  7826     1FEF  2FF1               	goto	u5011
  7827     1FF0  2FF3               	goto	u5010
  7828     1FF1                     u5011:
  7829     1FF1  3001               	movlw	1
  7830     1FF2  2FF4               	goto	u5020
  7831     1FF3                     u5010:
  7832     1FF3  3000               	movlw	0
  7833     1FF4                     u5020:
  7834     1FF4  00A8               	movwf	??___fpclassifyf+4
  7835     1FF5  01A9               	clrf	??___fpclassifyf+5
  7836     1FF6  0828               	movf	??___fpclassifyf+4,w
  7837     1FF7  00A0               	movwf	?___fpclassifyf
  7838     1FF8  0829               	movf	??___fpclassifyf+5,w
  7839     1FF9  00A1               	movwf	?___fpclassifyf+1
  7840     1FFA  2FFF               	goto	l1269
  7841     1FFB                     l4314:
  7842     1FFB  3004               	movlw	4
  7843     1FFC  00A0               	movwf	?___fpclassifyf
  7844     1FFD  3000               	movlw	0
  7845     1FFE  00A1               	movwf	?___fpclassifyf+1
  7846     1FFF                     l1269:
  7847     1FFF  0008               	return
  7848     2000                     __end_of___fpclassifyf:
  7849                           
  7850                           	psect	text12
  7851     1E21                     __ptext12:	
  7852 ;; *************** function ___fltol *****************
  7853 ;; Defined at:
  7854 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;  f1              4    0[BANK0 ] int 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;  exp1            1    9[BANK0 ] unsigned char 
  7859 ;;  sign1           1    8[BANK0 ] unsigned char 
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  4    0[BANK0 ] long 
  7862 ;; Registers used:
  7863 ;;		wreg, status,2, status,0
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7869 ;;      Params:         0       4       0       0       0       0       0       0
  7870 ;;      Locals:         0       2       0       0       0       0       0       0
  7871 ;;      Temps:          0       4       0       0       0       0       0       0
  7872 ;;      Totals:         0      10       0       0       0       0       0       0
  7873 ;;Total ram usage:       10 bytes
  7874 ;; Hardware stack levels used: 1
  7875 ;; Hardware stack levels required when called: 4
  7876 ;; This function calls:
  7877 ;;		Nothing
  7878 ;; This function is called by:
  7879 ;;		_efgtoa
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883     1E21                     ___fltol:	
  7884                           ;psect for function ___fltol
  7885                           
  7886     1E21                     l3952:	
  7887                           ;incstack = 0
  7888                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7889                           
  7890     1E21  1003               	clrc
  7891     1E22  0020               	movlb	0	; select bank0
  7892     1E23  0D22               	rlf	___fltol@f1+2,w
  7893     1E24  0D23               	rlf	___fltol@f1+3,w
  7894     1E25  00A9               	movwf	___fltol@exp1
  7895     1E26  0829               	movf	___fltol@exp1,w
  7896     1E27  1D03               	btfss	3,2
  7897     1E28  2E2A               	goto	u4271
  7898     1E29  2E2B               	goto	u4270
  7899     1E2A                     u4271:
  7900     1E2A  2E34               	goto	l3958
  7901     1E2B                     u4270:
  7902     1E2B                     l3954:
  7903     1E2B  3000               	movlw	0
  7904     1E2C  00A3               	movwf	?___fltol+3
  7905     1E2D  3000               	movlw	0
  7906     1E2E  00A2               	movwf	?___fltol+2
  7907     1E2F  3000               	movlw	0
  7908     1E30  00A1               	movwf	?___fltol+1
  7909     1E31  3000               	movlw	0
  7910     1E32  00A0               	movwf	?___fltol
  7911     1E33  2E91               	goto	l833
  7912     1E34                     l3958:
  7913     1E34  0820               	movf	___fltol@f1,w
  7914     1E35  00A4               	movwf	??___fltol
  7915     1E36  0821               	movf	___fltol@f1+1,w
  7916     1E37  00A5               	movwf	??___fltol+1
  7917     1E38  0822               	movf	___fltol@f1+2,w
  7918     1E39  00A6               	movwf	??___fltol+2
  7919     1E3A  0823               	movf	___fltol@f1+3,w
  7920     1E3B  00A7               	movwf	??___fltol+3
  7921     1E3C  301F               	movlw	31
  7922     1E3D                     u4285:
  7923     1E3D  36A7               	lsrf	??___fltol+3,f
  7924     1E3E  0CA6               	rrf	??___fltol+2,f
  7925     1E3F  0CA5               	rrf	??___fltol+1,f
  7926     1E40  0CA4               	rrf	??___fltol,f
  7927     1E41                     u4280:
  7928     1E41  0B89               	decfsz	9,f
  7929     1E42  2E3D               	goto	u4285
  7930     1E43  0824               	movf	??___fltol,w
  7931     1E44  00A8               	movwf	___fltol@sign1
  7932     1E45                     l3960:
  7933     1E45  17A2               	bsf	___fltol@f1+2,7
  7934     1E46                     l3962:
  7935     1E46  30FF               	movlw	255
  7936     1E47  05A0               	andwf	___fltol@f1,f
  7937     1E48  30FF               	movlw	255
  7938     1E49  05A1               	andwf	___fltol@f1+1,f
  7939     1E4A  30FF               	movlw	255
  7940     1E4B  05A2               	andwf	___fltol@f1+2,f
  7941     1E4C  3000               	movlw	0
  7942     1E4D  05A3               	andwf	___fltol@f1+3,f
  7943     1E4E                     l3964:
  7944     1E4E  3096               	movlw	150
  7945     1E4F  02A9               	subwf	___fltol@exp1,f
  7946     1E50                     l3966:
  7947     1E50  1FA9               	btfss	___fltol@exp1,7
  7948     1E51  2E53               	goto	u4291
  7949     1E52  2E54               	goto	u4290
  7950     1E53                     u4291:
  7951     1E53  2E6C               	goto	l3976
  7952     1E54                     u4290:
  7953     1E54                     l3968:
  7954     1E54  0829               	movf	___fltol@exp1,w
  7955     1E55  3A80               	xorlw	128
  7956     1E56  3E97               	addlw	151
  7957     1E57  1803               	skipnc
  7958     1E58  2E5A               	goto	u4301
  7959     1E59  2E5B               	goto	u4300
  7960     1E5A                     u4301:
  7961     1E5A  2E5C               	goto	l3974
  7962     1E5B                     u4300:
  7963     1E5B  2E2B               	goto	l3954
  7964     1E5C                     l3974:
  7965     1E5C  3001               	movlw	1
  7966     1E5D                     u4315:
  7967     1E5D  36A3               	lsrf	___fltol@f1+3,f
  7968     1E5E  0CA2               	rrf	___fltol@f1+2,f
  7969     1E5F  0CA1               	rrf	___fltol@f1+1,f
  7970     1E60  0CA0               	rrf	___fltol@f1,f
  7971     1E61  0B89               	decfsz	9,f
  7972     1E62  2E5D               	goto	u4315
  7973     1E63  3001               	movlw	1
  7974     1E64  00A4               	movwf	??___fltol
  7975     1E65  0824               	movf	??___fltol,w
  7976     1E66  07A9               	addwf	___fltol@exp1,f
  7977     1E67  1D03               	btfss	3,2
  7978     1E68  2E6A               	goto	u4321
  7979     1E69  2E6B               	goto	u4320
  7980     1E6A                     u4321:
  7981     1E6A  2E5C               	goto	l3974
  7982     1E6B                     u4320:
  7983     1E6B  2E81               	goto	l3984
  7984     1E6C                     l3976:
  7985     1E6C  3020               	movlw	32
  7986     1E6D  0229               	subwf	___fltol@exp1,w
  7987     1E6E  1C03               	skipc
  7988     1E6F  2E71               	goto	u4331
  7989     1E70  2E72               	goto	u4330
  7990     1E71                     u4331:
  7991     1E71  2E7C               	goto	l840
  7992     1E72                     u4330:
  7993     1E72  2E2B               	goto	l3954
  7994     1E73                     l3982:
  7995     1E73  3001               	movlw	1
  7996     1E74                     u4345:
  7997     1E74  35A0               	lslf	___fltol@f1,f
  7998     1E75  0DA1               	rlf	___fltol@f1+1,f
  7999     1E76  0DA2               	rlf	___fltol@f1+2,f
  8000     1E77  0DA3               	rlf	___fltol@f1+3,f
  8001     1E78  0B89               	decfsz	9,f
  8002     1E79  2E74               	goto	u4345
  8003     1E7A  3001               	movlw	1
  8004     1E7B  02A9               	subwf	___fltol@exp1,f
  8005     1E7C                     l840:
  8006     1E7C  0829               	movf	___fltol@exp1,w
  8007     1E7D  1D03               	btfss	3,2
  8008     1E7E  2E80               	goto	u4351
  8009     1E7F  2E81               	goto	u4350
  8010     1E80                     u4351:
  8011     1E80  2E73               	goto	l3982
  8012     1E81                     u4350:
  8013     1E81                     l3984:
  8014     1E81  0828               	movf	___fltol@sign1,w
  8015     1E82  1903               	btfsc	3,2
  8016     1E83  2E85               	goto	u4361
  8017     1E84  2E86               	goto	u4360
  8018     1E85                     u4361:
  8019     1E85  2E91               	goto	l843
  8020     1E86                     u4360:
  8021     1E86                     l3986:
  8022     1E86  09A0               	comf	___fltol@f1,f
  8023     1E87  09A1               	comf	___fltol@f1+1,f
  8024     1E88  09A2               	comf	___fltol@f1+2,f
  8025     1E89  09A3               	comf	___fltol@f1+3,f
  8026     1E8A  0AA0               	incf	___fltol@f1,f
  8027     1E8B  1903               	skipnz
  8028     1E8C  0AA1               	incf	___fltol@f1+1,f
  8029     1E8D  1903               	skipnz
  8030     1E8E  0AA2               	incf	___fltol@f1+2,f
  8031     1E8F  1903               	skipnz
  8032     1E90  0AA3               	incf	___fltol@f1+3,f
  8033     1E91                     l843:
  8034     1E91                     l833:
  8035     1E91  0008               	return
  8036     1E92                     __end_of___fltol:
  8037                           
  8038                           	psect	text13
  8039     1A94                     __ptext13:	
  8040 ;; *************** function ___flsub *****************
  8041 ;; Defined at:
  8042 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  a               4   35[BANK0 ] long 
  8045 ;;  b               4   39[BANK0 ] long 
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;		None
  8048 ;; Return value:  Size  Location     Type
  8049 ;;                  4   35[BANK0 ] long 
  8050 ;; Registers used:
  8051 ;;		wreg, status,2, status,0, pclath, cstack
  8052 ;; Tracked objects:
  8053 ;;		On entry : 0/0
  8054 ;;		On exit  : 0/0
  8055 ;;		Unchanged: 0/0
  8056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8057 ;;      Params:         0       8       0       0       0       0       0       0
  8058 ;;      Locals:         0       0       0       0       0       0       0       0
  8059 ;;      Temps:          0       0       0       0       0       0       0       0
  8060 ;;      Totals:         0       8       0       0       0       0       0       0
  8061 ;;Total ram usage:        8 bytes
  8062 ;; Hardware stack levels used: 1
  8063 ;; Hardware stack levels required when called: 5
  8064 ;; This function calls:
  8065 ;;		___fladd
  8066 ;; This function is called by:
  8067 ;;		_efgtoa
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071     1A94                     ___flsub:	
  8072                           ;psect for function ___flsub
  8073                           
  8074     1A94                     l3988:	
  8075                           ;incstack = 0
  8076                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  8077                           
  8078     1A94  3080               	movlw	128
  8079     1A95  0020               	movlb	0	; select bank0
  8080     1A96  06C6               	xorwf	___flsub@a+3,f
  8081     1A97                     l3990:
  8082     1A97  084A               	movf	___flsub@b+3,w
  8083     1A98  00A3               	movwf	___fladd@b+3
  8084     1A99  0849               	movf	___flsub@b+2,w
  8085     1A9A  00A2               	movwf	___fladd@b+2
  8086     1A9B  0848               	movf	___flsub@b+1,w
  8087     1A9C  00A1               	movwf	___fladd@b+1
  8088     1A9D  0847               	movf	___flsub@b,w
  8089     1A9E  00A0               	movwf	___fladd@b
  8090     1A9F  0846               	movf	___flsub@a+3,w
  8091     1AA0  00A7               	movwf	___fladd@a+3
  8092     1AA1  0845               	movf	___flsub@a+2,w
  8093     1AA2  00A6               	movwf	___fladd@a+2
  8094     1AA3  0844               	movf	___flsub@a+1,w
  8095     1AA4  00A5               	movwf	___fladd@a+1
  8096     1AA5  0843               	movf	___flsub@a,w
  8097     1AA6  00A4               	movwf	___fladd@a
  8098     1AA7  3195  25F8  319A   	fcall	___fladd
  8099     1AAA  0020               	movlb	0	; select bank0
  8100     1AAB  0823               	movf	?___fladd+3,w
  8101     1AAC  00C6               	movwf	?___flsub+3
  8102     1AAD  0822               	movf	?___fladd+2,w
  8103     1AAE  00C5               	movwf	?___flsub+2
  8104     1AAF  0821               	movf	?___fladd+1,w
  8105     1AB0  00C4               	movwf	?___flsub+1
  8106     1AB1  0820               	movf	?___fladd,w
  8107     1AB2  00C3               	movwf	?___flsub
  8108     1AB3                     l986:
  8109     1AB3  0008               	return
  8110     1AB4                     __end_of___flsub:
  8111                           
  8112                           	psect	text14
  8113     15F8                     __ptext14:	
  8114 ;; *************** function ___fladd *****************
  8115 ;; Defined at:
  8116 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;  b               4    0[BANK0 ] long 
  8119 ;;  a               4    4[BANK0 ] long 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;  grs             1   19[BANK0 ] unsigned char 
  8122 ;;  bexp            1   18[BANK0 ] unsigned char 
  8123 ;;  aexp            1   17[BANK0 ] unsigned char 
  8124 ;;  signs           1   16[BANK0 ] unsigned char 
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  4    0[BANK0 ] unsigned char 
  8127 ;; Registers used:
  8128 ;;		wreg, status,2, status,0
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8134 ;;      Params:         0       8       0       0       0       0       0       0
  8135 ;;      Locals:         0       4       0       0       0       0       0       0
  8136 ;;      Temps:          0       8       0       0       0       0       0       0
  8137 ;;      Totals:         0      20       0       0       0       0       0       0
  8138 ;;Total ram usage:       20 bytes
  8139 ;; Hardware stack levels used: 1
  8140 ;; Hardware stack levels required when called: 4
  8141 ;; This function calls:
  8142 ;;		Nothing
  8143 ;; This function is called by:
  8144 ;;		___flsub
  8145 ;;		_efgtoa
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149     15F8                     ___fladd:	
  8150                           ;psect for function ___fladd
  8151                           
  8152     15F8                     l3600:	
  8153                           ;incstack = 0
  8154                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  8155                           
  8156     15F8  0020               	movlb	0	; select bank0
  8157     15F9  0823               	movf	___fladd@b+3,w
  8158     15FA  3980               	andlw	128
  8159     15FB  00B0               	movwf	___fladd@signs
  8160     15FC                     l3602:
  8161     15FC  3523               	lslf	___fladd@b+3,w
  8162     15FD  00B2               	movwf	___fladd@bexp
  8163     15FE                     l3604:
  8164     15FE  1FA2               	btfss	___fladd@b+2,7
  8165     15FF  2E01               	goto	u3481
  8166     1600  2E02               	goto	u3480
  8167     1601                     u3481:
  8168     1601  2E03               	goto	l3608
  8169     1602                     u3480:
  8170     1602                     l3606:
  8171     1602  1432               	bsf	___fladd@bexp,0
  8172     1603                     l3608:
  8173     1603  0832               	movf	___fladd@bexp,w
  8174     1604  1903               	btfsc	3,2
  8175     1605  2E07               	goto	u3491
  8176     1606  2E08               	goto	u3490
  8177     1607                     u3491:
  8178     1607  2E18               	goto	l3618
  8179     1608                     u3490:
  8180     1608                     l3610:
  8181     1608  0A32               	incf	___fladd@bexp,w
  8182     1609  1D03               	btfss	3,2
  8183     160A  2E0C               	goto	u3501
  8184     160B  2E0D               	goto	u3500
  8185     160C                     u3501:
  8186     160C  2E15               	goto	l3614
  8187     160D                     u3500:
  8188     160D                     l3612:
  8189     160D  3000               	movlw	0
  8190     160E  00A3               	movwf	___fladd@b+3
  8191     160F  3000               	movlw	0
  8192     1610  00A2               	movwf	___fladd@b+2
  8193     1611  3000               	movlw	0
  8194     1612  00A1               	movwf	___fladd@b+1
  8195     1613  3000               	movlw	0
  8196     1614  00A0               	movwf	___fladd@b
  8197     1615                     l3614:
  8198     1615  17A2               	bsf	___fladd@b+2,7
  8199     1616                     l3616:
  8200     1616  01A3               	clrf	___fladd@b+3
  8201     1617  2E20               	goto	l3620
  8202     1618                     l3618:
  8203     1618  3000               	movlw	0
  8204     1619  00A3               	movwf	___fladd@b+3
  8205     161A  3000               	movlw	0
  8206     161B  00A2               	movwf	___fladd@b+2
  8207     161C  3000               	movlw	0
  8208     161D  00A1               	movwf	___fladd@b+1
  8209     161E  3000               	movlw	0
  8210     161F  00A0               	movwf	___fladd@b
  8211     1620                     l3620:
  8212     1620  0827               	movf	___fladd@a+3,w
  8213     1621  3980               	andlw	128
  8214     1622  00B1               	movwf	___fladd@aexp
  8215     1623                     l3622:
  8216     1623  0831               	movf	___fladd@aexp,w
  8217     1624  0630               	xorwf	___fladd@signs,w
  8218     1625  1903               	skipnz
  8219     1626  2E28               	goto	u3511
  8220     1627  2E29               	goto	u3510
  8221     1628                     u3511:
  8222     1628  2E2A               	goto	l3626
  8223     1629                     u3510:
  8224     1629                     l3624:
  8225     1629  1730               	bsf	___fladd@signs,6
  8226     162A                     l3626:
  8227     162A  3527               	lslf	___fladd@a+3,w
  8228     162B  00B1               	movwf	___fladd@aexp
  8229     162C                     l3628:
  8230     162C  1FA6               	btfss	___fladd@a+2,7
  8231     162D  2E2F               	goto	u3521
  8232     162E  2E30               	goto	u3520
  8233     162F                     u3521:
  8234     162F  2E31               	goto	l3632
  8235     1630                     u3520:
  8236     1630                     l3630:
  8237     1630  1431               	bsf	___fladd@aexp,0
  8238     1631                     l3632:
  8239     1631  0831               	movf	___fladd@aexp,w
  8240     1632  1903               	btfsc	3,2
  8241     1633  2E35               	goto	u3531
  8242     1634  2E36               	goto	u3530
  8243     1635                     u3531:
  8244     1635  2E46               	goto	l3642
  8245     1636                     u3530:
  8246     1636                     l3634:
  8247     1636  0A31               	incf	___fladd@aexp,w
  8248     1637  1D03               	btfss	3,2
  8249     1638  2E3A               	goto	u3541
  8250     1639  2E3B               	goto	u3540
  8251     163A                     u3541:
  8252     163A  2E43               	goto	l3638
  8253     163B                     u3540:
  8254     163B                     l3636:
  8255     163B  3000               	movlw	0
  8256     163C  00A7               	movwf	___fladd@a+3
  8257     163D  3000               	movlw	0
  8258     163E  00A6               	movwf	___fladd@a+2
  8259     163F  3000               	movlw	0
  8260     1640  00A5               	movwf	___fladd@a+1
  8261     1641  3000               	movlw	0
  8262     1642  00A4               	movwf	___fladd@a
  8263     1643                     l3638:
  8264     1643  17A6               	bsf	___fladd@a+2,7
  8265     1644                     l3640:
  8266     1644  01A7               	clrf	___fladd@a+3
  8267     1645  2E4E               	goto	l940
  8268     1646                     l3642:
  8269     1646  3000               	movlw	0
  8270     1647  00A7               	movwf	___fladd@a+3
  8271     1648  3000               	movlw	0
  8272     1649  00A6               	movwf	___fladd@a+2
  8273     164A  3000               	movlw	0
  8274     164B  00A5               	movwf	___fladd@a+1
  8275     164C  3000               	movlw	0
  8276     164D  00A4               	movwf	___fladd@a
  8277     164E                     l940:
  8278     164E  0832               	movf	___fladd@bexp,w
  8279     164F  0231               	subwf	___fladd@aexp,w
  8280     1650  1803               	skipnc
  8281     1651  2E53               	goto	u3551
  8282     1652  2E54               	goto	u3550
  8283     1653                     u3551:
  8284     1653  2E7A               	goto	l3678
  8285     1654                     u3550:
  8286     1654                     l3644:
  8287     1654  1F30               	btfss	___fladd@signs,6
  8288     1655  2E57               	goto	u3561
  8289     1656  2E58               	goto	u3560
  8290     1657                     u3561:
  8291     1657  2E5C               	goto	l3648
  8292     1658                     u3560:
  8293     1658                     l3646:
  8294     1658  3080               	movlw	128
  8295     1659  00A8               	movwf	??___fladd
  8296     165A  0828               	movf	??___fladd,w
  8297     165B  06B0               	xorwf	___fladd@signs,f
  8298     165C                     l3648:
  8299     165C  0832               	movf	___fladd@bexp,w
  8300     165D  00B3               	movwf	___fladd@grs
  8301     165E                     l3650:
  8302     165E  0831               	movf	___fladd@aexp,w
  8303     165F  00B2               	movwf	___fladd@bexp
  8304     1660                     l3652:
  8305     1660  0833               	movf	___fladd@grs,w
  8306     1661  00B1               	movwf	___fladd@aexp
  8307     1662                     l3654:
  8308     1662  0820               	movf	___fladd@b,w
  8309     1663  00B3               	movwf	___fladd@grs
  8310     1664                     l3656:
  8311     1664  0824               	movf	___fladd@a,w
  8312     1665  00A0               	movwf	___fladd@b
  8313     1666                     l3658:
  8314     1666  0833               	movf	___fladd@grs,w
  8315     1667  00A4               	movwf	___fladd@a
  8316     1668                     l3660:
  8317     1668  0821               	movf	___fladd@b+1,w
  8318     1669  00B3               	movwf	___fladd@grs
  8319     166A                     l3662:
  8320     166A  0825               	movf	___fladd@a+1,w
  8321     166B  00A1               	movwf	___fladd@b+1
  8322     166C                     l3664:
  8323     166C  0833               	movf	___fladd@grs,w
  8324     166D  00A5               	movwf	___fladd@a+1
  8325     166E                     l3666:
  8326     166E  0822               	movf	___fladd@b+2,w
  8327     166F  00B3               	movwf	___fladd@grs
  8328     1670                     l3668:
  8329     1670  0826               	movf	___fladd@a+2,w
  8330     1671  00A2               	movwf	___fladd@b+2
  8331     1672                     l3670:
  8332     1672  0833               	movf	___fladd@grs,w
  8333     1673  00A6               	movwf	___fladd@a+2
  8334     1674                     l3672:
  8335     1674  0823               	movf	___fladd@b+3,w
  8336     1675  00B3               	movwf	___fladd@grs
  8337     1676                     l3674:
  8338     1676  0827               	movf	___fladd@a+3,w
  8339     1677  00A3               	movwf	___fladd@b+3
  8340     1678                     l3676:
  8341     1678  0833               	movf	___fladd@grs,w
  8342     1679  00A7               	movwf	___fladd@a+3
  8343     167A                     l3678:
  8344     167A  01B3               	clrf	___fladd@grs
  8345     167B                     l3680:
  8346     167B  0831               	movf	___fladd@aexp,w
  8347     167C  00A8               	movwf	??___fladd
  8348     167D  01A9               	clrf	??___fladd+1
  8349     167E  0829               	movf	??___fladd+1,w
  8350     167F  00AB               	movwf	??___fladd+3
  8351     1680  0832               	movf	___fladd@bexp,w
  8352     1681  0228               	subwf	??___fladd,w
  8353     1682  00AA               	movwf	??___fladd+2
  8354     1683  1C03               	skipc
  8355     1684  03AB               	decf	??___fladd+3,f
  8356     1685  082B               	movf	??___fladd+3,w
  8357     1686  3A80               	xorlw	128
  8358     1687  00AC               	movwf	??___fladd+4
  8359     1688  3080               	movlw	128
  8360     1689  022C               	subwf	??___fladd+4,w
  8361     168A  1D03               	skipz
  8362     168B  2E8E               	goto	u3575
  8363     168C  301A               	movlw	26
  8364     168D  022A               	subwf	??___fladd+2,w
  8365     168E                     u3575:
  8366     168E  1C03               	skipc
  8367     168F  2E91               	goto	u3571
  8368     1690  2E92               	goto	u3570
  8369     1691                     u3571:
  8370     1691  2EC4               	goto	l3696
  8371     1692                     u3570:
  8372     1692                     l3682:
  8373     1692  0020               	movlb	0	; select bank0
  8374     1693  0823               	movf	___fladd@b+3,w
  8375     1694  0422               	iorwf	___fladd@b+2,w
  8376     1695  0421               	iorwf	___fladd@b+1,w
  8377     1696  0420               	iorwf	___fladd@b,w
  8378     1697  1D03               	skipz
  8379     1698  2E9A               	goto	u3581
  8380     1699  2E9C               	goto	u3580
  8381     169A                     u3581:
  8382     169A  3001               	movlw	1
  8383     169B  2E9D               	goto	u3590
  8384     169C                     u3580:
  8385     169C  3000               	movlw	0
  8386     169D                     u3590:
  8387     169D  00B3               	movwf	___fladd@grs
  8388     169E  3000               	movlw	0
  8389     169F  00A3               	movwf	___fladd@b+3
  8390     16A0  3000               	movlw	0
  8391     16A1  00A2               	movwf	___fladd@b+2
  8392     16A2  3000               	movlw	0
  8393     16A3  00A1               	movwf	___fladd@b+1
  8394     16A4  3000               	movlw	0
  8395     16A5  00A0               	movwf	___fladd@b
  8396     16A6  0831               	movf	___fladd@aexp,w
  8397     16A7  00B2               	movwf	___fladd@bexp
  8398     16A8  2ECB               	goto	l944
  8399     16A9                     l946:
  8400     16A9  1C33               	btfss	___fladd@grs,0
  8401     16AA  2EAC               	goto	u3601
  8402     16AB  2EAD               	goto	u3600
  8403     16AC                     u3601:
  8404     16AC  2EB1               	goto	l3686
  8405     16AD                     u3600:
  8406     16AD                     l3684:
  8407     16AD  3633               	lsrf	___fladd@grs,w
  8408     16AE  3801               	iorlw	1
  8409     16AF  00B3               	movwf	___fladd@grs
  8410     16B0  2EB3               	goto	l3688
  8411     16B1                     l3686:
  8412     16B1  1003               	clrc
  8413     16B2  0CB3               	rrf	___fladd@grs,f
  8414     16B3                     l3688:
  8415     16B3  1C20               	btfss	___fladd@b,0
  8416     16B4  2EB6               	goto	u3611
  8417     16B5  2EB7               	goto	u3610
  8418     16B6                     u3611:
  8419     16B6  2EB8               	goto	l3692
  8420     16B7                     u3610:
  8421     16B7                     l3690:
  8422     16B7  17B3               	bsf	___fladd@grs,7
  8423     16B8                     l3692:
  8424     16B8  3001               	movlw	1
  8425     16B9  00A8               	movwf	??___fladd
  8426     16BA                     u3625:
  8427     16BA  37A3               	asrf	___fladd@b+3,f
  8428     16BB  0CA2               	rrf	___fladd@b+2,f
  8429     16BC  0CA1               	rrf	___fladd@b+1,f
  8430     16BD  0CA0               	rrf	___fladd@b,f
  8431     16BE  0BA8               	decfsz	??___fladd& (0+127),f
  8432     16BF  2EBA               	goto	u3625
  8433     16C0                     l3694:
  8434     16C0  3001               	movlw	1
  8435     16C1  00A8               	movwf	??___fladd
  8436     16C2  0828               	movf	??___fladd,w
  8437     16C3  07B2               	addwf	___fladd@bexp,f
  8438     16C4                     l3696:
  8439     16C4  0020               	movlb	0	; select bank0
  8440     16C5  0831               	movf	___fladd@aexp,w
  8441     16C6  0232               	subwf	___fladd@bexp,w
  8442     16C7  1C03               	skipc
  8443     16C8  2ECA               	goto	u3631
  8444     16C9  2ECB               	goto	u3630
  8445     16CA                     u3631:
  8446     16CA  2EA9               	goto	l946
  8447     16CB                     u3630:
  8448     16CB                     l944:
  8449     16CB  1B30               	btfsc	___fladd@signs,6
  8450     16CC  2ECE               	goto	u3641
  8451     16CD  2ECF               	goto	u3640
  8452     16CE                     u3641:
  8453     16CE  2F05               	goto	l3722
  8454     16CF                     u3640:
  8455     16CF                     l3698:
  8456     16CF  0832               	movf	___fladd@bexp,w
  8457     16D0  1D03               	btfss	3,2
  8458     16D1  2ED3               	goto	u3651
  8459     16D2  2ED4               	goto	u3650
  8460     16D3                     u3651:
  8461     16D3  2EDD               	goto	l3704
  8462     16D4                     u3650:
  8463     16D4                     l3700:
  8464     16D4  3000               	movlw	0
  8465     16D5  00A3               	movwf	?___fladd+3
  8466     16D6  3000               	movlw	0
  8467     16D7  00A2               	movwf	?___fladd+2
  8468     16D8  3000               	movlw	0
  8469     16D9  00A1               	movwf	?___fladd+1
  8470     16DA  3000               	movlw	0
  8471     16DB  00A0               	movwf	?___fladd
  8472     16DC  2FFF               	goto	l953
  8473     16DD                     l3704:
  8474     16DD  0824               	movf	___fladd@a,w
  8475     16DE  07A0               	addwf	___fladd@b,f
  8476     16DF  0825               	movf	___fladd@a+1,w
  8477     16E0  3DA1               	addwfc	___fladd@b+1,f
  8478     16E1  0826               	movf	___fladd@a+2,w
  8479     16E2  3DA2               	addwfc	___fladd@b+2,f
  8480     16E3  0827               	movf	___fladd@a+3,w
  8481     16E4  3DA3               	addwfc	___fladd@b+3,f
  8482     16E5                     l3706:
  8483     16E5  1C23               	btfss	___fladd@b+3,0
  8484     16E6  2EE8               	goto	u3661
  8485     16E7  2EE9               	goto	u3660
  8486     16E8                     u3661:
  8487     16E8  2F91               	goto	l3756
  8488     16E9                     u3660:
  8489     16E9                     l3708:
  8490     16E9  1C33               	btfss	___fladd@grs,0
  8491     16EA  2EEC               	goto	u3671
  8492     16EB  2EED               	goto	u3670
  8493     16EC                     u3671:
  8494     16EC  2EF1               	goto	l3712
  8495     16ED                     u3670:
  8496     16ED                     l3710:
  8497     16ED  3633               	lsrf	___fladd@grs,w
  8498     16EE  3801               	iorlw	1
  8499     16EF  00B3               	movwf	___fladd@grs
  8500     16F0  2EF3               	goto	l3714
  8501     16F1                     l3712:
  8502     16F1  1003               	clrc
  8503     16F2  0CB3               	rrf	___fladd@grs,f
  8504     16F3                     l3714:
  8505     16F3  1C20               	btfss	___fladd@b,0
  8506     16F4  2EF6               	goto	u3681
  8507     16F5  2EF7               	goto	u3680
  8508     16F6                     u3681:
  8509     16F6  2EF8               	goto	l3718
  8510     16F7                     u3680:
  8511     16F7                     l3716:
  8512     16F7  17B3               	bsf	___fladd@grs,7
  8513     16F8                     l3718:
  8514     16F8  3001               	movlw	1
  8515     16F9  00A8               	movwf	??___fladd
  8516     16FA                     u3695:
  8517     16FA  37A3               	asrf	___fladd@b+3,f
  8518     16FB  0CA2               	rrf	___fladd@b+2,f
  8519     16FC  0CA1               	rrf	___fladd@b+1,f
  8520     16FD  0CA0               	rrf	___fladd@b,f
  8521     16FE  0BA8               	decfsz	??___fladd& (0+127),f
  8522     16FF  2EFA               	goto	u3695
  8523     1700                     l3720:
  8524     1700  3001               	movlw	1
  8525     1701  00A8               	movwf	??___fladd
  8526     1702  0828               	movf	??___fladd,w
  8527     1703  07B2               	addwf	___fladd@bexp,f
  8528     1704  2F91               	goto	l3756
  8529     1705                     l3722:
  8530     1705  0823               	movf	___fladd@b+3,w
  8531     1706  3A80               	xorlw	128
  8532     1707  00A8               	movwf	??___fladd
  8533     1708  0827               	movf	___fladd@a+3,w
  8534     1709  3A80               	xorlw	128
  8535     170A  0228               	subwf	??___fladd,w
  8536     170B  1D03               	skipz
  8537     170C  2F17               	goto	u3703
  8538     170D  0826               	movf	___fladd@a+2,w
  8539     170E  0222               	subwf	___fladd@b+2,w
  8540     170F  1D03               	skipz
  8541     1710  2F17               	goto	u3703
  8542     1711  0825               	movf	___fladd@a+1,w
  8543     1712  0221               	subwf	___fladd@b+1,w
  8544     1713  1D03               	skipz
  8545     1714  2F17               	goto	u3703
  8546     1715  0824               	movf	___fladd@a,w
  8547     1716  0220               	subwf	___fladd@b,w
  8548     1717                     u3703:
  8549     1717  1803               	skipnc
  8550     1718  2F1A               	goto	u3701
  8551     1719  2F1B               	goto	u3700
  8552     171A                     u3701:
  8553     171A  2F53               	goto	l3732
  8554     171B                     u3700:
  8555     171B                     l3724:
  8556     171B  30FF               	movlw	255
  8557     171C  00A8               	movwf	??___fladd
  8558     171D  30FF               	movlw	255
  8559     171E  00A9               	movwf	??___fladd+1
  8560     171F  30FF               	movlw	255
  8561     1720  00AA               	movwf	??___fladd+2
  8562     1721  30FF               	movlw	255
  8563     1722  00AB               	movwf	??___fladd+3
  8564     1723  0820               	movf	___fladd@b,w
  8565     1724  0224               	subwf	___fladd@a,w
  8566     1725  00AC               	movwf	??___fladd+4
  8567     1726  0821               	movf	___fladd@b+1,w
  8568     1727  3B25               	subwfb	___fladd@a+1,w
  8569     1728  00AD               	movwf	??___fladd+5
  8570     1729  0822               	movf	___fladd@b+2,w
  8571     172A  3B26               	subwfb	___fladd@a+2,w
  8572     172B  00AE               	movwf	??___fladd+6
  8573     172C  0823               	movf	___fladd@b+3,w
  8574     172D  3B27               	subwfb	___fladd@a+3,w
  8575     172E  00AF               	movwf	??___fladd+7
  8576     172F  082C               	movf	??___fladd+4,w
  8577     1730  07A8               	addwf	??___fladd,f
  8578     1731  082D               	movf	??___fladd+5,w
  8579     1732  3DA9               	addwfc	??___fladd+1,f
  8580     1733  082E               	movf	??___fladd+6,w
  8581     1734  3DAA               	addwfc	??___fladd+2,f
  8582     1735  082F               	movf	??___fladd+7,w
  8583     1736  3DAB               	addwfc	??___fladd+3,f
  8584     1737  082B               	movf	??___fladd+3,w
  8585     1738  00A3               	movwf	___fladd@b+3
  8586     1739  082A               	movf	??___fladd+2,w
  8587     173A  00A2               	movwf	___fladd@b+2
  8588     173B  0829               	movf	??___fladd+1,w
  8589     173C  00A1               	movwf	___fladd@b+1
  8590     173D  0828               	movf	??___fladd,w
  8591     173E  00A0               	movwf	___fladd@b
  8592     173F                     l3726:
  8593     173F  3080               	movlw	128
  8594     1740  00A8               	movwf	??___fladd
  8595     1741  0828               	movf	??___fladd,w
  8596     1742  06B0               	xorwf	___fladd@signs,f
  8597     1743  09B3               	comf	___fladd@grs,f
  8598     1744  0AB3               	incf	___fladd@grs,f
  8599     1745                     l3728:
  8600     1745  0833               	movf	___fladd@grs,w
  8601     1746  1D03               	btfss	3,2
  8602     1747  2F49               	goto	u3711
  8603     1748  2F4A               	goto	u3710
  8604     1749                     u3711:
  8605     1749  2F5B               	goto	l961
  8606     174A                     u3710:
  8607     174A                     l3730:
  8608     174A  3001               	movlw	1
  8609     174B  07A0               	addwf	___fladd@b,f
  8610     174C  3000               	movlw	0
  8611     174D  3DA1               	addwfc	___fladd@b+1,f
  8612     174E  3000               	movlw	0
  8613     174F  3DA2               	addwfc	___fladd@b+2,f
  8614     1750  3000               	movlw	0
  8615     1751  3DA3               	addwfc	___fladd@b+3,f
  8616     1752  2F5B               	goto	l961
  8617     1753                     l3732:
  8618     1753  0824               	movf	___fladd@a,w
  8619     1754  02A0               	subwf	___fladd@b,f
  8620     1755  0825               	movf	___fladd@a+1,w
  8621     1756  3BA1               	subwfb	___fladd@b+1,f
  8622     1757  0826               	movf	___fladd@a+2,w
  8623     1758  3BA2               	subwfb	___fladd@b+2,f
  8624     1759  0827               	movf	___fladd@a+3,w
  8625     175A  3BA3               	subwfb	___fladd@b+3,f
  8626     175B                     l961:
  8627     175B  0823               	movf	___fladd@b+3,w
  8628     175C  0422               	iorwf	___fladd@b+2,w
  8629     175D  0421               	iorwf	___fladd@b+1,w
  8630     175E  0420               	iorwf	___fladd@b,w
  8631     175F  1D03               	skipz
  8632     1760  2F62               	goto	u3721
  8633     1761  2F63               	goto	u3720
  8634     1762                     u3721:
  8635     1762  2F8D               	goto	l3754
  8636     1763                     u3720:
  8637     1763                     l3734:
  8638     1763  0833               	movf	___fladd@grs,w
  8639     1764  1D03               	btfss	3,2
  8640     1765  2F67               	goto	u3731
  8641     1766  2F68               	goto	u3730
  8642     1767                     u3731:
  8643     1767  2F8D               	goto	l3754
  8644     1768                     u3730:
  8645     1768                     l3736:
  8646     1768  3000               	movlw	0
  8647     1769  00A3               	movwf	?___fladd+3
  8648     176A  3000               	movlw	0
  8649     176B  00A2               	movwf	?___fladd+2
  8650     176C  3000               	movlw	0
  8651     176D  00A1               	movwf	?___fladd+1
  8652     176E  3000               	movlw	0
  8653     176F  00A0               	movwf	?___fladd
  8654     1770  2FFF               	goto	l953
  8655     1771                     l3740:
  8656     1771  3001               	movlw	1
  8657     1772                     u3745:
  8658     1772  35A0               	lslf	___fladd@b,f
  8659     1773  0DA1               	rlf	___fladd@b+1,f
  8660     1774  0DA2               	rlf	___fladd@b+2,f
  8661     1775  0DA3               	rlf	___fladd@b+3,f
  8662     1776  0B89               	decfsz	9,f
  8663     1777  2F72               	goto	u3745
  8664     1778                     l3742:
  8665     1778  1FB3               	btfss	___fladd@grs,7
  8666     1779  2F7B               	goto	u3751
  8667     177A  2F7C               	goto	u3750
  8668     177B                     u3751:
  8669     177B  2F7D               	goto	l965
  8670     177C                     u3750:
  8671     177C                     l3744:
  8672     177C  1420               	bsf	___fladd@b,0
  8673     177D                     l965:
  8674     177D  1C33               	btfss	___fladd@grs,0
  8675     177E  2F80               	goto	u3761
  8676     177F  2F81               	goto	u3760
  8677     1780                     u3761:
  8678     1780  2F84               	goto	l3748
  8679     1781                     u3760:
  8680     1781                     l3746:
  8681     1781  1403               	setc
  8682     1782  0DB3               	rlf	___fladd@grs,f
  8683     1783  2F86               	goto	l3750
  8684     1784                     l3748:
  8685     1784  1003               	clrc
  8686     1785  0DB3               	rlf	___fladd@grs,f
  8687     1786                     l3750:
  8688     1786  0832               	movf	___fladd@bexp,w
  8689     1787  1903               	btfsc	3,2
  8690     1788  2F8A               	goto	u3771
  8691     1789  2F8B               	goto	u3770
  8692     178A                     u3771:
  8693     178A  2F8D               	goto	l3754
  8694     178B                     u3770:
  8695     178B                     l3752:
  8696     178B  3001               	movlw	1
  8697     178C  02B2               	subwf	___fladd@bexp,f
  8698     178D                     l3754:
  8699     178D  1FA2               	btfss	___fladd@b+2,7
  8700     178E  2F90               	goto	u3781
  8701     178F  2F91               	goto	u3780
  8702     1790                     u3781:
  8703     1790  2F71               	goto	l3740
  8704     1791                     u3780:
  8705     1791                     l3756:
  8706     1791  01B1               	clrf	___fladd@aexp
  8707     1792                     l3758:
  8708     1792  1FB3               	btfss	___fladd@grs,7
  8709     1793  2F95               	goto	u3791
  8710     1794  2F96               	goto	u3790
  8711     1795                     u3791:
  8712     1795  2FA4               	goto	l3766
  8713     1796                     u3790:
  8714     1796                     l3760:
  8715     1796  0833               	movf	___fladd@grs,w
  8716     1797  397F               	andlw	127
  8717     1798  1903               	btfsc	3,2
  8718     1799  2F9B               	goto	u3801
  8719     179A  2F9C               	goto	u3800
  8720     179B                     u3801:
  8721     179B  2F9F               	goto	l971
  8722     179C                     u3800:
  8723     179C                     l3762:
  8724     179C  01B1               	clrf	___fladd@aexp
  8725     179D  0AB1               	incf	___fladd@aexp,f
  8726     179E  2FA4               	goto	l3766
  8727     179F                     l971:
  8728     179F  1C20               	btfss	___fladd@b,0
  8729     17A0  2FA2               	goto	u3811
  8730     17A1  2FA3               	goto	u3810
  8731     17A2                     u3811:
  8732     17A2  2FA4               	goto	l3766
  8733     17A3                     u3810:
  8734     17A3  2F9C               	goto	l3762
  8735     17A4                     l3766:
  8736     17A4  0831               	movf	___fladd@aexp,w
  8737     17A5  1903               	btfsc	3,2
  8738     17A6  2FA8               	goto	u3821
  8739     17A7  2FA9               	goto	u3820
  8740     17A8                     u3821:
  8741     17A8  2FD6               	goto	l974
  8742     17A9                     u3820:
  8743     17A9                     l3768:
  8744     17A9  3001               	movlw	1
  8745     17AA  07A0               	addwf	___fladd@b,f
  8746     17AB  3000               	movlw	0
  8747     17AC  3DA1               	addwfc	___fladd@b+1,f
  8748     17AD  3000               	movlw	0
  8749     17AE  3DA2               	addwfc	___fladd@b+2,f
  8750     17AF  3000               	movlw	0
  8751     17B0  3DA3               	addwfc	___fladd@b+3,f
  8752     17B1                     l3770:
  8753     17B1  1C23               	btfss	___fladd@b+3,0
  8754     17B2  2FB4               	goto	u3831
  8755     17B3  2FB5               	goto	u3830
  8756     17B4                     u3831:
  8757     17B4  2FD6               	goto	l974
  8758     17B5                     u3830:
  8759     17B5                     l3772:
  8760     17B5  0820               	movf	___fladd@b,w
  8761     17B6  00A8               	movwf	??___fladd
  8762     17B7  0821               	movf	___fladd@b+1,w
  8763     17B8  00A9               	movwf	??___fladd+1
  8764     17B9  0822               	movf	___fladd@b+2,w
  8765     17BA  00AA               	movwf	??___fladd+2
  8766     17BB  0823               	movf	___fladd@b+3,w
  8767     17BC  00AB               	movwf	??___fladd+3
  8768     17BD  3001               	movlw	1
  8769     17BE  00AC               	movwf	??___fladd+4
  8770     17BF                     u3845:
  8771     17BF  37AB               	asrf	??___fladd+3,f
  8772     17C0  0CAA               	rrf	??___fladd+2,f
  8773     17C1  0CA9               	rrf	??___fladd+1,f
  8774     17C2  0CA8               	rrf	??___fladd,f
  8775     17C3                     u3840:
  8776     17C3  0BAC               	decfsz	??___fladd+4,f
  8777     17C4  2FBF               	goto	u3845
  8778     17C5  082B               	movf	??___fladd+3,w
  8779     17C6  00A3               	movwf	___fladd@b+3
  8780     17C7  082A               	movf	??___fladd+2,w
  8781     17C8  00A2               	movwf	___fladd@b+2
  8782     17C9  0829               	movf	??___fladd+1,w
  8783     17CA  00A1               	movwf	___fladd@b+1
  8784     17CB  0828               	movf	??___fladd,w
  8785     17CC  00A0               	movwf	___fladd@b
  8786     17CD  0A32               	incf	___fladd@bexp,w
  8787     17CE  1903               	btfsc	3,2
  8788     17CF  2FD1               	goto	u3851
  8789     17D0  2FD2               	goto	u3850
  8790     17D1                     u3851:
  8791     17D1  2FD6               	goto	l974
  8792     17D2                     u3850:
  8793     17D2                     l3774:
  8794     17D2  3001               	movlw	1
  8795     17D3  00A8               	movwf	??___fladd
  8796     17D4  0828               	movf	??___fladd,w
  8797     17D5  07B2               	addwf	___fladd@bexp,f
  8798     17D6                     l974:
  8799     17D6  0A32               	incf	___fladd@bexp,w
  8800     17D7  1903               	btfsc	3,2
  8801     17D8  2FDA               	goto	u3861
  8802     17D9  2FDB               	goto	u3860
  8803     17DA                     u3861:
  8804     17DA  2FE0               	goto	l3778
  8805     17DB                     u3860:
  8806     17DB                     l3776:
  8807     17DB  0832               	movf	___fladd@bexp,w
  8808     17DC  1D03               	btfss	3,2
  8809     17DD  2FDF               	goto	u3871
  8810     17DE  2FE0               	goto	u3870
  8811     17DF                     u3871:
  8812     17DF  2FEE               	goto	l3784
  8813     17E0                     u3870:
  8814     17E0                     l3778:
  8815     17E0  3000               	movlw	0
  8816     17E1  00A3               	movwf	___fladd@b+3
  8817     17E2  3000               	movlw	0
  8818     17E3  00A2               	movwf	___fladd@b+2
  8819     17E4  3000               	movlw	0
  8820     17E5  00A1               	movwf	___fladd@b+1
  8821     17E6  3000               	movlw	0
  8822     17E7  00A0               	movwf	___fladd@b
  8823     17E8                     l3780:
  8824     17E8  0832               	movf	___fladd@bexp,w
  8825     17E9  1D03               	btfss	3,2
  8826     17EA  2FEC               	goto	u3881
  8827     17EB  2FED               	goto	u3880
  8828     17EC                     u3881:
  8829     17EC  2FEE               	goto	l3784
  8830     17ED                     u3880:
  8831     17ED                     l3782:
  8832     17ED  01B0               	clrf	___fladd@signs
  8833     17EE                     l3784:
  8834     17EE  1C32               	btfss	___fladd@bexp,0
  8835     17EF  2FF1               	goto	u3891
  8836     17F0  2FF2               	goto	u3890
  8837     17F1                     u3891:
  8838     17F1  2FF4               	goto	l3788
  8839     17F2                     u3890:
  8840     17F2                     l3786:
  8841     17F2  17A2               	bsf	___fladd@b+2,7
  8842     17F3  2FF8               	goto	l982
  8843     17F4                     l3788:
  8844     17F4  307F               	movlw	127
  8845     17F5  00A8               	movwf	??___fladd
  8846     17F6  0828               	movf	??___fladd,w
  8847     17F7  05A2               	andwf	___fladd@b+2,f
  8848     17F8                     l982:
  8849     17F8  3632               	lsrf	___fladd@bexp,w
  8850     17F9  00A3               	movwf	___fladd@b+3
  8851     17FA                     l3790:
  8852     17FA  1FB0               	btfss	___fladd@signs,7
  8853     17FB  2FFD               	goto	u3901
  8854     17FC  2FFE               	goto	u3900
  8855     17FD                     u3901:
  8856     17FD  2FFF               	goto	l983
  8857     17FE                     u3900:
  8858     17FE                     l3792:
  8859     17FE  17A3               	bsf	___fladd@b+3,7
  8860     17FF                     l983:
  8861     17FF                     l953:
  8862     17FF  0008               	return
  8863     1800                     __end_of___fladd:
  8864                           
  8865                           	psect	text15
  8866     1976                     __ptext15:	
  8867 ;; *************** function ___flneg *****************
  8868 ;; Defined at:
  8869 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  8870 ;; Parameters:    Size  Location     Type
  8871 ;;  f1              4    0[BANK0 ] unsigned char 
  8872 ;; Auto vars:     Size  Location     Type
  8873 ;;		None
  8874 ;; Return value:  Size  Location     Type
  8875 ;;                  4    0[BANK0 ] unsigned char 
  8876 ;; Registers used:
  8877 ;;		wreg
  8878 ;; Tracked objects:
  8879 ;;		On entry : 0/0
  8880 ;;		On exit  : 0/0
  8881 ;;		Unchanged: 0/0
  8882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8883 ;;      Params:         0       4       0       0       0       0       0       0
  8884 ;;      Locals:         0       0       0       0       0       0       0       0
  8885 ;;      Temps:          0       0       0       0       0       0       0       0
  8886 ;;      Totals:         0       4       0       0       0       0       0       0
  8887 ;;Total ram usage:        4 bytes
  8888 ;; Hardware stack levels used: 1
  8889 ;; Hardware stack levels required when called: 4
  8890 ;; This function calls:
  8891 ;;		Nothing
  8892 ;; This function is called by:
  8893 ;;		_efgtoa
  8894 ;; This function uses a non-reentrant model
  8895 ;;
  8896                           
  8897     1976                     ___flneg:	
  8898                           ;psect for function ___flneg
  8899                           
  8900     1976                     l3944:	
  8901                           ;incstack = 0
  8902                           ; Regs used in ___flneg: [wreg]
  8903                           
  8904     1976  0020               	movlb	0	; select bank0
  8905     1977  0823               	movf	___flneg@f1+3,w
  8906     1978  0422               	iorwf	___flneg@f1+2,w
  8907     1979  0421               	iorwf	___flneg@f1+1,w
  8908     197A  0420               	iorwf	___flneg@f1,w
  8909     197B  1903               	skipnz
  8910     197C  297E               	goto	u4261
  8911     197D  297F               	goto	u4260
  8912     197E                     u4261:
  8913     197E  2981               	goto	l3948
  8914     197F                     u4260:
  8915     197F                     l3946:
  8916     197F  3080               	movlw	128
  8917     1980  06A3               	xorwf	___flneg@f1+3,f
  8918     1981                     l3948:
  8919     1981                     l829:
  8920     1981  0008               	return
  8921     1982                     __end_of___flneg:
  8922                           
  8923                           	psect	text16
  8924     028D                     __ptext16:	
  8925 ;; *************** function ___flmul *****************
  8926 ;; Defined at:
  8927 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;  b               4    9[BANK0 ] unsigned char 
  8930 ;;  a               4   13[BANK0 ] unsigned char 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;  prod            4   29[BANK0 ] struct .
  8933 ;;  grs             4   23[BANK0 ] unsigned long 
  8934 ;;  temp            2   33[BANK0 ] struct .
  8935 ;;  bexp            1   28[BANK0 ] unsigned char 
  8936 ;;  aexp            1   27[BANK0 ] unsigned char 
  8937 ;;  sign            1   22[BANK0 ] unsigned char 
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  4    9[BANK0 ] unsigned char 
  8940 ;; Registers used:
  8941 ;;		wreg, status,2, status,0, pclath, cstack
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8947 ;;      Params:         0       8       0       0       0       0       0       0
  8948 ;;      Locals:         0      13       0       0       0       0       0       0
  8949 ;;      Temps:          0       5       0       0       0       0       0       0
  8950 ;;      Totals:         0      26       0       0       0       0       0       0
  8951 ;;Total ram usage:       26 bytes
  8952 ;; Hardware stack levels used: 1
  8953 ;; Hardware stack levels required when called: 5
  8954 ;; This function calls:
  8955 ;;		__Umul8_16
  8956 ;; This function is called by:
  8957 ;;		_efgtoa
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           
  8961     028D                     ___flmul:	
  8962                           ;psect for function ___flmul
  8963                           
  8964     028D                     l4134:	
  8965                           ;incstack = 0
  8966                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8967                           
  8968     028D  0020               	movlb	0	; select bank0
  8969     028E  082C               	movf	___flmul@b+3,w
  8970     028F  3980               	andlw	128
  8971     0290  00B6               	movwf	___flmul@sign
  8972     0291                     l4136:
  8973     0291  352C               	lslf	___flmul@b+3,w
  8974     0292  00BC               	movwf	___flmul@bexp
  8975     0293                     l4138:
  8976     0293  1FAB               	btfss	___flmul@b+2,7
  8977     0294  2A96               	goto	u4661
  8978     0295  2A97               	goto	u4660
  8979     0296                     u4661:
  8980     0296  2A98               	goto	l4142
  8981     0297                     u4660:
  8982     0297                     l4140:
  8983     0297  143C               	bsf	___flmul@bexp,0
  8984     0298                     l4142:
  8985     0298  083C               	movf	___flmul@bexp,w
  8986     0299  1903               	btfsc	3,2
  8987     029A  2A9C               	goto	u4671
  8988     029B  2A9D               	goto	u4670
  8989     029C                     u4671:
  8990     029C  2AAC               	goto	l4150
  8991     029D                     u4670:
  8992     029D                     l4144:
  8993     029D  0A3C               	incf	___flmul@bexp,w
  8994     029E  1D03               	btfss	3,2
  8995     029F  2AA1               	goto	u4681
  8996     02A0  2AA2               	goto	u4680
  8997     02A1                     u4681:
  8998     02A1  2AAA               	goto	l4148
  8999     02A2                     u4680:
  9000     02A2                     l4146:
  9001     02A2  3000               	movlw	0
  9002     02A3  00AC               	movwf	___flmul@b+3
  9003     02A4  3000               	movlw	0
  9004     02A5  00AB               	movwf	___flmul@b+2
  9005     02A6  3000               	movlw	0
  9006     02A7  00AA               	movwf	___flmul@b+1
  9007     02A8  3000               	movlw	0
  9008     02A9  00A9               	movwf	___flmul@b
  9009     02AA                     l4148:
  9010     02AA  17AB               	bsf	___flmul@b+2,7
  9011     02AB  2AB4               	goto	l4152
  9012     02AC                     l4150:
  9013     02AC  3000               	movlw	0
  9014     02AD  00AC               	movwf	___flmul@b+3
  9015     02AE  3000               	movlw	0
  9016     02AF  00AB               	movwf	___flmul@b+2
  9017     02B0  3000               	movlw	0
  9018     02B1  00AA               	movwf	___flmul@b+1
  9019     02B2  3000               	movlw	0
  9020     02B3  00A9               	movwf	___flmul@b
  9021     02B4                     l4152:
  9022     02B4  0830               	movf	___flmul@a+3,w
  9023     02B5  3980               	andlw	128
  9024     02B6  00B1               	movwf	??___flmul
  9025     02B7  0831               	movf	??___flmul,w
  9026     02B8  06B6               	xorwf	___flmul@sign,f
  9027     02B9                     l4154:
  9028     02B9  3530               	lslf	___flmul@a+3,w
  9029     02BA  00BB               	movwf	___flmul@aexp
  9030     02BB                     l4156:
  9031     02BB  1FAF               	btfss	___flmul@a+2,7
  9032     02BC  2ABE               	goto	u4691
  9033     02BD  2ABF               	goto	u4690
  9034     02BE                     u4691:
  9035     02BE  2AC0               	goto	l4160
  9036     02BF                     u4690:
  9037     02BF                     l4158:
  9038     02BF  143B               	bsf	___flmul@aexp,0
  9039     02C0                     l4160:
  9040     02C0  083B               	movf	___flmul@aexp,w
  9041     02C1  1903               	btfsc	3,2
  9042     02C2  2AC4               	goto	u4701
  9043     02C3  2AC5               	goto	u4700
  9044     02C4                     u4701:
  9045     02C4  2AD4               	goto	l4168
  9046     02C5                     u4700:
  9047     02C5                     l4162:
  9048     02C5  0A3B               	incf	___flmul@aexp,w
  9049     02C6  1D03               	btfss	3,2
  9050     02C7  2AC9               	goto	u4711
  9051     02C8  2ACA               	goto	u4710
  9052     02C9                     u4711:
  9053     02C9  2AD2               	goto	l4166
  9054     02CA                     u4710:
  9055     02CA                     l4164:
  9056     02CA  3000               	movlw	0
  9057     02CB  00B0               	movwf	___flmul@a+3
  9058     02CC  3000               	movlw	0
  9059     02CD  00AF               	movwf	___flmul@a+2
  9060     02CE  3000               	movlw	0
  9061     02CF  00AE               	movwf	___flmul@a+1
  9062     02D0  3000               	movlw	0
  9063     02D1  00AD               	movwf	___flmul@a
  9064     02D2                     l4166:
  9065     02D2  17AF               	bsf	___flmul@a+2,7
  9066     02D3  2ADC               	goto	l4170
  9067     02D4                     l4168:
  9068     02D4  3000               	movlw	0
  9069     02D5  00B0               	movwf	___flmul@a+3
  9070     02D6  3000               	movlw	0
  9071     02D7  00AF               	movwf	___flmul@a+2
  9072     02D8  3000               	movlw	0
  9073     02D9  00AE               	movwf	___flmul@a+1
  9074     02DA  3000               	movlw	0
  9075     02DB  00AD               	movwf	___flmul@a
  9076     02DC                     l4170:
  9077     02DC  083B               	movf	___flmul@aexp,w
  9078     02DD  1903               	btfsc	3,2
  9079     02DE  2AE0               	goto	u4721
  9080     02DF  2AE1               	goto	u4720
  9081     02E0                     u4721:
  9082     02E0  2AE6               	goto	l4174
  9083     02E1                     u4720:
  9084     02E1                     l4172:
  9085     02E1  083C               	movf	___flmul@bexp,w
  9086     02E2  1D03               	btfss	3,2
  9087     02E3  2AE5               	goto	u4731
  9088     02E4  2AE6               	goto	u4730
  9089     02E5                     u4731:
  9090     02E5  2AEF               	goto	l4178
  9091     02E6                     u4730:
  9092     02E6                     l4174:
  9093     02E6  3000               	movlw	0
  9094     02E7  00AC               	movwf	?___flmul+3
  9095     02E8  3000               	movlw	0
  9096     02E9  00AB               	movwf	?___flmul+2
  9097     02EA  3000               	movlw	0
  9098     02EB  00AA               	movwf	?___flmul+1
  9099     02EC  3000               	movlw	0
  9100     02ED  00A9               	movwf	?___flmul
  9101     02EE  2CC7               	goto	l1036
  9102     02EF                     l4178:
  9103     02EF  0829               	movf	___flmul@b,w
  9104     02F0  00A0               	movwf	__Umul8_16@multiplicand
  9105     02F1  082F               	movf	___flmul@a+2,w
  9106     02F2  319B  231A  3182   	fcall	__Umul8_16
  9107     02F5  0020               	movlb	0	; select bank0
  9108     02F6  0821               	movf	?__Umul8_16+1,w
  9109     02F7  00C2               	movwf	___flmul@temp+1
  9110     02F8  0820               	movf	?__Umul8_16,w
  9111     02F9  00C1               	movwf	___flmul@temp
  9112     02FA                     l4180:
  9113     02FA  0841               	movf	___flmul@temp,w
  9114     02FB  00B1               	movwf	??___flmul
  9115     02FC  01B2               	clrf	??___flmul+1
  9116     02FD  01B3               	clrf	??___flmul+2
  9117     02FE  01B4               	clrf	??___flmul+3
  9118     02FF  0834               	movf	??___flmul+3,w
  9119     0300  00BA               	movwf	___flmul@grs+3
  9120     0301  0833               	movf	??___flmul+2,w
  9121     0302  00B9               	movwf	___flmul@grs+2
  9122     0303  0832               	movf	??___flmul+1,w
  9123     0304  00B8               	movwf	___flmul@grs+1
  9124     0305  0831               	movf	??___flmul,w
  9125     0306  00B7               	movwf	___flmul@grs
  9126     0307                     l4182:
  9127     0307  0842               	movf	___flmul@temp+1,w
  9128     0308  00B1               	movwf	??___flmul
  9129     0309  01B2               	clrf	??___flmul+1
  9130     030A  01B3               	clrf	??___flmul+2
  9131     030B  01B4               	clrf	??___flmul+3
  9132     030C  0834               	movf	??___flmul+3,w
  9133     030D  00C0               	movwf	___flmul@prod+3
  9134     030E  0833               	movf	??___flmul+2,w
  9135     030F  00BF               	movwf	___flmul@prod+2
  9136     0310  0832               	movf	??___flmul+1,w
  9137     0311  00BE               	movwf	___flmul@prod+1
  9138     0312  0831               	movf	??___flmul,w
  9139     0313  00BD               	movwf	___flmul@prod
  9140     0314  082A               	movf	___flmul@b+1,w
  9141     0315  00A0               	movwf	__Umul8_16@multiplicand
  9142     0316  082E               	movf	___flmul@a+1,w
  9143     0317  319B  231A  3182   	fcall	__Umul8_16
  9144     031A  0020               	movlb	0	; select bank0
  9145     031B  0821               	movf	?__Umul8_16+1,w
  9146     031C  00C2               	movwf	___flmul@temp+1
  9147     031D  0820               	movf	?__Umul8_16,w
  9148     031E  00C1               	movwf	___flmul@temp
  9149     031F                     l4184:
  9150     031F  0841               	movf	___flmul@temp,w
  9151     0320  00B1               	movwf	??___flmul
  9152     0321  01B2               	clrf	??___flmul+1
  9153     0322  01B3               	clrf	??___flmul+2
  9154     0323  01B4               	clrf	??___flmul+3
  9155     0324  0831               	movf	??___flmul,w
  9156     0325  07B7               	addwf	___flmul@grs,f
  9157     0326  0832               	movf	??___flmul+1,w
  9158     0327  3DB8               	addwfc	___flmul@grs+1,f
  9159     0328  0833               	movf	??___flmul+2,w
  9160     0329  3DB9               	addwfc	___flmul@grs+2,f
  9161     032A  0834               	movf	??___flmul+3,w
  9162     032B  3DBA               	addwfc	___flmul@grs+3,f
  9163     032C                     l4186:
  9164     032C  0842               	movf	___flmul@temp+1,w
  9165     032D  00B1               	movwf	??___flmul
  9166     032E  01B2               	clrf	??___flmul+1
  9167     032F  01B3               	clrf	??___flmul+2
  9168     0330  01B4               	clrf	??___flmul+3
  9169     0331  0831               	movf	??___flmul,w
  9170     0332  07BD               	addwf	___flmul@prod,f
  9171     0333  0832               	movf	??___flmul+1,w
  9172     0334  3DBE               	addwfc	___flmul@prod+1,f
  9173     0335  0833               	movf	??___flmul+2,w
  9174     0336  3DBF               	addwfc	___flmul@prod+2,f
  9175     0337  0834               	movf	??___flmul+3,w
  9176     0338  3DC0               	addwfc	___flmul@prod+3,f
  9177     0339  082B               	movf	___flmul@b+2,w
  9178     033A  00A0               	movwf	__Umul8_16@multiplicand
  9179     033B  082D               	movf	___flmul@a,w
  9180     033C  319B  231A  3182   	fcall	__Umul8_16
  9181     033F  0020               	movlb	0	; select bank0
  9182     0340  0821               	movf	?__Umul8_16+1,w
  9183     0341  00C2               	movwf	___flmul@temp+1
  9184     0342  0820               	movf	?__Umul8_16,w
  9185     0343  00C1               	movwf	___flmul@temp
  9186     0344                     l4188:
  9187     0344  0841               	movf	___flmul@temp,w
  9188     0345  00B1               	movwf	??___flmul
  9189     0346  01B2               	clrf	??___flmul+1
  9190     0347  01B3               	clrf	??___flmul+2
  9191     0348  01B4               	clrf	??___flmul+3
  9192     0349  0831               	movf	??___flmul,w
  9193     034A  07B7               	addwf	___flmul@grs,f
  9194     034B  0832               	movf	??___flmul+1,w
  9195     034C  3DB8               	addwfc	___flmul@grs+1,f
  9196     034D  0833               	movf	??___flmul+2,w
  9197     034E  3DB9               	addwfc	___flmul@grs+2,f
  9198     034F  0834               	movf	??___flmul+3,w
  9199     0350  3DBA               	addwfc	___flmul@grs+3,f
  9200     0351                     l4190:
  9201     0351  0842               	movf	___flmul@temp+1,w
  9202     0352  00B1               	movwf	??___flmul
  9203     0353  01B2               	clrf	??___flmul+1
  9204     0354  01B3               	clrf	??___flmul+2
  9205     0355  01B4               	clrf	??___flmul+3
  9206     0356  0831               	movf	??___flmul,w
  9207     0357  07BD               	addwf	___flmul@prod,f
  9208     0358  0832               	movf	??___flmul+1,w
  9209     0359  3DBE               	addwfc	___flmul@prod+1,f
  9210     035A  0833               	movf	??___flmul+2,w
  9211     035B  3DBF               	addwfc	___flmul@prod+2,f
  9212     035C  0834               	movf	??___flmul+3,w
  9213     035D  3DC0               	addwfc	___flmul@prod+3,f
  9214     035E                     l4192:
  9215     035E  3008               	movlw	8
  9216     035F                     u4745:
  9217     035F  35B7               	lslf	___flmul@grs,f
  9218     0360  0DB8               	rlf	___flmul@grs+1,f
  9219     0361  0DB9               	rlf	___flmul@grs+2,f
  9220     0362  0DBA               	rlf	___flmul@grs+3,f
  9221     0363  0B89               	decfsz	9,f
  9222     0364  2B5F               	goto	u4745
  9223     0365                     l4194:
  9224     0365  082A               	movf	___flmul@b+1,w
  9225     0366  00A0               	movwf	__Umul8_16@multiplicand
  9226     0367  082D               	movf	___flmul@a,w
  9227     0368  319B  231A  3182   	fcall	__Umul8_16
  9228     036B  0020               	movlb	0	; select bank0
  9229     036C  0821               	movf	?__Umul8_16+1,w
  9230     036D  00C2               	movwf	___flmul@temp+1
  9231     036E  0820               	movf	?__Umul8_16,w
  9232     036F  00C1               	movwf	___flmul@temp
  9233     0370                     l4196:
  9234     0370  0841               	movf	___flmul@temp,w
  9235     0371  07B7               	addwf	___flmul@grs,f
  9236     0372  0842               	movf	___flmul@temp+1,w
  9237     0373  3DB8               	addwfc	___flmul@grs+1,f
  9238     0374  3000               	movlw	0
  9239     0375  3DB9               	addwfc	___flmul@grs+2,f
  9240     0376  3DBA               	addwfc	___flmul@grs+3,f
  9241     0377                     l4198:
  9242     0377  0829               	movf	___flmul@b,w
  9243     0378  00A0               	movwf	__Umul8_16@multiplicand
  9244     0379  082E               	movf	___flmul@a+1,w
  9245     037A  319B  231A  3182   	fcall	__Umul8_16
  9246     037D  0020               	movlb	0	; select bank0
  9247     037E  0821               	movf	?__Umul8_16+1,w
  9248     037F  00C2               	movwf	___flmul@temp+1
  9249     0380  0820               	movf	?__Umul8_16,w
  9250     0381  00C1               	movwf	___flmul@temp
  9251     0382                     l4200:
  9252     0382  0841               	movf	___flmul@temp,w
  9253     0383  07B7               	addwf	___flmul@grs,f
  9254     0384  0842               	movf	___flmul@temp+1,w
  9255     0385  3DB8               	addwfc	___flmul@grs+1,f
  9256     0386  3000               	movlw	0
  9257     0387  3DB9               	addwfc	___flmul@grs+2,f
  9258     0388  3DBA               	addwfc	___flmul@grs+3,f
  9259     0389                     l4202:
  9260     0389  3008               	movlw	8
  9261     038A                     u4755:
  9262     038A  35B7               	lslf	___flmul@grs,f
  9263     038B  0DB8               	rlf	___flmul@grs+1,f
  9264     038C  0DB9               	rlf	___flmul@grs+2,f
  9265     038D  0DBA               	rlf	___flmul@grs+3,f
  9266     038E  0B89               	decfsz	9,f
  9267     038F  2B8A               	goto	u4755
  9268     0390  0829               	movf	___flmul@b,w
  9269     0391  00A0               	movwf	__Umul8_16@multiplicand
  9270     0392  082D               	movf	___flmul@a,w
  9271     0393  319B  231A  3182   	fcall	__Umul8_16
  9272     0396  0020               	movlb	0	; select bank0
  9273     0397  0821               	movf	?__Umul8_16+1,w
  9274     0398  00C2               	movwf	___flmul@temp+1
  9275     0399  0820               	movf	?__Umul8_16,w
  9276     039A  00C1               	movwf	___flmul@temp
  9277     039B                     l4204:
  9278     039B  0841               	movf	___flmul@temp,w
  9279     039C  07B7               	addwf	___flmul@grs,f
  9280     039D  0842               	movf	___flmul@temp+1,w
  9281     039E  3DB8               	addwfc	___flmul@grs+1,f
  9282     039F  3000               	movlw	0
  9283     03A0  3DB9               	addwfc	___flmul@grs+2,f
  9284     03A1  3DBA               	addwfc	___flmul@grs+3,f
  9285     03A2                     l4206:
  9286     03A2  082A               	movf	___flmul@b+1,w
  9287     03A3  00A0               	movwf	__Umul8_16@multiplicand
  9288     03A4  082F               	movf	___flmul@a+2,w
  9289     03A5  319B  231A  3182   	fcall	__Umul8_16
  9290     03A8  0020               	movlb	0	; select bank0
  9291     03A9  0821               	movf	?__Umul8_16+1,w
  9292     03AA  00C2               	movwf	___flmul@temp+1
  9293     03AB  0820               	movf	?__Umul8_16,w
  9294     03AC  00C1               	movwf	___flmul@temp
  9295     03AD  0841               	movf	___flmul@temp,w
  9296     03AE  07BD               	addwf	___flmul@prod,f
  9297     03AF  0842               	movf	___flmul@temp+1,w
  9298     03B0  3DBE               	addwfc	___flmul@prod+1,f
  9299     03B1  3000               	movlw	0
  9300     03B2  3DBF               	addwfc	___flmul@prod+2,f
  9301     03B3  3DC0               	addwfc	___flmul@prod+3,f
  9302     03B4                     l4208:
  9303     03B4  082B               	movf	___flmul@b+2,w
  9304     03B5  00A0               	movwf	__Umul8_16@multiplicand
  9305     03B6  082E               	movf	___flmul@a+1,w
  9306     03B7  319B  231A  3182   	fcall	__Umul8_16
  9307     03BA  0020               	movlb	0	; select bank0
  9308     03BB  0821               	movf	?__Umul8_16+1,w
  9309     03BC  00C2               	movwf	___flmul@temp+1
  9310     03BD  0820               	movf	?__Umul8_16,w
  9311     03BE  00C1               	movwf	___flmul@temp
  9312     03BF                     l4210:
  9313     03BF  0841               	movf	___flmul@temp,w
  9314     03C0  07BD               	addwf	___flmul@prod,f
  9315     03C1  0842               	movf	___flmul@temp+1,w
  9316     03C2  3DBE               	addwfc	___flmul@prod+1,f
  9317     03C3  3000               	movlw	0
  9318     03C4  3DBF               	addwfc	___flmul@prod+2,f
  9319     03C5  3DC0               	addwfc	___flmul@prod+3,f
  9320     03C6  082B               	movf	___flmul@b+2,w
  9321     03C7  00A0               	movwf	__Umul8_16@multiplicand
  9322     03C8  082F               	movf	___flmul@a+2,w
  9323     03C9  319B  231A  3182   	fcall	__Umul8_16
  9324     03CC  0020               	movlb	0	; select bank0
  9325     03CD  0821               	movf	?__Umul8_16+1,w
  9326     03CE  00C2               	movwf	___flmul@temp+1
  9327     03CF  0820               	movf	?__Umul8_16,w
  9328     03D0  00C1               	movwf	___flmul@temp
  9329     03D1                     l4212:
  9330     03D1  0841               	movf	___flmul@temp,w
  9331     03D2  00B1               	movwf	??___flmul
  9332     03D3  0842               	movf	___flmul@temp+1,w
  9333     03D4  00B2               	movwf	??___flmul+1
  9334     03D5  01B3               	clrf	??___flmul+2
  9335     03D6  01B4               	clrf	??___flmul+3
  9336     03D7  3008               	movlw	8
  9337     03D8                     u4765:
  9338     03D8  35B1               	lslf	??___flmul,f
  9339     03D9  0DB2               	rlf	??___flmul+1,f
  9340     03DA  0DB3               	rlf	??___flmul+2,f
  9341     03DB  0DB4               	rlf	??___flmul+3,f
  9342     03DC                     u4760:
  9343     03DC  0B89               	decfsz	9,f
  9344     03DD  2BD8               	goto	u4765
  9345     03DE  0831               	movf	??___flmul,w
  9346     03DF  07BD               	addwf	___flmul@prod,f
  9347     03E0  0832               	movf	??___flmul+1,w
  9348     03E1  3DBE               	addwfc	___flmul@prod+1,f
  9349     03E2  0833               	movf	??___flmul+2,w
  9350     03E3  3DBF               	addwfc	___flmul@prod+2,f
  9351     03E4  0834               	movf	??___flmul+3,w
  9352     03E5  3DC0               	addwfc	___flmul@prod+3,f
  9353     03E6                     l4214:
  9354     03E6  0837               	movf	___flmul@grs,w
  9355     03E7  00B1               	movwf	??___flmul
  9356     03E8  0838               	movf	___flmul@grs+1,w
  9357     03E9  00B2               	movwf	??___flmul+1
  9358     03EA  0839               	movf	___flmul@grs+2,w
  9359     03EB  00B3               	movwf	??___flmul+2
  9360     03EC  083A               	movf	___flmul@grs+3,w
  9361     03ED  00B4               	movwf	??___flmul+3
  9362     03EE  3018               	movlw	24
  9363     03EF                     u4775:
  9364     03EF  36B4               	lsrf	??___flmul+3,f
  9365     03F0  0CB3               	rrf	??___flmul+2,f
  9366     03F1  0CB2               	rrf	??___flmul+1,f
  9367     03F2  0CB1               	rrf	??___flmul,f
  9368     03F3                     u4770:
  9369     03F3  0B89               	decfsz	9,f
  9370     03F4  2BEF               	goto	u4775
  9371     03F5  0831               	movf	??___flmul,w
  9372     03F6  07BD               	addwf	___flmul@prod,f
  9373     03F7  0832               	movf	??___flmul+1,w
  9374     03F8  3DBE               	addwfc	___flmul@prod+1,f
  9375     03F9  0833               	movf	??___flmul+2,w
  9376     03FA  3DBF               	addwfc	___flmul@prod+2,f
  9377     03FB  0834               	movf	??___flmul+3,w
  9378     03FC  3DC0               	addwfc	___flmul@prod+3,f
  9379     03FD                     l4216:
  9380     03FD  3008               	movlw	8
  9381     03FE                     u4785:
  9382     03FE  35B7               	lslf	___flmul@grs,f
  9383     03FF  0DB8               	rlf	___flmul@grs+1,f
  9384     0400  0DB9               	rlf	___flmul@grs+2,f
  9385     0401  0DBA               	rlf	___flmul@grs+3,f
  9386     0402  0B89               	decfsz	9,f
  9387     0403  2BFE               	goto	u4785
  9388     0404                     l4218:
  9389     0404  083C               	movf	___flmul@bexp,w
  9390     0405  073B               	addwf	___flmul@aexp,w
  9391     0406  00B1               	movwf	??___flmul
  9392     0407  01B2               	clrf	??___flmul+1
  9393     0408  0DB2               	rlf	??___flmul+1,f
  9394     0409  0831               	movf	??___flmul,w
  9395     040A  3E82               	addlw	130
  9396     040B  00C1               	movwf	___flmul@temp
  9397     040C  30FF               	movlw	255
  9398     040D  3D32               	addwfc	??___flmul+1,w
  9399     040E  00C2               	movwf	___flmul@temp+1
  9400     040F  2C27               	goto	l4230
  9401     0410                     l4220:
  9402     0410  3001               	movlw	1
  9403     0411                     u4795:
  9404     0411  35BD               	lslf	___flmul@prod,f
  9405     0412  0DBE               	rlf	___flmul@prod+1,f
  9406     0413  0DBF               	rlf	___flmul@prod+2,f
  9407     0414  0DC0               	rlf	___flmul@prod+3,f
  9408     0415  0B89               	decfsz	9,f
  9409     0416  2C11               	goto	u4795
  9410     0417                     l4222:
  9411     0417  1FBA               	btfss	___flmul@grs+3,7
  9412     0418  2C1A               	goto	u4801
  9413     0419  2C1B               	goto	u4800
  9414     041A                     u4801:
  9415     041A  2C1C               	goto	l4226
  9416     041B                     u4800:
  9417     041B                     l4224:
  9418     041B  143D               	bsf	___flmul@prod,0
  9419     041C                     l4226:
  9420     041C  3001               	movlw	1
  9421     041D                     u4815:
  9422     041D  35B7               	lslf	___flmul@grs,f
  9423     041E  0DB8               	rlf	___flmul@grs+1,f
  9424     041F  0DB9               	rlf	___flmul@grs+2,f
  9425     0420  0DBA               	rlf	___flmul@grs+3,f
  9426     0421  0B89               	decfsz	9,f
  9427     0422  2C1D               	goto	u4815
  9428     0423                     l4228:
  9429     0423  30FF               	movlw	255
  9430     0424  07C1               	addwf	___flmul@temp,f
  9431     0425  30FF               	movlw	255
  9432     0426  3DC2               	addwfc	___flmul@temp+1,f
  9433     0427                     l4230:
  9434     0427  1FBF               	btfss	___flmul@prod+2,7
  9435     0428  2C2A               	goto	u4821
  9436     0429  2C2B               	goto	u4820
  9437     042A                     u4821:
  9438     042A  2C10               	goto	l4220
  9439     042B                     u4820:
  9440     042B                     l4232:
  9441     042B  01BB               	clrf	___flmul@aexp
  9442     042C                     l4234:
  9443     042C  1FBA               	btfss	___flmul@grs+3,7
  9444     042D  2C2F               	goto	u4831
  9445     042E  2C30               	goto	u4830
  9446     042F                     u4831:
  9447     042F  2C4C               	goto	l4242
  9448     0430                     u4830:
  9449     0430                     l4236:
  9450     0430  30FF               	movlw	255
  9451     0431  0537               	andwf	___flmul@grs,w
  9452     0432  00B1               	movwf	??___flmul
  9453     0433  30FF               	movlw	255
  9454     0434  0538               	andwf	___flmul@grs+1,w
  9455     0435  00B2               	movwf	??___flmul+1
  9456     0436  30FF               	movlw	255
  9457     0437  0539               	andwf	___flmul@grs+2,w
  9458     0438  00B3               	movwf	??___flmul+2
  9459     0439  307F               	movlw	127
  9460     043A  053A               	andwf	___flmul@grs+3,w
  9461     043B  00B4               	movwf	??___flmul+3
  9462     043C  0834               	movf	??___flmul+3,w
  9463     043D  0433               	iorwf	??___flmul+2,w
  9464     043E  0432               	iorwf	??___flmul+1,w
  9465     043F  0431               	iorwf	??___flmul,w
  9466     0440  1903               	skipnz
  9467     0441  2C43               	goto	u4841
  9468     0442  2C44               	goto	u4840
  9469     0443                     u4841:
  9470     0443  2C47               	goto	l1042
  9471     0444                     u4840:
  9472     0444                     l4238:
  9473     0444  01BB               	clrf	___flmul@aexp
  9474     0445  0ABB               	incf	___flmul@aexp,f
  9475     0446  2C4C               	goto	l4242
  9476     0447                     l1042:
  9477     0447  1C3D               	btfss	___flmul@prod,0
  9478     0448  2C4A               	goto	u4851
  9479     0449  2C4B               	goto	u4850
  9480     044A                     u4851:
  9481     044A  2C4C               	goto	l4242
  9482     044B                     u4850:
  9483     044B  2C44               	goto	l4238
  9484     044C                     l4242:
  9485     044C  083B               	movf	___flmul@aexp,w
  9486     044D  1903               	btfsc	3,2
  9487     044E  2C50               	goto	u4861
  9488     044F  2C51               	goto	u4860
  9489     0450                     u4861:
  9490     0450  2C79               	goto	l4252
  9491     0451                     u4860:
  9492     0451                     l4244:
  9493     0451  3001               	movlw	1
  9494     0452  07BD               	addwf	___flmul@prod,f
  9495     0453  3000               	movlw	0
  9496     0454  3DBE               	addwfc	___flmul@prod+1,f
  9497     0455  3000               	movlw	0
  9498     0456  3DBF               	addwfc	___flmul@prod+2,f
  9499     0457  3000               	movlw	0
  9500     0458  3DC0               	addwfc	___flmul@prod+3,f
  9501     0459                     l4246:
  9502     0459  1C40               	btfss	___flmul@prod+3,0
  9503     045A  2C5C               	goto	u4871
  9504     045B  2C5D               	goto	u4870
  9505     045C                     u4871:
  9506     045C  2C79               	goto	l4252
  9507     045D                     u4870:
  9508     045D                     l4248:
  9509     045D  083D               	movf	___flmul@prod,w
  9510     045E  00B1               	movwf	??___flmul
  9511     045F  083E               	movf	___flmul@prod+1,w
  9512     0460  00B2               	movwf	??___flmul+1
  9513     0461  083F               	movf	___flmul@prod+2,w
  9514     0462  00B3               	movwf	??___flmul+2
  9515     0463  0840               	movf	___flmul@prod+3,w
  9516     0464  00B4               	movwf	??___flmul+3
  9517     0465  3001               	movlw	1
  9518     0466  00B5               	movwf	??___flmul+4
  9519     0467                     u4885:
  9520     0467  37B4               	asrf	??___flmul+3,f
  9521     0468  0CB3               	rrf	??___flmul+2,f
  9522     0469  0CB2               	rrf	??___flmul+1,f
  9523     046A  0CB1               	rrf	??___flmul,f
  9524     046B                     u4880:
  9525     046B  0BB5               	decfsz	??___flmul+4,f
  9526     046C  2C67               	goto	u4885
  9527     046D  0834               	movf	??___flmul+3,w
  9528     046E  00C0               	movwf	___flmul@prod+3
  9529     046F  0833               	movf	??___flmul+2,w
  9530     0470  00BF               	movwf	___flmul@prod+2
  9531     0471  0832               	movf	??___flmul+1,w
  9532     0472  00BE               	movwf	___flmul@prod+1
  9533     0473  0831               	movf	??___flmul,w
  9534     0474  00BD               	movwf	___flmul@prod
  9535     0475                     l4250:
  9536     0475  3001               	movlw	1
  9537     0476  07C1               	addwf	___flmul@temp,f
  9538     0477  3000               	movlw	0
  9539     0478  3DC2               	addwfc	___flmul@temp+1,f
  9540     0479                     l4252:
  9541     0479  0842               	movf	___flmul@temp+1,w
  9542     047A  3A80               	xorlw	128
  9543     047B  00B1               	movwf	??___flmul
  9544     047C  3080               	movlw	128
  9545     047D  0231               	subwf	??___flmul,w
  9546     047E  1D03               	skipz
  9547     047F  2C82               	goto	u4895
  9548     0480  30FF               	movlw	255
  9549     0481  0241               	subwf	___flmul@temp,w
  9550     0482                     u4895:
  9551     0482  1C03               	skipc
  9552     0483  2C85               	goto	u4891
  9553     0484  2C86               	goto	u4890
  9554     0485                     u4891:
  9555     0485  2C90               	goto	l4256
  9556     0486                     u4890:
  9557     0486                     l4254:
  9558     0486  307F               	movlw	127
  9559     0487  0020               	movlb	0	; select bank0
  9560     0488  00C0               	movwf	___flmul@prod+3
  9561     0489  3080               	movlw	128
  9562     048A  00BF               	movwf	___flmul@prod+2
  9563     048B  3000               	movlw	0
  9564     048C  00BE               	movwf	___flmul@prod+1
  9565     048D  3000               	movlw	0
  9566     048E  00BD               	movwf	___flmul@prod
  9567     048F  2CBB               	goto	l1048
  9568     0490                     l4256:
  9569     0490  0020               	movlb	0	; select bank0
  9570     0491  0842               	movf	___flmul@temp+1,w
  9571     0492  3A80               	xorlw	128
  9572     0493  00B1               	movwf	??___flmul
  9573     0494  3080               	movlw	128
  9574     0495  0231               	subwf	??___flmul,w
  9575     0496  1D03               	skipz
  9576     0497  2C9A               	goto	u4905
  9577     0498  3001               	movlw	1
  9578     0499  0241               	subwf	___flmul@temp,w
  9579     049A                     u4905:
  9580     049A  1803               	skipnc
  9581     049B  2C9D               	goto	u4901
  9582     049C  2C9E               	goto	u4900
  9583     049D                     u4901:
  9584     049D  2CA9               	goto	l4262
  9585     049E                     u4900:
  9586     049E                     l4258:
  9587     049E  3000               	movlw	0
  9588     049F  0020               	movlb	0	; select bank0
  9589     04A0  00C0               	movwf	___flmul@prod+3
  9590     04A1  3000               	movlw	0
  9591     04A2  00BF               	movwf	___flmul@prod+2
  9592     04A3  3000               	movlw	0
  9593     04A4  00BE               	movwf	___flmul@prod+1
  9594     04A5  3000               	movlw	0
  9595     04A6  00BD               	movwf	___flmul@prod
  9596     04A7                     l4260:
  9597     04A7  01B6               	clrf	___flmul@sign
  9598     04A8  2CBB               	goto	l1048
  9599     04A9                     l4262:
  9600     04A9  0020               	movlb	0	; select bank0
  9601     04AA  0841               	movf	___flmul@temp,w
  9602     04AB  00BC               	movwf	___flmul@bexp
  9603     04AC  30FF               	movlw	255
  9604     04AD  05BD               	andwf	___flmul@prod,f
  9605     04AE  30FF               	movlw	255
  9606     04AF  05BE               	andwf	___flmul@prod+1,f
  9607     04B0  307F               	movlw	127
  9608     04B1  05BF               	andwf	___flmul@prod+2,f
  9609     04B2  3000               	movlw	0
  9610     04B3  05C0               	andwf	___flmul@prod+3,f
  9611     04B4                     l4264:
  9612     04B4  1C3C               	btfss	___flmul@bexp,0
  9613     04B5  2CB7               	goto	u4911
  9614     04B6  2CB8               	goto	u4910
  9615     04B7                     u4911:
  9616     04B7  2CB9               	goto	l4268
  9617     04B8                     u4910:
  9618     04B8                     l4266:
  9619     04B8  17BF               	bsf	___flmul@prod+2,7
  9620     04B9                     l4268:
  9621     04B9  363C               	lsrf	___flmul@bexp,w
  9622     04BA  00C0               	movwf	___flmul@prod+3
  9623     04BB                     l1048:
  9624     04BB  0836               	movf	___flmul@sign,w
  9625     04BC  00B1               	movwf	??___flmul
  9626     04BD  0831               	movf	??___flmul,w
  9627     04BE  04C0               	iorwf	___flmul@prod+3,f
  9628     04BF                     l4270:
  9629     04BF  0840               	movf	___flmul@prod+3,w
  9630     04C0  00AC               	movwf	?___flmul+3
  9631     04C1  083F               	movf	___flmul@prod+2,w
  9632     04C2  00AB               	movwf	?___flmul+2
  9633     04C3  083E               	movf	___flmul@prod+1,w
  9634     04C4  00AA               	movwf	?___flmul+1
  9635     04C5  083D               	movf	___flmul@prod,w
  9636     04C6  00A9               	movwf	?___flmul
  9637     04C7                     l1036:
  9638     04C7  0008               	return
  9639     04C8                     __end_of___flmul:
  9640                           
  9641                           	psect	text17
  9642     1B1A                     __ptext17:	
  9643 ;; *************** function __Umul8_16 *****************
  9644 ;; Defined at:
  9645 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8_16.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;  multiplier      1    wreg     unsigned char 
  9648 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9651 ;;  word_mpld       2    6[BANK0 ] unsigned short 
  9652 ;;  product         2    4[BANK0 ] unsigned short 
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  2    0[BANK0 ] unsigned int 
  9655 ;; Registers used:
  9656 ;;		wreg, status,2, status,0
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9662 ;;      Params:         0       2       0       0       0       0       0       0
  9663 ;;      Locals:         0       5       0       0       0       0       0       0
  9664 ;;      Temps:          0       2       0       0       0       0       0       0
  9665 ;;      Totals:         0       9       0       0       0       0       0       0
  9666 ;;Total ram usage:        9 bytes
  9667 ;; Hardware stack levels used: 1
  9668 ;; Hardware stack levels required when called: 4
  9669 ;; This function calls:
  9670 ;;		Nothing
  9671 ;; This function is called by:
  9672 ;;		___flmul
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676     1B1A                     __Umul8_16:	
  9677                           ;psect for function __Umul8_16
  9678                           
  9679                           
  9680                           ;incstack = 0
  9681                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9682                           ;__Umul8_16@multiplier stored from wreg
  9683     1B1A  0020               	movlb	0	; select bank0
  9684     1B1B  00A8               	movwf	__Umul8_16@multiplier
  9685     1B1C                     l3794:
  9686     1B1C  01A4               	clrf	__Umul8_16@product
  9687     1B1D  01A5               	clrf	__Umul8_16@product+1
  9688     1B1E                     l3796:
  9689     1B1E  0820               	movf	__Umul8_16@multiplicand,w
  9690     1B1F  00A2               	movwf	??__Umul8_16
  9691     1B20  01A3               	clrf	??__Umul8_16+1
  9692     1B21  0822               	movf	??__Umul8_16,w
  9693     1B22  00A6               	movwf	__Umul8_16@word_mpld
  9694     1B23  0823               	movf	??__Umul8_16+1,w
  9695     1B24  00A7               	movwf	__Umul8_16@word_mpld+1
  9696     1B25                     l3798:
  9697     1B25  1C28               	btfss	__Umul8_16@multiplier,0
  9698     1B26  2B28               	goto	u3911
  9699     1B27  2B29               	goto	u3910
  9700     1B28                     u3911:
  9701     1B28  2B2D               	goto	l1055
  9702     1B29                     u3910:
  9703     1B29                     l3800:
  9704     1B29  0826               	movf	__Umul8_16@word_mpld,w
  9705     1B2A  07A4               	addwf	__Umul8_16@product,f
  9706     1B2B  0827               	movf	__Umul8_16@word_mpld+1,w
  9707     1B2C  3DA5               	addwfc	__Umul8_16@product+1,f
  9708     1B2D                     l1055:
  9709     1B2D  3001               	movlw	1
  9710     1B2E                     u3925:
  9711     1B2E  35A6               	lslf	__Umul8_16@word_mpld,f
  9712     1B2F  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  9713     1B30  0B89               	decfsz	9,f
  9714     1B31  2B2E               	goto	u3925
  9715     1B32  1003               	clrc
  9716     1B33  0CA8               	rrf	__Umul8_16@multiplier,f
  9717     1B34                     l3802:
  9718     1B34  0828               	movf	__Umul8_16@multiplier,w
  9719     1B35  1D03               	btfss	3,2
  9720     1B36  2B38               	goto	u3931
  9721     1B37  2B39               	goto	u3930
  9722     1B38                     u3931:
  9723     1B38  2B25               	goto	l3798
  9724     1B39                     u3930:
  9725     1B39                     l3804:
  9726     1B39  0825               	movf	__Umul8_16@product+1,w
  9727     1B3A  00A1               	movwf	?__Umul8_16+1
  9728     1B3B  0824               	movf	__Umul8_16@product,w
  9729     1B3C  00A0               	movwf	?__Umul8_16
  9730     1B3D                     l1057:
  9731     1B3D  0008               	return
  9732     1B3E                     __end_of__Umul8_16:
  9733                           
  9734                           	psect	text18
  9735     102E                     __ptext18:	
  9736 ;; *************** function ___flge *****************
  9737 ;; Defined at:
  9738 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  9739 ;; Parameters:    Size  Location     Type
  9740 ;;  ff1             4   35[BANK0 ] unsigned int 
  9741 ;;  ff2             4   39[BANK0 ] unsigned int 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;		None
  9744 ;; Return value:  Size  Location     Type
  9745 ;;		None               void
  9746 ;; Registers used:
  9747 ;;		wreg, status,2, status,0
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9753 ;;      Params:         0       8       0       0       0       0       0       0
  9754 ;;      Locals:         0       0       0       0       0       0       0       0
  9755 ;;      Temps:          0       4       0       0       0       0       0       0
  9756 ;;      Totals:         0      12       0       0       0       0       0       0
  9757 ;;Total ram usage:       12 bytes
  9758 ;; Hardware stack levels used: 1
  9759 ;; Hardware stack levels required when called: 4
  9760 ;; This function calls:
  9761 ;;		Nothing
  9762 ;; This function is called by:
  9763 ;;		_efgtoa
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767     102E                     ___flge:	
  9768                           ;psect for function ___flge
  9769                           
  9770     102E                     l3924:	
  9771                           ;incstack = 0
  9772                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9773                           
  9774     102E  3000               	movlw	0
  9775     102F  0020               	movlb	0	; select bank0
  9776     1030  0543               	andwf	___flge@ff1,w
  9777     1031  00CB               	movwf	??___flge
  9778     1032  3000               	movlw	0
  9779     1033  0544               	andwf	___flge@ff1+1,w
  9780     1034  00CC               	movwf	??___flge+1
  9781     1035  3080               	movlw	128
  9782     1036  0545               	andwf	___flge@ff1+2,w
  9783     1037  00CD               	movwf	??___flge+2
  9784     1038  307F               	movlw	127
  9785     1039  0546               	andwf	___flge@ff1+3,w
  9786     103A  00CE               	movwf	??___flge+3
  9787     103B  084E               	movf	??___flge+3,w
  9788     103C  044D               	iorwf	??___flge+2,w
  9789     103D  044C               	iorwf	??___flge+1,w
  9790     103E  044B               	iorwf	??___flge,w
  9791     103F  1D03               	skipz
  9792     1040  2842               	goto	u4211
  9793     1041  2843               	goto	u4210
  9794     1042                     u4211:
  9795     1042  284B               	goto	l817
  9796     1043                     u4210:
  9797     1043                     l3926:
  9798     1043  3000               	movlw	0
  9799     1044  00C6               	movwf	___flge@ff1+3
  9800     1045  3000               	movlw	0
  9801     1046  00C5               	movwf	___flge@ff1+2
  9802     1047  3000               	movlw	0
  9803     1048  00C4               	movwf	___flge@ff1+1
  9804     1049  3000               	movlw	0
  9805     104A  00C3               	movwf	___flge@ff1
  9806     104B                     l817:
  9807     104B  3000               	movlw	0
  9808     104C  0547               	andwf	___flge@ff2,w
  9809     104D  00CB               	movwf	??___flge
  9810     104E  3000               	movlw	0
  9811     104F  0548               	andwf	___flge@ff2+1,w
  9812     1050  00CC               	movwf	??___flge+1
  9813     1051  3080               	movlw	128
  9814     1052  0549               	andwf	___flge@ff2+2,w
  9815     1053  00CD               	movwf	??___flge+2
  9816     1054  307F               	movlw	127
  9817     1055  054A               	andwf	___flge@ff2+3,w
  9818     1056  00CE               	movwf	??___flge+3
  9819     1057  084E               	movf	??___flge+3,w
  9820     1058  044D               	iorwf	??___flge+2,w
  9821     1059  044C               	iorwf	??___flge+1,w
  9822     105A  044B               	iorwf	??___flge,w
  9823     105B  1D03               	skipz
  9824     105C  285E               	goto	u4221
  9825     105D  285F               	goto	u4220
  9826     105E                     u4221:
  9827     105E  2867               	goto	l3930
  9828     105F                     u4220:
  9829     105F                     l3928:
  9830     105F  3000               	movlw	0
  9831     1060  00CA               	movwf	___flge@ff2+3
  9832     1061  3000               	movlw	0
  9833     1062  00C9               	movwf	___flge@ff2+2
  9834     1063  3000               	movlw	0
  9835     1064  00C8               	movwf	___flge@ff2+1
  9836     1065  3000               	movlw	0
  9837     1066  00C7               	movwf	___flge@ff2
  9838     1067                     l3930:
  9839     1067  1FC6               	btfss	___flge@ff1+3,7
  9840     1068  286A               	goto	u4231
  9841     1069  286B               	goto	u4230
  9842     106A                     u4231:
  9843     106A  2883               	goto	l3934
  9844     106B                     u4230:
  9845     106B                     l3932:
  9846     106B  3000               	movlw	0
  9847     106C  00CB               	movwf	??___flge
  9848     106D  3000               	movlw	0
  9849     106E  00CC               	movwf	??___flge+1
  9850     106F  3000               	movlw	0
  9851     1070  00CD               	movwf	??___flge+2
  9852     1071  3080               	movlw	128
  9853     1072  00CE               	movwf	??___flge+3
  9854     1073  0843               	movf	___flge@ff1,w
  9855     1074  02CB               	subwf	??___flge,f
  9856     1075  0844               	movf	___flge@ff1+1,w
  9857     1076  3BCC               	subwfb	??___flge+1,f
  9858     1077  0845               	movf	___flge@ff1+2,w
  9859     1078  3BCD               	subwfb	??___flge+2,f
  9860     1079  0846               	movf	___flge@ff1+3,w
  9861     107A  3BCE               	subwfb	??___flge+3,f
  9862     107B  084E               	movf	??___flge+3,w
  9863     107C  00C6               	movwf	___flge@ff1+3
  9864     107D  084D               	movf	??___flge+2,w
  9865     107E  00C5               	movwf	___flge@ff1+2
  9866     107F  084C               	movf	??___flge+1,w
  9867     1080  00C4               	movwf	___flge@ff1+1
  9868     1081  084B               	movf	??___flge,w
  9869     1082  00C3               	movwf	___flge@ff1
  9870     1083                     l3934:
  9871     1083  1FCA               	btfss	___flge@ff2+3,7
  9872     1084  2886               	goto	u4241
  9873     1085  2887               	goto	u4240
  9874     1086                     u4241:
  9875     1086  289F               	goto	l820
  9876     1087                     u4240:
  9877     1087                     l3936:
  9878     1087  3000               	movlw	0
  9879     1088  00CB               	movwf	??___flge
  9880     1089  3000               	movlw	0
  9881     108A  00CC               	movwf	??___flge+1
  9882     108B  3000               	movlw	0
  9883     108C  00CD               	movwf	??___flge+2
  9884     108D  3080               	movlw	128
  9885     108E  00CE               	movwf	??___flge+3
  9886     108F  0847               	movf	___flge@ff2,w
  9887     1090  02CB               	subwf	??___flge,f
  9888     1091  0848               	movf	___flge@ff2+1,w
  9889     1092  3BCC               	subwfb	??___flge+1,f
  9890     1093  0849               	movf	___flge@ff2+2,w
  9891     1094  3BCD               	subwfb	??___flge+2,f
  9892     1095  084A               	movf	___flge@ff2+3,w
  9893     1096  3BCE               	subwfb	??___flge+3,f
  9894     1097  084E               	movf	??___flge+3,w
  9895     1098  00CA               	movwf	___flge@ff2+3
  9896     1099  084D               	movf	??___flge+2,w
  9897     109A  00C9               	movwf	___flge@ff2+2
  9898     109B  084C               	movf	??___flge+1,w
  9899     109C  00C8               	movwf	___flge@ff2+1
  9900     109D  084B               	movf	??___flge,w
  9901     109E  00C7               	movwf	___flge@ff2
  9902     109F                     l820:
  9903     109F  3080               	movlw	128
  9904     10A0  06C6               	xorwf	___flge@ff1+3,f
  9905     10A1  3080               	movlw	128
  9906     10A2  06CA               	xorwf	___flge@ff2+3,f
  9907     10A3  084A               	movf	___flge@ff2+3,w
  9908     10A4  0246               	subwf	___flge@ff1+3,w
  9909     10A5  1D03               	skipz
  9910     10A6  28B1               	goto	u4255
  9911     10A7  0849               	movf	___flge@ff2+2,w
  9912     10A8  0245               	subwf	___flge@ff1+2,w
  9913     10A9  1D03               	skipz
  9914     10AA  28B1               	goto	u4255
  9915     10AB  0848               	movf	___flge@ff2+1,w
  9916     10AC  0244               	subwf	___flge@ff1+1,w
  9917     10AD  1D03               	skipz
  9918     10AE  28B1               	goto	u4255
  9919     10AF  0847               	movf	___flge@ff2,w
  9920     10B0  0243               	subwf	___flge@ff1,w
  9921     10B1                     u4255:
  9922     10B1  1803               	skipnc
  9923     10B2  28B4               	goto	u4251
  9924     10B3  28B5               	goto	u4250
  9925     10B4                     u4251:
  9926     10B4  28B7               	goto	l3940
  9927     10B5                     u4250:
  9928     10B5                     l3938:
  9929     10B5  1003               	clrc
  9930     10B6  28B8               	goto	l825
  9931     10B7                     l3940:
  9932     10B7  1403               	setc
  9933     10B8                     l825:
  9934     10B8  0008               	return
  9935     10B9                     __end_of___flge:
  9936                           
  9937                           	psect	text19
  9938     1C13                     __ptext19:	
  9939 ;; *************** function ___fleq *****************
  9940 ;; Defined at:
  9941 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  9942 ;; Parameters:    Size  Location     Type
  9943 ;;  ff1             4    0[BANK0 ] unsigned int 
  9944 ;;  ff2             4    4[BANK0 ] unsigned int 
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;		None
  9947 ;; Return value:  Size  Location     Type
  9948 ;;		None               void
  9949 ;; Registers used:
  9950 ;;		wreg, status,2, status,0
  9951 ;; Tracked objects:
  9952 ;;		On entry : 0/0
  9953 ;;		On exit  : 0/0
  9954 ;;		Unchanged: 0/0
  9955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9956 ;;      Params:         0       8       0       0       0       0       0       0
  9957 ;;      Locals:         0       0       0       0       0       0       0       0
  9958 ;;      Temps:          0       4       0       0       0       0       0       0
  9959 ;;      Totals:         0      12       0       0       0       0       0       0
  9960 ;;Total ram usage:       12 bytes
  9961 ;; Hardware stack levels used: 1
  9962 ;; Hardware stack levels required when called: 4
  9963 ;; This function calls:
  9964 ;;		Nothing
  9965 ;; This function is called by:
  9966 ;;		_efgtoa
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970     1C13                     ___fleq:	
  9971                           ;psect for function ___fleq
  9972                           
  9973     1C13                     l3912:	
  9974                           ;incstack = 0
  9975                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9976                           
  9977     1C13  3000               	movlw	0
  9978     1C14  0020               	movlb	0	; select bank0
  9979     1C15  0520               	andwf	___fleq@ff1,w
  9980     1C16  00A8               	movwf	??___fleq
  9981     1C17  3000               	movlw	0
  9982     1C18  0521               	andwf	___fleq@ff1+1,w
  9983     1C19  00A9               	movwf	??___fleq+1
  9984     1C1A  3080               	movlw	128
  9985     1C1B  0522               	andwf	___fleq@ff1+2,w
  9986     1C1C  00AA               	movwf	??___fleq+2
  9987     1C1D  307F               	movlw	127
  9988     1C1E  0523               	andwf	___fleq@ff1+3,w
  9989     1C1F  00AB               	movwf	??___fleq+3
  9990     1C20  082B               	movf	??___fleq+3,w
  9991     1C21  042A               	iorwf	??___fleq+2,w
  9992     1C22  0429               	iorwf	??___fleq+1,w
  9993     1C23  0428               	iorwf	??___fleq,w
  9994     1C24  1D03               	skipz
  9995     1C25  2C27               	goto	u4181
  9996     1C26  2C28               	goto	u4180
  9997     1C27                     u4181:
  9998     1C27  2C30               	goto	l808
  9999     1C28                     u4180:
 10000     1C28                     l3914:
 10001     1C28  3000               	movlw	0
 10002     1C29  00A3               	movwf	___fleq@ff1+3
 10003     1C2A  3000               	movlw	0
 10004     1C2B  00A2               	movwf	___fleq@ff1+2
 10005     1C2C  3000               	movlw	0
 10006     1C2D  00A1               	movwf	___fleq@ff1+1
 10007     1C2E  3000               	movlw	0
 10008     1C2F  00A0               	movwf	___fleq@ff1
 10009     1C30                     l808:
 10010     1C30  3000               	movlw	0
 10011     1C31  0524               	andwf	___fleq@ff2,w
 10012     1C32  00A8               	movwf	??___fleq
 10013     1C33  3000               	movlw	0
 10014     1C34  0525               	andwf	___fleq@ff2+1,w
 10015     1C35  00A9               	movwf	??___fleq+1
 10016     1C36  3080               	movlw	128
 10017     1C37  0526               	andwf	___fleq@ff2+2,w
 10018     1C38  00AA               	movwf	??___fleq+2
 10019     1C39  307F               	movlw	127
 10020     1C3A  0527               	andwf	___fleq@ff2+3,w
 10021     1C3B  00AB               	movwf	??___fleq+3
 10022     1C3C  082B               	movf	??___fleq+3,w
 10023     1C3D  042A               	iorwf	??___fleq+2,w
 10024     1C3E  0429               	iorwf	??___fleq+1,w
 10025     1C3F  0428               	iorwf	??___fleq,w
 10026     1C40  1D03               	skipz
 10027     1C41  2C43               	goto	u4191
 10028     1C42  2C44               	goto	u4190
 10029     1C43                     u4191:
 10030     1C43  2C4C               	goto	l809
 10031     1C44                     u4190:
 10032     1C44                     l3916:
 10033     1C44  3000               	movlw	0
 10034     1C45  00A7               	movwf	___fleq@ff2+3
 10035     1C46  3000               	movlw	0
 10036     1C47  00A6               	movwf	___fleq@ff2+2
 10037     1C48  3000               	movlw	0
 10038     1C49  00A5               	movwf	___fleq@ff2+1
 10039     1C4A  3000               	movlw	0
 10040     1C4B  00A4               	movwf	___fleq@ff2
 10041     1C4C                     l809:
 10042     1C4C  0827               	movf	___fleq@ff2+3,w
 10043     1C4D  0623               	xorwf	___fleq@ff1+3,w
 10044     1C4E  1D03               	skipz
 10045     1C4F  2C5A               	goto	u4205
 10046     1C50  0826               	movf	___fleq@ff2+2,w
 10047     1C51  0622               	xorwf	___fleq@ff1+2,w
 10048     1C52  1D03               	skipz
 10049     1C53  2C5A               	goto	u4205
 10050     1C54  0825               	movf	___fleq@ff2+1,w
 10051     1C55  0621               	xorwf	___fleq@ff1+1,w
 10052     1C56  1D03               	skipz
 10053     1C57  2C5A               	goto	u4205
 10054     1C58  0824               	movf	___fleq@ff2,w
 10055     1C59  0620               	xorwf	___fleq@ff1,w
 10056     1C5A                     u4205:
 10057     1C5A  1903               	skipnz
 10058     1C5B  2C5D               	goto	u4201
 10059     1C5C  2C5E               	goto	u4200
 10060     1C5D                     u4201:
 10061     1C5D  2C60               	goto	l3920
 10062     1C5E                     u4200:
 10063     1C5E                     l3918:
 10064     1C5E  1003               	clrc
 10065     1C5F  2C61               	goto	l814
 10066     1C60                     l3920:
 10067     1C60  1403               	setc
 10068     1C61                     l814:
 10069     1C61  0008               	return
 10070     1C62                     __end_of___fleq:
 10071                           
 10072                           	psect	text20
 10073     144E                     __ptext20:	
 10074 ;; *************** function ___fldiv *****************
 10075 ;; Defined at:
 10076 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;  a               4   20[BANK0 ] unsigned int 
 10079 ;;  b               4   24[BANK0 ] unsigned int 
 10080 ;; Auto vars:     Size  Location     Type
 10081 ;;  grs             4   40[BANK0 ] unsigned long 
 10082 ;;  rem             4   33[BANK0 ] unsigned long 
 10083 ;;  new_exp         2   38[BANK0 ] short 
 10084 ;;  aexp            1   45[BANK0 ] unsigned char 
 10085 ;;  bexp            1   44[BANK0 ] unsigned char 
 10086 ;;  sign            1   37[BANK0 ] unsigned char 
 10087 ;; Return value:  Size  Location     Type
 10088 ;;                  4   20[BANK0 ] unsigned char 
 10089 ;; Registers used:
 10090 ;;		wreg, status,2, status,0
 10091 ;; Tracked objects:
 10092 ;;		On entry : 0/0
 10093 ;;		On exit  : 0/0
 10094 ;;		Unchanged: 0/0
 10095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10096 ;;      Params:         0       8       0       0       0       0       0       0
 10097 ;;      Locals:         0      13       0       0       0       0       0       0
 10098 ;;      Temps:          0       5       0       0       0       0       0       0
 10099 ;;      Totals:         0      26       0       0       0       0       0       0
 10100 ;;Total ram usage:       26 bytes
 10101 ;; Hardware stack levels used: 1
 10102 ;; Hardware stack levels required when called: 4
 10103 ;; This function calls:
 10104 ;;		Nothing
 10105 ;; This function is called by:
 10106 ;;		_main
 10107 ;;		_efgtoa
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111     144E                     ___fldiv:	
 10112                           ;psect for function ___fldiv
 10113                           
 10114     144E                     l3994:	
 10115                           ;incstack = 0
 10116                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10117                           
 10118     144E  0020               	movlb	0	; select bank0
 10119     144F  083B               	movf	___fldiv@b+3,w
 10120     1450  3980               	andlw	128
 10121     1451  00C5               	movwf	___fldiv@sign
 10122     1452                     l3996:
 10123     1452  353B               	lslf	___fldiv@b+3,w
 10124     1453  00CC               	movwf	___fldiv@bexp
 10125     1454                     l3998:
 10126     1454  1FBA               	btfss	___fldiv@b+2,7
 10127     1455  2C57               	goto	u4371
 10128     1456  2C58               	goto	u4370
 10129     1457                     u4371:
 10130     1457  2C59               	goto	l4002
 10131     1458                     u4370:
 10132     1458                     l4000:
 10133     1458  144C               	bsf	___fldiv@bexp,0
 10134     1459                     l4002:
 10135     1459  084C               	movf	___fldiv@bexp,w
 10136     145A  1903               	btfsc	3,2
 10137     145B  2C5D               	goto	u4381
 10138     145C  2C5E               	goto	u4380
 10139     145D                     u4381:
 10140     145D  2C6E               	goto	l4012
 10141     145E                     u4380:
 10142     145E                     l4004:
 10143     145E  0A4C               	incf	___fldiv@bexp,w
 10144     145F  1D03               	btfss	3,2
 10145     1460  2C62               	goto	u4391
 10146     1461  2C63               	goto	u4390
 10147     1462                     u4391:
 10148     1462  2C6B               	goto	l4008
 10149     1463                     u4390:
 10150     1463                     l4006:
 10151     1463  3000               	movlw	0
 10152     1464  00BB               	movwf	___fldiv@b+3
 10153     1465  3000               	movlw	0
 10154     1466  00BA               	movwf	___fldiv@b+2
 10155     1467  3000               	movlw	0
 10156     1468  00B9               	movwf	___fldiv@b+1
 10157     1469  3000               	movlw	0
 10158     146A  00B8               	movwf	___fldiv@b
 10159     146B                     l4008:
 10160     146B  17BA               	bsf	___fldiv@b+2,7
 10161     146C                     l4010:
 10162     146C  01BB               	clrf	___fldiv@b+3
 10163     146D  2C76               	goto	l4014
 10164     146E                     l4012:
 10165     146E  3000               	movlw	0
 10166     146F  00BB               	movwf	___fldiv@b+3
 10167     1470  3000               	movlw	0
 10168     1471  00BA               	movwf	___fldiv@b+2
 10169     1472  3000               	movlw	0
 10170     1473  00B9               	movwf	___fldiv@b+1
 10171     1474  3000               	movlw	0
 10172     1475  00B8               	movwf	___fldiv@b
 10173     1476                     l4014:
 10174     1476  0837               	movf	___fldiv@a+3,w
 10175     1477  3980               	andlw	128
 10176     1478  00BC               	movwf	??___fldiv
 10177     1479  083C               	movf	??___fldiv,w
 10178     147A  06C5               	xorwf	___fldiv@sign,f
 10179     147B                     l4016:
 10180     147B  3537               	lslf	___fldiv@a+3,w
 10181     147C  00CD               	movwf	___fldiv@aexp
 10182     147D                     l4018:
 10183     147D  1FB6               	btfss	___fldiv@a+2,7
 10184     147E  2C80               	goto	u4401
 10185     147F  2C81               	goto	u4400
 10186     1480                     u4401:
 10187     1480  2C82               	goto	l4022
 10188     1481                     u4400:
 10189     1481                     l4020:
 10190     1481  144D               	bsf	___fldiv@aexp,0
 10191     1482                     l4022:
 10192     1482  084D               	movf	___fldiv@aexp,w
 10193     1483  1903               	btfsc	3,2
 10194     1484  2C86               	goto	u4411
 10195     1485  2C87               	goto	u4410
 10196     1486                     u4411:
 10197     1486  2C97               	goto	l4032
 10198     1487                     u4410:
 10199     1487                     l4024:
 10200     1487  0A4D               	incf	___fldiv@aexp,w
 10201     1488  1D03               	btfss	3,2
 10202     1489  2C8B               	goto	u4421
 10203     148A  2C8C               	goto	u4420
 10204     148B                     u4421:
 10205     148B  2C94               	goto	l4028
 10206     148C                     u4420:
 10207     148C                     l4026:
 10208     148C  3000               	movlw	0
 10209     148D  00B7               	movwf	___fldiv@a+3
 10210     148E  3000               	movlw	0
 10211     148F  00B6               	movwf	___fldiv@a+2
 10212     1490  3000               	movlw	0
 10213     1491  00B5               	movwf	___fldiv@a+1
 10214     1492  3000               	movlw	0
 10215     1493  00B4               	movwf	___fldiv@a
 10216     1494                     l4028:
 10217     1494  17B6               	bsf	___fldiv@a+2,7
 10218     1495                     l4030:
 10219     1495  01B7               	clrf	___fldiv@a+3
 10220     1496  2C9F               	goto	l996
 10221     1497                     l4032:
 10222     1497  3000               	movlw	0
 10223     1498  00B7               	movwf	___fldiv@a+3
 10224     1499  3000               	movlw	0
 10225     149A  00B6               	movwf	___fldiv@a+2
 10226     149B  3000               	movlw	0
 10227     149C  00B5               	movwf	___fldiv@a+1
 10228     149D  3000               	movlw	0
 10229     149E  00B4               	movwf	___fldiv@a
 10230     149F                     l996:
 10231     149F  0837               	movf	___fldiv@a+3,w
 10232     14A0  0436               	iorwf	___fldiv@a+2,w
 10233     14A1  0435               	iorwf	___fldiv@a+1,w
 10234     14A2  0434               	iorwf	___fldiv@a,w
 10235     14A3  1D03               	skipz
 10236     14A4  2CA6               	goto	u4431
 10237     14A5  2CA7               	goto	u4430
 10238     14A6                     u4431:
 10239     14A6  2CC0               	goto	l4042
 10240     14A7                     u4430:
 10241     14A7                     l4034:
 10242     14A7  3000               	movlw	0
 10243     14A8  00BB               	movwf	___fldiv@b+3
 10244     14A9  3000               	movlw	0
 10245     14AA  00BA               	movwf	___fldiv@b+2
 10246     14AB  3000               	movlw	0
 10247     14AC  00B9               	movwf	___fldiv@b+1
 10248     14AD  3000               	movlw	0
 10249     14AE  00B8               	movwf	___fldiv@b
 10250     14AF  3080               	movlw	128
 10251     14B0  04BA               	iorwf	___fldiv@b+2,f
 10252     14B1  307F               	movlw	127
 10253     14B2  04BB               	iorwf	___fldiv@b+3,f
 10254     14B3                     l4036:
 10255     14B3  0845               	movf	___fldiv@sign,w
 10256     14B4  00BC               	movwf	??___fldiv
 10257     14B5  083C               	movf	??___fldiv,w
 10258     14B6  04BB               	iorwf	___fldiv@b+3,f
 10259     14B7                     l4038:
 10260     14B7  083B               	movf	___fldiv@b+3,w
 10261     14B8  00B7               	movwf	?___fldiv+3
 10262     14B9  083A               	movf	___fldiv@b+2,w
 10263     14BA  00B6               	movwf	?___fldiv+2
 10264     14BB  0839               	movf	___fldiv@b+1,w
 10265     14BC  00B5               	movwf	?___fldiv+1
 10266     14BD  0838               	movf	___fldiv@b,w
 10267     14BE  00B4               	movwf	?___fldiv
 10268     14BF  2DF7               	goto	l998
 10269     14C0                     l4042:
 10270     14C0  084C               	movf	___fldiv@bexp,w
 10271     14C1  1D03               	btfss	3,2
 10272     14C2  2CC4               	goto	u4441
 10273     14C3  2CC5               	goto	u4440
 10274     14C4                     u4441:
 10275     14C4  2CCE               	goto	l4048
 10276     14C5                     u4440:
 10277     14C5                     l4044:
 10278     14C5  3000               	movlw	0
 10279     14C6  00B7               	movwf	?___fldiv+3
 10280     14C7  3000               	movlw	0
 10281     14C8  00B6               	movwf	?___fldiv+2
 10282     14C9  3000               	movlw	0
 10283     14CA  00B5               	movwf	?___fldiv+1
 10284     14CB  3000               	movlw	0
 10285     14CC  00B4               	movwf	?___fldiv
 10286     14CD  2DF7               	goto	l998
 10287     14CE                     l4048:
 10288     14CE  084C               	movf	___fldiv@bexp,w
 10289     14CF  00BC               	movwf	??___fldiv
 10290     14D0  01BD               	clrf	??___fldiv+1
 10291     14D1  083D               	movf	??___fldiv+1,w
 10292     14D2  00BF               	movwf	??___fldiv+3
 10293     14D3  084D               	movf	___fldiv@aexp,w
 10294     14D4  023C               	subwf	??___fldiv,w
 10295     14D5  00BE               	movwf	??___fldiv+2
 10296     14D6  1C03               	skipc
 10297     14D7  03BF               	decf	??___fldiv+3,f
 10298     14D8  083E               	movf	??___fldiv+2,w
 10299     14D9  3E7F               	addlw	127
 10300     14DA  00C6               	movwf	___fldiv@new_exp
 10301     14DB  3000               	movlw	0
 10302     14DC  3D3F               	addwfc	??___fldiv+3,w
 10303     14DD  00C7               	movwf	___fldiv@new_exp+1
 10304     14DE                     l4050:
 10305     14DE  083B               	movf	___fldiv@b+3,w
 10306     14DF  00C4               	movwf	___fldiv@rem+3
 10307     14E0  083A               	movf	___fldiv@b+2,w
 10308     14E1  00C3               	movwf	___fldiv@rem+2
 10309     14E2  0839               	movf	___fldiv@b+1,w
 10310     14E3  00C2               	movwf	___fldiv@rem+1
 10311     14E4  0838               	movf	___fldiv@b,w
 10312     14E5  00C1               	movwf	___fldiv@rem
 10313     14E6                     l4052:
 10314     14E6  3000               	movlw	0
 10315     14E7  00BB               	movwf	___fldiv@b+3
 10316     14E8  3000               	movlw	0
 10317     14E9  00BA               	movwf	___fldiv@b+2
 10318     14EA  3000               	movlw	0
 10319     14EB  00B9               	movwf	___fldiv@b+1
 10320     14EC  3000               	movlw	0
 10321     14ED  00B8               	movwf	___fldiv@b
 10322     14EE                     l4054:
 10323     14EE  3000               	movlw	0
 10324     14EF  00CB               	movwf	___fldiv@grs+3
 10325     14F0  3000               	movlw	0
 10326     14F1  00CA               	movwf	___fldiv@grs+2
 10327     14F2  3000               	movlw	0
 10328     14F3  00C9               	movwf	___fldiv@grs+1
 10329     14F4  3000               	movlw	0
 10330     14F5  00C8               	movwf	___fldiv@grs
 10331     14F6                     l4056:
 10332     14F6  01CD               	clrf	___fldiv@aexp
 10333     14F7  2D36               	goto	l4076
 10334     14F8                     l4058:
 10335     14F8  084D               	movf	___fldiv@aexp,w
 10336     14F9  1903               	btfsc	3,2
 10337     14FA  2CFC               	goto	u4451
 10338     14FB  2CFD               	goto	u4450
 10339     14FC                     u4451:
 10340     14FC  2D17               	goto	l4068
 10341     14FD                     u4450:
 10342     14FD                     l4060:
 10343     14FD  3001               	movlw	1
 10344     14FE                     u4465:
 10345     14FE  35C1               	lslf	___fldiv@rem,f
 10346     14FF  0DC2               	rlf	___fldiv@rem+1,f
 10347     1500  0DC3               	rlf	___fldiv@rem+2,f
 10348     1501  0DC4               	rlf	___fldiv@rem+3,f
 10349     1502  0B89               	decfsz	9,f
 10350     1503  2CFE               	goto	u4465
 10351     1504  3001               	movlw	1
 10352     1505                     u4475:
 10353     1505  35B8               	lslf	___fldiv@b,f
 10354     1506  0DB9               	rlf	___fldiv@b+1,f
 10355     1507  0DBA               	rlf	___fldiv@b+2,f
 10356     1508  0DBB               	rlf	___fldiv@b+3,f
 10357     1509  0B89               	decfsz	9,f
 10358     150A  2D05               	goto	u4475
 10359     150B                     l4062:
 10360     150B  1FCB               	btfss	___fldiv@grs+3,7
 10361     150C  2D0E               	goto	u4481
 10362     150D  2D0F               	goto	u4480
 10363     150E                     u4481:
 10364     150E  2D10               	goto	l4066
 10365     150F                     u4480:
 10366     150F                     l4064:
 10367     150F  1438               	bsf	___fldiv@b,0
 10368     1510                     l4066:
 10369     1510  3001               	movlw	1
 10370     1511                     u4495:
 10371     1511  35C8               	lslf	___fldiv@grs,f
 10372     1512  0DC9               	rlf	___fldiv@grs+1,f
 10373     1513  0DCA               	rlf	___fldiv@grs+2,f
 10374     1514  0DCB               	rlf	___fldiv@grs+3,f
 10375     1515  0B89               	decfsz	9,f
 10376     1516  2D11               	goto	u4495
 10377     1517                     l4068:
 10378     1517  0837               	movf	___fldiv@a+3,w
 10379     1518  0244               	subwf	___fldiv@rem+3,w
 10380     1519  1D03               	skipz
 10381     151A  2D25               	goto	u4505
 10382     151B  0836               	movf	___fldiv@a+2,w
 10383     151C  0243               	subwf	___fldiv@rem+2,w
 10384     151D  1D03               	skipz
 10385     151E  2D25               	goto	u4505
 10386     151F  0835               	movf	___fldiv@a+1,w
 10387     1520  0242               	subwf	___fldiv@rem+1,w
 10388     1521  1D03               	skipz
 10389     1522  2D25               	goto	u4505
 10390     1523  0834               	movf	___fldiv@a,w
 10391     1524  0241               	subwf	___fldiv@rem,w
 10392     1525                     u4505:
 10393     1525  1C03               	skipc
 10394     1526  2D28               	goto	u4501
 10395     1527  2D29               	goto	u4500
 10396     1528                     u4501:
 10397     1528  2D32               	goto	l4074
 10398     1529                     u4500:
 10399     1529                     l4070:
 10400     1529  174B               	bsf	___fldiv@grs+3,6
 10401     152A                     l4072:
 10402     152A  0834               	movf	___fldiv@a,w
 10403     152B  02C1               	subwf	___fldiv@rem,f
 10404     152C  0835               	movf	___fldiv@a+1,w
 10405     152D  3BC2               	subwfb	___fldiv@rem+1,f
 10406     152E  0836               	movf	___fldiv@a+2,w
 10407     152F  3BC3               	subwfb	___fldiv@rem+2,f
 10408     1530  0837               	movf	___fldiv@a+3,w
 10409     1531  3BC4               	subwfb	___fldiv@rem+3,f
 10410     1532                     l4074:
 10411     1532  3001               	movlw	1
 10412     1533  00BC               	movwf	??___fldiv
 10413     1534  083C               	movf	??___fldiv,w
 10414     1535  07CD               	addwf	___fldiv@aexp,f
 10415     1536                     l4076:
 10416     1536  301A               	movlw	26
 10417     1537  024D               	subwf	___fldiv@aexp,w
 10418     1538  1C03               	skipc
 10419     1539  2D3B               	goto	u4511
 10420     153A  2D3C               	goto	u4510
 10421     153B                     u4511:
 10422     153B  2CF8               	goto	l4058
 10423     153C                     u4510:
 10424     153C                     l4078:
 10425     153C  0844               	movf	___fldiv@rem+3,w
 10426     153D  0443               	iorwf	___fldiv@rem+2,w
 10427     153E  0442               	iorwf	___fldiv@rem+1,w
 10428     153F  0441               	iorwf	___fldiv@rem,w
 10429     1540  1903               	skipnz
 10430     1541  2D43               	goto	u4521
 10431     1542  2D44               	goto	u4520
 10432     1543                     u4521:
 10433     1543  2D5D               	goto	l4092
 10434     1544                     u4520:
 10435     1544                     l4080:
 10436     1544  1448               	bsf	___fldiv@grs,0
 10437     1545  2D5D               	goto	l4092
 10438     1546                     l4082:
 10439     1546  3001               	movlw	1
 10440     1547                     u4535:
 10441     1547  35B8               	lslf	___fldiv@b,f
 10442     1548  0DB9               	rlf	___fldiv@b+1,f
 10443     1549  0DBA               	rlf	___fldiv@b+2,f
 10444     154A  0DBB               	rlf	___fldiv@b+3,f
 10445     154B  0B89               	decfsz	9,f
 10446     154C  2D47               	goto	u4535
 10447     154D                     l4084:
 10448     154D  1FCB               	btfss	___fldiv@grs+3,7
 10449     154E  2D50               	goto	u4541
 10450     154F  2D51               	goto	u4540
 10451     1550                     u4541:
 10452     1550  2D52               	goto	l4088
 10453     1551                     u4540:
 10454     1551                     l4086:
 10455     1551  1438               	bsf	___fldiv@b,0
 10456     1552                     l4088:
 10457     1552  3001               	movlw	1
 10458     1553                     u4555:
 10459     1553  35C8               	lslf	___fldiv@grs,f
 10460     1554  0DC9               	rlf	___fldiv@grs+1,f
 10461     1555  0DCA               	rlf	___fldiv@grs+2,f
 10462     1556  0DCB               	rlf	___fldiv@grs+3,f
 10463     1557  0B89               	decfsz	9,f
 10464     1558  2D53               	goto	u4555
 10465     1559                     l4090:
 10466     1559  30FF               	movlw	255
 10467     155A  07C6               	addwf	___fldiv@new_exp,f
 10468     155B  30FF               	movlw	255
 10469     155C  3DC7               	addwfc	___fldiv@new_exp+1,f
 10470     155D                     l4092:
 10471     155D  1FBA               	btfss	___fldiv@b+2,7
 10472     155E  2D60               	goto	u4561
 10473     155F  2D61               	goto	u4560
 10474     1560                     u4561:
 10475     1560  2D46               	goto	l4082
 10476     1561                     u4560:
 10477     1561                     l4094:
 10478     1561  01CD               	clrf	___fldiv@aexp
 10479     1562                     l4096:
 10480     1562  1FCB               	btfss	___fldiv@grs+3,7
 10481     1563  2D65               	goto	u4571
 10482     1564  2D66               	goto	u4570
 10483     1565                     u4571:
 10484     1565  2D82               	goto	l4104
 10485     1566                     u4570:
 10486     1566                     l4098:
 10487     1566  30FF               	movlw	255
 10488     1567  0548               	andwf	___fldiv@grs,w
 10489     1568  00BC               	movwf	??___fldiv
 10490     1569  30FF               	movlw	255
 10491     156A  0549               	andwf	___fldiv@grs+1,w
 10492     156B  00BD               	movwf	??___fldiv+1
 10493     156C  30FF               	movlw	255
 10494     156D  054A               	andwf	___fldiv@grs+2,w
 10495     156E  00BE               	movwf	??___fldiv+2
 10496     156F  307F               	movlw	127
 10497     1570  054B               	andwf	___fldiv@grs+3,w
 10498     1571  00BF               	movwf	??___fldiv+3
 10499     1572  083F               	movf	??___fldiv+3,w
 10500     1573  043E               	iorwf	??___fldiv+2,w
 10501     1574  043D               	iorwf	??___fldiv+1,w
 10502     1575  043C               	iorwf	??___fldiv,w
 10503     1576  1903               	skipnz
 10504     1577  2D79               	goto	u4581
 10505     1578  2D7A               	goto	u4580
 10506     1579                     u4581:
 10507     1579  2D7D               	goto	l1012
 10508     157A                     u4580:
 10509     157A                     l4100:
 10510     157A  01CD               	clrf	___fldiv@aexp
 10511     157B  0ACD               	incf	___fldiv@aexp,f
 10512     157C  2D82               	goto	l4104
 10513     157D                     l1012:
 10514     157D  1C38               	btfss	___fldiv@b,0
 10515     157E  2D80               	goto	u4591
 10516     157F  2D81               	goto	u4590
 10517     1580                     u4591:
 10518     1580  2D82               	goto	l4104
 10519     1581                     u4590:
 10520     1581  2D7A               	goto	l4100
 10521     1582                     l4104:
 10522     1582  084D               	movf	___fldiv@aexp,w
 10523     1583  1903               	btfsc	3,2
 10524     1584  2D86               	goto	u4601
 10525     1585  2D87               	goto	u4600
 10526     1586                     u4601:
 10527     1586  2DAF               	goto	l4114
 10528     1587                     u4600:
 10529     1587                     l4106:
 10530     1587  3001               	movlw	1
 10531     1588  07B8               	addwf	___fldiv@b,f
 10532     1589  3000               	movlw	0
 10533     158A  3DB9               	addwfc	___fldiv@b+1,f
 10534     158B  3000               	movlw	0
 10535     158C  3DBA               	addwfc	___fldiv@b+2,f
 10536     158D  3000               	movlw	0
 10537     158E  3DBB               	addwfc	___fldiv@b+3,f
 10538     158F                     l4108:
 10539     158F  1C3B               	btfss	___fldiv@b+3,0
 10540     1590  2D92               	goto	u4611
 10541     1591  2D93               	goto	u4610
 10542     1592                     u4611:
 10543     1592  2DAF               	goto	l4114
 10544     1593                     u4610:
 10545     1593                     l4110:
 10546     1593  0838               	movf	___fldiv@b,w
 10547     1594  00BC               	movwf	??___fldiv
 10548     1595  0839               	movf	___fldiv@b+1,w
 10549     1596  00BD               	movwf	??___fldiv+1
 10550     1597  083A               	movf	___fldiv@b+2,w
 10551     1598  00BE               	movwf	??___fldiv+2
 10552     1599  083B               	movf	___fldiv@b+3,w
 10553     159A  00BF               	movwf	??___fldiv+3
 10554     159B  3001               	movlw	1
 10555     159C  00C0               	movwf	??___fldiv+4
 10556     159D                     u4625:
 10557     159D  37BF               	asrf	??___fldiv+3,f
 10558     159E  0CBE               	rrf	??___fldiv+2,f
 10559     159F  0CBD               	rrf	??___fldiv+1,f
 10560     15A0  0CBC               	rrf	??___fldiv,f
 10561     15A1                     u4620:
 10562     15A1  0BC0               	decfsz	??___fldiv+4,f
 10563     15A2  2D9D               	goto	u4625
 10564     15A3  083F               	movf	??___fldiv+3,w
 10565     15A4  00BB               	movwf	___fldiv@b+3
 10566     15A5  083E               	movf	??___fldiv+2,w
 10567     15A6  00BA               	movwf	___fldiv@b+2
 10568     15A7  083D               	movf	??___fldiv+1,w
 10569     15A8  00B9               	movwf	___fldiv@b+1
 10570     15A9  083C               	movf	??___fldiv,w
 10571     15AA  00B8               	movwf	___fldiv@b
 10572     15AB                     l4112:
 10573     15AB  3001               	movlw	1
 10574     15AC  07C6               	addwf	___fldiv@new_exp,f
 10575     15AD  3000               	movlw	0
 10576     15AE  3DC7               	addwfc	___fldiv@new_exp+1,f
 10577     15AF                     l4114:
 10578     15AF  0847               	movf	___fldiv@new_exp+1,w
 10579     15B0  3A80               	xorlw	128
 10580     15B1  00BC               	movwf	??___fldiv
 10581     15B2  3080               	movlw	128
 10582     15B3  023C               	subwf	??___fldiv,w
 10583     15B4  1D03               	skipz
 10584     15B5  2DB8               	goto	u4635
 10585     15B6  30FF               	movlw	255
 10586     15B7  0246               	subwf	___fldiv@new_exp,w
 10587     15B8                     u4635:
 10588     15B8  1C03               	skipc
 10589     15B9  2DBB               	goto	u4631
 10590     15BA  2DBC               	goto	u4630
 10591     15BB                     u4631:
 10592     15BB  2DC9               	goto	l1017
 10593     15BC                     u4630:
 10594     15BC                     l4116:
 10595     15BC  30FF               	movlw	255
 10596     15BD  0020               	movlb	0	; select bank0
 10597     15BE  00C6               	movwf	___fldiv@new_exp
 10598     15BF  3000               	movlw	0
 10599     15C0  00C7               	movwf	___fldiv@new_exp+1
 10600     15C1  3000               	movlw	0
 10601     15C2  00BB               	movwf	___fldiv@b+3
 10602     15C3  3000               	movlw	0
 10603     15C4  00BA               	movwf	___fldiv@b+2
 10604     15C5  3000               	movlw	0
 10605     15C6  00B9               	movwf	___fldiv@b+1
 10606     15C7  3000               	movlw	0
 10607     15C8  00B8               	movwf	___fldiv@b
 10608     15C9                     l1017:
 10609     15C9  0020               	movlb	0	; select bank0
 10610     15CA  0847               	movf	___fldiv@new_exp+1,w
 10611     15CB  3A80               	xorlw	128
 10612     15CC  00BC               	movwf	??___fldiv
 10613     15CD  3080               	movlw	128
 10614     15CE  023C               	subwf	??___fldiv,w
 10615     15CF  1D03               	skipz
 10616     15D0  2DD3               	goto	u4645
 10617     15D1  3001               	movlw	1
 10618     15D2  0246               	subwf	___fldiv@new_exp,w
 10619     15D3                     u4645:
 10620     15D3  1803               	skipnc
 10621     15D4  2DD6               	goto	u4641
 10622     15D5  2DD7               	goto	u4640
 10623     15D6                     u4641:
 10624     15D6  2DE3               	goto	l1018
 10625     15D7                     u4640:
 10626     15D7                     l4118:
 10627     15D7  0020               	movlb	0	; select bank0
 10628     15D8  01C6               	clrf	___fldiv@new_exp
 10629     15D9  01C7               	clrf	___fldiv@new_exp+1
 10630     15DA                     l4120:
 10631     15DA  3000               	movlw	0
 10632     15DB  00BB               	movwf	___fldiv@b+3
 10633     15DC  3000               	movlw	0
 10634     15DD  00BA               	movwf	___fldiv@b+2
 10635     15DE  3000               	movlw	0
 10636     15DF  00B9               	movwf	___fldiv@b+1
 10637     15E0  3000               	movlw	0
 10638     15E1  00B8               	movwf	___fldiv@b
 10639     15E2                     l4122:
 10640     15E2  01C5               	clrf	___fldiv@sign
 10641     15E3                     l1018:
 10642     15E3  0020               	movlb	0	; select bank0
 10643     15E4  0846               	movf	___fldiv@new_exp,w
 10644     15E5  00CC               	movwf	___fldiv@bexp
 10645     15E6                     l4124:
 10646     15E6  1C4C               	btfss	___fldiv@bexp,0
 10647     15E7  2DE9               	goto	u4651
 10648     15E8  2DEA               	goto	u4650
 10649     15E9                     u4651:
 10650     15E9  2DEC               	goto	l4128
 10651     15EA                     u4650:
 10652     15EA                     l4126:
 10653     15EA  17BA               	bsf	___fldiv@b+2,7
 10654     15EB  2DF0               	goto	l1020
 10655     15EC                     l4128:
 10656     15EC  307F               	movlw	127
 10657     15ED  00BC               	movwf	??___fldiv
 10658     15EE  083C               	movf	??___fldiv,w
 10659     15EF  05BA               	andwf	___fldiv@b+2,f
 10660     15F0                     l1020:
 10661     15F0  364C               	lsrf	___fldiv@bexp,w
 10662     15F1  00BB               	movwf	___fldiv@b+3
 10663     15F2  0845               	movf	___fldiv@sign,w
 10664     15F3  00BC               	movwf	??___fldiv
 10665     15F4  083C               	movf	??___fldiv,w
 10666     15F5  04BB               	iorwf	___fldiv@b+3,f
 10667     15F6  2CB7               	goto	l4038
 10668     15F7                     l998:
 10669     15F7  0008               	return
 10670     15F8                     __end_of___fldiv:
 10671                           
 10672                           	psect	text21
 10673     0817                     __ptext21:	
 10674 ;; *************** function _dtoa *****************
 10675 ;; Defined at:
 10676 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 10677 ;; Parameters:    Size  Location     Type
 10678 ;;  fp              1    wreg     PTR struct _IO_FILE
 10679 ;;		 -> sprintf@f(11), 
 10680 ;;  d               2   22[BANK0 ] int 
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 10683 ;;		 -> sprintf@f(11), 
 10684 ;;  i               2   33[BANK0 ] int 
 10685 ;;  w               2   30[BANK0 ] int 
 10686 ;;  p               2   28[BANK0 ] int 
 10687 ;;  s               1   32[BANK0 ] unsigned char 
 10688 ;; Return value:  Size  Location     Type
 10689 ;;                  1    wreg      void 
 10690 ;; Registers used:
 10691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10692 ;; Tracked objects:
 10693 ;;		On entry : 0/0
 10694 ;;		On exit  : 0/0
 10695 ;;		Unchanged: 0/0
 10696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10697 ;;      Params:         0       2       0       0       0       0       0       0
 10698 ;;      Locals:         0      10       0       0       0       0       0       0
 10699 ;;      Temps:          0       1       0       0       0       0       0       0
 10700 ;;      Totals:         0      13       0       0       0       0       0       0
 10701 ;;Total ram usage:       13 bytes
 10702 ;; Hardware stack levels used: 1
 10703 ;; Hardware stack levels required when called: 8
 10704 ;; This function calls:
 10705 ;;		___awdiv
 10706 ;;		___awmod
 10707 ;;		_abs
 10708 ;;		_pad
 10709 ;; This function is called by:
 10710 ;;		_vfpfcnvrt
 10711 ;; This function uses a non-reentrant model
 10712 ;;
 10713                           
 10714     0817                     _dtoa:	
 10715                           ;psect for function _dtoa
 10716                           
 10717                           
 10718                           ;incstack = 0
 10719                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10720                           ;dtoa@fp stored from wreg
 10721     0817  0020               	movlb	0	; select bank0
 10722     0818  00BB               	movwf	dtoa@fp
 10723     0819                     l4384:
 10724                           
 10725                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 10726     0819  1BB7               	btfsc	dtoa@d+1,7
 10727     081A  281C               	goto	u5211
 10728     081B  281E               	goto	u5210
 10729     081C                     u5211:
 10730     081C  3001               	movlw	1
 10731     081D  281F               	goto	u5220
 10732     081E                     u5210:
 10733     081E  3000               	movlw	0
 10734     081F                     u5220:
 10735     081F  00C0               	movwf	dtoa@s
 10736     0820                     l4386:
 10737                           
 10738                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
 10739     0820  0021               	movlb	1	; select bank1
 10740     0821  1BEE               	btfsc	(_prec+1)^(0+128),7
 10741     0822  2824               	goto	u5231
 10742     0823  2825               	goto	u5230
 10743     0824                     u5231:
 10744     0824  282B               	goto	l4390
 10745     0825                     u5230:
 10746     0825                     l4388:
 10747                           
 10748                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
 10749     0825  30FD               	movlw	253
 10750     0826  0020               	movlb	0	; select bank0
 10751     0827  00B8               	movwf	??_dtoa
 10752     0828  0838               	movf	??_dtoa,w
 10753     0829  0022               	movlb	2	; select bank2
 10754     082A  05B0               	andwf	_flags^(0+256),f
 10755     082B                     l4390:
 10756                           
 10757                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 10758     082B  0021               	movlb	1	; select bank1
 10759     082C  1FEE               	btfss	(_prec+1)^(0+128),7
 10760     082D  282F               	goto	u5241
 10761     082E  2830               	goto	u5240
 10762     082F                     u5241:
 10763     082F  2836               	goto	l4394
 10764     0830                     u5240:
 10765     0830                     l4392:
 10766     0830  3001               	movlw	1
 10767     0831  0020               	movlb	0	; select bank0
 10768     0832  00BC               	movwf	dtoa@p
 10769     0833  3000               	movlw	0
 10770     0834  00BD               	movwf	dtoa@p+1
 10771     0835  283D               	goto	l1142
 10772     0836                     l4394:
 10773     0836  086E               	movf	(_prec+1)^(0+128),w
 10774     0837  0020               	movlb	0	; select bank0
 10775     0838  00BD               	movwf	dtoa@p+1
 10776     0839  0021               	movlb	1	; select bank1
 10777     083A  086D               	movf	_prec^(0+128),w
 10778     083B  0020               	movlb	0	; select bank0
 10779     083C  00BC               	movwf	dtoa@p
 10780     083D                     l1142:
 10781                           
 10782                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 10783     083D  0022               	movlb	2	; select bank2
 10784     083E  082D               	movf	(_width+1)^(0+256),w
 10785     083F  0020               	movlb	0	; select bank0
 10786     0840  00BF               	movwf	dtoa@w+1
 10787     0841  0022               	movlb	2	; select bank2
 10788     0842  082C               	movf	_width^(0+256),w
 10789     0843  0020               	movlb	0	; select bank0
 10790     0844  00BE               	movwf	dtoa@w
 10791     0845                     l4396:
 10792                           
 10793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
 10794     0845  0840               	movf	dtoa@s,w
 10795     0846  1903               	btfsc	3,2
 10796     0847  2849               	goto	u5251
 10797     0848  284A               	goto	u5250
 10798     0849                     u5251:
 10799     0849  285E               	goto	l1143
 10800     084A                     u5250:
 10801     084A                     l4398:
 10802                           
 10803                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
 10804     084A  30FF               	movlw	255
 10805     084B  07BE               	addwf	dtoa@w,f
 10806     084C  30FF               	movlw	255
 10807     084D  3DBF               	addwfc	dtoa@w+1,f
 10808     084E                     l4400:
 10809                           
 10810                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 10811     084E  0840               	movf	dtoa@s,w
 10812     084F  1D03               	btfss	3,2
 10813     0850  2852               	goto	u5261
 10814     0851  2853               	goto	u5260
 10815     0852                     u5261:
 10816     0852  2858               	goto	l4404
 10817     0853                     u5260:
 10818     0853                     l4402:
 10819     0853  302B               	movlw	43
 10820     0854  00B9               	movwf	_dtoa$1417
 10821     0855  3000               	movlw	0
 10822     0856  00BA               	movwf	_dtoa$1417+1
 10823     0857  285C               	goto	l1147
 10824     0858                     l4404:
 10825     0858  302D               	movlw	45
 10826     0859  00B9               	movwf	_dtoa$1417
 10827     085A  3000               	movlw	0
 10828     085B  00BA               	movwf	_dtoa$1417+1
 10829     085C                     l1147:
 10830     085C  0839               	movf	_dtoa$1417,w
 10831     085D  00C0               	movwf	dtoa@s
 10832     085E                     l1143:	
 10833                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 543:     }
 10834                           
 10835                           
 10836                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 10837     085E  304F               	movlw	79
 10838     085F  00C1               	movwf	dtoa@i
 10839     0860  3000               	movlw	0
 10840     0861  00C2               	movwf	dtoa@i+1
 10841     0862                     l4406:
 10842                           
 10843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 10844     0862  0024               	movlb	4	; select bank4
 10845     0863  01EF               	clrf	(_dbuf^(0+512)+79)
 10846                           
 10847                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 10848     0864  289E               	goto	l4418
 10849     0865                     l4408:
 10850                           
 10851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
 10852     0865  30FF               	movlw	255
 10853     0866  0020               	movlb	0	; select bank0
 10854     0867  07C1               	addwf	dtoa@i,f
 10855     0868  30FF               	movlw	255
 10856     0869  3DC2               	addwfc	dtoa@i+1,f
 10857     086A                     l4410:
 10858                           
 10859                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 10860     086A  0841               	movf	dtoa@i,w
 10861     086B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10862     086C  0086               	movwf	6
 10863     086D  3002               	movlw	2	; select bank4/5
 10864     086E  0087               	movwf	7
 10865     086F  300A               	movlw	10
 10866     0870  00A0               	movwf	___awmod@divisor
 10867     0871  3000               	movlw	0
 10868     0872  00A1               	movwf	___awmod@divisor+1
 10869     0873  0837               	movf	dtoa@d+1,w
 10870     0874  00A3               	movwf	___awmod@dividend+1
 10871     0875  0836               	movf	dtoa@d,w
 10872     0876  00A2               	movwf	___awmod@dividend
 10873     0877  319C  24B3  3188   	fcall	___awmod
 10874     087A  0020               	movlb	0	; select bank0
 10875     087B  0821               	movf	?___awmod+1,w
 10876     087C  00A8               	movwf	abs@a+1
 10877     087D  0820               	movf	?___awmod,w
 10878     087E  00A7               	movwf	abs@a
 10879     087F  3199  218F  3188   	fcall	_abs
 10880     0882  0020               	movlb	0	; select bank0
 10881     0883  0827               	movf	?_abs,w
 10882     0884  3E30               	addlw	48
 10883     0885  0081               	movwf	1
 10884     0886                     l4412:
 10885                           
 10886                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 567:         --p;
 10887     0886  30FF               	movlw	255
 10888     0887  07BC               	addwf	dtoa@p,f
 10889     0888  30FF               	movlw	255
 10890     0889  3DBD               	addwfc	dtoa@p+1,f
 10891     088A                     l4414:
 10892                           
 10893                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
 10894     088A  30FF               	movlw	255
 10895     088B  07BE               	addwf	dtoa@w,f
 10896     088C  30FF               	movlw	255
 10897     088D  3DBF               	addwfc	dtoa@w+1,f
 10898     088E                     l4416:
 10899                           
 10900                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 10901     088E  300A               	movlw	10
 10902     088F  00A0               	movwf	___awdiv@divisor
 10903     0890  3000               	movlw	0
 10904     0891  00A1               	movwf	___awdiv@divisor+1
 10905     0892  0837               	movf	dtoa@d+1,w
 10906     0893  00A3               	movwf	___awdiv@dividend+1
 10907     0894  0836               	movf	dtoa@d,w
 10908     0895  00A2               	movwf	___awdiv@dividend
 10909     0896  319D  2560  3188   	fcall	___awdiv
 10910     0899  0020               	movlb	0	; select bank0
 10911     089A  0821               	movf	?___awdiv+1,w
 10912     089B  00B7               	movwf	dtoa@d+1
 10913     089C  0820               	movf	?___awdiv,w
 10914     089D  00B6               	movwf	dtoa@d
 10915     089E                     l4418:
 10916                           
 10917                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 10918     089E  0020               	movlb	0	; select bank0
 10919     089F  0842               	movf	dtoa@i+1,w
 10920     08A0  3A80               	xorlw	128
 10921     08A1  00B8               	movwf	??_dtoa
 10922     08A2  3080               	movlw	128
 10923     08A3  0238               	subwf	??_dtoa,w
 10924     08A4  1D03               	skipz
 10925     08A5  28A8               	goto	u5275
 10926     08A6  3001               	movlw	1
 10927     08A7  0241               	subwf	dtoa@i,w
 10928     08A8                     u5275:
 10929     08A8  1C03               	skipc
 10930     08A9  28AB               	goto	u5271
 10931     08AA  28AC               	goto	u5270
 10932     08AB                     u5271:
 10933     08AB  28D3               	goto	l4428
 10934     08AC                     u5270:
 10935     08AC                     l4420:
 10936     08AC  0020               	movlb	0	; select bank0
 10937     08AD  0836               	movf	dtoa@d,w
 10938     08AE  0437               	iorwf	dtoa@d+1,w
 10939     08AF  1D03               	btfss	3,2
 10940     08B0  28B2               	goto	u5281
 10941     08B1  28B3               	goto	u5280
 10942     08B2                     u5281:
 10943     08B2  2865               	goto	l4408
 10944     08B3                     u5280:
 10945     08B3                     l4422:
 10946     08B3  083D               	movf	dtoa@p+1,w
 10947     08B4  3A80               	xorlw	128
 10948     08B5  00B8               	movwf	??_dtoa
 10949     08B6  3080               	movlw	128
 10950     08B7  0238               	subwf	??_dtoa,w
 10951     08B8  1D03               	skipz
 10952     08B9  28BC               	goto	u5295
 10953     08BA  3001               	movlw	1
 10954     08BB  023C               	subwf	dtoa@p,w
 10955     08BC                     u5295:
 10956     08BC  1803               	skipnc
 10957     08BD  28BF               	goto	u5291
 10958     08BE  28C0               	goto	u5290
 10959     08BF                     u5291:
 10960     08BF  2865               	goto	l4408
 10961     08C0                     u5290:
 10962     08C0                     l4424:
 10963     08C0  0020               	movlb	0	; select bank0
 10964     08C1  083F               	movf	dtoa@w+1,w
 10965     08C2  3A80               	xorlw	128
 10966     08C3  00B8               	movwf	??_dtoa
 10967     08C4  3080               	movlw	128
 10968     08C5  0238               	subwf	??_dtoa,w
 10969     08C6  1D03               	skipz
 10970     08C7  28CA               	goto	u5305
 10971     08C8  3001               	movlw	1
 10972     08C9  023E               	subwf	dtoa@w,w
 10973     08CA                     u5305:
 10974     08CA  1C03               	skipc
 10975     08CB  28CD               	goto	u5301
 10976     08CC  28CE               	goto	u5300
 10977     08CD                     u5301:
 10978     08CD  28D3               	goto	l4428
 10979     08CE                     u5300:
 10980     08CE                     l4426:
 10981     08CE  0022               	movlb	2	; select bank2
 10982     08CF  18B0               	btfsc	_flags^(0+256),1
 10983     08D0  28D2               	goto	u5311
 10984     08D1  28D3               	goto	u5310
 10985     08D2                     u5311:
 10986     08D2  2865               	goto	l4408
 10987     08D3                     u5310:
 10988     08D3                     l4428:
 10989                           
 10990                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 10991     08D3  0020               	movlb	0	; select bank0
 10992     08D4  0840               	movf	dtoa@s,w
 10993     08D5  1903               	btfsc	3,2
 10994     08D6  28D8               	goto	u5321
 10995     08D7  28D9               	goto	u5320
 10996     08D8                     u5321:
 10997     08D8  28E4               	goto	l4434
 10998     08D9                     u5320:
 10999     08D9                     l4430:
 11000                           
 11001                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
 11002     08D9  30FF               	movlw	255
 11003     08DA  07C1               	addwf	dtoa@i,f
 11004     08DB  30FF               	movlw	255
 11005     08DC  3DC2               	addwfc	dtoa@i+1,f
 11006     08DD                     l4432:
 11007                           
 11008                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 11009     08DD  0841               	movf	dtoa@i,w
 11010     08DE  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11011     08DF  0086               	movwf	6
 11012     08E0  3002               	movlw	2	; select bank4/5
 11013     08E1  0087               	movwf	7
 11014     08E2  0840               	movf	dtoa@s,w
 11015     08E3  0081               	movwf	1
 11016     08E4                     l4434:
 11017                           
 11018                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 11019     08E4  0841               	movf	dtoa@i,w
 11020     08E5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11021     08E6  00AF               	movwf	pad@buf
 11022     08E7  083F               	movf	dtoa@w+1,w
 11023     08E8  00B1               	movwf	pad@p+1
 11024     08E9  083E               	movf	dtoa@w,w
 11025     08EA  00B0               	movwf	pad@p
 11026     08EB  083B               	movf	dtoa@fp,w
 11027     08EC  319B  23E3  3188   	fcall	_pad
 11028     08EF                     l1156:
 11029     08EF  0008               	return
 11030     08F0                     __end_of_dtoa:
 11031                           
 11032                           	psect	text22
 11033     1BE3                     __ptext22:	
 11034 ;; *************** function _pad *****************
 11035 ;; Defined at:
 11036 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;  fp              1    wreg     PTR struct _IO_FILE
 11039 ;;		 -> sprintf@f(11), 
 11040 ;;  buf             1   15[BANK0 ] PTR unsigned char 
 11041 ;;		 -> dbuf(80), 
 11042 ;;  p               2   16[BANK0 ] int 
 11043 ;; Auto vars:     Size  Location     Type
 11044 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
 11045 ;;		 -> sprintf@f(11), 
 11046 ;;  i               2   19[BANK0 ] int 
 11047 ;; Return value:  Size  Location     Type
 11048 ;;                  1    wreg      void 
 11049 ;; Registers used:
 11050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11051 ;; Tracked objects:
 11052 ;;		On entry : 0/0
 11053 ;;		On exit  : 0/0
 11054 ;;		Unchanged: 0/0
 11055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11056 ;;      Params:         0       3       0       0       0       0       0       0
 11057 ;;      Locals:         0       3       0       0       0       0       0       0
 11058 ;;      Temps:          0       1       0       0       0       0       0       0
 11059 ;;      Totals:         0       7       0       0       0       0       0       0
 11060 ;;Total ram usage:        7 bytes
 11061 ;; Hardware stack levels used: 1
 11062 ;; Hardware stack levels required when called: 7
 11063 ;; This function calls:
 11064 ;;		_fputc
 11065 ;;		_fputs
 11066 ;; This function is called by:
 11067 ;;		_dtoa
 11068 ;;		_efgtoa
 11069 ;; This function uses a non-reentrant model
 11070 ;;
 11071                           
 11072     1BE3                     _pad:	
 11073                           ;psect for function _pad
 11074                           
 11075                           
 11076                           ;incstack = 0
 11077                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11078                           ;pad@fp stored from wreg
 11079     1BE3  0020               	movlb	0	; select bank0
 11080     1BE4  00B5               	movwf	pad@fp
 11081     1BE5                     l4274:
 11082                           
 11083                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 11084     1BE5  1FB1               	btfss	pad@p+1,7
 11085     1BE6  2BE8               	goto	u4921
 11086     1BE7  2BE9               	goto	u4920
 11087     1BE8                     u4921:
 11088     1BE8  2BEB               	goto	l1131
 11089     1BE9                     u4920:
 11090     1BE9                     l4276:
 11091                           
 11092                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 11093     1BE9  01B0               	clrf	pad@p
 11094     1BEA  01B1               	clrf	pad@p+1
 11095     1BEB                     l1131:	
 11096                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 207:  }
 11097                           
 11098                           
 11099                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 11100     1BEB  01B3               	clrf	pad@i
 11101     1BEC  01B4               	clrf	pad@i+1
 11102                           
 11103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11104     1BED  2BFD               	goto	l4282
 11105     1BEE                     l4278:
 11106                           
 11107                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 11108     1BEE  3020               	movlw	32
 11109     1BEF  0020               	movlb	0	; select bank0
 11110     1BF0  00A0               	movwf	fputc@c
 11111     1BF1  3000               	movlw	0
 11112     1BF2  00A1               	movwf	fputc@c+1
 11113     1BF3  0835               	movf	pad@fp,w
 11114     1BF4  00A2               	movwf	fputc@fp
 11115     1BF5  319D  2507  319B   	fcall	_fputc
 11116     1BF8                     l4280:
 11117                           
 11118                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
 11119     1BF8  3001               	movlw	1
 11120     1BF9  0020               	movlb	0	; select bank0
 11121     1BFA  07B3               	addwf	pad@i,f
 11122     1BFB  3000               	movlw	0
 11123     1BFC  3DB4               	addwfc	pad@i+1,f
 11124     1BFD                     l4282:
 11125                           
 11126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11127     1BFD  0834               	movf	pad@i+1,w
 11128     1BFE  3A80               	xorlw	128
 11129     1BFF  00B2               	movwf	??_pad
 11130     1C00  0831               	movf	pad@p+1,w
 11131     1C01  3A80               	xorlw	128
 11132     1C02  0232               	subwf	??_pad,w
 11133     1C03  1D03               	skipz
 11134     1C04  2C07               	goto	u4935
 11135     1C05  0830               	movf	pad@p,w
 11136     1C06  0233               	subwf	pad@i,w
 11137     1C07                     u4935:
 11138     1C07  1C03               	skipc
 11139     1C08  2C0A               	goto	u4931
 11140     1C09  2C0B               	goto	u4930
 11141     1C0A                     u4931:
 11142     1C0A  2BEE               	goto	l4278
 11143     1C0B                     u4930:
 11144     1C0B                     l4284:
 11145                           
 11146                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 11147     1C0B  0020               	movlb	0	; select bank0
 11148     1C0C  0835               	movf	pad@fp,w
 11149     1C0D  00A8               	movwf	fputs@fp
 11150     1C0E  082F               	movf	pad@buf,w
 11151     1C0F  319B  233E  319B   	fcall	_fputs
 11152     1C12                     l1135:
 11153     1C12  0008               	return
 11154     1C13                     __end_of_pad:
 11155                           
 11156                           	psect	text23
 11157     1B3E                     __ptext23:	
 11158 ;; *************** function _fputs *****************
 11159 ;; Defined at:
 11160 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
 11161 ;; Parameters:    Size  Location     Type
 11162 ;;  s               1    wreg     PTR const unsigned char 
 11163 ;;		 -> dbuf(80), 
 11164 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
 11165 ;;		 -> sprintf@f(11), 
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;  s               1   14[BANK0 ] PTR const unsigned char 
 11168 ;;		 -> dbuf(80), 
 11169 ;;  i               2   12[BANK0 ] int 
 11170 ;;  c               1   11[BANK0 ] unsigned char 
 11171 ;; Return value:  Size  Location     Type
 11172 ;;                  2    8[BANK0 ] int 
 11173 ;; Registers used:
 11174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 0/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11180 ;;      Params:         0       1       0       0       0       0       0       0
 11181 ;;      Locals:         0       4       0       0       0       0       0       0
 11182 ;;      Temps:          0       2       0       0       0       0       0       0
 11183 ;;      Totals:         0       7       0       0       0       0       0       0
 11184 ;;Total ram usage:        7 bytes
 11185 ;; Hardware stack levels used: 1
 11186 ;; Hardware stack levels required when called: 6
 11187 ;; This function calls:
 11188 ;;		_fputc
 11189 ;; This function is called by:
 11190 ;;		_pad
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194     1B3E                     _fputs:	
 11195                           ;psect for function _fputs
 11196                           
 11197                           
 11198                           ;incstack = 0
 11199                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11200                           ;fputs@s stored from wreg
 11201     1B3E  0020               	movlb	0	; select bank0
 11202     1B3F  00AE               	movwf	fputs@s
 11203     1B40                     l3808:
 11204     1B40  01AC               	clrf	fputs@i
 11205     1B41  01AD               	clrf	fputs@i+1
 11206     1B42  2B54               	goto	l3814
 11207     1B43                     l3810:
 11208     1B43  082B               	movf	fputs@c,w
 11209     1B44  00A9               	movwf	??_fputs
 11210     1B45  01AA               	clrf	??_fputs+1
 11211     1B46  0829               	movf	??_fputs,w
 11212     1B47  00A0               	movwf	fputc@c
 11213     1B48  082A               	movf	??_fputs+1,w
 11214     1B49  00A1               	movwf	fputc@c+1
 11215     1B4A  0828               	movf	fputs@fp,w
 11216     1B4B  00A2               	movwf	fputc@fp
 11217     1B4C  319D  2507  319B   	fcall	_fputc
 11218     1B4F                     l3812:
 11219     1B4F  3001               	movlw	1
 11220     1B50  0020               	movlb	0	; select bank0
 11221     1B51  07AC               	addwf	fputs@i,f
 11222     1B52  3000               	movlw	0
 11223     1B53  3DAD               	addwfc	fputs@i+1,f
 11224     1B54                     l3814:
 11225     1B54  082C               	movf	fputs@i,w
 11226     1B55  072E               	addwf	fputs@s,w
 11227     1B56  00A9               	movwf	??_fputs
 11228     1B57  0829               	movf	??_fputs,w
 11229     1B58  0086               	movwf	6
 11230     1B59  3002               	movlw	2	; select bank4/5
 11231     1B5A  0087               	movwf	7
 11232     1B5B  0801               	movf	1,w
 11233     1B5C  00AB               	movwf	fputs@c
 11234     1B5D  082B               	movf	fputs@c,w
 11235     1B5E  1D03               	btfss	3,2
 11236     1B5F  2B61               	goto	u3941
 11237     1B60  2B62               	goto	u3940
 11238     1B61                     u3941:
 11239     1B61  2B43               	goto	l3810
 11240     1B62                     u3940:
 11241     1B62                     l1323:
 11242     1B62  0008               	return
 11243     1B63                     __end_of_fputs:
 11244                           
 11245                           	psect	text24
 11246     1D07                     __ptext24:	
 11247 ;; *************** function _fputc *****************
 11248 ;; Defined at:
 11249 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
 11250 ;; Parameters:    Size  Location     Type
 11251 ;;  c               2    0[BANK0 ] int 
 11252 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
 11253 ;;		 -> sprintf@f(11), 
 11254 ;; Auto vars:     Size  Location     Type
 11255 ;;		None
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  2    0[BANK0 ] int 
 11258 ;; Registers used:
 11259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11265 ;;      Params:         0       3       0       0       0       0       0       0
 11266 ;;      Locals:         0       0       0       0       0       0       0       0
 11267 ;;      Temps:          0       5       0       0       0       0       0       0
 11268 ;;      Totals:         0       8       0       0       0       0       0       0
 11269 ;;Total ram usage:        8 bytes
 11270 ;; Hardware stack levels used: 1
 11271 ;; Hardware stack levels required when called: 5
 11272 ;; This function calls:
 11273 ;;		_putch
 11274 ;; This function is called by:
 11275 ;;		_pad
 11276 ;;		_vfpfcnvrt
 11277 ;;		_fputs
 11278 ;; This function uses a non-reentrant model
 11279 ;;
 11280                           
 11281     1D07                     _fputc:	
 11282                           ;psect for function _fputc
 11283                           
 11284     1D07                     l3584:	
 11285                           ;incstack = 0
 11286                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11287                           
 11288     1D07  0020               	movlb	0	; select bank0
 11289     1D08  0822               	movf	fputc@fp,w
 11290     1D09  1903               	btfsc	3,2
 11291     1D0A  2D0C               	goto	u3441
 11292     1D0B  2D0D               	goto	u3440
 11293     1D0C                     u3441:
 11294     1D0C  2D12               	goto	l3588
 11295     1D0D                     u3440:
 11296     1D0D                     l3586:
 11297     1D0D  0822               	movf	fputc@fp,w
 11298     1D0E  1D03               	btfss	3,2
 11299     1D0F  2D11               	goto	u3451
 11300     1D10  2D12               	goto	u3450
 11301     1D11                     u3451:
 11302     1D11  2D17               	goto	l3590
 11303     1D12                     u3450:
 11304     1D12                     l3588:
 11305     1D12  0820               	movf	fputc@c,w
 11306     1D13  3187  27FF  319D   	fcall	_putch
 11307     1D16  2D5F               	goto	l1315
 11308     1D17                     l3590:
 11309     1D17  0822               	movf	fputc@fp,w
 11310     1D18  3E09               	addlw	9
 11311     1D19  0086               	movwf	6
 11312     1D1A  3001               	movlw	1	; select bank2/3
 11313     1D1B  0087               	movwf	7
 11314     1D1C  0016               	moviw fsr1++
 11315     1D1D  0401               	iorwf	1,w
 11316     1D1E  1903               	btfsc	3,2
 11317     1D1F  2D21               	goto	u3461
 11318     1D20  2D22               	goto	u3460
 11319     1D21                     u3461:
 11320     1D21  2D42               	goto	l3594
 11321     1D22                     u3460:
 11322     1D22                     l3592:
 11323     1D22  0822               	movf	fputc@fp,w
 11324     1D23  3E09               	addlw	9
 11325     1D24  0086               	movwf	6
 11326     1D25  3001               	movlw	1	; select bank2/3
 11327     1D26  0087               	movwf	7
 11328     1D27  3F40               	moviw [0]fsr1
 11329     1D28  00A3               	movwf	??_fputc
 11330     1D29  3F41               	moviw [1]fsr1
 11331     1D2A  00A4               	movwf	??_fputc+1
 11332     1D2B  0822               	movf	fputc@fp,w
 11333     1D2C  3E02               	addlw	2
 11334     1D2D  0086               	movwf	6
 11335     1D2E  3001               	movlw	1	; select bank2/3
 11336     1D2F  0087               	movwf	7
 11337     1D30  3F40               	moviw [0]fsr1
 11338     1D31  00A5               	movwf	??_fputc+2
 11339     1D32  3F41               	moviw [1]fsr1
 11340     1D33  00A6               	movwf	??_fputc+3
 11341     1D34  0826               	movf	??_fputc+3,w
 11342     1D35  3A80               	xorlw	128
 11343     1D36  00A7               	movwf	??_fputc+4
 11344     1D37  0824               	movf	??_fputc+1,w
 11345     1D38  3A80               	xorlw	128
 11346     1D39  0227               	subwf	??_fputc+4,w
 11347     1D3A  1D03               	skipz
 11348     1D3B  2D3E               	goto	u3475
 11349     1D3C  0823               	movf	??_fputc,w
 11350     1D3D  0225               	subwf	??_fputc+2,w
 11351     1D3E                     u3475:
 11352     1D3E  1803               	skipnc
 11353     1D3F  2D41               	goto	u3471
 11354     1D40  2D42               	goto	u3470
 11355     1D41                     u3471:
 11356     1D41  2D5F               	goto	l1315
 11357     1D42                     u3470:
 11358     1D42                     l3594:
 11359     1D42  0020               	movlb	0	; select bank0
 11360     1D43  0822               	movf	fputc@fp,w
 11361     1D44  0086               	movwf	6
 11362     1D45  3001               	movlw	1	; select bank2/3
 11363     1D46  0087               	movwf	7
 11364     1D47  0822               	movf	fputc@fp,w
 11365     1D48  3E02               	addlw	2
 11366     1D49  0084               	movwf	4
 11367     1D4A  3001               	movlw	1	; select bank2/3
 11368     1D4B  0085               	movwf	5
 11369     1D4C  0800               	movf	0,w
 11370     1D4D  0701               	addwf	1,w
 11371     1D4E  00A3               	movwf	??_fputc
 11372     1D4F  0823               	movf	??_fputc,w
 11373     1D50  0086               	movwf	6
 11374     1D51  3001               	movlw	1	; select bank2/3
 11375     1D52  0087               	movwf	7
 11376     1D53  0820               	movf	fputc@c,w
 11377     1D54  0081               	movwf	1
 11378     1D55                     l3596:
 11379     1D55  0822               	movf	fputc@fp,w
 11380     1D56  3E02               	addlw	2
 11381     1D57  0086               	movwf	6
 11382     1D58  3001               	movlw	1	; select bank2/3
 11383     1D59  0087               	movwf	7
 11384     1D5A  3001               	movlw	1
 11385     1D5B  0781               	addwf	1,f
 11386     1D5C  3141               	addfsr 1,1
 11387     1D5D  1803               	skipnc
 11388     1D5E  0A81               	incf	1,f
 11389     1D5F                     l1315:
 11390     1D5F  0008               	return
 11391     1D60                     __end_of_fputc:
 11392                           
 11393                           	psect	text25
 11394     07FF                     __ptext25:	
 11395 ;; *************** function _putch *****************
 11396 ;; Defined at:
 11397 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;  c               1    wreg     unsigned char 
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;  c               1    0[COMMON] unsigned char 
 11402 ;; Return value:  Size  Location     Type
 11403 ;;                  1    wreg      void 
 11404 ;; Registers used:
 11405 ;;		wreg
 11406 ;; Tracked objects:
 11407 ;;		On entry : 0/0
 11408 ;;		On exit  : 0/0
 11409 ;;		Unchanged: 0/0
 11410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11411 ;;      Params:         0       0       0       0       0       0       0       0
 11412 ;;      Locals:         0       0       0       0       0       0       0       0
 11413 ;;      Temps:          0       0       0       0       0       0       0       0
 11414 ;;      Totals:         0       0       0       0       0       0       0       0
 11415 ;;Total ram usage:        0 bytes
 11416 ;; Hardware stack levels used: 1
 11417 ;; Hardware stack levels required when called: 4
 11418 ;; This function calls:
 11419 ;;		Nothing
 11420 ;; This function is called by:
 11421 ;;		_fputc
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425     07FF                     _putch:	
 11426                           ;psect for function _putch
 11427                           
 11428     07FF                     l1326:	
 11429                           ;incstack = 0
 11430                           ; Regs used in _putch: [wreg]
 11431                           
 11432     07FF  0008               	return
 11433     0800                     __end_of_putch:
 11434                           
 11435                           	psect	text26
 11436     198F                     __ptext26:	
 11437 ;; *************** function _abs *****************
 11438 ;; Defined at:
 11439 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
 11440 ;; Parameters:    Size  Location     Type
 11441 ;;  a               2    7[BANK0 ] int 
 11442 ;; Auto vars:     Size  Location     Type
 11443 ;;		None
 11444 ;; Return value:  Size  Location     Type
 11445 ;;                  2    7[BANK0 ] int 
 11446 ;; Registers used:
 11447 ;;		wreg, status,2, status,0
 11448 ;; Tracked objects:
 11449 ;;		On entry : 0/0
 11450 ;;		On exit  : 0/0
 11451 ;;		Unchanged: 0/0
 11452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11453 ;;      Params:         0       2       0       0       0       0       0       0
 11454 ;;      Locals:         0       0       0       0       0       0       0       0
 11455 ;;      Temps:          0       2       0       0       0       0       0       0
 11456 ;;      Totals:         0       4       0       0       0       0       0       0
 11457 ;;Total ram usage:        4 bytes
 11458 ;; Hardware stack levels used: 1
 11459 ;; Hardware stack levels required when called: 4
 11460 ;; This function calls:
 11461 ;;		Nothing
 11462 ;; This function is called by:
 11463 ;;		_dtoa
 11464 ;; This function uses a non-reentrant model
 11465 ;;
 11466                           
 11467     198F                     _abs:	
 11468                           ;psect for function _abs
 11469                           
 11470     198F                     l4286:	
 11471                           ;incstack = 0
 11472                           ; Regs used in _abs: [wreg+status,2+status,0]
 11473                           
 11474     198F  0020               	movlb	0	; select bank0
 11475     1990  1BA8               	btfsc	abs@a+1,7
 11476     1991  2993               	goto	u4941
 11477     1992  2994               	goto	u4940
 11478     1993                     u4941:
 11479     1993  2995               	goto	l4290
 11480     1994                     u4940:
 11481     1994                     l4288:
 11482     1994  29A0               	goto	l1277
 11483     1995                     l4290:
 11484     1995  0927               	comf	abs@a,w
 11485     1996  00A9               	movwf	??_abs
 11486     1997  0928               	comf	abs@a+1,w
 11487     1998  00AA               	movwf	??_abs+1
 11488     1999  0AA9               	incf	??_abs,f
 11489     199A  1903               	skipnz
 11490     199B  0AAA               	incf	??_abs+1,f
 11491     199C  0829               	movf	??_abs,w
 11492     199D  00A7               	movwf	?_abs
 11493     199E  082A               	movf	??_abs+1,w
 11494     199F  00A8               	movwf	?_abs+1
 11495     19A0                     l1277:
 11496     19A0  0008               	return
 11497     19A1                     __end_of_abs:
 11498                           
 11499                           	psect	text27
 11500     1CB3                     __ptext27:	
 11501 ;; *************** function ___awmod *****************
 11502 ;; Defined at:
 11503 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
 11504 ;; Parameters:    Size  Location     Type
 11505 ;;  divisor         2    0[BANK0 ] int 
 11506 ;;  dividend        2    2[BANK0 ] int 
 11507 ;; Auto vars:     Size  Location     Type
 11508 ;;  sign            1    6[BANK0 ] unsigned char 
 11509 ;;  counter         1    5[BANK0 ] unsigned char 
 11510 ;; Return value:  Size  Location     Type
 11511 ;;                  2    0[BANK0 ] int 
 11512 ;; Registers used:
 11513 ;;		wreg, status,2, status,0
 11514 ;; Tracked objects:
 11515 ;;		On entry : 0/0
 11516 ;;		On exit  : 0/0
 11517 ;;		Unchanged: 0/0
 11518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11519 ;;      Params:         0       4       0       0       0       0       0       0
 11520 ;;      Locals:         0       2       0       0       0       0       0       0
 11521 ;;      Temps:          0       1       0       0       0       0       0       0
 11522 ;;      Totals:         0       7       0       0       0       0       0       0
 11523 ;;Total ram usage:        7 bytes
 11524 ;; Hardware stack levels used: 1
 11525 ;; Hardware stack levels required when called: 4
 11526 ;; This function calls:
 11527 ;;		Nothing
 11528 ;; This function is called by:
 11529 ;;		_dtoa
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533     1CB3                     ___awmod:	
 11534                           ;psect for function ___awmod
 11535                           
 11536     1CB3                     l3874:	
 11537                           ;incstack = 0
 11538                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11539                           
 11540     1CB3  0020               	movlb	0	; select bank0
 11541     1CB4  01A6               	clrf	___awmod@sign
 11542     1CB5                     l3876:
 11543     1CB5  1FA3               	btfss	___awmod@dividend+1,7
 11544     1CB6  2CB8               	goto	u4091
 11545     1CB7  2CB9               	goto	u4090
 11546     1CB8                     u4091:
 11547     1CB8  2CC0               	goto	l3882
 11548     1CB9                     u4090:
 11549     1CB9                     l3878:
 11550     1CB9  09A2               	comf	___awmod@dividend,f
 11551     1CBA  09A3               	comf	___awmod@dividend+1,f
 11552     1CBB  0AA2               	incf	___awmod@dividend,f
 11553     1CBC  1903               	skipnz
 11554     1CBD  0AA3               	incf	___awmod@dividend+1,f
 11555     1CBE                     l3880:
 11556     1CBE  01A6               	clrf	___awmod@sign
 11557     1CBF  0AA6               	incf	___awmod@sign,f
 11558     1CC0                     l3882:
 11559     1CC0  1FA1               	btfss	___awmod@divisor+1,7
 11560     1CC1  2CC3               	goto	u4101
 11561     1CC2  2CC4               	goto	u4100
 11562     1CC3                     u4101:
 11563     1CC3  2CC9               	goto	l3886
 11564     1CC4                     u4100:
 11565     1CC4                     l3884:
 11566     1CC4  09A0               	comf	___awmod@divisor,f
 11567     1CC5  09A1               	comf	___awmod@divisor+1,f
 11568     1CC6  0AA0               	incf	___awmod@divisor,f
 11569     1CC7  1903               	skipnz
 11570     1CC8  0AA1               	incf	___awmod@divisor+1,f
 11571     1CC9                     l3886:
 11572     1CC9  0820               	movf	___awmod@divisor,w
 11573     1CCA  0421               	iorwf	___awmod@divisor+1,w
 11574     1CCB  1903               	btfsc	3,2
 11575     1CCC  2CCE               	goto	u4111
 11576     1CCD  2CCF               	goto	u4110
 11577     1CCE                     u4111:
 11578     1CCE  2CF8               	goto	l3904
 11579     1CCF                     u4110:
 11580     1CCF                     l3888:
 11581     1CCF  01A5               	clrf	___awmod@counter
 11582     1CD0  0AA5               	incf	___awmod@counter,f
 11583     1CD1  2CDB               	goto	l3894
 11584     1CD2                     l3890:
 11585     1CD2  3001               	movlw	1
 11586     1CD3                     u4125:
 11587     1CD3  35A0               	lslf	___awmod@divisor,f
 11588     1CD4  0DA1               	rlf	___awmod@divisor+1,f
 11589     1CD5  0B89               	decfsz	9,f
 11590     1CD6  2CD3               	goto	u4125
 11591     1CD7                     l3892:
 11592     1CD7  3001               	movlw	1
 11593     1CD8  00A4               	movwf	??___awmod
 11594     1CD9  0824               	movf	??___awmod,w
 11595     1CDA  07A5               	addwf	___awmod@counter,f
 11596     1CDB                     l3894:
 11597     1CDB  1FA1               	btfss	___awmod@divisor+1,7
 11598     1CDC  2CDE               	goto	u4131
 11599     1CDD  2CDF               	goto	u4130
 11600     1CDE                     u4131:
 11601     1CDE  2CD2               	goto	l3890
 11602     1CDF                     u4130:
 11603     1CDF                     l3896:
 11604     1CDF  0821               	movf	___awmod@divisor+1,w
 11605     1CE0  0223               	subwf	___awmod@dividend+1,w
 11606     1CE1  1D03               	skipz
 11607     1CE2  2CE5               	goto	u4145
 11608     1CE3  0820               	movf	___awmod@divisor,w
 11609     1CE4  0222               	subwf	___awmod@dividend,w
 11610     1CE5                     u4145:
 11611     1CE5  1C03               	skipc
 11612     1CE6  2CE8               	goto	u4141
 11613     1CE7  2CE9               	goto	u4140
 11614     1CE8                     u4141:
 11615     1CE8  2CED               	goto	l3900
 11616     1CE9                     u4140:
 11617     1CE9                     l3898:
 11618     1CE9  0820               	movf	___awmod@divisor,w
 11619     1CEA  02A2               	subwf	___awmod@dividend,f
 11620     1CEB  0821               	movf	___awmod@divisor+1,w
 11621     1CEC  3BA3               	subwfb	___awmod@dividend+1,f
 11622     1CED                     l3900:
 11623     1CED  3001               	movlw	1
 11624     1CEE                     u4155:
 11625     1CEE  36A1               	lsrf	___awmod@divisor+1,f
 11626     1CEF  0CA0               	rrf	___awmod@divisor,f
 11627     1CF0  0B89               	decfsz	9,f
 11628     1CF1  2CEE               	goto	u4155
 11629     1CF2                     l3902:
 11630     1CF2  3001               	movlw	1
 11631     1CF3  02A5               	subwf	___awmod@counter,f
 11632     1CF4  1D03               	btfss	3,2
 11633     1CF5  2CF7               	goto	u4161
 11634     1CF6  2CF8               	goto	u4160
 11635     1CF7                     u4161:
 11636     1CF7  2CDF               	goto	l3896
 11637     1CF8                     u4160:
 11638     1CF8                     l3904:
 11639     1CF8  0826               	movf	___awmod@sign,w
 11640     1CF9  1903               	btfsc	3,2
 11641     1CFA  2CFC               	goto	u4171
 11642     1CFB  2CFD               	goto	u4170
 11643     1CFC                     u4171:
 11644     1CFC  2D02               	goto	l3908
 11645     1CFD                     u4170:
 11646     1CFD                     l3906:
 11647     1CFD  09A2               	comf	___awmod@dividend,f
 11648     1CFE  09A3               	comf	___awmod@dividend+1,f
 11649     1CFF  0AA2               	incf	___awmod@dividend,f
 11650     1D00  1903               	skipnz
 11651     1D01  0AA3               	incf	___awmod@dividend+1,f
 11652     1D02                     l3908:
 11653     1D02  0823               	movf	___awmod@dividend+1,w
 11654     1D03  00A1               	movwf	?___awmod+1
 11655     1D04  0822               	movf	___awmod@dividend,w
 11656     1D05  00A0               	movwf	?___awmod
 11657     1D06                     l805:
 11658     1D06  0008               	return
 11659     1D07                     __end_of___awmod:
 11660                           
 11661                           	psect	text28
 11662     1D60                     __ptext28:	
 11663 ;; *************** function ___awdiv *****************
 11664 ;; Defined at:
 11665 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 11666 ;; Parameters:    Size  Location     Type
 11667 ;;  divisor         2    0[BANK0 ] int 
 11668 ;;  dividend        2    2[BANK0 ] int 
 11669 ;; Auto vars:     Size  Location     Type
 11670 ;;  quotient        2    7[BANK0 ] int 
 11671 ;;  sign            1    6[BANK0 ] unsigned char 
 11672 ;;  counter         1    5[BANK0 ] unsigned char 
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  2    0[BANK0 ] int 
 11675 ;; Registers used:
 11676 ;;		wreg, status,2, status,0
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11682 ;;      Params:         0       4       0       0       0       0       0       0
 11683 ;;      Locals:         0       4       0       0       0       0       0       0
 11684 ;;      Temps:          0       1       0       0       0       0       0       0
 11685 ;;      Totals:         0       9       0       0       0       0       0       0
 11686 ;;Total ram usage:        9 bytes
 11687 ;; Hardware stack levels used: 1
 11688 ;; Hardware stack levels required when called: 4
 11689 ;; This function calls:
 11690 ;;		Nothing
 11691 ;; This function is called by:
 11692 ;;		_dtoa
 11693 ;; This function uses a non-reentrant model
 11694 ;;
 11695                           
 11696     1D60                     ___awdiv:	
 11697                           ;psect for function ___awdiv
 11698                           
 11699     1D60                     l3830:	
 11700                           ;incstack = 0
 11701                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11702                           
 11703     1D60  0020               	movlb	0	; select bank0
 11704     1D61  01A6               	clrf	___awdiv@sign
 11705     1D62                     l3832:
 11706     1D62  1FA1               	btfss	___awdiv@divisor+1,7
 11707     1D63  2D65               	goto	u3991
 11708     1D64  2D66               	goto	u3990
 11709     1D65                     u3991:
 11710     1D65  2D6D               	goto	l3838
 11711     1D66                     u3990:
 11712     1D66                     l3834:
 11713     1D66  09A0               	comf	___awdiv@divisor,f
 11714     1D67  09A1               	comf	___awdiv@divisor+1,f
 11715     1D68  0AA0               	incf	___awdiv@divisor,f
 11716     1D69  1903               	skipnz
 11717     1D6A  0AA1               	incf	___awdiv@divisor+1,f
 11718     1D6B                     l3836:
 11719     1D6B  01A6               	clrf	___awdiv@sign
 11720     1D6C  0AA6               	incf	___awdiv@sign,f
 11721     1D6D                     l3838:
 11722     1D6D  1FA3               	btfss	___awdiv@dividend+1,7
 11723     1D6E  2D70               	goto	u4001
 11724     1D6F  2D71               	goto	u4000
 11725     1D70                     u4001:
 11726     1D70  2D7A               	goto	l3844
 11727     1D71                     u4000:
 11728     1D71                     l3840:
 11729     1D71  09A2               	comf	___awdiv@dividend,f
 11730     1D72  09A3               	comf	___awdiv@dividend+1,f
 11731     1D73  0AA2               	incf	___awdiv@dividend,f
 11732     1D74  1903               	skipnz
 11733     1D75  0AA3               	incf	___awdiv@dividend+1,f
 11734     1D76                     l3842:
 11735     1D76  3001               	movlw	1
 11736     1D77  00A4               	movwf	??___awdiv
 11737     1D78  0824               	movf	??___awdiv,w
 11738     1D79  06A6               	xorwf	___awdiv@sign,f
 11739     1D7A                     l3844:
 11740     1D7A  01A7               	clrf	___awdiv@quotient
 11741     1D7B  01A8               	clrf	___awdiv@quotient+1
 11742     1D7C                     l3846:
 11743     1D7C  0820               	movf	___awdiv@divisor,w
 11744     1D7D  0421               	iorwf	___awdiv@divisor+1,w
 11745     1D7E  1903               	btfsc	3,2
 11746     1D7F  2D81               	goto	u4011
 11747     1D80  2D82               	goto	u4010
 11748     1D81                     u4011:
 11749     1D81  2DB1               	goto	l3866
 11750     1D82                     u4010:
 11751     1D82                     l3848:
 11752     1D82  01A5               	clrf	___awdiv@counter
 11753     1D83  0AA5               	incf	___awdiv@counter,f
 11754     1D84  2D8E               	goto	l3854
 11755     1D85                     l3850:
 11756     1D85  3001               	movlw	1
 11757     1D86                     u4025:
 11758     1D86  35A0               	lslf	___awdiv@divisor,f
 11759     1D87  0DA1               	rlf	___awdiv@divisor+1,f
 11760     1D88  0B89               	decfsz	9,f
 11761     1D89  2D86               	goto	u4025
 11762     1D8A                     l3852:
 11763     1D8A  3001               	movlw	1
 11764     1D8B  00A4               	movwf	??___awdiv
 11765     1D8C  0824               	movf	??___awdiv,w
 11766     1D8D  07A5               	addwf	___awdiv@counter,f
 11767     1D8E                     l3854:
 11768     1D8E  1FA1               	btfss	___awdiv@divisor+1,7
 11769     1D8F  2D91               	goto	u4031
 11770     1D90  2D92               	goto	u4030
 11771     1D91                     u4031:
 11772     1D91  2D85               	goto	l3850
 11773     1D92                     u4030:
 11774     1D92                     l3856:
 11775     1D92  3001               	movlw	1
 11776     1D93                     u4045:
 11777     1D93  35A7               	lslf	___awdiv@quotient,f
 11778     1D94  0DA8               	rlf	___awdiv@quotient+1,f
 11779     1D95  0B89               	decfsz	9,f
 11780     1D96  2D93               	goto	u4045
 11781     1D97  0821               	movf	___awdiv@divisor+1,w
 11782     1D98  0223               	subwf	___awdiv@dividend+1,w
 11783     1D99  1D03               	skipz
 11784     1D9A  2D9D               	goto	u4055
 11785     1D9B  0820               	movf	___awdiv@divisor,w
 11786     1D9C  0222               	subwf	___awdiv@dividend,w
 11787     1D9D                     u4055:
 11788     1D9D  1C03               	skipc
 11789     1D9E  2DA0               	goto	u4051
 11790     1D9F  2DA1               	goto	u4050
 11791     1DA0                     u4051:
 11792     1DA0  2DA6               	goto	l3862
 11793     1DA1                     u4050:
 11794     1DA1                     l3858:
 11795     1DA1  0820               	movf	___awdiv@divisor,w
 11796     1DA2  02A2               	subwf	___awdiv@dividend,f
 11797     1DA3  0821               	movf	___awdiv@divisor+1,w
 11798     1DA4  3BA3               	subwfb	___awdiv@dividend+1,f
 11799     1DA5                     l3860:
 11800     1DA5  1427               	bsf	___awdiv@quotient,0
 11801     1DA6                     l3862:
 11802     1DA6  3001               	movlw	1
 11803     1DA7                     u4065:
 11804     1DA7  36A1               	lsrf	___awdiv@divisor+1,f
 11805     1DA8  0CA0               	rrf	___awdiv@divisor,f
 11806     1DA9  0B89               	decfsz	9,f
 11807     1DAA  2DA7               	goto	u4065
 11808     1DAB                     l3864:
 11809     1DAB  3001               	movlw	1
 11810     1DAC  02A5               	subwf	___awdiv@counter,f
 11811     1DAD  1D03               	btfss	3,2
 11812     1DAE  2DB0               	goto	u4071
 11813     1DAF  2DB1               	goto	u4070
 11814     1DB0                     u4071:
 11815     1DB0  2D92               	goto	l3856
 11816     1DB1                     u4070:
 11817     1DB1                     l3866:
 11818     1DB1  0826               	movf	___awdiv@sign,w
 11819     1DB2  1903               	btfsc	3,2
 11820     1DB3  2DB5               	goto	u4081
 11821     1DB4  2DB6               	goto	u4080
 11822     1DB5                     u4081:
 11823     1DB5  2DBB               	goto	l3870
 11824     1DB6                     u4080:
 11825     1DB6                     l3868:
 11826     1DB6  09A7               	comf	___awdiv@quotient,f
 11827     1DB7  09A8               	comf	___awdiv@quotient+1,f
 11828     1DB8  0AA7               	incf	___awdiv@quotient,f
 11829     1DB9  1903               	skipnz
 11830     1DBA  0AA8               	incf	___awdiv@quotient+1,f
 11831     1DBB                     l3870:
 11832     1DBB  0828               	movf	___awdiv@quotient+1,w
 11833     1DBC  00A1               	movwf	?___awdiv+1
 11834     1DBD  0827               	movf	___awdiv@quotient,w
 11835     1DBE  00A0               	movwf	?___awdiv
 11836     1DBF                     l792:
 11837     1DBF  0008               	return
 11838     1DC0                     __end_of___awdiv:
 11839                           
 11840                           	psect	text29
 11841     10B9                     __ptext29:	
 11842 ;; *************** function ___xxtofl *****************
 11843 ;; Defined at:
 11844 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;  sign            1    wreg     unsigned char 
 11847 ;;  val             4    6[BANK0 ] long 
 11848 ;; Auto vars:     Size  Location     Type
 11849 ;;  sign            1   14[BANK0 ] unsigned char 
 11850 ;;  arg             4   16[BANK0 ] unsigned long 
 11851 ;;  exp             1   15[BANK0 ] unsigned char 
 11852 ;; Return value:  Size  Location     Type
 11853 ;;                  4    6[BANK0 ] unsigned char 
 11854 ;; Registers used:
 11855 ;;		wreg, status,2, status,0
 11856 ;; Tracked objects:
 11857 ;;		On entry : 0/0
 11858 ;;		On exit  : 0/0
 11859 ;;		Unchanged: 0/0
 11860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11861 ;;      Params:         0       4       0       0       0       0       0       0
 11862 ;;      Locals:         0       6       0       0       0       0       0       0
 11863 ;;      Temps:          0       4       0       0       0       0       0       0
 11864 ;;      Totals:         0      14       0       0       0       0       0       0
 11865 ;;Total ram usage:       14 bytes
 11866 ;; Hardware stack levels used: 1
 11867 ;; Hardware stack levels required when called: 4
 11868 ;; This function calls:
 11869 ;;		Nothing
 11870 ;; This function is called by:
 11871 ;;		_main
 11872 ;; This function uses a non-reentrant model
 11873 ;;
 11874                           
 11875     10B9                     ___xxtofl:	
 11876                           ;psect for function ___xxtofl
 11877                           
 11878                           
 11879                           ;incstack = 0
 11880                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11881                           ;___xxtofl@sign stored from wreg
 11882     10B9  0020               	movlb	0	; select bank0
 11883     10BA  00AE               	movwf	___xxtofl@sign
 11884     10BB                     l5078:
 11885     10BB  082E               	movf	___xxtofl@sign,w
 11886     10BC  1903               	btfsc	3,2
 11887     10BD  28BF               	goto	u6211
 11888     10BE  28C0               	goto	u6210
 11889     10BF                     u6211:
 11890     10BF  28D4               	goto	l5084
 11891     10C0                     u6210:
 11892     10C0                     l5080:
 11893     10C0  1FA9               	btfss	___xxtofl@val+3,7
 11894     10C1  28C3               	goto	u6221
 11895     10C2  28C4               	goto	u6220
 11896     10C3                     u6221:
 11897     10C3  28D4               	goto	l5084
 11898     10C4                     u6220:
 11899     10C4                     l5082:
 11900     10C4  0926               	comf	___xxtofl@val,w
 11901     10C5  00B0               	movwf	___xxtofl@arg
 11902     10C6  0927               	comf	___xxtofl@val+1,w
 11903     10C7  00B1               	movwf	___xxtofl@arg+1
 11904     10C8  0928               	comf	___xxtofl@val+2,w
 11905     10C9  00B2               	movwf	___xxtofl@arg+2
 11906     10CA  0929               	comf	___xxtofl@val+3,w
 11907     10CB  00B3               	movwf	___xxtofl@arg+3
 11908     10CC  0AB0               	incf	___xxtofl@arg,f
 11909     10CD  1903               	skipnz
 11910     10CE  0AB1               	incf	___xxtofl@arg+1,f
 11911     10CF  1903               	skipnz
 11912     10D0  0AB2               	incf	___xxtofl@arg+2,f
 11913     10D1  1903               	skipnz
 11914     10D2  0AB3               	incf	___xxtofl@arg+3,f
 11915     10D3  28DC               	goto	l1080
 11916     10D4                     l5084:
 11917     10D4  0829               	movf	___xxtofl@val+3,w
 11918     10D5  00B3               	movwf	___xxtofl@arg+3
 11919     10D6  0828               	movf	___xxtofl@val+2,w
 11920     10D7  00B2               	movwf	___xxtofl@arg+2
 11921     10D8  0827               	movf	___xxtofl@val+1,w
 11922     10D9  00B1               	movwf	___xxtofl@arg+1
 11923     10DA  0826               	movf	___xxtofl@val,w
 11924     10DB  00B0               	movwf	___xxtofl@arg
 11925     10DC                     l1080:
 11926     10DC  0829               	movf	___xxtofl@val+3,w
 11927     10DD  0428               	iorwf	___xxtofl@val+2,w
 11928     10DE  0427               	iorwf	___xxtofl@val+1,w
 11929     10DF  0426               	iorwf	___xxtofl@val,w
 11930     10E0  1D03               	skipz
 11931     10E1  28E3               	goto	u6231
 11932     10E2  28E4               	goto	u6230
 11933     10E3                     u6231:
 11934     10E3  28ED               	goto	l5090
 11935     10E4                     u6230:
 11936     10E4                     l5086:
 11937     10E4  3000               	movlw	0
 11938     10E5  00A9               	movwf	?___xxtofl+3
 11939     10E6  3000               	movlw	0
 11940     10E7  00A8               	movwf	?___xxtofl+2
 11941     10E8  3000               	movlw	0
 11942     10E9  00A7               	movwf	?___xxtofl+1
 11943     10EA  3000               	movlw	0
 11944     10EB  00A6               	movwf	?___xxtofl
 11945     10EC  2963               	goto	l1082
 11946     10ED                     l5090:
 11947     10ED  3096               	movlw	150
 11948     10EE  00AF               	movwf	___xxtofl@exp
 11949     10EF  28FB               	goto	l5094
 11950     10F0                     l5092:
 11951     10F0  3001               	movlw	1
 11952     10F1  00AA               	movwf	??___xxtofl
 11953     10F2  082A               	movf	??___xxtofl,w
 11954     10F3  07AF               	addwf	___xxtofl@exp,f
 11955     10F4  3001               	movlw	1
 11956     10F5                     u6245:
 11957     10F5  36B3               	lsrf	___xxtofl@arg+3,f
 11958     10F6  0CB2               	rrf	___xxtofl@arg+2,f
 11959     10F7  0CB1               	rrf	___xxtofl@arg+1,f
 11960     10F8  0CB0               	rrf	___xxtofl@arg,f
 11961     10F9  0B89               	decfsz	9,f
 11962     10FA  28F5               	goto	u6245
 11963     10FB                     l5094:
 11964     10FB  30FE               	movlw	254
 11965     10FC  0533               	andwf	___xxtofl@arg+3,w
 11966     10FD  1D03               	btfss	3,2
 11967     10FE  2900               	goto	u6251
 11968     10FF  2901               	goto	u6250
 11969     1100                     u6251:
 11970     1100  28F0               	goto	l5092
 11971     1101                     u6250:
 11972     1101  2915               	goto	l1086
 11973     1102                     l5096:
 11974     1102  3001               	movlw	1
 11975     1103  00AA               	movwf	??___xxtofl
 11976     1104  082A               	movf	??___xxtofl,w
 11977     1105  07AF               	addwf	___xxtofl@exp,f
 11978     1106                     l5098:
 11979     1106  3001               	movlw	1
 11980     1107  07B0               	addwf	___xxtofl@arg,f
 11981     1108  3000               	movlw	0
 11982     1109  3DB1               	addwfc	___xxtofl@arg+1,f
 11983     110A  3000               	movlw	0
 11984     110B  3DB2               	addwfc	___xxtofl@arg+2,f
 11985     110C  3000               	movlw	0
 11986     110D  3DB3               	addwfc	___xxtofl@arg+3,f
 11987     110E                     l5100:
 11988     110E  3001               	movlw	1
 11989     110F                     u6265:
 11990     110F  36B3               	lsrf	___xxtofl@arg+3,f
 11991     1110  0CB2               	rrf	___xxtofl@arg+2,f
 11992     1111  0CB1               	rrf	___xxtofl@arg+1,f
 11993     1112  0CB0               	rrf	___xxtofl@arg,f
 11994     1113  0B89               	decfsz	9,f
 11995     1114  290F               	goto	u6265
 11996     1115                     l1086:
 11997     1115  30FF               	movlw	255
 11998     1116  0533               	andwf	___xxtofl@arg+3,w
 11999     1117  1D03               	btfss	3,2
 12000     1118  291A               	goto	u6271
 12001     1119  291B               	goto	u6270
 12002     111A                     u6271:
 12003     111A  2902               	goto	l5096
 12004     111B                     u6270:
 12005     111B  2925               	goto	l5104
 12006     111C                     l5102:
 12007     111C  3001               	movlw	1
 12008     111D  02AF               	subwf	___xxtofl@exp,f
 12009     111E  3001               	movlw	1
 12010     111F                     u6285:
 12011     111F  35B0               	lslf	___xxtofl@arg,f
 12012     1120  0DB1               	rlf	___xxtofl@arg+1,f
 12013     1121  0DB2               	rlf	___xxtofl@arg+2,f
 12014     1122  0DB3               	rlf	___xxtofl@arg+3,f
 12015     1123  0B89               	decfsz	9,f
 12016     1124  291F               	goto	u6285
 12017     1125                     l5104:
 12018     1125  1BB2               	btfsc	___xxtofl@arg+2,7
 12019     1126  2928               	goto	u6291
 12020     1127  2929               	goto	u6290
 12021     1128                     u6291:
 12022     1128  292F               	goto	l1093
 12023     1129                     u6290:
 12024     1129                     l5106:
 12025     1129  3002               	movlw	2
 12026     112A  022F               	subwf	___xxtofl@exp,w
 12027     112B  1803               	skipnc
 12028     112C  292E               	goto	u6301
 12029     112D  292F               	goto	u6300
 12030     112E                     u6301:
 12031     112E  291C               	goto	l5102
 12032     112F                     u6300:
 12033     112F                     l1093:
 12034     112F  182F               	btfsc	___xxtofl@exp,0
 12035     1130  2932               	goto	u6311
 12036     1131  2933               	goto	u6310
 12037     1132                     u6311:
 12038     1132  293B               	goto	l1094
 12039     1133                     u6310:
 12040     1133                     l5108:
 12041     1133  30FF               	movlw	255
 12042     1134  05B0               	andwf	___xxtofl@arg,f
 12043     1135  30FF               	movlw	255
 12044     1136  05B1               	andwf	___xxtofl@arg+1,f
 12045     1137  307F               	movlw	127
 12046     1138  05B2               	andwf	___xxtofl@arg+2,f
 12047     1139  30FF               	movlw	255
 12048     113A  05B3               	andwf	___xxtofl@arg+3,f
 12049     113B                     l1094:
 12050     113B  1003               	clrc
 12051     113C  0CAF               	rrf	___xxtofl@exp,f
 12052     113D                     l5110:
 12053     113D  082F               	movf	___xxtofl@exp,w
 12054     113E  00AA               	movwf	??___xxtofl
 12055     113F  01AB               	clrf	??___xxtofl+1
 12056     1140  01AC               	clrf	??___xxtofl+2
 12057     1141  01AD               	clrf	??___xxtofl+3
 12058     1142  3018               	movlw	24
 12059     1143                     u6325:
 12060     1143  35AA               	lslf	??___xxtofl,f
 12061     1144  0DAB               	rlf	??___xxtofl+1,f
 12062     1145  0DAC               	rlf	??___xxtofl+2,f
 12063     1146  0DAD               	rlf	??___xxtofl+3,f
 12064     1147                     u6320:
 12065     1147  0B89               	decfsz	9,f
 12066     1148  2943               	goto	u6325
 12067     1149  082A               	movf	??___xxtofl,w
 12068     114A  04B0               	iorwf	___xxtofl@arg,f
 12069     114B  082B               	movf	??___xxtofl+1,w
 12070     114C  04B1               	iorwf	___xxtofl@arg+1,f
 12071     114D  082C               	movf	??___xxtofl+2,w
 12072     114E  04B2               	iorwf	___xxtofl@arg+2,f
 12073     114F  082D               	movf	??___xxtofl+3,w
 12074     1150  04B3               	iorwf	___xxtofl@arg+3,f
 12075     1151                     l5112:
 12076     1151  082E               	movf	___xxtofl@sign,w
 12077     1152  1903               	btfsc	3,2
 12078     1153  2955               	goto	u6331
 12079     1154  2956               	goto	u6330
 12080     1155                     u6331:
 12081     1155  295B               	goto	l5118
 12082     1156                     u6330:
 12083     1156                     l5114:
 12084     1156  1FA9               	btfss	___xxtofl@val+3,7
 12085     1157  2959               	goto	u6341
 12086     1158  295A               	goto	u6340
 12087     1159                     u6341:
 12088     1159  295B               	goto	l5118
 12089     115A                     u6340:
 12090     115A                     l5116:
 12091     115A  17B3               	bsf	___xxtofl@arg+3,7
 12092     115B                     l5118:
 12093     115B  0833               	movf	___xxtofl@arg+3,w
 12094     115C  00A9               	movwf	?___xxtofl+3
 12095     115D  0832               	movf	___xxtofl@arg+2,w
 12096     115E  00A8               	movwf	?___xxtofl+2
 12097     115F  0831               	movf	___xxtofl@arg+1,w
 12098     1160  00A7               	movwf	?___xxtofl+1
 12099     1161  0830               	movf	___xxtofl@arg,w
 12100     1162  00A6               	movwf	?___xxtofl
 12101     1163                     l1082:
 12102     1163  0008               	return
 12103     1164                     __end_of___xxtofl:
 12104                           
 12105                           	psect	text30
 12106     1A55                     __ptext30:	
 12107 ;; *************** function _Lcd_Write_String *****************
 12108 ;; Defined at:
 12109 ;;		line 104 in file "lcd.c"
 12110 ;; Parameters:    Size  Location     Type
 12111 ;;  a               2    5[BANK0 ] PTR const unsigned char 
 12112 ;;		 -> STR_18(15), STR_17(11), STR_16(6), STR_15(14), 
 12113 ;;		 -> STR_14(15), STR_13(12), STR_12(13), STR_11(9), 
 12114 ;;		 -> STR_10(7), STR_9(9), STR_8(7), STR_7(15), 
 12115 ;;		 -> STR_6(16), STR_5(17), STR_4(2), buffer(20), 
 12116 ;;		 -> STR_1(15), 
 12117 ;; Auto vars:     Size  Location     Type
 12118 ;;  i               2    8[BANK0 ] int 
 12119 ;; Return value:  Size  Location     Type
 12120 ;;                  1    wreg      void 
 12121 ;; Registers used:
 12122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12123 ;; Tracked objects:
 12124 ;;		On entry : 0/0
 12125 ;;		On exit  : 0/0
 12126 ;;		Unchanged: 0/0
 12127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12128 ;;      Params:         0       2       0       0       0       0       0       0
 12129 ;;      Locals:         0       2       0       0       0       0       0       0
 12130 ;;      Temps:          0       1       0       0       0       0       0       0
 12131 ;;      Totals:         0       5       0       0       0       0       0       0
 12132 ;;Total ram usage:        5 bytes
 12133 ;; Hardware stack levels used: 1
 12134 ;; Hardware stack levels required when called: 6
 12135 ;; This function calls:
 12136 ;;		_Lcd_Write_Char
 12137 ;; This function is called by:
 12138 ;;		_main
 12139 ;; This function uses a non-reentrant model
 12140 ;;
 12141                           
 12142     1A55                     _Lcd_Write_String:	
 12143                           ;psect for function _Lcd_Write_String
 12144                           
 12145     1A55                     l4940:	
 12146                           ;incstack = 0
 12147                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12148                           
 12149                           
 12150                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
 12151     1A55  0020               	movlb	0	; select bank0
 12152     1A56  01A8               	clrf	Lcd_Write_String@i
 12153     1A57  01A9               	clrf	Lcd_Write_String@i+1
 12154     1A58  2A68               	goto	l4946
 12155     1A59                     l4942:
 12156                           
 12157                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
 12158     1A59  0825               	movf	Lcd_Write_String@a,w
 12159     1A5A  0728               	addwf	Lcd_Write_String@i,w
 12160     1A5B  0084               	movwf	4
 12161     1A5C  0826               	movf	Lcd_Write_String@a+1,w
 12162     1A5D  3D29               	addwfc	Lcd_Write_String@i+1,w
 12163     1A5E  0085               	movwf	5
 12164     1A5F  0800               	movf	0,w	;code access
 12165     1A60  3187  27D1  319A   	fcall	_Lcd_Write_Char
 12166     1A63                     l4944:
 12167     1A63  3001               	movlw	1
 12168     1A64  0020               	movlb	0	; select bank0
 12169     1A65  07A8               	addwf	Lcd_Write_String@i,f
 12170     1A66  3000               	movlw	0
 12171     1A67  3DA9               	addwfc	Lcd_Write_String@i+1,f
 12172     1A68                     l4946:
 12173     1A68  0825               	movf	Lcd_Write_String@a,w
 12174     1A69  0728               	addwf	Lcd_Write_String@i,w
 12175     1A6A  0084               	movwf	4
 12176     1A6B  0826               	movf	Lcd_Write_String@a+1,w
 12177     1A6C  3D29               	addwfc	Lcd_Write_String@i+1,w
 12178     1A6D  0085               	movwf	5
 12179     1A6E  0012               	moviw fsr0++
 12180     1A6F  1D03               	btfss	3,2
 12181     1A70  2A72               	goto	u5921
 12182     1A71  2A73               	goto	u5920
 12183     1A72                     u5921:
 12184     1A72  2A59               	goto	l4942
 12185     1A73                     u5920:
 12186     1A73                     l453:
 12187     1A73  0008               	return
 12188     1A74                     __end_of_Lcd_Write_String:
 12189                           
 12190                           	psect	text31
 12191     07D1                     __ptext31:	
 12192 ;; *************** function _Lcd_Write_Char *****************
 12193 ;; Defined at:
 12194 ;;		line 88 in file "lcd.c"
 12195 ;; Parameters:    Size  Location     Type
 12196 ;;  a               1    wreg     unsigned char 
 12197 ;; Auto vars:     Size  Location     Type
 12198 ;;  a               1    4[BANK0 ] unsigned char 
 12199 ;;  y               1    3[BANK0 ] unsigned char 
 12200 ;;  temp            1    2[BANK0 ] unsigned char 
 12201 ;; Return value:  Size  Location     Type
 12202 ;;                  1    wreg      void 
 12203 ;; Registers used:
 12204 ;;		wreg, status,2, status,0, pclath, cstack
 12205 ;; Tracked objects:
 12206 ;;		On entry : 0/0
 12207 ;;		On exit  : 0/0
 12208 ;;		Unchanged: 0/0
 12209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12210 ;;      Params:         0       0       0       0       0       0       0       0
 12211 ;;      Locals:         0       3       0       0       0       0       0       0
 12212 ;;      Temps:          0       1       0       0       0       0       0       0
 12213 ;;      Totals:         0       4       0       0       0       0       0       0
 12214 ;;Total ram usage:        4 bytes
 12215 ;; Hardware stack levels used: 1
 12216 ;; Hardware stack levels required when called: 5
 12217 ;; This function calls:
 12218 ;;		_Lcd_Port
 12219 ;; This function is called by:
 12220 ;;		_Lcd_Write_String
 12221 ;; This function uses a non-reentrant model
 12222 ;;
 12223                           
 12224     07D1                     _Lcd_Write_Char:	
 12225                           ;psect for function _Lcd_Write_Char
 12226                           
 12227                           
 12228                           ;incstack = 0
 12229                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12230                           ;Lcd_Write_Char@a stored from wreg
 12231     07D1  0020               	movlb	0	; select bank0
 12232     07D2  00A4               	movwf	Lcd_Write_Char@a
 12233     07D3                     l4796:
 12234                           
 12235                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
 12236     07D3  0824               	movf	Lcd_Write_Char@a,w
 12237     07D4  390F               	andlw	15
 12238     07D5  00A2               	movwf	Lcd_Write_Char@temp
 12239                           
 12240                           ;lcd.c: 92:     y = a&0xF0;
 12241     07D6  0824               	movf	Lcd_Write_Char@a,w
 12242     07D7  39F0               	andlw	240
 12243     07D8  00A3               	movwf	Lcd_Write_Char@y
 12244     07D9                     l4798:
 12245                           
 12246                           ;lcd.c: 93:     LATCbits.LATC1 = 1;
 12247     07D9  0022               	movlb	2	; select bank2
 12248     07DA  148E               	bsf	14,1	;volatile
 12249     07DB                     l4800:
 12250                           
 12251                           ;lcd.c: 94:     Lcd_Port(y>>4);
 12252     07DB  0020               	movlb	0	; select bank0
 12253     07DC  0823               	movf	Lcd_Write_Char@y,w
 12254     07DD  00A1               	movwf	??_Lcd_Write_Char
 12255     07DE  3004               	movlw	4
 12256     07DF                     u5805:
 12257     07DF  36A1               	lsrf	??_Lcd_Write_Char,f
 12258     07E0  0B89               	decfsz	9,f
 12259     07E1  2FDF               	goto	u5805
 12260     07E2  0821               	movf	??_Lcd_Write_Char,w
 12261     07E3  3190  2004  3187   	fcall	_Lcd_Port
 12262     07E6                     l4802:
 12263                           
 12264                           ;lcd.c: 95:     LATCbits.LATC0 = 1;
 12265     07E6  0022               	movlb	2	; select bank2
 12266     07E7  140E               	bsf	14,0	;volatile
 12267     07E8                     l4804:
 12268                           
 12269                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 12270     07E8  300D               	movlw	13
 12271     07E9                     u6897:
 12272     07E9  0B89               	decfsz	9,f
 12273     07EA  2FE9               	goto	u6897
 12274     07EB  0000               	nop
 12275     07EC                     l4806:
 12276                           
 12277                           ;lcd.c: 97:     LATCbits.LATC0 = 0;
 12278     07EC  0022               	movlb	2	; select bank2
 12279     07ED  100E               	bcf	14,0	;volatile
 12280     07EE                     l4808:
 12281                           
 12282                           ;lcd.c: 98:     Lcd_Port(temp);
 12283     07EE  0020               	movlb	0	; select bank0
 12284     07EF  0822               	movf	Lcd_Write_Char@temp,w
 12285     07F0  3190  2004  3187   	fcall	_Lcd_Port
 12286     07F3                     l4810:
 12287                           
 12288                           ;lcd.c: 99:     LATCbits.LATC0 = 1;
 12289     07F3  0022               	movlb	2	; select bank2
 12290     07F4  140E               	bsf	14,0	;volatile
 12291     07F5                     l4812:
 12292                           
 12293                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 12294     07F5  300D               	movlw	13
 12295     07F6                     u6907:
 12296     07F6  0B89               	decfsz	9,f
 12297     07F7  2FF6               	goto	u6907
 12298     07F8  0000               	nop
 12299     07F9                     l4814:
 12300                           
 12301                           ;lcd.c: 101:     LATCbits.LATC0 = 0;
 12302     07F9  0022               	movlb	2	; select bank2
 12303     07FA  100E               	bcf	14,0	;volatile
 12304     07FB                     l447:
 12305     07FB  0008               	return
 12306     07FC                     __end_of_Lcd_Write_Char:
 12307                           
 12308                           	psect	text32
 12309     1F07                     __ptext32:	
 12310 ;; *************** function _Lcd_Set_Cursor *****************
 12311 ;; Defined at:
 12312 ;;		line 26 in file "lcd.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;  a               1    wreg     unsigned char 
 12315 ;;  b               1    3[BANK0 ] unsigned char 
 12316 ;; Auto vars:     Size  Location     Type
 12317 ;;  a               1    5[BANK0 ] unsigned char 
 12318 ;;  temp            1    8[BANK0 ] unsigned char 
 12319 ;;  y               1    7[BANK0 ] unsigned char 
 12320 ;;  z               1    6[BANK0 ] unsigned char 
 12321 ;; Return value:  Size  Location     Type
 12322 ;;                  1    wreg      void 
 12323 ;; Registers used:
 12324 ;;		wreg, status,2, status,0, pclath, cstack
 12325 ;; Tracked objects:
 12326 ;;		On entry : 0/0
 12327 ;;		On exit  : 0/0
 12328 ;;		Unchanged: 0/0
 12329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12330 ;;      Params:         0       1       0       0       0       0       0       0
 12331 ;;      Locals:         0       4       0       0       0       0       0       0
 12332 ;;      Temps:          0       1       0       0       0       0       0       0
 12333 ;;      Totals:         0       6       0       0       0       0       0       0
 12334 ;;Total ram usage:        6 bytes
 12335 ;; Hardware stack levels used: 1
 12336 ;; Hardware stack levels required when called: 6
 12337 ;; This function calls:
 12338 ;;		_Lcd_Cmd
 12339 ;; This function is called by:
 12340 ;;		_main
 12341 ;; This function uses a non-reentrant model
 12342 ;;
 12343                           
 12344     1F07                     _Lcd_Set_Cursor:	
 12345                           ;psect for function _Lcd_Set_Cursor
 12346                           
 12347                           
 12348                           ;incstack = 0
 12349                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 12350                           ;Lcd_Set_Cursor@a stored from wreg
 12351     1F07  0020               	movlb	0	; select bank0
 12352     1F08  00A5               	movwf	Lcd_Set_Cursor@a
 12353     1F09                     l4900:
 12354                           
 12355                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
 12356     1F09  0325               	decf	Lcd_Set_Cursor@a,w
 12357     1F0A  1D03               	btfss	3,2
 12358     1F0B  2F0D               	goto	u5841
 12359     1F0C  2F0E               	goto	u5840
 12360     1F0D                     u5841:
 12361     1F0D  2F26               	goto	l4910
 12362     1F0E                     u5840:
 12363     1F0E                     l4902:
 12364                           
 12365                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
 12366     1F0E  0823               	movf	Lcd_Set_Cursor@b,w
 12367     1F0F  3E7F               	addlw	127
 12368     1F10  00A8               	movwf	Lcd_Set_Cursor@temp
 12369                           
 12370                           ;lcd.c: 32:         z = temp>>4;
 12371     1F11  0828               	movf	Lcd_Set_Cursor@temp,w
 12372     1F12  00A4               	movwf	??_Lcd_Set_Cursor
 12373     1F13  3004               	movlw	4
 12374     1F14                     u5855:
 12375     1F14  36A4               	lsrf	??_Lcd_Set_Cursor,f
 12376     1F15  0B89               	decfsz	9,f
 12377     1F16  2F14               	goto	u5855
 12378     1F17  0824               	movf	??_Lcd_Set_Cursor,w
 12379     1F18  00A6               	movwf	Lcd_Set_Cursor@z
 12380     1F19                     l4904:
 12381                           
 12382                           ;lcd.c: 33:         y = temp & 0x0F;
 12383     1F19  0828               	movf	Lcd_Set_Cursor@temp,w
 12384     1F1A  390F               	andlw	15
 12385     1F1B  00A7               	movwf	Lcd_Set_Cursor@y
 12386     1F1C                     l4906:
 12387                           
 12388                           ;lcd.c: 34:         Lcd_Cmd(z);
 12389     1F1C  0826               	movf	Lcd_Set_Cursor@z,w
 12390     1F1D  3188  2000  319F   	fcall	_Lcd_Cmd
 12391     1F20                     l4908:
 12392                           
 12393                           ;lcd.c: 35:         Lcd_Cmd(y);
 12394     1F20  0020               	movlb	0	; select bank0
 12395     1F21  0827               	movf	Lcd_Set_Cursor@y,w
 12396     1F22  3188  2000  319F   	fcall	_Lcd_Cmd
 12397                           
 12398                           ;lcd.c: 36:     }
 12399     1F25  2F80               	goto	l441
 12400     1F26                     l4910:
 12401     1F26  3002               	movlw	2
 12402     1F27  0625               	xorwf	Lcd_Set_Cursor@a,w
 12403     1F28  1D03               	btfss	3,2
 12404     1F29  2F2B               	goto	u5861
 12405     1F2A  2F2C               	goto	u5860
 12406     1F2B                     u5861:
 12407     1F2B  2F44               	goto	l4920
 12408     1F2C                     u5860:
 12409     1F2C                     l4912:
 12410                           
 12411                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
 12412     1F2C  0823               	movf	Lcd_Set_Cursor@b,w
 12413     1F2D  3EBF               	addlw	191
 12414     1F2E  00A8               	movwf	Lcd_Set_Cursor@temp
 12415                           
 12416                           ;lcd.c: 40:         z = temp>>4;
 12417     1F2F  0828               	movf	Lcd_Set_Cursor@temp,w
 12418     1F30  00A4               	movwf	??_Lcd_Set_Cursor
 12419     1F31  3004               	movlw	4
 12420     1F32                     u5875:
 12421     1F32  36A4               	lsrf	??_Lcd_Set_Cursor,f
 12422     1F33  0B89               	decfsz	9,f
 12423     1F34  2F32               	goto	u5875
 12424     1F35  0824               	movf	??_Lcd_Set_Cursor,w
 12425     1F36  00A6               	movwf	Lcd_Set_Cursor@z
 12426     1F37                     l4914:
 12427                           
 12428                           ;lcd.c: 41:         y = temp & 0x0F;
 12429     1F37  0828               	movf	Lcd_Set_Cursor@temp,w
 12430     1F38  390F               	andlw	15
 12431     1F39  00A7               	movwf	Lcd_Set_Cursor@y
 12432     1F3A                     l4916:
 12433                           
 12434                           ;lcd.c: 42:         Lcd_Cmd(z);
 12435     1F3A  0826               	movf	Lcd_Set_Cursor@z,w
 12436     1F3B  3188  2000  319F   	fcall	_Lcd_Cmd
 12437     1F3E                     l4918:
 12438                           
 12439                           ;lcd.c: 43:         Lcd_Cmd(y);
 12440     1F3E  0020               	movlb	0	; select bank0
 12441     1F3F  0827               	movf	Lcd_Set_Cursor@y,w
 12442     1F40  3188  2000  319F   	fcall	_Lcd_Cmd
 12443                           
 12444                           ;lcd.c: 44:     }
 12445     1F43  2F80               	goto	l441
 12446     1F44                     l4920:
 12447     1F44  3003               	movlw	3
 12448     1F45  0625               	xorwf	Lcd_Set_Cursor@a,w
 12449     1F46  1D03               	btfss	3,2
 12450     1F47  2F49               	goto	u5881
 12451     1F48  2F4A               	goto	u5880
 12452     1F49                     u5881:
 12453     1F49  2F62               	goto	l4930
 12454     1F4A                     u5880:
 12455     1F4A                     l4922:
 12456                           
 12457                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
 12458     1F4A  0823               	movf	Lcd_Set_Cursor@b,w
 12459     1F4B  3E93               	addlw	147
 12460     1F4C  00A8               	movwf	Lcd_Set_Cursor@temp
 12461                           
 12462                           ;lcd.c: 48:         z = temp>>4;
 12463     1F4D  0828               	movf	Lcd_Set_Cursor@temp,w
 12464     1F4E  00A4               	movwf	??_Lcd_Set_Cursor
 12465     1F4F  3004               	movlw	4
 12466     1F50                     u5895:
 12467     1F50  36A4               	lsrf	??_Lcd_Set_Cursor,f
 12468     1F51  0B89               	decfsz	9,f
 12469     1F52  2F50               	goto	u5895
 12470     1F53  0824               	movf	??_Lcd_Set_Cursor,w
 12471     1F54  00A6               	movwf	Lcd_Set_Cursor@z
 12472     1F55                     l4924:
 12473                           
 12474                           ;lcd.c: 49:         y = temp & 0x0F;
 12475     1F55  0828               	movf	Lcd_Set_Cursor@temp,w
 12476     1F56  390F               	andlw	15
 12477     1F57  00A7               	movwf	Lcd_Set_Cursor@y
 12478     1F58                     l4926:
 12479                           
 12480                           ;lcd.c: 50:         Lcd_Cmd(z);
 12481     1F58  0826               	movf	Lcd_Set_Cursor@z,w
 12482     1F59  3188  2000  319F   	fcall	_Lcd_Cmd
 12483     1F5C                     l4928:
 12484                           
 12485                           ;lcd.c: 51:         Lcd_Cmd(y);
 12486     1F5C  0020               	movlb	0	; select bank0
 12487     1F5D  0827               	movf	Lcd_Set_Cursor@y,w
 12488     1F5E  3188  2000  319F   	fcall	_Lcd_Cmd
 12489                           
 12490                           ;lcd.c: 52:     }
 12491     1F61  2F80               	goto	l441
 12492     1F62                     l4930:
 12493     1F62  3004               	movlw	4
 12494     1F63  0625               	xorwf	Lcd_Set_Cursor@a,w
 12495     1F64  1D03               	btfss	3,2
 12496     1F65  2F67               	goto	u5901
 12497     1F66  2F68               	goto	u5900
 12498     1F67                     u5901:
 12499     1F67  2F80               	goto	l437
 12500     1F68                     u5900:
 12501     1F68                     l4932:
 12502                           
 12503                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
 12504     1F68  0823               	movf	Lcd_Set_Cursor@b,w
 12505     1F69  3ED3               	addlw	211
 12506     1F6A  00A8               	movwf	Lcd_Set_Cursor@temp
 12507                           
 12508                           ;lcd.c: 56:         z = temp>>4;
 12509     1F6B  0828               	movf	Lcd_Set_Cursor@temp,w
 12510     1F6C  00A4               	movwf	??_Lcd_Set_Cursor
 12511     1F6D  3004               	movlw	4
 12512     1F6E                     u5915:
 12513     1F6E  36A4               	lsrf	??_Lcd_Set_Cursor,f
 12514     1F6F  0B89               	decfsz	9,f
 12515     1F70  2F6E               	goto	u5915
 12516     1F71  0824               	movf	??_Lcd_Set_Cursor,w
 12517     1F72  00A6               	movwf	Lcd_Set_Cursor@z
 12518     1F73                     l4934:
 12519                           
 12520                           ;lcd.c: 57:         y = temp & 0x0F;
 12521     1F73  0828               	movf	Lcd_Set_Cursor@temp,w
 12522     1F74  390F               	andlw	15
 12523     1F75  00A7               	movwf	Lcd_Set_Cursor@y
 12524     1F76                     l4936:
 12525                           
 12526                           ;lcd.c: 58:         Lcd_Cmd(z);
 12527     1F76  0826               	movf	Lcd_Set_Cursor@z,w
 12528     1F77  3188  2000  319F   	fcall	_Lcd_Cmd
 12529     1F7A                     l4938:
 12530                           
 12531                           ;lcd.c: 59:         Lcd_Cmd(y);
 12532     1F7A  0020               	movlb	0	; select bank0
 12533     1F7B  0827               	movf	Lcd_Set_Cursor@y,w
 12534     1F7C  3188  2000  319F   	fcall	_Lcd_Cmd
 12535     1F7F  2F80               	goto	l441
 12536     1F80                     l437:
 12537     1F80                     l441:
 12538     1F80  0008               	return
 12539     1F81                     __end_of_Lcd_Set_Cursor:
 12540                           
 12541                           	psect	text33
 12542     1C62                     __ptext33:	
 12543 ;; *************** function _Lcd_Init *****************
 12544 ;; Defined at:
 12545 ;;		line 63 in file "lcd.c"
 12546 ;; Parameters:    Size  Location     Type
 12547 ;;		None
 12548 ;; Auto vars:     Size  Location     Type
 12549 ;;		None
 12550 ;; Return value:  Size  Location     Type
 12551 ;;                  1    wreg      void 
 12552 ;; Registers used:
 12553 ;;		wreg, status,2, status,0, pclath, cstack
 12554 ;; Tracked objects:
 12555 ;;		On entry : 0/0
 12556 ;;		On exit  : 0/0
 12557 ;;		Unchanged: 0/0
 12558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12559 ;;      Params:         0       0       0       0       0       0       0       0
 12560 ;;      Locals:         0       0       0       0       0       0       0       0
 12561 ;;      Temps:          0       1       0       0       0       0       0       0
 12562 ;;      Totals:         0       1       0       0       0       0       0       0
 12563 ;;Total ram usage:        1 bytes
 12564 ;; Hardware stack levels used: 1
 12565 ;; Hardware stack levels required when called: 7
 12566 ;; This function calls:
 12567 ;;		_Lcd_Clear
 12568 ;;		_Lcd_Cmd
 12569 ;;		_Lcd_Port
 12570 ;; This function is called by:
 12571 ;;		_main
 12572 ;; This function uses a non-reentrant model
 12573 ;;
 12574                           
 12575     1C62                     _Lcd_Init:	
 12576                           ;psect for function _Lcd_Init
 12577                           
 12578     1C62                     l4888:	
 12579                           ;incstack = 0
 12580                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 12581                           
 12582                           
 12583                           ;lcd.c: 65:  TRISCbits.TRISC1 = 0;
 12584     1C62  0021               	movlb	1	; select bank1
 12585     1C63  108E               	bcf	14,1	;volatile
 12586                           
 12587                           ;lcd.c: 66:  TRISCbits.TRISC0 = 0;
 12588     1C64  100E               	bcf	14,0	;volatile
 12589                           
 12590                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
 12591     1C65  120F               	bcf	15,4	;volatile
 12592                           
 12593                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
 12594     1C66  128F               	bcf	15,5	;volatile
 12595                           
 12596                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
 12597     1C67  130F               	bcf	15,6	;volatile
 12598                           
 12599                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
 12600     1C68  138F               	bcf	15,7	;volatile
 12601     1C69                     l4890:
 12602                           
 12603                           ;lcd.c: 71:     Lcd_Port(0x00);
 12604     1C69  3000               	movlw	0
 12605     1C6A  3190  2004  319C   	fcall	_Lcd_Port
 12606     1C6D                     l4892:
 12607                           
 12608                           ;lcd.c: 72:     _delay((unsigned long)((20)*(4000000/4000.0)));
 12609     1C6D  301A               	movlw	26
 12610     1C6E  0020               	movlb	0	; select bank0
 12611     1C6F  00A3               	movwf	??_Lcd_Init
 12612     1C70  30F8               	movlw	248
 12613     1C71                     u6917:
 12614     1C71  0B89               	decfsz	9,f
 12615     1C72  2C71               	goto	u6917
 12616     1C73  0BA3               	decfsz	??_Lcd_Init,f
 12617     1C74  2C71               	goto	u6917
 12618     1C75  0000               	nop
 12619     1C76                     l4894:
 12620                           
 12621                           ;lcd.c: 73:     Lcd_Cmd(0x03);
 12622     1C76  3003               	movlw	3
 12623     1C77  3188  2000  319C   	fcall	_Lcd_Cmd
 12624                           
 12625                           ;lcd.c: 74:     _delay((unsigned long)((5)*(4000000/4000.0)));
 12626     1C7A  3007               	movlw	7
 12627     1C7B  0020               	movlb	0	; select bank0
 12628     1C7C  00A3               	movwf	??_Lcd_Init
 12629     1C7D  307D               	movlw	125
 12630     1C7E                     u6927:
 12631     1C7E  0B89               	decfsz	9,f
 12632     1C7F  2C7E               	goto	u6927
 12633     1C80  0BA3               	decfsz	??_Lcd_Init,f
 12634     1C81  2C7E               	goto	u6927
 12635     1C82                     l4896:
 12636                           
 12637                           ;lcd.c: 75:     Lcd_Cmd(0x03);
 12638     1C82  3003               	movlw	3
 12639     1C83  3188  2000  319C   	fcall	_Lcd_Cmd
 12640     1C86                     l4898:
 12641                           
 12642                           ;lcd.c: 76:     _delay((unsigned long)((11)*(4000000/4000.0)));
 12643     1C86  300F               	movlw	15
 12644     1C87  0020               	movlb	0	; select bank0
 12645     1C88  00A3               	movwf	??_Lcd_Init
 12646     1C89  3047               	movlw	71
 12647     1C8A                     u6937:
 12648     1C8A  0B89               	decfsz	9,f
 12649     1C8B  2C8A               	goto	u6937
 12650     1C8C  0BA3               	decfsz	??_Lcd_Init,f
 12651     1C8D  2C8A               	goto	u6937
 12652     1C8E  3200               	nop2
 12653                           
 12654                           ;lcd.c: 77:     Lcd_Cmd(0x03);
 12655     1C8F  3003               	movlw	3
 12656     1C90  3188  2000  319C   	fcall	_Lcd_Cmd
 12657                           
 12658                           ;lcd.c: 78:     Lcd_Cmd(0x02);
 12659     1C93  3002               	movlw	2
 12660     1C94  3188  2000  319C   	fcall	_Lcd_Cmd
 12661                           
 12662                           ;lcd.c: 79:     Lcd_Cmd(0x02);
 12663     1C97  3002               	movlw	2
 12664     1C98  3188  2000  319C   	fcall	_Lcd_Cmd
 12665                           
 12666                           ;lcd.c: 80:     Lcd_Cmd(0x08);
 12667     1C9B  3008               	movlw	8
 12668     1C9C  3188  2000  319C   	fcall	_Lcd_Cmd
 12669                           
 12670                           ;lcd.c: 81:     Lcd_Cmd(0x00);
 12671     1C9F  3000               	movlw	0
 12672     1CA0  3188  2000  319C   	fcall	_Lcd_Cmd
 12673                           
 12674                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
 12675     1CA3  300C               	movlw	12
 12676     1CA4  3188  2000  319C   	fcall	_Lcd_Cmd
 12677                           
 12678                           ;lcd.c: 83:     Lcd_Cmd(0x00);
 12679     1CA7  3000               	movlw	0
 12680     1CA8  3188  2000  319C   	fcall	_Lcd_Cmd
 12681                           
 12682                           ;lcd.c: 84:     Lcd_Cmd(0x06);
 12683     1CAB  3006               	movlw	6
 12684     1CAC  3188  2000  319C   	fcall	_Lcd_Cmd
 12685                           
 12686                           ;lcd.c: 85:     Lcd_Clear();
 12687     1CAF  3199  216D  319C   	fcall	_Lcd_Clear
 12688     1CB2                     l444:
 12689     1CB2  0008               	return
 12690     1CB3                     __end_of_Lcd_Init:
 12691                           
 12692                           	psect	text34
 12693     196D                     __ptext34:	
 12694 ;; *************** function _Lcd_Clear *****************
 12695 ;; Defined at:
 12696 ;;		line 20 in file "lcd.c"
 12697 ;; Parameters:    Size  Location     Type
 12698 ;;		None
 12699 ;; Auto vars:     Size  Location     Type
 12700 ;;		None
 12701 ;; Return value:  Size  Location     Type
 12702 ;;                  1    wreg      void 
 12703 ;; Registers used:
 12704 ;;		wreg, status,2, status,0, pclath, cstack
 12705 ;; Tracked objects:
 12706 ;;		On entry : 0/0
 12707 ;;		On exit  : 0/0
 12708 ;;		Unchanged: 0/0
 12709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12710 ;;      Params:         0       0       0       0       0       0       0       0
 12711 ;;      Locals:         0       0       0       0       0       0       0       0
 12712 ;;      Temps:          0       0       0       0       0       0       0       0
 12713 ;;      Totals:         0       0       0       0       0       0       0       0
 12714 ;;Total ram usage:        0 bytes
 12715 ;; Hardware stack levels used: 1
 12716 ;; Hardware stack levels required when called: 6
 12717 ;; This function calls:
 12718 ;;		_Lcd_Cmd
 12719 ;; This function is called by:
 12720 ;;		_main
 12721 ;;		_Lcd_Init
 12722 ;; This function uses a non-reentrant model
 12723 ;;
 12724                           
 12725     196D                     _Lcd_Clear:	
 12726                           ;psect for function _Lcd_Clear
 12727                           
 12728     196D                     l4794:	
 12729                           ;incstack = 0
 12730                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 12731                           
 12732                           
 12733                           ;lcd.c: 22:     Lcd_Cmd(0);
 12734     196D  3000               	movlw	0
 12735     196E  3188  2000  3199   	fcall	_Lcd_Cmd
 12736                           
 12737                           ;lcd.c: 23:     Lcd_Cmd(1);
 12738     1971  3001               	movlw	1
 12739     1972  3188  2000  3199   	fcall	_Lcd_Cmd
 12740     1975                     l431:
 12741     1975  0008               	return
 12742     1976                     __end_of_Lcd_Clear:
 12743                           
 12744                           	psect	text35
 12745     0800                     __ptext35:	
 12746 ;; *************** function _Lcd_Cmd *****************
 12747 ;; Defined at:
 12748 ;;		line 11 in file "lcd.c"
 12749 ;; Parameters:    Size  Location     Type
 12750 ;;  a               1    wreg     unsigned char 
 12751 ;; Auto vars:     Size  Location     Type
 12752 ;;  a               1    2[BANK0 ] unsigned char 
 12753 ;; Return value:  Size  Location     Type
 12754 ;;                  1    wreg      void 
 12755 ;; Registers used:
 12756 ;;		wreg, status,2, status,0, pclath, cstack
 12757 ;; Tracked objects:
 12758 ;;		On entry : 0/0
 12759 ;;		On exit  : 0/0
 12760 ;;		Unchanged: 0/0
 12761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12762 ;;      Params:         0       0       0       0       0       0       0       0
 12763 ;;      Locals:         0       1       0       0       0       0       0       0
 12764 ;;      Temps:          0       1       0       0       0       0       0       0
 12765 ;;      Totals:         0       2       0       0       0       0       0       0
 12766 ;;Total ram usage:        2 bytes
 12767 ;; Hardware stack levels used: 1
 12768 ;; Hardware stack levels required when called: 5
 12769 ;; This function calls:
 12770 ;;		_Lcd_Port
 12771 ;; This function is called by:
 12772 ;;		_Lcd_Clear
 12773 ;;		_Lcd_Set_Cursor
 12774 ;;		_Lcd_Init
 12775 ;;		_Lcd_Shift_Right
 12776 ;;		_Lcd_Shift_Left
 12777 ;;		_Lcd_Blink
 12778 ;;		_Lcd_NoBlink
 12779 ;; This function uses a non-reentrant model
 12780 ;;
 12781                           
 12782     0800                     _Lcd_Cmd:	
 12783                           ;psect for function _Lcd_Cmd
 12784                           
 12785                           
 12786                           ;incstack = 0
 12787                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12788                           ;Lcd_Cmd@a stored from wreg
 12789     0800  0020               	movlb	0	; select bank0
 12790     0801  00A2               	movwf	Lcd_Cmd@a
 12791     0802                     l4670:
 12792                           
 12793                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATCbits.LATC1 = 0;
 12794     0802  0022               	movlb	2	; select bank2
 12795     0803  108E               	bcf	14,1	;volatile
 12796     0804                     l4672:
 12797                           
 12798                           ;lcd.c: 14:     Lcd_Port(a);
 12799     0804  0020               	movlb	0	; select bank0
 12800     0805  0822               	movf	Lcd_Cmd@a,w
 12801     0806  3190  2004  3188   	fcall	_Lcd_Port
 12802     0809                     l4674:
 12803                           
 12804                           ;lcd.c: 15:     LATCbits.LATC0 = 1;
 12805     0809  0022               	movlb	2	; select bank2
 12806     080A  140E               	bsf	14,0	;volatile
 12807     080B                     l4676:
 12808                           
 12809                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
 12810     080B  3006               	movlw	6
 12811     080C  0020               	movlb	0	; select bank0
 12812     080D  00A1               	movwf	??_Lcd_Cmd
 12813     080E  3030               	movlw	48
 12814     080F                     u6947:
 12815     080F  0B89               	decfsz	9,f
 12816     0810  280F               	goto	u6947
 12817     0811  0BA1               	decfsz	??_Lcd_Cmd,f
 12818     0812  280F               	goto	u6947
 12819     0813  0000               	nop
 12820     0814                     l4678:
 12821                           
 12822                           ;lcd.c: 17:     LATCbits.LATC0 = 0;
 12823     0814  0022               	movlb	2	; select bank2
 12824     0815  100E               	bcf	14,0	;volatile
 12825     0816                     l428:
 12826     0816  0008               	return
 12827     0817                     __end_of_Lcd_Cmd:
 12828                           
 12829                           	psect	text36
 12830     1004                     __ptext36:	
 12831 ;; *************** function _Lcd_Port *****************
 12832 ;; Defined at:
 12833 ;;		line 3 in file "lcd.c"
 12834 ;; Parameters:    Size  Location     Type
 12835 ;;  a               1    wreg     unsigned char 
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;  a               1    0[BANK0 ] unsigned char 
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  1    wreg      void 
 12840 ;; Registers used:
 12841 ;;		wreg
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12847 ;;      Params:         0       0       0       0       0       0       0       0
 12848 ;;      Locals:         0       1       0       0       0       0       0       0
 12849 ;;      Temps:          0       0       0       0       0       0       0       0
 12850 ;;      Totals:         0       1       0       0       0       0       0       0
 12851 ;;Total ram usage:        1 bytes
 12852 ;; Hardware stack levels used: 1
 12853 ;; Hardware stack levels required when called: 4
 12854 ;; This function calls:
 12855 ;;		Nothing
 12856 ;; This function is called by:
 12857 ;;		_Lcd_Cmd
 12858 ;;		_Lcd_Init
 12859 ;;		_Lcd_Write_Char
 12860 ;; This function uses a non-reentrant model
 12861 ;;
 12862                           
 12863     1004                     _Lcd_Port:	
 12864                           ;psect for function _Lcd_Port
 12865                           
 12866                           
 12867                           ;incstack = 0
 12868                           ; Regs used in _Lcd_Port: [wreg]
 12869                           ;Lcd_Port@a stored from wreg
 12870     1004  0020               	movlb	0	; select bank0
 12871     1005  00A0               	movwf	Lcd_Port@a
 12872     1006                     l4368:
 12873                           
 12874                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LATD4 = 1
      +                          ) : (LATDbits.LATD4 = 0);
 12875     1006  1C20               	btfss	Lcd_Port@a,0
 12876     1007  2809               	goto	u5171
 12877     1008  280A               	goto	u5170
 12878     1009                     u5171:
 12879     1009  280D               	goto	l410
 12880     100A                     u5170:
 12881     100A                     l4370:
 12882     100A  0022               	movlb	2	; select bank2
 12883     100B  160F               	bsf	15,4	;volatile
 12884     100C  280F               	goto	l4372
 12885     100D                     l410:
 12886     100D  0022               	movlb	2	; select bank2
 12887     100E  120F               	bcf	15,4	;volatile
 12888     100F                     l4372:
 12889                           
 12890                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LATD5 = 1) : (LATDbits.LATD5 = 0);
 12891     100F  0020               	movlb	0	; select bank0
 12892     1010  1CA0               	btfss	Lcd_Port@a,1
 12893     1011  2813               	goto	u5181
 12894     1012  2814               	goto	u5180
 12895     1013                     u5181:
 12896     1013  2817               	goto	l414
 12897     1014                     u5180:
 12898     1014                     l4374:
 12899     1014  0022               	movlb	2	; select bank2
 12900     1015  168F               	bsf	15,5	;volatile
 12901     1016  2819               	goto	l4376
 12902     1017                     l414:
 12903     1017  0022               	movlb	2	; select bank2
 12904     1018  128F               	bcf	15,5	;volatile
 12905     1019                     l4376:
 12906                           
 12907                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LATD6 = 1) : (LATDbits.LATD6 = 0);
 12908     1019  0020               	movlb	0	; select bank0
 12909     101A  1D20               	btfss	Lcd_Port@a,2
 12910     101B  281D               	goto	u5191
 12911     101C  281E               	goto	u5190
 12912     101D                     u5191:
 12913     101D  2821               	goto	l418
 12914     101E                     u5190:
 12915     101E                     l4378:
 12916     101E  0022               	movlb	2	; select bank2
 12917     101F  170F               	bsf	15,6	;volatile
 12918     1020  2823               	goto	l4380
 12919     1021                     l418:
 12920     1021  0022               	movlb	2	; select bank2
 12921     1022  130F               	bcf	15,6	;volatile
 12922     1023                     l4380:
 12923                           
 12924                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LATD7 = 1) : (LATDbits.LATD7 = 0);
 12925     1023  0020               	movlb	0	; select bank0
 12926     1024  1DA0               	btfss	Lcd_Port@a,3
 12927     1025  2827               	goto	u5201
 12928     1026  2828               	goto	u5200
 12929     1027                     u5201:
 12930     1027  282B               	goto	l422
 12931     1028                     u5200:
 12932     1028                     l4382:
 12933     1028  0022               	movlb	2	; select bank2
 12934     1029  178F               	bsf	15,7	;volatile
 12935     102A  282D               	goto	l425
 12936     102B                     l422:
 12937     102B  0022               	movlb	2	; select bank2
 12938     102C  138F               	bcf	15,7	;volatile
 12939     102D                     l425:
 12940     102D  0008               	return
 12941     102E                     __end_of_Lcd_Port:
 12942                           
 12943                           	psect	text37
 12944     07FC                     __ptext37:	
 12945 ;; *************** function _ADC_StartConversion *****************
 12946 ;; Defined at:
 12947 ;;		line 93 in file "mcc_generated_files/adc.c"
 12948 ;; Parameters:    Size  Location     Type
 12949 ;;		None
 12950 ;; Auto vars:     Size  Location     Type
 12951 ;;		None
 12952 ;; Return value:  Size  Location     Type
 12953 ;;                  1    wreg      void 
 12954 ;; Registers used:
 12955 ;;		None
 12956 ;; Tracked objects:
 12957 ;;		On entry : 0/0
 12958 ;;		On exit  : 0/0
 12959 ;;		Unchanged: 0/0
 12960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12961 ;;      Params:         0       0       0       0       0       0       0       0
 12962 ;;      Locals:         0       0       0       0       0       0       0       0
 12963 ;;      Temps:          0       0       0       0       0       0       0       0
 12964 ;;      Totals:         0       0       0       0       0       0       0       0
 12965 ;;Total ram usage:        0 bytes
 12966 ;; Hardware stack levels used: 1
 12967 ;; Hardware stack levels required when called: 4
 12968 ;; This function calls:
 12969 ;;		Nothing
 12970 ;; This function is called by:
 12971 ;;		_main
 12972 ;; This function uses a non-reentrant model
 12973 ;;
 12974                           
 12975     07FC                     _ADC_StartConversion:	
 12976                           ;psect for function _ADC_StartConversion
 12977                           
 12978     07FC                     l4878:	
 12979                           ;incstack = 0
 12980                           ; Regs used in _ADC_StartConversion: []
 12981                           
 12982                           
 12983                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
 12984     07FC  0021               	movlb	1	; select bank1
 12985     07FD  149D               	bsf	29,1	;volatile
 12986     07FE                     l23:
 12987     07FE  0008               	return
 12988     07FF                     __end_of_ADC_StartConversion:
 12989                           
 12990                           	psect	text38
 12991     1943                     __ptext38:	
 12992 ;; *************** function _ADC_IsConversionDone *****************
 12993 ;; Defined at:
 12994 ;;		line 100 in file "mcc_generated_files/adc.c"
 12995 ;; Parameters:    Size  Location     Type
 12996 ;;		None
 12997 ;; Auto vars:     Size  Location     Type
 12998 ;;		None
 12999 ;; Return value:  Size  Location     Type
 13000 ;;                  1    wreg      _Bool 
 13001 ;; Registers used:
 13002 ;;		wreg, status,0
 13003 ;; Tracked objects:
 13004 ;;		On entry : 0/0
 13005 ;;		On exit  : 0/0
 13006 ;;		Unchanged: 0/0
 13007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13008 ;;      Params:         0       0       0       0       0       0       0       0
 13009 ;;      Locals:         0       0       0       0       0       0       0       0
 13010 ;;      Temps:          0       0       0       0       0       0       0       0
 13011 ;;      Totals:         0       0       0       0       0       0       0       0
 13012 ;;Total ram usage:        0 bytes
 13013 ;; Hardware stack levels used: 1
 13014 ;; Hardware stack levels required when called: 4
 13015 ;; This function calls:
 13016 ;;		Nothing
 13017 ;; This function is called by:
 13018 ;;		_main
 13019 ;; This function uses a non-reentrant model
 13020 ;;
 13021                           
 13022     1943                     _ADC_IsConversionDone:	
 13023                           ;psect for function _ADC_IsConversionDone
 13024                           
 13025     1943                     l4880:	
 13026                           ;incstack = 0
 13027                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
 13028                           
 13029                           
 13030                           ;mcc_generated_files/adc.c: 103:    return ((_Bool)(!ADCON0bits.GO_nDONE));
 13031     1943  1003               	clrc
 13032     1944  0021               	movlb	1	; select bank1
 13033     1945  1C9D               	btfss	29,1	;volatile
 13034     1946  1403               	setc
 13035     1947  3000               	movlw	0
 13036     1948  3D09               	addwfc	9,w
 13037     1949                     l26:
 13038     1949  0008               	return
 13039     194A                     __end_of_ADC_IsConversionDone:
 13040                           
 13041                           	psect	text39
 13042     194A                     __ptext39:	
 13043 ;; *************** function _ADC_Initialize *****************
 13044 ;; Defined at:
 13045 ;;		line 67 in file "mcc_generated_files/adc.c"
 13046 ;; Parameters:    Size  Location     Type
 13047 ;;		None
 13048 ;; Auto vars:     Size  Location     Type
 13049 ;;		None
 13050 ;; Return value:  Size  Location     Type
 13051 ;;                  1    wreg      void 
 13052 ;; Registers used:
 13053 ;;		wreg, status,2
 13054 ;; Tracked objects:
 13055 ;;		On entry : 0/0
 13056 ;;		On exit  : 0/0
 13057 ;;		Unchanged: 0/0
 13058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13059 ;;      Params:         0       0       0       0       0       0       0       0
 13060 ;;      Locals:         0       0       0       0       0       0       0       0
 13061 ;;      Temps:          0       0       0       0       0       0       0       0
 13062 ;;      Totals:         0       0       0       0       0       0       0       0
 13063 ;;Total ram usage:        0 bytes
 13064 ;; Hardware stack levels used: 1
 13065 ;; Hardware stack levels required when called: 4
 13066 ;; This function calls:
 13067 ;;		Nothing
 13068 ;; This function is called by:
 13069 ;;		_main
 13070 ;;		_SYSTEM_Initialize
 13071 ;; This function uses a non-reentrant model
 13072 ;;
 13073                           
 13074     194A                     _ADC_Initialize:	
 13075                           ;psect for function _ADC_Initialize
 13076                           
 13077     194A                     l4872:	
 13078                           ;incstack = 0
 13079                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 13080                           
 13081                           
 13082                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xC0;
 13083     194A  30C0               	movlw	192
 13084     194B  0021               	movlb	1	; select bank1
 13085     194C  009E               	movwf	30	;volatile
 13086     194D                     l4874:
 13087                           
 13088                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
 13089     194D  019B               	clrf	27	;volatile
 13090     194E                     l4876:
 13091                           
 13092                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
 13093     194E  019C               	clrf	28	;volatile
 13094                           
 13095                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
 13096     194F  3001               	movlw	1
 13097     1950  009D               	movwf	29	;volatile
 13098     1951                     l17:
 13099     1951  0008               	return
 13100     1952                     __end_of_ADC_Initialize:
 13101                           
 13102                           	psect	text40
 13103     1964                     __ptext40:	
 13104 ;; *************** function _ADC_GetConversionResult *****************
 13105 ;; Defined at:
 13106 ;;		line 106 in file "mcc_generated_files/adc.c"
 13107 ;; Parameters:    Size  Location     Type
 13108 ;;		None
 13109 ;; Auto vars:     Size  Location     Type
 13110 ;;		None
 13111 ;; Return value:  Size  Location     Type
 13112 ;;                  2    0[BANK0 ] unsigned short 
 13113 ;; Registers used:
 13114 ;;		wreg
 13115 ;; Tracked objects:
 13116 ;;		On entry : 0/0
 13117 ;;		On exit  : 0/0
 13118 ;;		Unchanged: 0/0
 13119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13120 ;;      Params:         0       2       0       0       0       0       0       0
 13121 ;;      Locals:         0       0       0       0       0       0       0       0
 13122 ;;      Temps:          0       0       0       0       0       0       0       0
 13123 ;;      Totals:         0       2       0       0       0       0       0       0
 13124 ;;Total ram usage:        2 bytes
 13125 ;; Hardware stack levels used: 1
 13126 ;; Hardware stack levels required when called: 4
 13127 ;; This function calls:
 13128 ;;		Nothing
 13129 ;; This function is called by:
 13130 ;;		_main
 13131 ;; This function uses a non-reentrant model
 13132 ;;
 13133                           
 13134     1964                     _ADC_GetConversionResult:	
 13135                           ;psect for function _ADC_GetConversionResult
 13136                           
 13137     1964                     l4884:	
 13138                           ;incstack = 0
 13139                           ; Regs used in _ADC_GetConversionResult: [wreg]
 13140                           
 13141                           
 13142                           ;mcc_generated_files/adc.c: 109:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13143     1964  0021               	movlb	1	; select bank1
 13144     1965  081C               	movf	28,w	;volatile
 13145     1966  0020               	movlb	0	; select bank0
 13146     1967  00A1               	movwf	?_ADC_GetConversionResult+1
 13147     1968  0021               	movlb	1	; select bank1
 13148     1969  081B               	movf	27,w	;volatile
 13149     196A  0020               	movlb	0	; select bank0
 13150     196B  00A0               	movwf	?_ADC_GetConversionResult
 13151     196C                     l29:
 13152     196C  0008               	return
 13153     196D                     __end_of_ADC_GetConversionResult:
 13154                           
 13155                           	psect	intentry
 13156     0004                     __pintentry:	
 13157 ;; *************** function _IOC *****************
 13158 ;; Defined at:
 13159 ;;		line 184 in file "main.c"
 13160 ;; Parameters:    Size  Location     Type
 13161 ;;		None
 13162 ;; Auto vars:     Size  Location     Type
 13163 ;;		None
 13164 ;; Return value:  Size  Location     Type
 13165 ;;                  1    wreg      void 
 13166 ;; Registers used:
 13167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13168 ;; Tracked objects:
 13169 ;;		On entry : 0/0
 13170 ;;		On exit  : 0/0
 13171 ;;		Unchanged: 0/0
 13172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13173 ;;      Params:         0       0       0       0       0       0       0       0
 13174 ;;      Locals:         0       0       0       0       0       0       0       0
 13175 ;;      Temps:          2       0       0       0       0       0       0       0
 13176 ;;      Totals:         2       0       0       0       0       0       0       0
 13177 ;;Total ram usage:        2 bytes
 13178 ;; Hardware stack levels used: 1
 13179 ;; Hardware stack levels required when called: 3
 13180 ;; This function calls:
 13181 ;;		_Escribir_Clave
 13182 ;;		_Keypad_Get_Char
 13183 ;;		_Keypad_Init
 13184 ;;		_Leer_Clave
 13185 ;;		_strcmp
 13186 ;;		i1_Lcd_Clear
 13187 ;;		i1_Lcd_Set_Cursor
 13188 ;;		i1_Lcd_Write_Char
 13189 ;;		i1_Lcd_Write_String
 13190 ;; This function is called by:
 13191 ;;		Interrupt level 1
 13192 ;; This function uses a non-reentrant model
 13193 ;;
 13194                           
 13195     0004                     _IOC:
 13196                           
 13197                           ;incstack = 0
 13198     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13199                           
 13200                           ; Regs used in _IOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13201     0005  3180               	pagesel	$
 13202     0006                     i1l5314:
 13203                           
 13204                           ;main.c: 185:     Keypad_Init();
 13205     0006  3199  2152  3180   	fcall	_Keypad_Init
 13206     0009                     i1l5316:
 13207                           
 13208                           ;main.c: 186:     Lcd_Clear();
 13209     0009  3199  215B  3180   	fcall	i1_Lcd_Clear
 13210     000C                     i1l5318:
 13211                           
 13212                           ;main.c: 187:     LATAbits.LATA3 = 0;
 13213     000C  0022               	movlb	2	; select bank2
 13214     000D  118C               	bcf	12,3	;volatile
 13215                           
 13216                           ;main.c: 188:     _delay((unsigned long)((500)*(4000000/4000.0)));
 13217     000E  3003               	movlw	3
 13218     000F  00FB               	movwf	??_IOC+1
 13219     0010  308A               	movlw	138
 13220     0011  00FA               	movwf	??_IOC
 13221     0012  3056               	movlw	86
 13222     0013                     u695_27:
 13223     0013  0B89               	decfsz	9,f
 13224     0014  2813               	goto	u695_27
 13225     0015  0BFA               	decfsz	??_IOC,f
 13226     0016  2813               	goto	u695_27
 13227     0017  0BFB               	decfsz	??_IOC+1,f
 13228     0018  2813               	goto	u695_27
 13229                           
 13230                           ;main.c: 190:     while(IOCBF != 0) {
 13231     0019  2A4E               	goto	i1l5542
 13232     001A                     i1l5320:
 13233                           
 13234                           ;main.c: 193:                 Lcd_Set_Cursor(1,1);
 13235     001A  01F3               	clrf	i1Lcd_Set_Cursor@b
 13236     001B  0AF3               	incf	i1Lcd_Set_Cursor@b,f
 13237     001C  3001               	movlw	1
 13238     001D  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13239     0020                     i1l5322:
 13240                           
 13241                           ;main.c: 194:                 Lcd_Write_String("1:INGRESAR CLAVE");
 13242     0020  3000               	movlw	low (STR_5| (0+32768))
 13243     0021  00F5               	movwf	i1Lcd_Write_String@a
 13244     0022  3098               	movlw	high (STR_5| (0+32768))
 13245     0023  00F6               	movwf	i1Lcd_Write_String@a+1
 13246     0024  319A  221A  3180   	fcall	i1_Lcd_Write_String
 13247     0027                     i1l5324:
 13248                           
 13249                           ;main.c: 195:                 Lcd_Set_Cursor(2,1);
 13250     0027  01F3               	clrf	i1Lcd_Set_Cursor@b
 13251     0028  0AF3               	incf	i1Lcd_Set_Cursor@b,f
 13252     0029  3002               	movlw	2
 13253     002A  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13254                           
 13255                           ;main.c: 196:                 Lcd_Write_String("2:CAMBIAR CLAVE");
 13256     002D  3011               	movlw	low (STR_6| (0+32768))
 13257     002E  00F5               	movwf	i1Lcd_Write_String@a
 13258     002F  3098               	movlw	high (STR_6| (0+32768))
 13259     0030  00F6               	movwf	i1Lcd_Write_String@a+1
 13260     0031  319A  221A  3180   	fcall	i1_Lcd_Write_String
 13261     0034                     i1l5326:
 13262                           
 13263                           ;main.c: 198:                 tecla = Keypad_Get_Char();
 13264     0034  3191  2164  3180   	fcall	_Keypad_Get_Char
 13265     0037  00FD               	movwf	_tecla
 13266     0038                     i1l5328:
 13267                           
 13268                           ;main.c: 199:                 if(tecla != 0) {
 13269     0038  087D               	movf	_tecla,w
 13270     0039  1903               	btfsc	3,2
 13271     003A  283C               	goto	u675_21
 13272     003B  283D               	goto	u675_20
 13273     003C                     u675_21:
 13274     003C  2A4E               	goto	i1l5542
 13275     003D                     u675_20:
 13276     003D  2861               	goto	i1l5352
 13277     003E                     i1l302:	
 13278                           ;main.c: 201:                         case '1':
 13279                           
 13280                           
 13281                           ;main.c: 202:                             estado = 1;
 13282     003E  0022               	movlb	2	; select bank2
 13283     003F  01B3               	clrf	_estado^(0+256)
 13284     0040  0AB3               	incf	_estado^(0+256),f
 13285                           
 13286                           ;main.c: 203:                             break;
 13287     0041  2871               	goto	i1l5354
 13288     0042                     i1l5332:
 13289                           
 13290                           ;main.c: 205:                             estado = 2;
 13291     0042  3002               	movlw	2
 13292     0043  0022               	movlb	2	; select bank2
 13293     0044  00B3               	movwf	_estado^(0+256)
 13294                           
 13295                           ;main.c: 206:                             break;
 13296     0045  2871               	goto	i1l5354
 13297     0046                     i1l5334:
 13298                           
 13299                           ;main.c: 208:                             estado = 0;
 13300     0046  0022               	movlb	2	; select bank2
 13301     0047  01B3               	clrf	_estado^(0+256)
 13302     0048                     i1l5336:
 13303                           
 13304                           ;main.c: 211:                             WPUB = 0b11111110;
 13305     0048  30FE               	movlw	254
 13306     0049  0024               	movlb	4	; select bank4
 13307     004A  008D               	movwf	13	;volatile
 13308     004B                     i1l5338:
 13309                           
 13310                           ;main.c: 212:                             _delay((unsigned long)((200)*(4000000/4000.0))
      +                          );
 13311     004B  3002               	movlw	2
 13312     004C  00FB               	movwf	??_IOC+1
 13313     004D  3004               	movlw	4
 13314     004E  00FA               	movwf	??_IOC
 13315     004F  30BA               	movlw	186
 13316     0050                     u696_27:
 13317     0050  0B89               	decfsz	9,f
 13318     0051  2850               	goto	u696_27
 13319     0052  0BFA               	decfsz	??_IOC,f
 13320     0053  2850               	goto	u696_27
 13321     0054  0BFB               	decfsz	??_IOC+1,f
 13322     0055  2850               	goto	u696_27
 13323     0056  3200               	nop2
 13324     0057                     i1l5340:
 13325                           
 13326                           ;main.c: 214:                             LATBbits.LATB1 = 0;
 13327     0057  0022               	movlb	2	; select bank2
 13328     0058  108D               	bcf	13,1	;volatile
 13329     0059                     i1l5342:
 13330                           
 13331                           ;main.c: 215:                             LATBbits.LATB2 = 0;
 13332     0059  110D               	bcf	13,2	;volatile
 13333     005A                     i1l5344:
 13334                           
 13335                           ;main.c: 216:                             LATBbits.LATB3 = 0;
 13336     005A  118D               	bcf	13,3	;volatile
 13337     005B                     i1l5346:
 13338                           
 13339                           ;main.c: 218:                             WPUB = 0b00001110;
 13340     005B  300E               	movlw	14
 13341     005C  0024               	movlb	4	; select bank4
 13342     005D  008D               	movwf	13	;volatile
 13343     005E                     i1l5348:
 13344                           
 13345                           ;main.c: 219:                             IOCBF = 0;
 13346     005E  0027               	movlb	7	; select bank7
 13347     005F  0196               	clrf	22	;volatile
 13348                           
 13349                           ;main.c: 220:                             break;
 13350     0060  2871               	goto	i1l5354
 13351     0061                     i1l5352:
 13352     0061  087D               	movf	_tecla,w
 13353     0062  00FA               	movwf	??_IOC
 13354     0063  01FB               	clrf	??_IOC+1
 13355                           
 13356                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13357                           ; Switch size 1, requested type "simple"
 13358                           ; Number of cases is 1, Range of values is 0 to 0
 13359                           ; switch strategies available:
 13360                           ; Name         Instructions Cycles
 13361                           ; simple_byte            4     3 (average)
 13362                           ; direct_byte            8     6 (fixed)
 13363                           ; jumptable            260     6 (fixed)
 13364                           ;	Chosen strategy is simple_byte
 13365     0064  087B               	movf	??_IOC+1,w
 13366     0065  3A00               	xorlw	0	; case 0
 13367     0066  1903               	skipnz
 13368     0067  2869               	goto	i1l5754
 13369     0068  2846               	goto	i1l5334
 13370     0069                     i1l5754:
 13371                           
 13372                           ; Switch size 1, requested type "simple"
 13373                           ; Number of cases is 2, Range of values is 49 to 50
 13374                           ; switch strategies available:
 13375                           ; Name         Instructions Cycles
 13376                           ; simple_byte            7     4 (average)
 13377                           ; direct_byte           13     9 (fixed)
 13378                           ; jumptable            263     9 (fixed)
 13379                           ;	Chosen strategy is simple_byte
 13380     0069  087A               	movf	??_IOC,w
 13381     006A  3A31               	xorlw	49	; case 49
 13382     006B  1903               	skipnz
 13383     006C  283E               	goto	i1l302
 13384     006D  3A03               	xorlw	3	; case 50
 13385     006E  1903               	skipnz
 13386     006F  2842               	goto	i1l5332
 13387     0070  2846               	goto	i1l5334
 13388     0071                     i1l5354:
 13389                           
 13390                           ;main.c: 222:                     Lcd_Clear();
 13391     0071  3199  215B  3180   	fcall	i1_Lcd_Clear
 13392     0074  2A4E               	goto	i1l5542
 13393     0075                     i1l5356:
 13394                           
 13395                           ;main.c: 226:                 Lcd_Set_Cursor(1,2);
 13396     0075  3002               	movlw	2
 13397     0076  00F3               	movwf	i1Lcd_Set_Cursor@b
 13398     0077  3001               	movlw	1
 13399     0078  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13400     007B                     i1l5358:
 13401                           
 13402                           ;main.c: 227:                 Lcd_Write_String("INGRESAR CLAVE");
 13403     007B  3002               	movlw	low ((STR_5+2)| (0+32768))
 13404     007C  00F5               	movwf	i1Lcd_Write_String@a
 13405     007D  3098               	movlw	high ((STR_5+2)| (0+32768))
 13406     007E  00F6               	movwf	i1Lcd_Write_String@a+1
 13407     007F  319A  221A  3180   	fcall	i1_Lcd_Write_String
 13408                           
 13409                           ;main.c: 229:                 while(cont_key < 4)
 13410     0082  28A2               	goto	i1l5372
 13411     0083                     i1l5360:
 13412                           
 13413                           ;main.c: 230:                 {;main.c: 231:                     tecla = Keypad_Get_Char
      +                          ();
 13414     0083  3191  2164  3180   	fcall	_Keypad_Get_Char
 13415     0086  00FD               	movwf	_tecla
 13416     0087                     i1l5362:
 13417                           
 13418                           ;main.c: 232:                     if(tecla != 0)
 13419     0087  087D               	movf	_tecla,w
 13420     0088  1903               	btfsc	3,2
 13421     0089  288B               	goto	u676_21
 13422     008A  288C               	goto	u676_20
 13423     008B                     u676_21:
 13424     008B  28A2               	goto	i1l5372
 13425     008C                     u676_20:
 13426     008C                     i1l5364:
 13427                           
 13428                           ;main.c: 233:                     {;main.c: 234:                         clave[cont_key]
      +                           = tecla;
 13429     008C  087C               	movf	_cont_key,w
 13430     008D  3E39               	addlw	(low (_clave| (0+256)))& (0+255)
 13431     008E  0086               	movwf	6
 13432     008F  3001               	movlw	1	; select bank2/3
 13433     0090  0087               	movwf	7
 13434     0091  087D               	movf	_tecla,w
 13435     0092  0081               	movwf	1
 13436     0093                     i1l5366:
 13437                           
 13438                           ;main.c: 235:                         Lcd_Set_Cursor(2,7+cont_key);
 13439     0093  087C               	movf	_cont_key,w
 13440     0094  3E07               	addlw	7
 13441     0095  00F3               	movwf	i1Lcd_Set_Cursor@b
 13442     0096  3002               	movlw	2
 13443     0097  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13444     009A                     i1l5368:
 13445                           
 13446                           ;main.c: 236:                         Lcd_Write_Char('*');
 13447     009A  302A               	movlw	42
 13448     009B  319B  2363  3180   	fcall	i1_Lcd_Write_Char
 13449     009E                     i1l5370:
 13450                           
 13451                           ;main.c: 237:                         cont_key++;
 13452     009E  3001               	movlw	1
 13453     009F  00FA               	movwf	??_IOC
 13454     00A0  087A               	movf	??_IOC,w
 13455     00A1  07FC               	addwf	_cont_key,f
 13456     00A2                     i1l5372:
 13457                           
 13458                           ;main.c: 229:                 while(cont_key < 4)
 13459     00A2  3004               	movlw	4
 13460     00A3  027C               	subwf	_cont_key,w
 13461     00A4  1C03               	skipc
 13462     00A5  28A7               	goto	u677_21
 13463     00A6  28A8               	goto	u677_20
 13464     00A7                     u677_21:
 13465     00A7  2883               	goto	i1l5360
 13466     00A8                     u677_20:
 13467     00A8                     i1l5374:
 13468                           
 13469                           ;main.c: 244:                 WPUB = 0b11111110;
 13470     00A8  30FE               	movlw	254
 13471     00A9  0024               	movlb	4	; select bank4
 13472     00AA  008D               	movwf	13	;volatile
 13473                           
 13474                           ;main.c: 245:                 _delay((unsigned long)((200)*(4000000/4000.0)));
 13475     00AB  3002               	movlw	2
 13476     00AC  00FB               	movwf	??_IOC+1
 13477     00AD  3004               	movlw	4
 13478     00AE  00FA               	movwf	??_IOC
 13479     00AF  30BA               	movlw	186
 13480     00B0                     u697_27:
 13481     00B0  0B89               	decfsz	9,f
 13482     00B1  28B0               	goto	u697_27
 13483     00B2  0BFA               	decfsz	??_IOC,f
 13484     00B3  28B0               	goto	u697_27
 13485     00B4  0BFB               	decfsz	??_IOC+1,f
 13486     00B5  28B0               	goto	u697_27
 13487     00B6  3200               	nop2
 13488     00B7                     i1l5376:
 13489                           
 13490                           ;main.c: 246:                 Lcd_Clear();
 13491     00B7  3199  215B  3180   	fcall	i1_Lcd_Clear
 13492     00BA                     i1l5378:
 13493                           
 13494                           ;main.c: 247:                 Leer_Clave(clave_enter);
 13495     00BA  3034               	movlw	(low (_clave_enter| (0+256)))& (0+255)
 13496     00BB  3199  21CB  3180   	fcall	_Leer_Clave
 13497     00BE                     i1l5380:
 13498                           
 13499                           ;main.c: 248:                 LATAbits.LATA3 = 1;
 13500     00BE  0022               	movlb	2	; select bank2
 13501     00BF  158C               	bsf	12,3	;volatile
 13502     00C0                     i1l5382:
 13503                           
 13504                           ;main.c: 250:                 if(!strcmp(clave, clave_enter))
 13505     00C0  3034               	movlw	(low (_clave_enter| (0+256)))& (0+255)
 13506     00C1  00F0               	movwf	strcmp@r
 13507     00C2  3039               	movlw	(low (_clave| (0+256)))& (0+255)
 13508     00C3  319B  23B3  3180   	fcall	_strcmp
 13509     00C6  0870               	movf	?_strcmp,w
 13510     00C7  0471               	iorwf	?_strcmp+1,w
 13511     00C8  1D03               	btfss	3,2
 13512     00C9  28CB               	goto	u678_21
 13513     00CA  28CC               	goto	u678_20
 13514     00CB                     u678_21:
 13515     00CB  28F5               	goto	i1l5396
 13516     00CC                     u678_20:
 13517     00CC                     i1l5384:
 13518                           
 13519                           ;main.c: 251:                 {;main.c: 252:                     Lcd_Set_Cursor(1,6);
 13520     00CC  3006               	movlw	6
 13521     00CD  00F3               	movwf	i1Lcd_Set_Cursor@b
 13522     00CE  3001               	movlw	1
 13523     00CF  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13524     00D2                     i1l5386:
 13525                           
 13526                           ;main.c: 253:                     Lcd_Write_String("ACCESO");
 13527     00D2  3099               	movlw	low (STR_8| (0+32768))
 13528     00D3  00F5               	movwf	i1Lcd_Write_String@a
 13529     00D4  3098               	movlw	high (STR_8| (0+32768))
 13530     00D5  00F6               	movwf	i1Lcd_Write_String@a+1
 13531     00D6  319A  221A  3180   	fcall	i1_Lcd_Write_String
 13532     00D9                     i1l5388:
 13533                           
 13534                           ;main.c: 254:                     Lcd_Set_Cursor(2,5);
 13535     00D9  3005               	movlw	5
 13536     00DA  00F3               	movwf	i1Lcd_Set_Cursor@b
 13537     00DB  3002               	movlw	2
 13538     00DC  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13539                           
 13540                           ;main.c: 255:                     Lcd_Write_String("APROBADO");
 13541     00DF  3080               	movlw	low (STR_9| (0+32768))
 13542     00E0  00F5               	movwf	i1Lcd_Write_String@a
 13543     00E1  3098               	movlw	high (STR_9| (0+32768))
 13544     00E2  00F6               	movwf	i1Lcd_Write_String@a+1
 13545     00E3  319A  221A  3180   	fcall	i1_Lcd_Write_String
 13546     00E6                     i1l5390:
 13547                           
 13548                           ;main.c: 256:                     LATAbits.LATA2 = 0;
 13549     00E6  0022               	movlb	2	; select bank2
 13550     00E7  110C               	bcf	12,2	;volatile
 13551     00E8                     i1l5392:
 13552                           
 13553                           ;main.c: 257:                     LATCbits.LATC5 = 0;
 13554     00E8  128E               	bcf	14,5	;volatile
 13555     00E9                     i1l5394:
 13556                           
 13557                           ;main.c: 258:                     _delay((unsigned long)((10000)*(4000000/4000.0)));
 13558     00E9  3033               	movlw	51
 13559     00EA  00FB               	movwf	??_IOC+1
 13560     00EB  30BB               	movlw	187
 13561     00EC  00FA               	movwf	??_IOC
 13562     00ED  30E0               	movlw	224
 13563     00EE                     u698_27:
 13564     00EE  0B89               	decfsz	9,f
 13565     00EF  28EE               	goto	u698_27
 13566     00F0  0BFA               	decfsz	??_IOC,f
 13567     00F1  28EE               	goto	u698_27
 13568     00F2  0BFB               	decfsz	??_IOC+1,f
 13569     00F3  28EE               	goto	u698_27
 13570                           
 13571                           ;main.c: 259:                 }
 13572     00F4  291F               	goto	i1l5410
 13573     00F5                     i1l5396:
 13574                           
 13575                           ;main.c: 261:                 {;main.c: 262:                     Lcd_Set_Cursor(1,6);
 13576     00F5  3006               	movlw	6
 13577     00F6  00F3               	movwf	i1Lcd_Set_Cursor@b
 13578     00F7  3001               	movlw	1
 13579     00F8  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13580     00FB                     i1l5398:
 13581                           
 13582                           ;main.c: 263:                     Lcd_Write_String("ACCESO");
 13583     00FB  3099               	movlw	low (STR_8| (0+32768))
 13584     00FC  00F5               	movwf	i1Lcd_Write_String@a
 13585     00FD  3098               	movlw	high (STR_8| (0+32768))
 13586     00FE  00F6               	movwf	i1Lcd_Write_String@a+1
 13587     00FF  319A  221A  3180   	fcall	i1_Lcd_Write_String
 13588     0102                     i1l5400:
 13589                           
 13590                           ;main.c: 264:                     Lcd_Set_Cursor(2,5);
 13591     0102  3005               	movlw	5
 13592     0103  00F3               	movwf	i1Lcd_Set_Cursor@b
 13593     0104  3002               	movlw	2
 13594     0105  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13595                           
 13596                           ;main.c: 265:                     Lcd_Write_String("DENEGADO");
 13597     0108  3089               	movlw	low (STR_11| (0+32768))
 13598     0109  00F5               	movwf	i1Lcd_Write_String@a
 13599     010A  3098               	movlw	high (STR_11| (0+32768))
 13600     010B  00F6               	movwf	i1Lcd_Write_String@a+1
 13601     010C  319A  221A  3180   	fcall	i1_Lcd_Write_String
 13602     010F                     i1l5402:
 13603                           
 13604                           ;main.c: 266:                     LATAbits.LATA1 = 0;
 13605     010F  0022               	movlb	2	; select bank2
 13606     0110  108C               	bcf	12,1	;volatile
 13607     0111                     i1l5404:
 13608                           
 13609                           ;main.c: 267:                     LATCbits.LATC2 = 1;
 13610     0111  150E               	bsf	14,2	;volatile
 13611     0112                     i1l5406:
 13612                           
 13613                           ;main.c: 268:                     LATCbits.LATC5 = 1;
 13614     0112  168E               	bsf	14,5	;volatile
 13615     0113                     i1l5408:
 13616                           
 13617                           ;main.c: 269:                     _delay((unsigned long)((5000)*(4000000/4000.0)));
 13618     0113  301A               	movlw	26
 13619     0114  00FB               	movwf	??_IOC+1
 13620     0115  305E               	movlw	94
 13621     0116  00FA               	movwf	??_IOC
 13622     0117  306E               	movlw	110
 13623     0118                     u699_27:
 13624     0118  0B89               	decfsz	9,f
 13625     0119  2918               	goto	u699_27
 13626     011A  0BFA               	decfsz	??_IOC,f
 13627     011B  2918               	goto	u699_27
 13628     011C  0BFB               	decfsz	??_IOC+1,f
 13629     011D  2918               	goto	u699_27
 13630     011E  3200               	nop2
 13631     011F                     i1l5410:
 13632                           
 13633                           ;main.c: 271:                 cont_key = 0;
 13634     011F  01FC               	clrf	_cont_key
 13635     0120                     i1l5412:
 13636                           
 13637                           ;main.c: 272:                 estado = 0;
 13638     0120  0022               	movlb	2	; select bank2
 13639     0121  01B3               	clrf	_estado^(0+256)
 13640     0122                     i1l5414:
 13641                           
 13642                           ;main.c: 273:                 Lcd_Clear();
 13643     0122  3199  215B  3180   	fcall	i1_Lcd_Clear
 13644     0125                     i1l5416:
 13645                           
 13646                           ;main.c: 274:                 LATAbits.LATA2 = 1;
 13647     0125  0022               	movlb	2	; select bank2
 13648     0126  150C               	bsf	12,2	;volatile
 13649     0127                     i1l5418:
 13650                           
 13651                           ;main.c: 275:                 LATAbits.LATA1 = 1;
 13652     0127  148C               	bsf	12,1	;volatile
 13653     0128                     i1l5420:
 13654                           
 13655                           ;main.c: 276:                 LATCbits.LATC2 = 0;
 13656     0128  110E               	bcf	14,2	;volatile
 13657     0129                     i1l5422:
 13658                           
 13659                           ;main.c: 277:                 LATCbits.LATC5 = 1;
 13660     0129  168E               	bsf	14,5	;volatile
 13661     012A                     i1l5424:
 13662                           
 13663                           ;main.c: 279:                 LATBbits.LATB1 = 0;
 13664     012A  108D               	bcf	13,1	;volatile
 13665     012B                     i1l5426:
 13666                           
 13667                           ;main.c: 280:                 LATBbits.LATB2 = 0;
 13668     012B  110D               	bcf	13,2	;volatile
 13669     012C                     i1l5428:
 13670                           
 13671                           ;main.c: 281:                 LATBbits.LATB3 = 0;
 13672     012C  118D               	bcf	13,3	;volatile
 13673     012D                     i1l5430:
 13674                           
 13675                           ;main.c: 283:                 WPUB = 0b00001110;
 13676     012D  300E               	movlw	14
 13677     012E  0024               	movlb	4	; select bank4
 13678     012F  008D               	movwf	13	;volatile
 13679     0130                     i1l5432:
 13680                           
 13681                           ;main.c: 284:                 IOCBF = 0;
 13682     0130  0027               	movlb	7	; select bank7
 13683     0131  0196               	clrf	22	;volatile
 13684                           
 13685                           ;main.c: 285:                 break;
 13686     0132  2A4E               	goto	i1l5542
 13687     0133                     i1l5434:
 13688                           
 13689                           ;main.c: 287:                 Lcd_Set_Cursor(1,3);
 13690     0133  3003               	movlw	3
 13691     0134  00F3               	movwf	i1Lcd_Set_Cursor@b
 13692     0135  3001               	movlw	1
 13693     0136  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13694     0139                     i1l5436:
 13695                           
 13696                           ;main.c: 288:                 Lcd_Write_String("CLAVE ACTUAL");
 13697     0139  305C               	movlw	low (STR_12| (0+32768))
 13698     013A  00F5               	movwf	i1Lcd_Write_String@a
 13699     013B  3098               	movlw	high (STR_12| (0+32768))
 13700     013C  00F6               	movwf	i1Lcd_Write_String@a+1
 13701     013D  319A  221A  3180   	fcall	i1_Lcd_Write_String
 13702                           
 13703                           ;main.c: 290:                 while(cont_key < 4)
 13704     0140  2960               	goto	i1l5450
 13705     0141                     i1l5438:
 13706                           
 13707                           ;main.c: 291:                 {;main.c: 292:                     tecla = Keypad_Get_Char
      +                          ();
 13708     0141  3191  2164  3180   	fcall	_Keypad_Get_Char
 13709     0144  00FD               	movwf	_tecla
 13710     0145                     i1l5440:
 13711                           
 13712                           ;main.c: 293:                     if(tecla != 0)
 13713     0145  087D               	movf	_tecla,w
 13714     0146  1903               	btfsc	3,2
 13715     0147  2949               	goto	u679_21
 13716     0148  294A               	goto	u679_20
 13717     0149                     u679_21:
 13718     0149  2960               	goto	i1l5450
 13719     014A                     u679_20:
 13720     014A                     i1l5442:
 13721                           
 13722                           ;main.c: 294:                     {;main.c: 295:                         clave[cont_key]
      +                           = tecla;
 13723     014A  087C               	movf	_cont_key,w
 13724     014B  3E39               	addlw	(low (_clave| (0+256)))& (0+255)
 13725     014C  0086               	movwf	6
 13726     014D  3001               	movlw	1	; select bank2/3
 13727     014E  0087               	movwf	7
 13728     014F  087D               	movf	_tecla,w
 13729     0150  0081               	movwf	1
 13730     0151                     i1l5444:
 13731                           
 13732                           ;main.c: 296:                         Lcd_Set_Cursor(2,7+cont_key);
 13733     0151  087C               	movf	_cont_key,w
 13734     0152  3E07               	addlw	7
 13735     0153  00F3               	movwf	i1Lcd_Set_Cursor@b
 13736     0154  3002               	movlw	2
 13737     0155  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13738     0158                     i1l5446:
 13739                           
 13740                           ;main.c: 297:                         Lcd_Write_Char('*');
 13741     0158  302A               	movlw	42
 13742     0159  319B  2363  3180   	fcall	i1_Lcd_Write_Char
 13743     015C                     i1l5448:
 13744                           
 13745                           ;main.c: 298:                         cont_key++;
 13746     015C  3001               	movlw	1
 13747     015D  00FA               	movwf	??_IOC
 13748     015E  087A               	movf	??_IOC,w
 13749     015F  07FC               	addwf	_cont_key,f
 13750     0160                     i1l5450:
 13751                           
 13752                           ;main.c: 290:                 while(cont_key < 4)
 13753     0160  3004               	movlw	4
 13754     0161  027C               	subwf	_cont_key,w
 13755     0162  1C03               	skipc
 13756     0163  2965               	goto	u680_21
 13757     0164  2966               	goto	u680_20
 13758     0165                     u680_21:
 13759     0165  2941               	goto	i1l5438
 13760     0166                     u680_20:
 13761     0166                     i1l5452:
 13762                           
 13763                           ;main.c: 301:                 WPUB = 0b11111110;
 13764     0166  30FE               	movlw	254
 13765     0167  0024               	movlb	4	; select bank4
 13766     0168  008D               	movwf	13	;volatile
 13767                           
 13768                           ;main.c: 302:                 _delay((unsigned long)((200)*(4000000/4000.0)));
 13769     0169  3002               	movlw	2
 13770     016A  00FB               	movwf	??_IOC+1
 13771     016B  3004               	movlw	4
 13772     016C  00FA               	movwf	??_IOC
 13773     016D  30BA               	movlw	186
 13774     016E                     u700_27:
 13775     016E  0B89               	decfsz	9,f
 13776     016F  296E               	goto	u700_27
 13777     0170  0BFA               	decfsz	??_IOC,f
 13778     0171  296E               	goto	u700_27
 13779     0172  0BFB               	decfsz	??_IOC+1,f
 13780     0173  296E               	goto	u700_27
 13781     0174  3200               	nop2
 13782     0175                     i1l5454:
 13783                           
 13784                           ;main.c: 303:                 Lcd_Clear();
 13785     0175  3199  215B  3180   	fcall	i1_Lcd_Clear
 13786     0178                     i1l5456:
 13787                           
 13788                           ;main.c: 304:                 Leer_Clave(clave_enter);
 13789     0178  3034               	movlw	(low (_clave_enter| (0+256)))& (0+255)
 13790     0179  3199  21CB  3180   	fcall	_Leer_Clave
 13791     017C                     i1l5458:
 13792                           
 13793                           ;main.c: 306:                 if(!strcmp(clave, clave_enter))
 13794     017C  3034               	movlw	(low (_clave_enter| (0+256)))& (0+255)
 13795     017D  00F0               	movwf	strcmp@r
 13796     017E  3039               	movlw	(low (_clave| (0+256)))& (0+255)
 13797     017F  319B  23B3  3180   	fcall	_strcmp
 13798     0182  0870               	movf	?_strcmp,w
 13799     0183  0471               	iorwf	?_strcmp+1,w
 13800     0184  1D03               	btfss	3,2
 13801     0185  2987               	goto	u681_21
 13802     0186  2988               	goto	u681_20
 13803     0187                     u681_21:
 13804     0187  29FF               	goto	i1l5502
 13805     0188                     u681_20:
 13806     0188                     i1l5460:
 13807                           
 13808                           ;main.c: 307:                 {;main.c: 308:                     Lcd_Set_Cursor(1,3);
 13809     0188  3003               	movlw	3
 13810     0189  00F3               	movwf	i1Lcd_Set_Cursor@b
 13811     018A  3001               	movlw	1
 13812     018B  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13813     018E                     i1l5462:
 13814                           
 13815                           ;main.c: 309:                     Lcd_Write_String("CLAVE NUEVA");
 13816     018E  3069               	movlw	low (STR_13| (0+32768))
 13817     018F  00F5               	movwf	i1Lcd_Write_String@a
 13818     0190  3098               	movlw	high (STR_13| (0+32768))
 13819     0191  00F6               	movwf	i1Lcd_Write_String@a+1
 13820     0192  319A  221A  3180   	fcall	i1_Lcd_Write_String
 13821     0195                     i1l5464:
 13822                           
 13823                           ;main.c: 310:                     cont_key = 0;
 13824     0195  01FC               	clrf	_cont_key
 13825     0196                     i1l5466:
 13826                           
 13827                           ;main.c: 312:                     WPUB = 0b00001110;
 13828     0196  300E               	movlw	14
 13829     0197  0024               	movlb	4	; select bank4
 13830     0198  008D               	movwf	13	;volatile
 13831                           
 13832                           ;main.c: 314:                     while(cont_key < 4) {
 13833     0199  29B9               	goto	i1l5480
 13834     019A                     i1l5468:
 13835                           
 13836                           ;main.c: 315:                         tecla = Keypad_Get_Char();
 13837     019A  3191  2164  3180   	fcall	_Keypad_Get_Char
 13838     019D  00FD               	movwf	_tecla
 13839     019E                     i1l5470:
 13840                           
 13841                           ;main.c: 316:                         if (tecla != 0) {
 13842     019E  087D               	movf	_tecla,w
 13843     019F  1903               	btfsc	3,2
 13844     01A0  29A2               	goto	u682_21
 13845     01A1  29A3               	goto	u682_20
 13846     01A2                     u682_21:
 13847     01A2  29B9               	goto	i1l5480
 13848     01A3                     u682_20:
 13849     01A3                     i1l5472:
 13850                           
 13851                           ;main.c: 317:                             clave[cont_key] = tecla;
 13852     01A3  087C               	movf	_cont_key,w
 13853     01A4  3E39               	addlw	(low (_clave| (0+256)))& (0+255)
 13854     01A5  0086               	movwf	6
 13855     01A6  3001               	movlw	1	; select bank2/3
 13856     01A7  0087               	movwf	7
 13857     01A8  087D               	movf	_tecla,w
 13858     01A9  0081               	movwf	1
 13859     01AA                     i1l5474:
 13860                           
 13861                           ;main.c: 318:                             Lcd_Set_Cursor(2,7+cont_key);
 13862     01AA  087C               	movf	_cont_key,w
 13863     01AB  3E07               	addlw	7
 13864     01AC  00F3               	movwf	i1Lcd_Set_Cursor@b
 13865     01AD  3002               	movlw	2
 13866     01AE  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13867     01B1                     i1l5476:
 13868                           
 13869                           ;main.c: 319:                             Lcd_Write_Char('*');
 13870     01B1  302A               	movlw	42
 13871     01B2  319B  2363  3180   	fcall	i1_Lcd_Write_Char
 13872     01B5                     i1l5478:
 13873                           
 13874                           ;main.c: 320:                             cont_key++;
 13875     01B5  3001               	movlw	1
 13876     01B6  00FA               	movwf	??_IOC
 13877     01B7  087A               	movf	??_IOC,w
 13878     01B8  07FC               	addwf	_cont_key,f
 13879     01B9                     i1l5480:
 13880                           
 13881                           ;main.c: 314:                     while(cont_key < 4) {
 13882     01B9  3004               	movlw	4
 13883     01BA  027C               	subwf	_cont_key,w
 13884     01BB  1C03               	skipc
 13885     01BC  29BE               	goto	u683_21
 13886     01BD  29BF               	goto	u683_20
 13887     01BE                     u683_21:
 13888     01BE  299A               	goto	i1l5468
 13889     01BF                     u683_20:
 13890     01BF                     i1l5482:
 13891                           
 13892                           ;main.c: 323:                     WPUB = 0b11111110;
 13893     01BF  30FE               	movlw	254
 13894     01C0  0024               	movlb	4	; select bank4
 13895     01C1  008D               	movwf	13	;volatile
 13896                           
 13897                           ;main.c: 324:                     _delay((unsigned long)((200)*(4000000/4000.0)));
 13898     01C2  3002               	movlw	2
 13899     01C3  00FB               	movwf	??_IOC+1
 13900     01C4  3004               	movlw	4
 13901     01C5  00FA               	movwf	??_IOC
 13902     01C6  30BA               	movlw	186
 13903     01C7                     u701_27:
 13904     01C7  0B89               	decfsz	9,f
 13905     01C8  29C7               	goto	u701_27
 13906     01C9  0BFA               	decfsz	??_IOC,f
 13907     01CA  29C7               	goto	u701_27
 13908     01CB  0BFB               	decfsz	??_IOC+1,f
 13909     01CC  29C7               	goto	u701_27
 13910     01CD  3200               	nop2
 13911     01CE                     i1l5484:
 13912                           
 13913                           ;main.c: 325:                     Lcd_Clear();
 13914     01CE  3199  215B  3180   	fcall	i1_Lcd_Clear
 13915     01D1                     i1l5486:
 13916                           
 13917                           ;main.c: 326:                     Escribir_Clave(clave);
 13918     01D1  3039               	movlw	(low (_clave| (0+256)))& (0+255)
 13919     01D2  3199  21E4  3180   	fcall	_Escribir_Clave
 13920     01D5                     i1l5488:
 13921                           
 13922                           ;main.c: 328:                     Lcd_Set_Cursor(1,2);
 13923     01D5  3002               	movlw	2
 13924     01D6  00F3               	movwf	i1Lcd_Set_Cursor@b
 13925     01D7  3001               	movlw	1
 13926     01D8  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13927     01DB                     i1l5490:
 13928                           
 13929                           ;main.c: 329:                     Lcd_Write_String("CLAVE CAMBIADA");
 13930     01DB  3030               	movlw	low (STR_14| (0+32768))
 13931     01DC  00F5               	movwf	i1Lcd_Write_String@a
 13932     01DD  3098               	movlw	high (STR_14| (0+32768))
 13933     01DE  00F6               	movwf	i1Lcd_Write_String@a+1
 13934     01DF  319A  221A  3180   	fcall	i1_Lcd_Write_String
 13935     01E2                     i1l5492:
 13936                           
 13937                           ;main.c: 330:                     Lcd_Set_Cursor(2,2);
 13938     01E2  3002               	movlw	2
 13939     01E3  00F3               	movwf	i1Lcd_Set_Cursor@b
 13940     01E4  3002               	movlw	2
 13941     01E5  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13942     01E8                     i1l5494:
 13943                           
 13944                           ;main.c: 331:                     Lcd_Write_String("CORRECTAMENTE");
 13945     01E8  304E               	movlw	low (STR_15| (0+32768))
 13946     01E9  00F5               	movwf	i1Lcd_Write_String@a
 13947     01EA  3098               	movlw	high (STR_15| (0+32768))
 13948     01EB  00F6               	movwf	i1Lcd_Write_String@a+1
 13949     01EC  319A  221A  3180   	fcall	i1_Lcd_Write_String
 13950     01EF                     i1l5496:
 13951                           
 13952                           ;main.c: 332:                     LATAbits.LATA3 = 1;
 13953     01EF  0022               	movlb	2	; select bank2
 13954     01F0  158C               	bsf	12,3	;volatile
 13955     01F1                     i1l5498:
 13956                           
 13957                           ;main.c: 333:                     LATAbits.LATA2 = 0;
 13958     01F1  110C               	bcf	12,2	;volatile
 13959     01F2                     i1l5500:
 13960                           
 13961                           ;main.c: 334:                     _delay((unsigned long)((4000)*(4000000/4000.0)));
 13962     01F2  3015               	movlw	21
 13963     01F3  00FB               	movwf	??_IOC+1
 13964     01F4  304B               	movlw	75
 13965     01F5  00FA               	movwf	??_IOC
 13966     01F6  30BE               	movlw	190
 13967     01F7                     u702_27:
 13968     01F7  0B89               	decfsz	9,f
 13969     01F8  29F7               	goto	u702_27
 13970     01F9  0BFA               	decfsz	??_IOC,f
 13971     01FA  29F7               	goto	u702_27
 13972     01FB  0BFB               	decfsz	??_IOC+1,f
 13973     01FC  29F7               	goto	u702_27
 13974     01FD  3200               	nop2
 13975                           
 13976                           ;main.c: 335:                 } else {
 13977     01FE  2A28               	goto	i1l5516
 13978     01FF                     i1l5502:
 13979                           
 13980                           ;main.c: 336:                     Lcd_Set_Cursor(1,6);
 13981     01FF  3006               	movlw	6
 13982     0200  00F3               	movwf	i1Lcd_Set_Cursor@b
 13983     0201  3001               	movlw	1
 13984     0202  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13985     0205                     i1l5504:
 13986                           
 13987                           ;main.c: 337:                     Lcd_Write_String("CLAVE");
 13988     0205  301B               	movlw	low ((STR_6+10)| (0+32768))
 13989     0206  00F5               	movwf	i1Lcd_Write_String@a
 13990     0207  3098               	movlw	high ((STR_6+10)| (0+32768))
 13991     0208  00F6               	movwf	i1Lcd_Write_String@a+1
 13992     0209  319A  221A  3180   	fcall	i1_Lcd_Write_String
 13993     020C                     i1l5506:
 13994                           
 13995                           ;main.c: 338:                     Lcd_Set_Cursor(2,4);
 13996     020C  3004               	movlw	4
 13997     020D  00F3               	movwf	i1Lcd_Set_Cursor@b
 13998     020E  3002               	movlw	2
 13999     020F  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 14000                           
 14001                           ;main.c: 339:                     Lcd_Write_String("INCORRECTA");
 14002     0212  3075               	movlw	low (STR_17| (0+32768))
 14003     0213  00F5               	movwf	i1Lcd_Write_String@a
 14004     0214  3098               	movlw	high (STR_17| (0+32768))
 14005     0215  00F6               	movwf	i1Lcd_Write_String@a+1
 14006     0216  319A  221A  3180   	fcall	i1_Lcd_Write_String
 14007     0219                     i1l5508:
 14008                           
 14009                           ;main.c: 340:                     LATAbits.LATA3 = 1;
 14010     0219  0022               	movlb	2	; select bank2
 14011     021A  158C               	bsf	12,3	;volatile
 14012     021B                     i1l5510:
 14013                           
 14014                           ;main.c: 341:                     LATCbits.LATC2 = 1;
 14015     021B  150E               	bsf	14,2	;volatile
 14016     021C                     i1l5512:
 14017                           
 14018                           ;main.c: 342:                     LATAbits.LATA1 = 0;
 14019     021C  108C               	bcf	12,1	;volatile
 14020     021D                     i1l5514:
 14021                           
 14022                           ;main.c: 343:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
 14023     021D  3010               	movlw	16
 14024     021E  00FB               	movwf	??_IOC+1
 14025     021F  3039               	movlw	57
 14026     0220  00FA               	movwf	??_IOC
 14027     0221  300E               	movlw	14
 14028     0222                     u703_27:
 14029     0222  0B89               	decfsz	9,f
 14030     0223  2A22               	goto	u703_27
 14031     0224  0BFA               	decfsz	??_IOC,f
 14032     0225  2A22               	goto	u703_27
 14033     0226  0BFB               	decfsz	??_IOC+1,f
 14034     0227  2A22               	goto	u703_27
 14035     0228                     i1l5516:
 14036                           
 14037                           ;main.c: 345:                 cont_key = 0;
 14038     0228  01FC               	clrf	_cont_key
 14039     0229                     i1l5518:
 14040                           
 14041                           ;main.c: 346:                 estado = 0;
 14042     0229  0022               	movlb	2	; select bank2
 14043     022A  01B3               	clrf	_estado^(0+256)
 14044     022B                     i1l5520:
 14045                           
 14046                           ;main.c: 347:                 Lcd_Clear();
 14047     022B  3199  215B  3180   	fcall	i1_Lcd_Clear
 14048     022E                     i1l5522:
 14049                           
 14050                           ;main.c: 349:                 LATBbits.LATB1 = 0;
 14051     022E  0022               	movlb	2	; select bank2
 14052     022F  108D               	bcf	13,1	;volatile
 14053     0230                     i1l5524:
 14054                           
 14055                           ;main.c: 350:                 LATBbits.LATB2 = 0;
 14056     0230  110D               	bcf	13,2	;volatile
 14057     0231                     i1l5526:
 14058                           
 14059                           ;main.c: 351:                 LATBbits.LATB3 = 0;
 14060     0231  118D               	bcf	13,3	;volatile
 14061     0232                     i1l5528:
 14062                           
 14063                           ;main.c: 353:                 WPUB = 0b00001110;
 14064     0232  300E               	movlw	14
 14065     0233  0024               	movlb	4	; select bank4
 14066     0234  008D               	movwf	13	;volatile
 14067     0235                     i1l5530:
 14068                           
 14069                           ;main.c: 354:                 LATAbits.LATA1 = 1;
 14070     0235  0022               	movlb	2	; select bank2
 14071     0236  148C               	bsf	12,1	;volatile
 14072     0237                     i1l5532:
 14073                           
 14074                           ;main.c: 355:                 LATAbits.LATA2 = 1;
 14075     0237  150C               	bsf	12,2	;volatile
 14076     0238                     i1l5534:
 14077                           
 14078                           ;main.c: 356:                 LATCbits.LATC2 = 0;
 14079     0238  110E               	bcf	14,2	;volatile
 14080     0239  2930               	goto	i1l5432
 14081     023A                     i1l5540:
 14082     023A  0022               	movlb	2	; select bank2
 14083     023B  0833               	movf	_estado^(0+256),w
 14084     023C  00FA               	movwf	??_IOC
 14085     023D  01FB               	clrf	??_IOC+1
 14086                           
 14087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14088                           ; Switch size 1, requested type "simple"
 14089                           ; Number of cases is 1, Range of values is 0 to 0
 14090                           ; switch strategies available:
 14091                           ; Name         Instructions Cycles
 14092                           ; simple_byte            4     3 (average)
 14093                           ; direct_byte            8     6 (fixed)
 14094                           ; jumptable            260     6 (fixed)
 14095                           ;	Chosen strategy is simple_byte
 14096     023E  087B               	movf	??_IOC+1,w
 14097     023F  3A00               	xorlw	0	; case 0
 14098     0240  1903               	skipnz
 14099     0241  2A43               	goto	i1l5756
 14100     0242  2A4E               	goto	i1l5542
 14101     0243                     i1l5756:
 14102                           
 14103                           ; Switch size 1, requested type "simple"
 14104                           ; Number of cases is 3, Range of values is 0 to 2
 14105                           ; switch strategies available:
 14106                           ; Name         Instructions Cycles
 14107                           ; simple_byte           10     6 (average)
 14108                           ; direct_byte           12     6 (fixed)
 14109                           ; jumptable            260     6 (fixed)
 14110                           ;	Chosen strategy is simple_byte
 14111     0243  087A               	movf	??_IOC,w
 14112     0244  3A00               	xorlw	0	; case 0
 14113     0245  1903               	skipnz
 14114     0246  281A               	goto	i1l5320
 14115     0247  3A01               	xorlw	1	; case 1
 14116     0248  1903               	skipnz
 14117     0249  2875               	goto	i1l5356
 14118     024A  3A03               	xorlw	3	; case 2
 14119     024B  1903               	skipnz
 14120     024C  2933               	goto	i1l5434
 14121     024D  2A4E               	goto	i1l5542
 14122     024E                     i1l5542:
 14123                           
 14124                           ;main.c: 190:     while(IOCBF != 0) {
 14125     024E  0027               	movlb	7	; select bank7
 14126     024F  0816               	movf	22,w	;volatile
 14127     0250  1D03               	btfss	3,2
 14128     0251  2A53               	goto	u684_21
 14129     0252  2A54               	goto	u684_20
 14130     0253                     u684_21:
 14131     0253  2A3A               	goto	i1l5540
 14132     0254                     u684_20:
 14133     0254                     i1l325:
 14134                           
 14135                           ;main.c: 361:     LATAbits.LATA3 = 1;
 14136     0254  0022               	movlb	2	; select bank2
 14137     0255  158C               	bsf	12,3	;volatile
 14138     0256                     i1l5544:
 14139                           
 14140                           ;main.c: 362:     Lcd_Clear();
 14141     0256  3199  215B  3180   	fcall	i1_Lcd_Clear
 14142                           
 14143                           ;main.c: 364:     Lcd_Set_Cursor(1,2);
 14144     0259  3002               	movlw	2
 14145     025A  00F3               	movwf	i1Lcd_Set_Cursor@b
 14146     025B  3001               	movlw	1
 14147     025C  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 14148     025F                     i1l5546:
 14149                           
 14150                           ;main.c: 365:     Lcd_Write_String("ControlTech CA");
 14151     025F  3021               	movlw	low (STR_1| (0+32768))
 14152     0260  00F5               	movwf	i1Lcd_Write_String@a
 14153     0261  3098               	movlw	high (STR_1| (0+32768))
 14154     0262  00F6               	movwf	i1Lcd_Write_String@a+1
 14155     0263  319A  221A  3180   	fcall	i1_Lcd_Write_String
 14156     0266                     i1l5548:
 14157                           
 14158                           ;main.c: 366:     INTCONbits.IOCIF = 0;
 14159     0266  100B               	bcf	11,0	;volatile
 14160     0267                     i1l326:
 14161     0267  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14162     0268  0009               	retfie
 14163     0269                     __end_of_IOC:
 14164                           
 14165                           	psect	text42
 14166     1A1A                     __ptext42:	
 14167 ;; *************** function i1_Lcd_Write_String *****************
 14168 ;; Defined at:
 14169 ;;		line 104 in file "lcd.c"
 14170 ;; Parameters:    Size  Location     Type
 14171 ;;  a               2    5[COMMON] PTR const unsigned char 
 14172 ;;		 -> STR_18(15), STR_17(11), STR_16(6), STR_15(14), 
 14173 ;;		 -> STR_14(15), STR_13(12), STR_12(13), STR_11(9), 
 14174 ;;		 -> STR_10(7), STR_9(9), STR_8(7), STR_7(15), 
 14175 ;;		 -> STR_6(16), STR_5(17), STR_4(2), buffer(20), 
 14176 ;;		 -> STR_1(15), 
 14177 ;; Auto vars:     Size  Location     Type
 14178 ;;  i               2    8[COMMON] int 
 14179 ;; Return value:  Size  Location     Type
 14180 ;;                  1    wreg      void 
 14181 ;; Registers used:
 14182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14183 ;; Tracked objects:
 14184 ;;		On entry : 0/0
 14185 ;;		On exit  : 0/0
 14186 ;;		Unchanged: 0/0
 14187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14188 ;;      Params:         2       0       0       0       0       0       0       0
 14189 ;;      Locals:         2       0       0       0       0       0       0       0
 14190 ;;      Temps:          1       0       0       0       0       0       0       0
 14191 ;;      Totals:         5       0       0       0       0       0       0       0
 14192 ;;Total ram usage:        5 bytes
 14193 ;; Hardware stack levels used: 1
 14194 ;; Hardware stack levels required when called: 2
 14195 ;; This function calls:
 14196 ;;		i1_Lcd_Write_Char
 14197 ;; This function is called by:
 14198 ;;		_IOC
 14199 ;; This function uses a non-reentrant model
 14200 ;;
 14201                           
 14202     1A1A                     i1_Lcd_Write_String:	
 14203                           ;psect for function i1_Lcd_Write_String
 14204                           
 14205     1A1A                     i1l5164:	
 14206                           ;incstack = 0
 14207                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14208                           
 14209                           
 14210                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
 14211     1A1A  01F8               	clrf	i1Lcd_Write_String@i
 14212     1A1B  01F9               	clrf	i1Lcd_Write_String@i+1
 14213     1A1C  2A2B               	goto	i1l5170
 14214     1A1D                     i1l5166:
 14215                           
 14216                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
 14217     1A1D  0875               	movf	i1Lcd_Write_String@a,w
 14218     1A1E  0778               	addwf	i1Lcd_Write_String@i,w
 14219     1A1F  0084               	movwf	4
 14220     1A20  0876               	movf	i1Lcd_Write_String@a+1,w
 14221     1A21  3D79               	addwfc	i1Lcd_Write_String@i+1,w
 14222     1A22  0085               	movwf	5
 14223     1A23  0800               	movf	0,w	;code access
 14224     1A24  319B  2363  319A   	fcall	i1_Lcd_Write_Char
 14225     1A27                     i1l5168:
 14226     1A27  3001               	movlw	1
 14227     1A28  07F8               	addwf	i1Lcd_Write_String@i,f
 14228     1A29  3000               	movlw	0
 14229     1A2A  3DF9               	addwfc	i1Lcd_Write_String@i+1,f
 14230     1A2B                     i1l5170:
 14231     1A2B  0875               	movf	i1Lcd_Write_String@a,w
 14232     1A2C  0778               	addwf	i1Lcd_Write_String@i,w
 14233     1A2D  0084               	movwf	4
 14234     1A2E  0876               	movf	i1Lcd_Write_String@a+1,w
 14235     1A2F  3D79               	addwfc	i1Lcd_Write_String@i+1,w
 14236     1A30  0085               	movwf	5
 14237     1A31  0012               	moviw fsr0++
 14238     1A32  1D03               	btfss	3,2
 14239     1A33  2A35               	goto	u643_21
 14240     1A34  2A36               	goto	u643_20
 14241     1A35                     u643_21:
 14242     1A35  2A1D               	goto	i1l5166
 14243     1A36                     u643_20:
 14244     1A36                     i1l453:
 14245     1A36  0008               	return
 14246     1A37                     __end_ofi1_Lcd_Write_String:
 14247                           
 14248                           	psect	text43
 14249     1B63                     __ptext43:	
 14250 ;; *************** function i1_Lcd_Write_Char *****************
 14251 ;; Defined at:
 14252 ;;		line 88 in file "lcd.c"
 14253 ;; Parameters:    Size  Location     Type
 14254 ;;  a               1    wreg     unsigned char 
 14255 ;; Auto vars:     Size  Location     Type
 14256 ;;  a               1    4[COMMON] unsigned char 
 14257 ;;  y               1    3[COMMON] unsigned char 
 14258 ;;  temp            1    2[COMMON] unsigned char 
 14259 ;; Return value:  Size  Location     Type
 14260 ;;                  1    wreg      void 
 14261 ;; Registers used:
 14262 ;;		wreg, status,2, status,0, pclath, cstack
 14263 ;; Tracked objects:
 14264 ;;		On entry : 0/0
 14265 ;;		On exit  : 0/0
 14266 ;;		Unchanged: 0/0
 14267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14268 ;;      Params:         0       0       0       0       0       0       0       0
 14269 ;;      Locals:         3       0       0       0       0       0       0       0
 14270 ;;      Temps:          1       0       0       0       0       0       0       0
 14271 ;;      Totals:         4       0       0       0       0       0       0       0
 14272 ;;Total ram usage:        4 bytes
 14273 ;; Hardware stack levels used: 1
 14274 ;; Hardware stack levels required when called: 1
 14275 ;; This function calls:
 14276 ;;		i1_Lcd_Port
 14277 ;; This function is called by:
 14278 ;;		_IOC
 14279 ;;		i1_Lcd_Write_String
 14280 ;; This function uses a non-reentrant model
 14281 ;;
 14282                           
 14283     1B63                     i1_Lcd_Write_Char:	
 14284                           ;psect for function i1_Lcd_Write_Char
 14285                           
 14286                           
 14287                           ;incstack = 0
 14288                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 14289                           ;i1Lcd_Write_Char@a stored from wreg
 14290     1B63  00F4               	movwf	i1Lcd_Write_Char@a
 14291     1B64                     i1l4852:
 14292                           
 14293                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
 14294     1B64  0874               	movf	i1Lcd_Write_Char@a,w
 14295     1B65  390F               	andlw	15
 14296     1B66  00F2               	movwf	i1Lcd_Write_Char@temp
 14297                           
 14298                           ;lcd.c: 92:     y = a&0xF0;
 14299     1B67  0874               	movf	i1Lcd_Write_Char@a,w
 14300     1B68  39F0               	andlw	240
 14301     1B69  00F3               	movwf	i1Lcd_Write_Char@y
 14302     1B6A                     i1l4854:
 14303                           
 14304                           ;lcd.c: 93:     LATCbits.LATC1 = 1;
 14305     1B6A  0022               	movlb	2	; select bank2
 14306     1B6B  148E               	bsf	14,1	;volatile
 14307     1B6C                     i1l4856:
 14308                           
 14309                           ;lcd.c: 94:     Lcd_Port(y>>4);
 14310     1B6C  0873               	movf	i1Lcd_Write_Char@y,w
 14311     1B6D  00F1               	movwf	??i1_Lcd_Write_Char
 14312     1B6E  3004               	movlw	4
 14313     1B6F                     u583_25:
 14314     1B6F  36F1               	lsrf	??i1_Lcd_Write_Char,f
 14315     1B70  0B89               	decfsz	9,f
 14316     1B71  2B6F               	goto	u583_25
 14317     1B72  0871               	movf	??i1_Lcd_Write_Char,w
 14318     1B73  319A  2274  319B   	fcall	i1_Lcd_Port
 14319     1B76                     i1l4858:
 14320                           
 14321                           ;lcd.c: 95:     LATCbits.LATC0 = 1;
 14322     1B76  0022               	movlb	2	; select bank2
 14323     1B77  140E               	bsf	14,0	;volatile
 14324     1B78                     i1l4860:
 14325                           
 14326                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 14327     1B78  300D               	movlw	13
 14328     1B79                     u704_27:
 14329     1B79  0B89               	decfsz	9,f
 14330     1B7A  2B79               	goto	u704_27
 14331     1B7B  0000               	nop
 14332     1B7C                     i1l4862:
 14333                           
 14334                           ;lcd.c: 97:     LATCbits.LATC0 = 0;
 14335     1B7C  0022               	movlb	2	; select bank2
 14336     1B7D  100E               	bcf	14,0	;volatile
 14337     1B7E                     i1l4864:
 14338                           
 14339                           ;lcd.c: 98:     Lcd_Port(temp);
 14340     1B7E  0872               	movf	i1Lcd_Write_Char@temp,w
 14341     1B7F  319A  2274  319B   	fcall	i1_Lcd_Port
 14342     1B82                     i1l4866:
 14343                           
 14344                           ;lcd.c: 99:     LATCbits.LATC0 = 1;
 14345     1B82  0022               	movlb	2	; select bank2
 14346     1B83  140E               	bsf	14,0	;volatile
 14347     1B84                     i1l4868:
 14348                           
 14349                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 14350     1B84  300D               	movlw	13
 14351     1B85                     u705_27:
 14352     1B85  0B89               	decfsz	9,f
 14353     1B86  2B85               	goto	u705_27
 14354     1B87  0000               	nop
 14355     1B88                     i1l4870:
 14356                           
 14357                           ;lcd.c: 101:     LATCbits.LATC0 = 0;
 14358     1B88  0022               	movlb	2	; select bank2
 14359     1B89  100E               	bcf	14,0	;volatile
 14360     1B8A                     i1l447:
 14361     1B8A  0008               	return
 14362     1B8B                     __end_ofi1_Lcd_Write_Char:
 14363                           
 14364                           	psect	text44
 14365     1E92                     __ptext44:	
 14366 ;; *************** function i1_Lcd_Set_Cursor *****************
 14367 ;; Defined at:
 14368 ;;		line 26 in file "lcd.c"
 14369 ;; Parameters:    Size  Location     Type
 14370 ;;  a               1    wreg     unsigned char 
 14371 ;;  b               1    3[COMMON] unsigned char 
 14372 ;; Auto vars:     Size  Location     Type
 14373 ;;  a               1    5[COMMON] unsigned char 
 14374 ;;  temp            1    8[COMMON] unsigned char 
 14375 ;;  y               1    7[COMMON] unsigned char 
 14376 ;;  z               1    6[COMMON] unsigned char 
 14377 ;; Return value:  Size  Location     Type
 14378 ;;                  1    wreg      void 
 14379 ;; Registers used:
 14380 ;;		wreg, status,2, status,0, pclath, cstack
 14381 ;; Tracked objects:
 14382 ;;		On entry : 0/0
 14383 ;;		On exit  : 0/0
 14384 ;;		Unchanged: 0/0
 14385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14386 ;;      Params:         1       0       0       0       0       0       0       0
 14387 ;;      Locals:         4       0       0       0       0       0       0       0
 14388 ;;      Temps:          1       0       0       0       0       0       0       0
 14389 ;;      Totals:         6       0       0       0       0       0       0       0
 14390 ;;Total ram usage:        6 bytes
 14391 ;; Hardware stack levels used: 1
 14392 ;; Hardware stack levels required when called: 2
 14393 ;; This function calls:
 14394 ;;		i1_Lcd_Cmd
 14395 ;; This function is called by:
 14396 ;;		_IOC
 14397 ;; This function uses a non-reentrant model
 14398 ;;
 14399                           
 14400     1E92                     i1_Lcd_Set_Cursor:	
 14401                           ;psect for function i1_Lcd_Set_Cursor
 14402                           
 14403                           
 14404                           ;incstack = 0
 14405                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 14406                           ;i1Lcd_Set_Cursor@a stored from wreg
 14407     1E92  00F5               	movwf	i1Lcd_Set_Cursor@a
 14408     1E93                     i1l5124:
 14409                           
 14410                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
 14411     1E93  0375               	decf	i1Lcd_Set_Cursor@a,w
 14412     1E94  1D03               	btfss	3,2
 14413     1E95  2E97               	goto	u635_21
 14414     1E96  2E98               	goto	u635_20
 14415     1E97                     u635_21:
 14416     1E97  2EAF               	goto	i1l5134
 14417     1E98                     u635_20:
 14418     1E98                     i1l5126:
 14419                           
 14420                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
 14421     1E98  0873               	movf	i1Lcd_Set_Cursor@b,w
 14422     1E99  3E7F               	addlw	127
 14423     1E9A  00F8               	movwf	i1Lcd_Set_Cursor@temp
 14424                           
 14425                           ;lcd.c: 32:         z = temp>>4;
 14426     1E9B  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14427     1E9C  00F4               	movwf	??i1_Lcd_Set_Cursor
 14428     1E9D  3004               	movlw	4
 14429     1E9E                     u636_25:
 14430     1E9E  36F4               	lsrf	??i1_Lcd_Set_Cursor,f
 14431     1E9F  0B89               	decfsz	9,f
 14432     1EA0  2E9E               	goto	u636_25
 14433     1EA1  0874               	movf	??i1_Lcd_Set_Cursor,w
 14434     1EA2  00F6               	movwf	i1Lcd_Set_Cursor@z
 14435     1EA3                     i1l5128:
 14436                           
 14437                           ;lcd.c: 33:         y = temp & 0x0F;
 14438     1EA3  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14439     1EA4  390F               	andlw	15
 14440     1EA5  00F7               	movwf	i1Lcd_Set_Cursor@y
 14441     1EA6                     i1l5130:
 14442                           
 14443                           ;lcd.c: 34:         Lcd_Cmd(z);
 14444     1EA6  0876               	movf	i1Lcd_Set_Cursor@z,w
 14445     1EA7  3199  21A1  319E   	fcall	i1_Lcd_Cmd
 14446     1EAA                     i1l5132:
 14447                           
 14448                           ;lcd.c: 35:         Lcd_Cmd(y);
 14449     1EAA  0877               	movf	i1Lcd_Set_Cursor@y,w
 14450     1EAB  3199  21A1  319E   	fcall	i1_Lcd_Cmd
 14451                           
 14452                           ;lcd.c: 36:     }
 14453     1EAE  2F06               	goto	i1l441
 14454     1EAF                     i1l5134:
 14455     1EAF  3002               	movlw	2
 14456     1EB0  0675               	xorwf	i1Lcd_Set_Cursor@a,w
 14457     1EB1  1D03               	btfss	3,2
 14458     1EB2  2EB4               	goto	u637_21
 14459     1EB3  2EB5               	goto	u637_20
 14460     1EB4                     u637_21:
 14461     1EB4  2ECC               	goto	i1l5144
 14462     1EB5                     u637_20:
 14463     1EB5                     i1l5136:
 14464                           
 14465                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
 14466     1EB5  0873               	movf	i1Lcd_Set_Cursor@b,w
 14467     1EB6  3EBF               	addlw	191
 14468     1EB7  00F8               	movwf	i1Lcd_Set_Cursor@temp
 14469                           
 14470                           ;lcd.c: 40:         z = temp>>4;
 14471     1EB8  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14472     1EB9  00F4               	movwf	??i1_Lcd_Set_Cursor
 14473     1EBA  3004               	movlw	4
 14474     1EBB                     u638_25:
 14475     1EBB  36F4               	lsrf	??i1_Lcd_Set_Cursor,f
 14476     1EBC  0B89               	decfsz	9,f
 14477     1EBD  2EBB               	goto	u638_25
 14478     1EBE  0874               	movf	??i1_Lcd_Set_Cursor,w
 14479     1EBF  00F6               	movwf	i1Lcd_Set_Cursor@z
 14480     1EC0                     i1l5138:
 14481                           
 14482                           ;lcd.c: 41:         y = temp & 0x0F;
 14483     1EC0  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14484     1EC1  390F               	andlw	15
 14485     1EC2  00F7               	movwf	i1Lcd_Set_Cursor@y
 14486     1EC3                     i1l5140:
 14487                           
 14488                           ;lcd.c: 42:         Lcd_Cmd(z);
 14489     1EC3  0876               	movf	i1Lcd_Set_Cursor@z,w
 14490     1EC4  3199  21A1  319E   	fcall	i1_Lcd_Cmd
 14491     1EC7                     i1l5142:
 14492                           
 14493                           ;lcd.c: 43:         Lcd_Cmd(y);
 14494     1EC7  0877               	movf	i1Lcd_Set_Cursor@y,w
 14495     1EC8  3199  21A1  319E   	fcall	i1_Lcd_Cmd
 14496                           
 14497                           ;lcd.c: 44:     }
 14498     1ECB  2F06               	goto	i1l441
 14499     1ECC                     i1l5144:
 14500     1ECC  3003               	movlw	3
 14501     1ECD  0675               	xorwf	i1Lcd_Set_Cursor@a,w
 14502     1ECE  1D03               	btfss	3,2
 14503     1ECF  2ED1               	goto	u639_21
 14504     1ED0  2ED2               	goto	u639_20
 14505     1ED1                     u639_21:
 14506     1ED1  2EE9               	goto	i1l5154
 14507     1ED2                     u639_20:
 14508     1ED2                     i1l5146:
 14509                           
 14510                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
 14511     1ED2  0873               	movf	i1Lcd_Set_Cursor@b,w
 14512     1ED3  3E93               	addlw	147
 14513     1ED4  00F8               	movwf	i1Lcd_Set_Cursor@temp
 14514                           
 14515                           ;lcd.c: 48:         z = temp>>4;
 14516     1ED5  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14517     1ED6  00F4               	movwf	??i1_Lcd_Set_Cursor
 14518     1ED7  3004               	movlw	4
 14519     1ED8                     u640_25:
 14520     1ED8  36F4               	lsrf	??i1_Lcd_Set_Cursor,f
 14521     1ED9  0B89               	decfsz	9,f
 14522     1EDA  2ED8               	goto	u640_25
 14523     1EDB  0874               	movf	??i1_Lcd_Set_Cursor,w
 14524     1EDC  00F6               	movwf	i1Lcd_Set_Cursor@z
 14525     1EDD                     i1l5148:
 14526                           
 14527                           ;lcd.c: 49:         y = temp & 0x0F;
 14528     1EDD  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14529     1EDE  390F               	andlw	15
 14530     1EDF  00F7               	movwf	i1Lcd_Set_Cursor@y
 14531     1EE0                     i1l5150:
 14532                           
 14533                           ;lcd.c: 50:         Lcd_Cmd(z);
 14534     1EE0  0876               	movf	i1Lcd_Set_Cursor@z,w
 14535     1EE1  3199  21A1  319E   	fcall	i1_Lcd_Cmd
 14536     1EE4                     i1l5152:
 14537                           
 14538                           ;lcd.c: 51:         Lcd_Cmd(y);
 14539     1EE4  0877               	movf	i1Lcd_Set_Cursor@y,w
 14540     1EE5  3199  21A1  319E   	fcall	i1_Lcd_Cmd
 14541                           
 14542                           ;lcd.c: 52:     }
 14543     1EE8  2F06               	goto	i1l441
 14544     1EE9                     i1l5154:
 14545     1EE9  3004               	movlw	4
 14546     1EEA  0675               	xorwf	i1Lcd_Set_Cursor@a,w
 14547     1EEB  1D03               	btfss	3,2
 14548     1EEC  2EEE               	goto	u641_21
 14549     1EED  2EEF               	goto	u641_20
 14550     1EEE                     u641_21:
 14551     1EEE  2F06               	goto	i1l437
 14552     1EEF                     u641_20:
 14553     1EEF                     i1l5156:
 14554                           
 14555                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
 14556     1EEF  0873               	movf	i1Lcd_Set_Cursor@b,w
 14557     1EF0  3ED3               	addlw	211
 14558     1EF1  00F8               	movwf	i1Lcd_Set_Cursor@temp
 14559                           
 14560                           ;lcd.c: 56:         z = temp>>4;
 14561     1EF2  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14562     1EF3  00F4               	movwf	??i1_Lcd_Set_Cursor
 14563     1EF4  3004               	movlw	4
 14564     1EF5                     u642_25:
 14565     1EF5  36F4               	lsrf	??i1_Lcd_Set_Cursor,f
 14566     1EF6  0B89               	decfsz	9,f
 14567     1EF7  2EF5               	goto	u642_25
 14568     1EF8  0874               	movf	??i1_Lcd_Set_Cursor,w
 14569     1EF9  00F6               	movwf	i1Lcd_Set_Cursor@z
 14570     1EFA                     i1l5158:
 14571                           
 14572                           ;lcd.c: 57:         y = temp & 0x0F;
 14573     1EFA  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14574     1EFB  390F               	andlw	15
 14575     1EFC  00F7               	movwf	i1Lcd_Set_Cursor@y
 14576     1EFD                     i1l5160:
 14577                           
 14578                           ;lcd.c: 58:         Lcd_Cmd(z);
 14579     1EFD  0876               	movf	i1Lcd_Set_Cursor@z,w
 14580     1EFE  3199  21A1  319E   	fcall	i1_Lcd_Cmd
 14581     1F01                     i1l5162:
 14582                           
 14583                           ;lcd.c: 59:         Lcd_Cmd(y);
 14584     1F01  0877               	movf	i1Lcd_Set_Cursor@y,w
 14585     1F02  3199  21A1  319E   	fcall	i1_Lcd_Cmd
 14586     1F05  2F06               	goto	i1l441
 14587     1F06                     i1l437:
 14588     1F06                     i1l441:
 14589     1F06  0008               	return
 14590     1F07                     __end_ofi1_Lcd_Set_Cursor:
 14591                           
 14592                           	psect	text45
 14593     195B                     __ptext45:	
 14594 ;; *************** function i1_Lcd_Clear *****************
 14595 ;; Defined at:
 14596 ;;		line 20 in file "lcd.c"
 14597 ;; Parameters:    Size  Location     Type
 14598 ;;		None
 14599 ;; Auto vars:     Size  Location     Type
 14600 ;;		None
 14601 ;; Return value:  Size  Location     Type
 14602 ;;                  1    wreg      void 
 14603 ;; Registers used:
 14604 ;;		wreg, status,2, status,0, pclath, cstack
 14605 ;; Tracked objects:
 14606 ;;		On entry : 0/0
 14607 ;;		On exit  : 0/0
 14608 ;;		Unchanged: 0/0
 14609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14610 ;;      Params:         0       0       0       0       0       0       0       0
 14611 ;;      Locals:         0       0       0       0       0       0       0       0
 14612 ;;      Temps:          0       0       0       0       0       0       0       0
 14613 ;;      Totals:         0       0       0       0       0       0       0       0
 14614 ;;Total ram usage:        0 bytes
 14615 ;; Hardware stack levels used: 1
 14616 ;; Hardware stack levels required when called: 2
 14617 ;; This function calls:
 14618 ;;		i1_Lcd_Cmd
 14619 ;; This function is called by:
 14620 ;;		_IOC
 14621 ;; This function uses a non-reentrant model
 14622 ;;
 14623                           
 14624     195B                     i1_Lcd_Clear:	
 14625                           ;psect for function i1_Lcd_Clear
 14626                           
 14627     195B                     i1l5122:	
 14628                           ;incstack = 0
 14629                           ; Regs used in i1_Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 14630                           
 14631                           
 14632                           ;lcd.c: 22:     Lcd_Cmd(0);
 14633     195B  3000               	movlw	0
 14634     195C  3199  21A1  3199   	fcall	i1_Lcd_Cmd
 14635                           
 14636                           ;lcd.c: 23:     Lcd_Cmd(1);
 14637     195F  3001               	movlw	1
 14638     1960  3199  21A1  3199   	fcall	i1_Lcd_Cmd
 14639     1963                     i1l431:
 14640     1963  0008               	return
 14641     1964                     __end_ofi1_Lcd_Clear:
 14642                           
 14643                           	psect	text46
 14644     19A1                     __ptext46:	
 14645 ;; *************** function i1_Lcd_Cmd *****************
 14646 ;; Defined at:
 14647 ;;		line 11 in file "lcd.c"
 14648 ;; Parameters:    Size  Location     Type
 14649 ;;  a               1    wreg     unsigned char 
 14650 ;; Auto vars:     Size  Location     Type
 14651 ;;  a               1    2[COMMON] unsigned char 
 14652 ;; Return value:  Size  Location     Type
 14653 ;;                  1    wreg      void 
 14654 ;; Registers used:
 14655 ;;		wreg, status,2, status,0, pclath, cstack
 14656 ;; Tracked objects:
 14657 ;;		On entry : 0/0
 14658 ;;		On exit  : 0/0
 14659 ;;		Unchanged: 0/0
 14660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14661 ;;      Params:         0       0       0       0       0       0       0       0
 14662 ;;      Locals:         1       0       0       0       0       0       0       0
 14663 ;;      Temps:          1       0       0       0       0       0       0       0
 14664 ;;      Totals:         2       0       0       0       0       0       0       0
 14665 ;;Total ram usage:        2 bytes
 14666 ;; Hardware stack levels used: 1
 14667 ;; Hardware stack levels required when called: 1
 14668 ;; This function calls:
 14669 ;;		i1_Lcd_Port
 14670 ;; This function is called by:
 14671 ;;		i1_Lcd_Clear
 14672 ;;		i1_Lcd_Set_Cursor
 14673 ;; This function uses a non-reentrant model
 14674 ;;
 14675                           
 14676     19A1                     i1_Lcd_Cmd:	
 14677                           ;psect for function i1_Lcd_Cmd
 14678                           
 14679                           
 14680                           ;incstack = 0
 14681                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 14682                           ;i1Lcd_Cmd@a stored from wreg
 14683     19A1  00F2               	movwf	i1Lcd_Cmd@a
 14684     19A2                     i1l4842:
 14685                           
 14686                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATCbits.LATC1 = 0;
 14687     19A2  0022               	movlb	2	; select bank2
 14688     19A3  108E               	bcf	14,1	;volatile
 14689     19A4                     i1l4844:
 14690                           
 14691                           ;lcd.c: 14:     Lcd_Port(a);
 14692     19A4  0872               	movf	i1Lcd_Cmd@a,w
 14693     19A5  319A  2274  3199   	fcall	i1_Lcd_Port
 14694     19A8                     i1l4846:
 14695                           
 14696                           ;lcd.c: 15:     LATCbits.LATC0 = 1;
 14697     19A8  0022               	movlb	2	; select bank2
 14698     19A9  140E               	bsf	14,0	;volatile
 14699     19AA                     i1l4848:
 14700                           
 14701                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
 14702     19AA  3006               	movlw	6
 14703     19AB  00F1               	movwf	??i1_Lcd_Cmd
 14704     19AC  3030               	movlw	48
 14705     19AD                     u706_27:
 14706     19AD  0B89               	decfsz	9,f
 14707     19AE  29AD               	goto	u706_27
 14708     19AF  0BF1               	decfsz	??i1_Lcd_Cmd,f
 14709     19B0  29AD               	goto	u706_27
 14710     19B1  3200               	nop2
 14711     19B2                     i1l4850:
 14712                           
 14713                           ;lcd.c: 17:     LATCbits.LATC0 = 0;
 14714     19B2  0022               	movlb	2	; select bank2
 14715     19B3  100E               	bcf	14,0	;volatile
 14716     19B4                     i1l428:
 14717     19B4  0008               	return
 14718     19B5                     __end_ofi1_Lcd_Cmd:
 14719                           
 14720                           	psect	text47
 14721     1A74                     __ptext47:	
 14722 ;; *************** function i1_Lcd_Port *****************
 14723 ;; Defined at:
 14724 ;;		line 3 in file "lcd.c"
 14725 ;; Parameters:    Size  Location     Type
 14726 ;;  a               1    wreg     unsigned char 
 14727 ;; Auto vars:     Size  Location     Type
 14728 ;;  a               1    0[COMMON] unsigned char 
 14729 ;; Return value:  Size  Location     Type
 14730 ;;                  1    wreg      void 
 14731 ;; Registers used:
 14732 ;;		wreg
 14733 ;; Tracked objects:
 14734 ;;		On entry : 0/0
 14735 ;;		On exit  : 0/0
 14736 ;;		Unchanged: 0/0
 14737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14738 ;;      Params:         0       0       0       0       0       0       0       0
 14739 ;;      Locals:         1       0       0       0       0       0       0       0
 14740 ;;      Temps:          0       0       0       0       0       0       0       0
 14741 ;;      Totals:         1       0       0       0       0       0       0       0
 14742 ;;Total ram usage:        1 bytes
 14743 ;; Hardware stack levels used: 1
 14744 ;; This function calls:
 14745 ;;		Nothing
 14746 ;; This function is called by:
 14747 ;;		i1_Lcd_Cmd
 14748 ;;		i1_Lcd_Write_Char
 14749 ;; This function uses a non-reentrant model
 14750 ;;
 14751                           
 14752     1A74                     i1_Lcd_Port:	
 14753                           ;psect for function i1_Lcd_Port
 14754                           
 14755                           
 14756                           ;incstack = 0
 14757                           ; Regs used in i1_Lcd_Port: [wreg]
 14758                           ;i1Lcd_Port@a stored from wreg
 14759     1A74  00F0               	movwf	i1Lcd_Port@a
 14760     1A75                     i1l4778:
 14761                           
 14762                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LATD4 = 1
      +                          ) : (LATDbits.LATD4 = 0);
 14763     1A75  1C70               	btfss	i1Lcd_Port@a,0
 14764     1A76  2A78               	goto	u576_21
 14765     1A77  2A79               	goto	u576_20
 14766     1A78                     u576_21:
 14767     1A78  2A7C               	goto	i1l410
 14768     1A79                     u576_20:
 14769     1A79                     i1l4780:
 14770     1A79  0022               	movlb	2	; select bank2
 14771     1A7A  160F               	bsf	15,4	;volatile
 14772     1A7B  2A7E               	goto	i1l4782
 14773     1A7C                     i1l410:
 14774     1A7C  0022               	movlb	2	; select bank2
 14775     1A7D  120F               	bcf	15,4	;volatile
 14776     1A7E                     i1l4782:
 14777                           
 14778                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LATD5 = 1) : (LATDbits.LATD5 = 0);
 14779     1A7E  1CF0               	btfss	i1Lcd_Port@a,1
 14780     1A7F  2A81               	goto	u577_21
 14781     1A80  2A82               	goto	u577_20
 14782     1A81                     u577_21:
 14783     1A81  2A84               	goto	i1l414
 14784     1A82                     u577_20:
 14785     1A82                     i1l4784:
 14786     1A82  168F               	bsf	15,5	;volatile
 14787     1A83  2A85               	goto	i1l4786
 14788     1A84                     i1l414:
 14789     1A84  128F               	bcf	15,5	;volatile
 14790     1A85                     i1l4786:
 14791                           
 14792                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LATD6 = 1) : (LATDbits.LATD6 = 0);
 14793     1A85  1D70               	btfss	i1Lcd_Port@a,2
 14794     1A86  2A88               	goto	u578_21
 14795     1A87  2A89               	goto	u578_20
 14796     1A88                     u578_21:
 14797     1A88  2A8B               	goto	i1l418
 14798     1A89                     u578_20:
 14799     1A89                     i1l4788:
 14800     1A89  170F               	bsf	15,6	;volatile
 14801     1A8A  2A8C               	goto	i1l4790
 14802     1A8B                     i1l418:
 14803     1A8B  130F               	bcf	15,6	;volatile
 14804     1A8C                     i1l4790:
 14805                           
 14806                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LATD7 = 1) : (LATDbits.LATD7 = 0);
 14807     1A8C  1DF0               	btfss	i1Lcd_Port@a,3
 14808     1A8D  2A8F               	goto	u579_21
 14809     1A8E  2A90               	goto	u579_20
 14810     1A8F                     u579_21:
 14811     1A8F  2A92               	goto	i1l422
 14812     1A90                     u579_20:
 14813     1A90                     i1l4792:
 14814     1A90  178F               	bsf	15,7	;volatile
 14815     1A91  2A93               	goto	i1l425
 14816     1A92                     i1l422:
 14817     1A92  138F               	bcf	15,7	;volatile
 14818     1A93                     i1l425:
 14819     1A93  0008               	return
 14820     1A94                     __end_ofi1_Lcd_Port:
 14821                           
 14822                           	psect	text48
 14823     1BB3                     __ptext48:	
 14824 ;; *************** function _strcmp *****************
 14825 ;; Defined at:
 14826 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcmp.c"
 14827 ;; Parameters:    Size  Location     Type
 14828 ;;  l               1    wreg     PTR const unsigned char 
 14829 ;;		 -> clave(5), 
 14830 ;;  r               1    0[COMMON] PTR const unsigned char 
 14831 ;;		 -> clave_enter(5), 
 14832 ;; Auto vars:     Size  Location     Type
 14833 ;;  l               1    3[COMMON] PTR const unsigned char 
 14834 ;;		 -> clave(5), 
 14835 ;; Return value:  Size  Location     Type
 14836 ;;                  2    0[COMMON] int 
 14837 ;; Registers used:
 14838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14839 ;; Tracked objects:
 14840 ;;		On entry : 0/0
 14841 ;;		On exit  : 0/0
 14842 ;;		Unchanged: 0/0
 14843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14844 ;;      Params:         2       0       0       0       0       0       0       0
 14845 ;;      Locals:         1       0       0       0       0       0       0       0
 14846 ;;      Temps:          1       0       0       0       0       0       0       0
 14847 ;;      Totals:         4       0       0       0       0       0       0       0
 14848 ;;Total ram usage:        4 bytes
 14849 ;; Hardware stack levels used: 1
 14850 ;; This function calls:
 14851 ;;		Nothing
 14852 ;; This function is called by:
 14853 ;;		_IOC
 14854 ;; This function uses a non-reentrant model
 14855 ;;
 14856                           
 14857     1BB3                     _strcmp:	
 14858                           ;psect for function _strcmp
 14859                           
 14860                           
 14861                           ;incstack = 0
 14862                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0]
 14863                           ;strcmp@l stored from wreg
 14864     1BB3  00F3               	movwf	strcmp@l
 14865     1BB4                     i1l5052:
 14866     1BB4  2BBD               	goto	i1l5058
 14867     1BB5                     i1l5054:
 14868     1BB5  3001               	movlw	1
 14869     1BB6  00F2               	movwf	??_strcmp
 14870     1BB7  0872               	movf	??_strcmp,w
 14871     1BB8  07F3               	addwf	strcmp@l,f
 14872     1BB9                     i1l5056:
 14873     1BB9  3001               	movlw	1
 14874     1BBA  00F2               	movwf	??_strcmp
 14875     1BBB  0872               	movf	??_strcmp,w
 14876     1BBC  07F0               	addwf	strcmp@r,f
 14877     1BBD                     i1l5058:
 14878     1BBD  0870               	movf	strcmp@r,w
 14879     1BBE  0086               	movwf	6
 14880     1BBF  3001               	movlw	1	; select bank2/3
 14881     1BC0  0087               	movwf	7
 14882     1BC1  0873               	movf	strcmp@l,w
 14883     1BC2  0084               	movwf	4
 14884     1BC3  3001               	movlw	1	; select bank2/3
 14885     1BC4  0085               	movwf	5
 14886     1BC5  0800               	movf	0,w
 14887     1BC6  0601               	xorwf	1,w
 14888     1BC7  1D03               	skipz
 14889     1BC8  2BCA               	goto	u618_21
 14890     1BC9  2BCB               	goto	u618_20
 14891     1BCA                     u618_21:
 14892     1BCA  2BD4               	goto	i1l5062
 14893     1BCB                     u618_20:
 14894     1BCB                     i1l5060:
 14895     1BCB  0873               	movf	strcmp@l,w
 14896     1BCC  0086               	movwf	6
 14897     1BCD  3001               	movlw	1	; select bank2/3
 14898     1BCE  0087               	movwf	7
 14899     1BCF  0801               	movf	1,w
 14900     1BD0  1D03               	btfss	3,2
 14901     1BD1  2BD3               	goto	u619_21
 14902     1BD2  2BD4               	goto	u619_20
 14903     1BD3                     u619_21:
 14904     1BD3  2BB5               	goto	i1l5054
 14905     1BD4                     u619_20:
 14906     1BD4                     i1l5062:
 14907     1BD4  0873               	movf	strcmp@l,w
 14908     1BD5  0086               	movwf	6
 14909     1BD6  3001               	movlw	1	; select bank2/3
 14910     1BD7  0087               	movwf	7
 14911     1BD8  0870               	movf	strcmp@r,w
 14912     1BD9  0084               	movwf	4
 14913     1BDA  3001               	movlw	1	; select bank2/3
 14914     1BDB  0085               	movwf	5
 14915     1BDC  0800               	movf	0,w
 14916     1BDD  0201               	subwf	1,w
 14917     1BDE  00F0               	movwf	?_strcmp
 14918     1BDF  01F1               	clrf	?_strcmp+1
 14919     1BE0  1C03               	skipc
 14920     1BE1  03F1               	decf	?_strcmp+1,f
 14921     1BE2                     i1l1334:
 14922     1BE2  0008               	return
 14923     1BE3                     __end_of_strcmp:
 14924                           
 14925                           	psect	text49
 14926     19CB                     __ptext49:	
 14927 ;; *************** function _Leer_Clave *****************
 14928 ;; Defined at:
 14929 ;;		line 378 in file "main.c"
 14930 ;; Parameters:    Size  Location     Type
 14931 ;;  str             1    wreg     PTR unsigned char 
 14932 ;;		 -> clave_enter(5), 
 14933 ;; Auto vars:     Size  Location     Type
 14934 ;;  str             1    4[COMMON] PTR unsigned char 
 14935 ;;		 -> clave_enter(5), 
 14936 ;;  pos             1    5[COMMON] unsigned char 
 14937 ;; Return value:  Size  Location     Type
 14938 ;;                  1    wreg      void 
 14939 ;; Registers used:
 14940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14941 ;; Tracked objects:
 14942 ;;		On entry : 0/0
 14943 ;;		On exit  : 0/0
 14944 ;;		Unchanged: 0/0
 14945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14946 ;;      Params:         0       0       0       0       0       0       0       0
 14947 ;;      Locals:         2       0       0       0       0       0       0       0
 14948 ;;      Temps:          1       0       0       0       0       0       0       0
 14949 ;;      Totals:         3       0       0       0       0       0       0       0
 14950 ;;Total ram usage:        3 bytes
 14951 ;; Hardware stack levels used: 1
 14952 ;; Hardware stack levels required when called: 1
 14953 ;; This function calls:
 14954 ;;		_EEPROM_Read
 14955 ;; This function is called by:
 14956 ;;		_IOC
 14957 ;; This function uses a non-reentrant model
 14958 ;;
 14959                           
 14960     19CB                     _Leer_Clave:	
 14961                           ;psect for function _Leer_Clave
 14962                           
 14963                           
 14964                           ;incstack = 0
 14965                           ; Regs used in _Leer_Clave: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14966                           ;Leer_Clave@str stored from wreg
 14967     19CB  00F4               	movwf	Leer_Clave@str
 14968     19CC                     i1l5040:
 14969                           
 14970                           ;main.c: 378: void Leer_Clave(char* str);main.c: 379: {;main.c: 380:     for(uint8_t pos
      +                          =0; pos<4; pos++)
 14971     19CC  01F5               	clrf	Leer_Clave@pos
 14972     19CD                     i1l5046:
 14973                           
 14974                           ;main.c: 381:     {;main.c: 382:         str[pos] = (char)EEPROM_Read(pos);
 14975     19CD  0875               	movf	Leer_Clave@pos,w
 14976     19CE  0774               	addwf	Leer_Clave@str,w
 14977     19CF  00F3               	movwf	??_Leer_Clave
 14978     19D0  0873               	movf	??_Leer_Clave,w
 14979     19D1  0086               	movwf	6
 14980     19D2  3001               	movlw	1	; select bank2/3
 14981     19D3  0087               	movwf	7
 14982     19D4  0875               	movf	Leer_Clave@pos,w
 14983     19D5  3199  2182  3199   	fcall	_EEPROM_Read
 14984     19D8  0081               	movwf	1
 14985     19D9                     i1l5048:
 14986                           
 14987                           ;main.c: 383:     }
 14988     19D9  3001               	movlw	1
 14989     19DA  00F3               	movwf	??_Leer_Clave
 14990     19DB  0873               	movf	??_Leer_Clave,w
 14991     19DC  07F5               	addwf	Leer_Clave@pos,f
 14992     19DD                     i1l5050:
 14993     19DD  3004               	movlw	4
 14994     19DE  0275               	subwf	Leer_Clave@pos,w
 14995     19DF  1C03               	skipc
 14996     19E0  29E2               	goto	u617_21
 14997     19E1  29E3               	goto	u617_20
 14998     19E2                     u617_21:
 14999     19E2  29CD               	goto	i1l5046
 15000     19E3                     u617_20:
 15001     19E3                     i1l336:
 15002     19E3  0008               	return
 15003     19E4                     __end_of_Leer_Clave:
 15004                           
 15005                           	psect	text50
 15006     1982                     __ptext50:	
 15007 ;; *************** function _EEPROM_Read *****************
 15008 ;; Defined at:
 15009 ;;		line 19 in file "eeprom.c"
 15010 ;; Parameters:    Size  Location     Type
 15011 ;;  dir             1    wreg     unsigned char 
 15012 ;; Auto vars:     Size  Location     Type
 15013 ;;  dir             1    2[COMMON] unsigned char 
 15014 ;; Return value:  Size  Location     Type
 15015 ;;                  1    wreg      unsigned char 
 15016 ;; Registers used:
 15017 ;;		wreg
 15018 ;; Tracked objects:
 15019 ;;		On entry : 0/0
 15020 ;;		On exit  : 0/0
 15021 ;;		Unchanged: 0/0
 15022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15023 ;;      Params:         0       0       0       0       0       0       0       0
 15024 ;;      Locals:         1       0       0       0       0       0       0       0
 15025 ;;      Temps:          2       0       0       0       0       0       0       0
 15026 ;;      Totals:         3       0       0       0       0       0       0       0
 15027 ;;Total ram usage:        3 bytes
 15028 ;; Hardware stack levels used: 1
 15029 ;; This function calls:
 15030 ;;		Nothing
 15031 ;; This function is called by:
 15032 ;;		_Leer_Clave
 15033 ;; This function uses a non-reentrant model
 15034 ;;
 15035                           
 15036     1982                     _EEPROM_Read:	
 15037                           ;psect for function _EEPROM_Read
 15038                           
 15039                           
 15040                           ;incstack = 0
 15041                           ; Regs used in _EEPROM_Read: [wreg]
 15042                           ;EEPROM_Read@dir stored from wreg
 15043     1982  00F2               	movwf	EEPROM_Read@dir
 15044     1983                     i1l4824:
 15045                           
 15046                           ;eeprom.c: 19: uint8_t EEPROM_Read(uint8_t dir);eeprom.c: 20: {;eeprom.c: 21:     EEADR 
      +                          = dir;
 15047     1983  0872               	movf	EEPROM_Read@dir,w
 15048     1984  00F0               	movwf	??_EEPROM_Read
 15049     1985  01F1               	clrf	??_EEPROM_Read+1
 15050     1986  0870               	movf	??_EEPROM_Read,w
 15051     1987  0023               	movlb	3	; select bank3
 15052     1988  0091               	movwf	17	;volatile
 15053     1989  0871               	movf	??_EEPROM_Read+1,w
 15054     198A  0092               	movwf	18	;volatile
 15055     198B                     i1l4826:
 15056                           
 15057                           ;eeprom.c: 22:     EECON1bits.EEPGD = 0;
 15058     198B  1395               	bcf	21,7	;volsfr
 15059     198C                     i1l4828:
 15060                           
 15061                           ;eeprom.c: 23:     EECON1bits.RD = 1;
 15062     198C  1415               	bsf	21,0	;volsfr
 15063                           
 15064                           ;eeprom.c: 24:     return EEDAT;
 15065     198D  0813               	movf	19,w	;volatile
 15066     198E                     i1l484:
 15067     198E  0008               	return
 15068     198F                     __end_of_EEPROM_Read:
 15069                           
 15070                           	psect	text51
 15071     1952                     __ptext51:	
 15072 ;; *************** function _Keypad_Init *****************
 15073 ;; Defined at:
 15074 ;;		line 3 in file "kbd4x3.c"
 15075 ;; Parameters:    Size  Location     Type
 15076 ;;		None
 15077 ;; Auto vars:     Size  Location     Type
 15078 ;;		None
 15079 ;; Return value:  Size  Location     Type
 15080 ;;                  1    wreg      void 
 15081 ;; Registers used:
 15082 ;;		None
 15083 ;; Tracked objects:
 15084 ;;		On entry : 0/0
 15085 ;;		On exit  : 0/0
 15086 ;;		Unchanged: 0/0
 15087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15088 ;;      Params:         0       0       0       0       0       0       0       0
 15089 ;;      Locals:         0       0       0       0       0       0       0       0
 15090 ;;      Temps:          0       0       0       0       0       0       0       0
 15091 ;;      Totals:         0       0       0       0       0       0       0       0
 15092 ;;Total ram usage:        0 bytes
 15093 ;; Hardware stack levels used: 1
 15094 ;; This function calls:
 15095 ;;		Nothing
 15096 ;; This function is called by:
 15097 ;;		_IOC
 15098 ;; This function uses a non-reentrant model
 15099 ;;
 15100                           
 15101     1952                     _Keypad_Init:	
 15102                           ;psect for function _Keypad_Init
 15103                           
 15104     1952                     i1l4960:	
 15105                           ;incstack = 0
 15106                           ; Regs used in _Keypad_Init: []
 15107                           
 15108                           
 15109                           ;kbd4x3.c: 5:     TRISBbits.TRISB4 = 1;
 15110     1952  0021               	movlb	1	; select bank1
 15111     1953  160D               	bsf	13,4	;volatile
 15112                           
 15113                           ;kbd4x3.c: 6:     TRISBbits.TRISB5 = 1;
 15114     1954  168D               	bsf	13,5	;volatile
 15115                           
 15116                           ;kbd4x3.c: 7:     TRISBbits.TRISB6 = 1;
 15117     1955  170D               	bsf	13,6	;volatile
 15118                           
 15119                           ;kbd4x3.c: 8:     TRISBbits.TRISB7 = 1;
 15120     1956  178D               	bsf	13,7	;volatile
 15121                           
 15122                           ;kbd4x3.c: 9:     TRISBbits.TRISB1 = 0;
 15123     1957  108D               	bcf	13,1	;volatile
 15124                           
 15125                           ;kbd4x3.c: 10:     TRISBbits.TRISB2 = 0;
 15126     1958  110D               	bcf	13,2	;volatile
 15127                           
 15128                           ;kbd4x3.c: 11:     TRISBbits.TRISB3 = 0;
 15129     1959  118D               	bcf	13,3	;volatile
 15130     195A                     i1l345:
 15131     195A  0008               	return
 15132     195B                     __end_of_Keypad_Init:
 15133                           
 15134                           	psect	text52
 15135     1164                     __ptext52:	
 15136 ;; *************** function _Keypad_Get_Char *****************
 15137 ;; Defined at:
 15138 ;;		line 14 in file "kbd4x3.c"
 15139 ;; Parameters:    Size  Location     Type
 15140 ;;		None
 15141 ;; Auto vars:     Size  Location     Type
 15142 ;;		None
 15143 ;; Return value:  Size  Location     Type
 15144 ;;                  1    wreg      unsigned char 
 15145 ;; Registers used:
 15146 ;;		wreg
 15147 ;; Tracked objects:
 15148 ;;		On entry : 0/0
 15149 ;;		On exit  : 0/0
 15150 ;;		Unchanged: 0/0
 15151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15152 ;;      Params:         0       0       0       0       0       0       0       0
 15153 ;;      Locals:         0       0       0       0       0       0       0       0
 15154 ;;      Temps:          1       0       0       0       0       0       0       0
 15155 ;;      Totals:         1       0       0       0       0       0       0       0
 15156 ;;Total ram usage:        1 bytes
 15157 ;; Hardware stack levels used: 1
 15158 ;; This function calls:
 15159 ;;		Nothing
 15160 ;; This function is called by:
 15161 ;;		_IOC
 15162 ;; This function uses a non-reentrant model
 15163 ;;
 15164                           
 15165     1164                     _Keypad_Get_Char:	
 15166                           ;psect for function _Keypad_Get_Char
 15167                           
 15168     1164                     i1l4962:	
 15169                           ;incstack = 0
 15170                           ; Regs used in _Keypad_Get_Char: [wreg]
 15171                           
 15172                           
 15173                           ;kbd4x3.c: 16:     PORTBbits.RB1 = 1;
 15174     1164  0020               	movlb	0	; select bank0
 15175     1165  148D               	bsf	13,1	;volatile
 15176                           
 15177                           ;kbd4x3.c: 17:     PORTBbits.RB2 = 0;
 15178     1166  110D               	bcf	13,2	;volatile
 15179                           
 15180                           ;kbd4x3.c: 18:     PORTBbits.RB3 = 0;
 15181     1167  118D               	bcf	13,3	;volatile
 15182                           
 15183                           ;kbd4x3.c: 19:     if(PORTBbits.RB4 == 1){
 15184     1168  1E0D               	btfss	13,4	;volatile
 15185     1169  296B               	goto	u593_21
 15186     116A  296C               	goto	u593_20
 15187     116B                     u593_21:
 15188     116B  2982               	goto	i1l348
 15189     116C                     u593_20:
 15190     116C                     i1l4964:
 15191                           
 15192                           ;kbd4x3.c: 20:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15193     116C  3003               	movlw	3
 15194     116D  00F0               	movwf	??_Keypad_Get_Char
 15195     116E  3098               	movlw	152
 15196     116F                     u707_27:
 15197     116F  0B89               	decfsz	9,f
 15198     1170  296F               	goto	u707_27
 15199     1171  0BF0               	decfsz	??_Keypad_Get_Char,f
 15200     1172  296F               	goto	u707_27
 15201     1173                     i1l349:	
 15202                           ;kbd4x3.c: 21:         while(PORTBbits.RB4 == 1);
 15203                           
 15204     1173  0020               	movlb	0	; select bank0
 15205     1174  1A0D               	btfsc	13,4	;volatile
 15206     1175  2977               	goto	u594_21
 15207     1176  2978               	goto	u594_20
 15208     1177                     u594_21:
 15209     1177  2973               	goto	i1l349
 15210     1178                     u594_20:
 15211     1178                     i1l4966:
 15212                           
 15213                           ;kbd4x3.c: 22:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15214     1178  3007               	movlw	7
 15215     1179  00F0               	movwf	??_Keypad_Get_Char
 15216     117A  307D               	movlw	125
 15217     117B                     u708_27:
 15218     117B  0B89               	decfsz	9,f
 15219     117C  297B               	goto	u708_27
 15220     117D  0BF0               	decfsz	??_Keypad_Get_Char,f
 15221     117E  297B               	goto	u708_27
 15222     117F  0000               	nop
 15223                           
 15224                           ;kbd4x3.c: 23:         return '1';
 15225     1180  3031               	movlw	49
 15226     1181  2AA7               	goto	i1l352
 15227     1182                     i1l348:	
 15228                           ;kbd4x3.c: 24:     }
 15229                           
 15230                           
 15231                           ;kbd4x3.c: 25:     if(PORTBbits.RB5 == 1){
 15232     1182  1E8D               	btfss	13,5	;volatile
 15233     1183  2985               	goto	u595_21
 15234     1184  2986               	goto	u595_20
 15235     1185                     u595_21:
 15236     1185  299C               	goto	i1l353
 15237     1186                     u595_20:
 15238     1186                     i1l4970:
 15239                           
 15240                           ;kbd4x3.c: 26:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15241     1186  3003               	movlw	3
 15242     1187  00F0               	movwf	??_Keypad_Get_Char
 15243     1188  3098               	movlw	152
 15244     1189                     u709_27:
 15245     1189  0B89               	decfsz	9,f
 15246     118A  2989               	goto	u709_27
 15247     118B  0BF0               	decfsz	??_Keypad_Get_Char,f
 15248     118C  2989               	goto	u709_27
 15249     118D                     i1l354:	
 15250                           ;kbd4x3.c: 27:         while(PORTBbits.RB5 == 1);
 15251                           
 15252     118D  0020               	movlb	0	; select bank0
 15253     118E  1A8D               	btfsc	13,5	;volatile
 15254     118F  2991               	goto	u596_21
 15255     1190  2992               	goto	u596_20
 15256     1191                     u596_21:
 15257     1191  298D               	goto	i1l354
 15258     1192                     u596_20:
 15259     1192                     i1l4972:
 15260                           
 15261                           ;kbd4x3.c: 28:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15262     1192  3007               	movlw	7
 15263     1193  00F0               	movwf	??_Keypad_Get_Char
 15264     1194  307D               	movlw	125
 15265     1195                     u710_27:
 15266     1195  0B89               	decfsz	9,f
 15267     1196  2995               	goto	u710_27
 15268     1197  0BF0               	decfsz	??_Keypad_Get_Char,f
 15269     1198  2995               	goto	u710_27
 15270     1199  0000               	nop
 15271                           
 15272                           ;kbd4x3.c: 29:         return '4';
 15273     119A  3034               	movlw	52
 15274     119B  2AA7               	goto	i1l352
 15275     119C                     i1l353:	
 15276                           ;kbd4x3.c: 30:     }
 15277                           
 15278                           
 15279                           ;kbd4x3.c: 31:     if(PORTBbits.RB6 == 1){
 15280     119C  1F0D               	btfss	13,6	;volatile
 15281     119D  299F               	goto	u597_21
 15282     119E  29A0               	goto	u597_20
 15283     119F                     u597_21:
 15284     119F  29B6               	goto	i1l357
 15285     11A0                     u597_20:
 15286     11A0                     i1l4976:
 15287                           
 15288                           ;kbd4x3.c: 32:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15289     11A0  3003               	movlw	3
 15290     11A1  00F0               	movwf	??_Keypad_Get_Char
 15291     11A2  3098               	movlw	152
 15292     11A3                     u711_27:
 15293     11A3  0B89               	decfsz	9,f
 15294     11A4  29A3               	goto	u711_27
 15295     11A5  0BF0               	decfsz	??_Keypad_Get_Char,f
 15296     11A6  29A3               	goto	u711_27
 15297     11A7                     i1l358:	
 15298                           ;kbd4x3.c: 33:         while(PORTBbits.RB6 == 1);
 15299                           
 15300     11A7  0020               	movlb	0	; select bank0
 15301     11A8  1B0D               	btfsc	13,6	;volatile
 15302     11A9  29AB               	goto	u598_21
 15303     11AA  29AC               	goto	u598_20
 15304     11AB                     u598_21:
 15305     11AB  29A7               	goto	i1l358
 15306     11AC                     u598_20:
 15307     11AC                     i1l4978:
 15308                           
 15309                           ;kbd4x3.c: 34:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15310     11AC  3007               	movlw	7
 15311     11AD  00F0               	movwf	??_Keypad_Get_Char
 15312     11AE  307D               	movlw	125
 15313     11AF                     u712_27:
 15314     11AF  0B89               	decfsz	9,f
 15315     11B0  29AF               	goto	u712_27
 15316     11B1  0BF0               	decfsz	??_Keypad_Get_Char,f
 15317     11B2  29AF               	goto	u712_27
 15318     11B3  0000               	nop
 15319                           
 15320                           ;kbd4x3.c: 35:         return '7';
 15321     11B4  3037               	movlw	55
 15322     11B5  2AA7               	goto	i1l352
 15323     11B6                     i1l357:	
 15324                           ;kbd4x3.c: 36:     }
 15325                           
 15326                           
 15327                           ;kbd4x3.c: 37:     if(PORTBbits.RB7 == 1){
 15328     11B6  1F8D               	btfss	13,7	;volatile
 15329     11B7  29B9               	goto	u599_21
 15330     11B8  29BA               	goto	u599_20
 15331     11B9                     u599_21:
 15332     11B9  29D0               	goto	i1l361
 15333     11BA                     u599_20:
 15334     11BA                     i1l4982:
 15335                           
 15336                           ;kbd4x3.c: 38:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15337     11BA  3003               	movlw	3
 15338     11BB  00F0               	movwf	??_Keypad_Get_Char
 15339     11BC  3098               	movlw	152
 15340     11BD                     u713_27:
 15341     11BD  0B89               	decfsz	9,f
 15342     11BE  29BD               	goto	u713_27
 15343     11BF  0BF0               	decfsz	??_Keypad_Get_Char,f
 15344     11C0  29BD               	goto	u713_27
 15345     11C1                     i1l362:	
 15346                           ;kbd4x3.c: 39:         while(PORTBbits.RB7 == 1);
 15347                           
 15348     11C1  0020               	movlb	0	; select bank0
 15349     11C2  1B8D               	btfsc	13,7	;volatile
 15350     11C3  29C5               	goto	u600_21
 15351     11C4  29C6               	goto	u600_20
 15352     11C5                     u600_21:
 15353     11C5  29C1               	goto	i1l362
 15354     11C6                     u600_20:
 15355     11C6                     i1l4984:
 15356                           
 15357                           ;kbd4x3.c: 40:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15358     11C6  3007               	movlw	7
 15359     11C7  00F0               	movwf	??_Keypad_Get_Char
 15360     11C8  307D               	movlw	125
 15361     11C9                     u714_27:
 15362     11C9  0B89               	decfsz	9,f
 15363     11CA  29C9               	goto	u714_27
 15364     11CB  0BF0               	decfsz	??_Keypad_Get_Char,f
 15365     11CC  29C9               	goto	u714_27
 15366     11CD  0000               	nop
 15367                           
 15368                           ;kbd4x3.c: 41:         return '*';
 15369     11CE  302A               	movlw	42
 15370     11CF  2AA7               	goto	i1l352
 15371     11D0                     i1l361:	
 15372                           ;kbd4x3.c: 42:     }
 15373                           
 15374                           
 15375                           ;kbd4x3.c: 44:     PORTBbits.RB1 = 0;
 15376     11D0  108D               	bcf	13,1	;volatile
 15377                           
 15378                           ;kbd4x3.c: 45:     PORTBbits.RB2 = 1;
 15379     11D1  150D               	bsf	13,2	;volatile
 15380                           
 15381                           ;kbd4x3.c: 46:     PORTBbits.RB3 = 0;
 15382     11D2  118D               	bcf	13,3	;volatile
 15383                           
 15384                           ;kbd4x3.c: 47:     if(PORTBbits.RB4 == 1){
 15385     11D3  1E0D               	btfss	13,4	;volatile
 15386     11D4  29D6               	goto	u601_21
 15387     11D5  29D7               	goto	u601_20
 15388     11D6                     u601_21:
 15389     11D6  29ED               	goto	i1l365
 15390     11D7                     u601_20:
 15391     11D7                     i1l4988:
 15392                           
 15393                           ;kbd4x3.c: 48:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15394     11D7  3003               	movlw	3
 15395     11D8  00F0               	movwf	??_Keypad_Get_Char
 15396     11D9  3098               	movlw	152
 15397     11DA                     u715_27:
 15398     11DA  0B89               	decfsz	9,f
 15399     11DB  29DA               	goto	u715_27
 15400     11DC  0BF0               	decfsz	??_Keypad_Get_Char,f
 15401     11DD  29DA               	goto	u715_27
 15402     11DE                     i1l366:	
 15403                           ;kbd4x3.c: 49:         while(PORTBbits.RB4 == 1);
 15404                           
 15405     11DE  0020               	movlb	0	; select bank0
 15406     11DF  1A0D               	btfsc	13,4	;volatile
 15407     11E0  29E2               	goto	u602_21
 15408     11E1  29E3               	goto	u602_20
 15409     11E2                     u602_21:
 15410     11E2  29DE               	goto	i1l366
 15411     11E3                     u602_20:
 15412     11E3                     i1l4990:
 15413                           
 15414                           ;kbd4x3.c: 50:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15415     11E3  3007               	movlw	7
 15416     11E4  00F0               	movwf	??_Keypad_Get_Char
 15417     11E5  307D               	movlw	125
 15418     11E6                     u716_27:
 15419     11E6  0B89               	decfsz	9,f
 15420     11E7  29E6               	goto	u716_27
 15421     11E8  0BF0               	decfsz	??_Keypad_Get_Char,f
 15422     11E9  29E6               	goto	u716_27
 15423     11EA  0000               	nop
 15424                           
 15425                           ;kbd4x3.c: 51:         return '2';
 15426     11EB  3032               	movlw	50
 15427     11EC  2AA7               	goto	i1l352
 15428     11ED                     i1l365:	
 15429                           ;kbd4x3.c: 52:     }
 15430                           
 15431                           
 15432                           ;kbd4x3.c: 53:     if(PORTBbits.RB5 == 1){
 15433     11ED  1E8D               	btfss	13,5	;volatile
 15434     11EE  29F0               	goto	u603_21
 15435     11EF  29F1               	goto	u603_20
 15436     11F0                     u603_21:
 15437     11F0  2A07               	goto	i1l369
 15438     11F1                     u603_20:
 15439     11F1                     i1l4994:
 15440                           
 15441                           ;kbd4x3.c: 54:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15442     11F1  3003               	movlw	3
 15443     11F2  00F0               	movwf	??_Keypad_Get_Char
 15444     11F3  3098               	movlw	152
 15445     11F4                     u717_27:
 15446     11F4  0B89               	decfsz	9,f
 15447     11F5  29F4               	goto	u717_27
 15448     11F6  0BF0               	decfsz	??_Keypad_Get_Char,f
 15449     11F7  29F4               	goto	u717_27
 15450     11F8                     i1l370:	
 15451                           ;kbd4x3.c: 55:         while(PORTBbits.RB5 == 1);
 15452                           
 15453     11F8  0020               	movlb	0	; select bank0
 15454     11F9  1A8D               	btfsc	13,5	;volatile
 15455     11FA  29FC               	goto	u604_21
 15456     11FB  29FD               	goto	u604_20
 15457     11FC                     u604_21:
 15458     11FC  29F8               	goto	i1l370
 15459     11FD                     u604_20:
 15460     11FD                     i1l4996:
 15461                           
 15462                           ;kbd4x3.c: 56:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15463     11FD  3007               	movlw	7
 15464     11FE  00F0               	movwf	??_Keypad_Get_Char
 15465     11FF  307D               	movlw	125
 15466     1200                     u718_27:
 15467     1200  0B89               	decfsz	9,f
 15468     1201  2A00               	goto	u718_27
 15469     1202  0BF0               	decfsz	??_Keypad_Get_Char,f
 15470     1203  2A00               	goto	u718_27
 15471     1204  0000               	nop
 15472                           
 15473                           ;kbd4x3.c: 57:         return '5';
 15474     1205  3035               	movlw	53
 15475     1206  2AA7               	goto	i1l352
 15476     1207                     i1l369:	
 15477                           ;kbd4x3.c: 58:     }
 15478                           
 15479                           
 15480                           ;kbd4x3.c: 59:     if(PORTBbits.RB6 == 1){
 15481     1207  1F0D               	btfss	13,6	;volatile
 15482     1208  2A0A               	goto	u605_21
 15483     1209  2A0B               	goto	u605_20
 15484     120A                     u605_21:
 15485     120A  2A21               	goto	i1l373
 15486     120B                     u605_20:
 15487     120B                     i1l5000:
 15488                           
 15489                           ;kbd4x3.c: 60:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15490     120B  3003               	movlw	3
 15491     120C  00F0               	movwf	??_Keypad_Get_Char
 15492     120D  3098               	movlw	152
 15493     120E                     u719_27:
 15494     120E  0B89               	decfsz	9,f
 15495     120F  2A0E               	goto	u719_27
 15496     1210  0BF0               	decfsz	??_Keypad_Get_Char,f
 15497     1211  2A0E               	goto	u719_27
 15498     1212                     i1l374:	
 15499                           ;kbd4x3.c: 61:         while(PORTBbits.RB6 == 1);
 15500                           
 15501     1212  0020               	movlb	0	; select bank0
 15502     1213  1B0D               	btfsc	13,6	;volatile
 15503     1214  2A16               	goto	u606_21
 15504     1215  2A17               	goto	u606_20
 15505     1216                     u606_21:
 15506     1216  2A12               	goto	i1l374
 15507     1217                     u606_20:
 15508     1217                     i1l5002:
 15509                           
 15510                           ;kbd4x3.c: 62:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15511     1217  3007               	movlw	7
 15512     1218  00F0               	movwf	??_Keypad_Get_Char
 15513     1219  307D               	movlw	125
 15514     121A                     u720_27:
 15515     121A  0B89               	decfsz	9,f
 15516     121B  2A1A               	goto	u720_27
 15517     121C  0BF0               	decfsz	??_Keypad_Get_Char,f
 15518     121D  2A1A               	goto	u720_27
 15519     121E  0000               	nop
 15520                           
 15521                           ;kbd4x3.c: 63:         return '8';
 15522     121F  3038               	movlw	56
 15523     1220  2AA7               	goto	i1l352
 15524     1221                     i1l373:	
 15525                           ;kbd4x3.c: 64:     }
 15526                           
 15527                           
 15528                           ;kbd4x3.c: 65:     if(PORTBbits.RB7 == 1){
 15529     1221  1F8D               	btfss	13,7	;volatile
 15530     1222  2A24               	goto	u607_21
 15531     1223  2A25               	goto	u607_20
 15532     1224                     u607_21:
 15533     1224  2A3B               	goto	i1l377
 15534     1225                     u607_20:
 15535     1225                     i1l5006:
 15536                           
 15537                           ;kbd4x3.c: 66:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15538     1225  3003               	movlw	3
 15539     1226  00F0               	movwf	??_Keypad_Get_Char
 15540     1227  3098               	movlw	152
 15541     1228                     u721_27:
 15542     1228  0B89               	decfsz	9,f
 15543     1229  2A28               	goto	u721_27
 15544     122A  0BF0               	decfsz	??_Keypad_Get_Char,f
 15545     122B  2A28               	goto	u721_27
 15546     122C                     i1l378:	
 15547                           ;kbd4x3.c: 67:         while(PORTBbits.RB7 == 1);
 15548                           
 15549     122C  0020               	movlb	0	; select bank0
 15550     122D  1B8D               	btfsc	13,7	;volatile
 15551     122E  2A30               	goto	u608_21
 15552     122F  2A31               	goto	u608_20
 15553     1230                     u608_21:
 15554     1230  2A2C               	goto	i1l378
 15555     1231                     u608_20:
 15556     1231                     i1l5008:
 15557                           
 15558                           ;kbd4x3.c: 68:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15559     1231  3007               	movlw	7
 15560     1232  00F0               	movwf	??_Keypad_Get_Char
 15561     1233  307D               	movlw	125
 15562     1234                     u722_27:
 15563     1234  0B89               	decfsz	9,f
 15564     1235  2A34               	goto	u722_27
 15565     1236  0BF0               	decfsz	??_Keypad_Get_Char,f
 15566     1237  2A34               	goto	u722_27
 15567     1238  0000               	nop
 15568                           
 15569                           ;kbd4x3.c: 69:         return '0';
 15570     1239  3030               	movlw	48
 15571     123A  2AA7               	goto	i1l352
 15572     123B                     i1l377:	
 15573                           ;kbd4x3.c: 70:     }
 15574                           
 15575                           
 15576                           ;kbd4x3.c: 72:     PORTBbits.RB1 = 0;
 15577     123B  108D               	bcf	13,1	;volatile
 15578                           
 15579                           ;kbd4x3.c: 73:     PORTBbits.RB2 = 0;
 15580     123C  110D               	bcf	13,2	;volatile
 15581                           
 15582                           ;kbd4x3.c: 74:     PORTBbits.RB3 = 1;
 15583     123D  158D               	bsf	13,3	;volatile
 15584                           
 15585                           ;kbd4x3.c: 75:     if(PORTBbits.RB4 == 1){
 15586     123E  1E0D               	btfss	13,4	;volatile
 15587     123F  2A41               	goto	u609_21
 15588     1240  2A42               	goto	u609_20
 15589     1241                     u609_21:
 15590     1241  2A58               	goto	i1l381
 15591     1242                     u609_20:
 15592     1242                     i1l5012:
 15593                           
 15594                           ;kbd4x3.c: 76:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15595     1242  3003               	movlw	3
 15596     1243  00F0               	movwf	??_Keypad_Get_Char
 15597     1244  3098               	movlw	152
 15598     1245                     u723_27:
 15599     1245  0B89               	decfsz	9,f
 15600     1246  2A45               	goto	u723_27
 15601     1247  0BF0               	decfsz	??_Keypad_Get_Char,f
 15602     1248  2A45               	goto	u723_27
 15603     1249                     i1l382:	
 15604                           ;kbd4x3.c: 77:         while(PORTBbits.RB4 == 1);
 15605                           
 15606     1249  0020               	movlb	0	; select bank0
 15607     124A  1A0D               	btfsc	13,4	;volatile
 15608     124B  2A4D               	goto	u610_21
 15609     124C  2A4E               	goto	u610_20
 15610     124D                     u610_21:
 15611     124D  2A49               	goto	i1l382
 15612     124E                     u610_20:
 15613     124E                     i1l5014:
 15614                           
 15615                           ;kbd4x3.c: 78:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15616     124E  3007               	movlw	7
 15617     124F  00F0               	movwf	??_Keypad_Get_Char
 15618     1250  307D               	movlw	125
 15619     1251                     u724_27:
 15620     1251  0B89               	decfsz	9,f
 15621     1252  2A51               	goto	u724_27
 15622     1253  0BF0               	decfsz	??_Keypad_Get_Char,f
 15623     1254  2A51               	goto	u724_27
 15624     1255  0000               	nop
 15625                           
 15626                           ;kbd4x3.c: 79:         return '3';
 15627     1256  3033               	movlw	51
 15628     1257  2AA7               	goto	i1l352
 15629     1258                     i1l381:	
 15630                           ;kbd4x3.c: 80:     }
 15631                           
 15632                           
 15633                           ;kbd4x3.c: 81:     if(PORTBbits.RB5 == 1){
 15634     1258  1E8D               	btfss	13,5	;volatile
 15635     1259  2A5B               	goto	u611_21
 15636     125A  2A5C               	goto	u611_20
 15637     125B                     u611_21:
 15638     125B  2A72               	goto	i1l385
 15639     125C                     u611_20:
 15640     125C                     i1l5018:
 15641                           
 15642                           ;kbd4x3.c: 82:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15643     125C  3003               	movlw	3
 15644     125D  00F0               	movwf	??_Keypad_Get_Char
 15645     125E  3098               	movlw	152
 15646     125F                     u725_27:
 15647     125F  0B89               	decfsz	9,f
 15648     1260  2A5F               	goto	u725_27
 15649     1261  0BF0               	decfsz	??_Keypad_Get_Char,f
 15650     1262  2A5F               	goto	u725_27
 15651     1263                     i1l386:	
 15652                           ;kbd4x3.c: 83:         while(PORTBbits.RB5 == 1);
 15653                           
 15654     1263  0020               	movlb	0	; select bank0
 15655     1264  1A8D               	btfsc	13,5	;volatile
 15656     1265  2A67               	goto	u612_21
 15657     1266  2A68               	goto	u612_20
 15658     1267                     u612_21:
 15659     1267  2A63               	goto	i1l386
 15660     1268                     u612_20:
 15661     1268                     i1l5020:
 15662                           
 15663                           ;kbd4x3.c: 84:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15664     1268  3007               	movlw	7
 15665     1269  00F0               	movwf	??_Keypad_Get_Char
 15666     126A  307D               	movlw	125
 15667     126B                     u726_27:
 15668     126B  0B89               	decfsz	9,f
 15669     126C  2A6B               	goto	u726_27
 15670     126D  0BF0               	decfsz	??_Keypad_Get_Char,f
 15671     126E  2A6B               	goto	u726_27
 15672     126F  0000               	nop
 15673                           
 15674                           ;kbd4x3.c: 85:         return '6';
 15675     1270  3036               	movlw	54
 15676     1271  2AA7               	goto	i1l352
 15677     1272                     i1l385:	
 15678                           ;kbd4x3.c: 86:     }
 15679                           
 15680                           
 15681                           ;kbd4x3.c: 87:     if(PORTBbits.RB6 == 1){
 15682     1272  1F0D               	btfss	13,6	;volatile
 15683     1273  2A75               	goto	u613_21
 15684     1274  2A76               	goto	u613_20
 15685     1275                     u613_21:
 15686     1275  2A8C               	goto	i1l389
 15687     1276                     u613_20:
 15688     1276                     i1l5024:
 15689                           
 15690                           ;kbd4x3.c: 88:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15691     1276  3003               	movlw	3
 15692     1277  00F0               	movwf	??_Keypad_Get_Char
 15693     1278  3098               	movlw	152
 15694     1279                     u727_27:
 15695     1279  0B89               	decfsz	9,f
 15696     127A  2A79               	goto	u727_27
 15697     127B  0BF0               	decfsz	??_Keypad_Get_Char,f
 15698     127C  2A79               	goto	u727_27
 15699     127D                     i1l390:	
 15700                           ;kbd4x3.c: 89:         while(PORTBbits.RB6 == 1);
 15701                           
 15702     127D  0020               	movlb	0	; select bank0
 15703     127E  1B0D               	btfsc	13,6	;volatile
 15704     127F  2A81               	goto	u614_21
 15705     1280  2A82               	goto	u614_20
 15706     1281                     u614_21:
 15707     1281  2A7D               	goto	i1l390
 15708     1282                     u614_20:
 15709     1282                     i1l5026:
 15710                           
 15711                           ;kbd4x3.c: 90:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15712     1282  3007               	movlw	7
 15713     1283  00F0               	movwf	??_Keypad_Get_Char
 15714     1284  307D               	movlw	125
 15715     1285                     u728_27:
 15716     1285  0B89               	decfsz	9,f
 15717     1286  2A85               	goto	u728_27
 15718     1287  0BF0               	decfsz	??_Keypad_Get_Char,f
 15719     1288  2A85               	goto	u728_27
 15720     1289  0000               	nop
 15721                           
 15722                           ;kbd4x3.c: 91:         return '9';
 15723     128A  3039               	movlw	57
 15724     128B  2AA7               	goto	i1l352
 15725     128C                     i1l389:	
 15726                           ;kbd4x3.c: 92:     }
 15727                           
 15728                           
 15729                           ;kbd4x3.c: 93:     if(PORTBbits.RB7 == 1){
 15730     128C  1F8D               	btfss	13,7	;volatile
 15731     128D  2A8F               	goto	u615_21
 15732     128E  2A90               	goto	u615_20
 15733     128F                     u615_21:
 15734     128F  2AA6               	goto	i1l5036
 15735     1290                     u615_20:
 15736     1290                     i1l5030:
 15737                           
 15738                           ;kbd4x3.c: 94:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15739     1290  3003               	movlw	3
 15740     1291  00F0               	movwf	??_Keypad_Get_Char
 15741     1292  3098               	movlw	152
 15742     1293                     u729_27:
 15743     1293  0B89               	decfsz	9,f
 15744     1294  2A93               	goto	u729_27
 15745     1295  0BF0               	decfsz	??_Keypad_Get_Char,f
 15746     1296  2A93               	goto	u729_27
 15747     1297                     i1l394:	
 15748                           ;kbd4x3.c: 95:         while(PORTBbits.RB7 == 1);
 15749                           
 15750     1297  0020               	movlb	0	; select bank0
 15751     1298  1B8D               	btfsc	13,7	;volatile
 15752     1299  2A9B               	goto	u616_21
 15753     129A  2A9C               	goto	u616_20
 15754     129B                     u616_21:
 15755     129B  2A97               	goto	i1l394
 15756     129C                     u616_20:
 15757     129C                     i1l5032:
 15758                           
 15759                           ;kbd4x3.c: 96:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15760     129C  3007               	movlw	7
 15761     129D  00F0               	movwf	??_Keypad_Get_Char
 15762     129E  307D               	movlw	125
 15763     129F                     u730_27:
 15764     129F  0B89               	decfsz	9,f
 15765     12A0  2A9F               	goto	u730_27
 15766     12A1  0BF0               	decfsz	??_Keypad_Get_Char,f
 15767     12A2  2A9F               	goto	u730_27
 15768     12A3  0000               	nop
 15769                           
 15770                           ;kbd4x3.c: 97:         return '#';
 15771     12A4  3023               	movlw	35
 15772     12A5  2AA7               	goto	i1l352
 15773     12A6                     i1l5036:
 15774                           
 15775                           ;kbd4x3.c: 99:     return 0;
 15776     12A6  3000               	movlw	0
 15777     12A7                     i1l352:
 15778     12A7  0008               	return
 15779     12A8                     __end_of_Keypad_Get_Char:
 15780                           
 15781                           	psect	text53
 15782     19E4                     __ptext53:	
 15783 ;; *************** function _Escribir_Clave *****************
 15784 ;; Defined at:
 15785 ;;		line 370 in file "main.c"
 15786 ;; Parameters:    Size  Location     Type
 15787 ;;  str             1    wreg     PTR unsigned char 
 15788 ;;		 -> clave(5), 
 15789 ;; Auto vars:     Size  Location     Type
 15790 ;;  str             1    5[COMMON] PTR unsigned char 
 15791 ;;		 -> clave(5), 
 15792 ;;  pos             1    6[COMMON] unsigned char 
 15793 ;; Return value:  Size  Location     Type
 15794 ;;                  1    wreg      void 
 15795 ;; Registers used:
 15796 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15797 ;; Tracked objects:
 15798 ;;		On entry : 0/0
 15799 ;;		On exit  : 0/0
 15800 ;;		Unchanged: 0/0
 15801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15802 ;;      Params:         0       0       0       0       0       0       0       0
 15803 ;;      Locals:         2       0       0       0       0       0       0       0
 15804 ;;      Temps:          1       0       0       0       0       0       0       0
 15805 ;;      Totals:         3       0       0       0       0       0       0       0
 15806 ;;Total ram usage:        3 bytes
 15807 ;; Hardware stack levels used: 1
 15808 ;; Hardware stack levels required when called: 1
 15809 ;; This function calls:
 15810 ;;		_EEPROM_Write
 15811 ;; This function is called by:
 15812 ;;		_IOC
 15813 ;; This function uses a non-reentrant model
 15814 ;;
 15815                           
 15816     19E4                     _Escribir_Clave:	
 15817                           ;psect for function _Escribir_Clave
 15818                           
 15819                           
 15820                           ;incstack = 0
 15821                           ; Regs used in _Escribir_Clave: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15822                           ;Escribir_Clave@str stored from wreg
 15823     19E4  00F5               	movwf	Escribir_Clave@str
 15824     19E5                     i1l5066:
 15825                           
 15826                           ;main.c: 370: void Escribir_Clave(char* str);main.c: 371: {;main.c: 372:     for(uint8_t
      +                           pos=0; pos<4; pos++)
 15827     19E5  01F6               	clrf	Escribir_Clave@pos
 15828     19E6                     i1l5072:
 15829                           
 15830                           ;main.c: 373:     {;main.c: 374:         EEPROM_Write(pos, str[pos]);
 15831     19E6  0876               	movf	Escribir_Clave@pos,w
 15832     19E7  0775               	addwf	Escribir_Clave@str,w
 15833     19E8  00F4               	movwf	??_Escribir_Clave
 15834     19E9  0874               	movf	??_Escribir_Clave,w
 15835     19EA  0086               	movwf	6
 15836     19EB  3001               	movlw	1	; select bank2/3
 15837     19EC  0087               	movwf	7
 15838     19ED  0801               	movf	1,w
 15839     19EE  00F0               	movwf	EEPROM_Write@data
 15840     19EF  0876               	movf	Escribir_Clave@pos,w
 15841     19F0  319A  2237  3199   	fcall	_EEPROM_Write
 15842     19F3                     i1l5074:
 15843                           
 15844                           ;main.c: 375:     }
 15845     19F3  3001               	movlw	1
 15846     19F4  00F4               	movwf	??_Escribir_Clave
 15847     19F5  0874               	movf	??_Escribir_Clave,w
 15848     19F6  07F6               	addwf	Escribir_Clave@pos,f
 15849     19F7                     i1l5076:
 15850     19F7  3004               	movlw	4
 15851     19F8  0276               	subwf	Escribir_Clave@pos,w
 15852     19F9  1C03               	skipc
 15853     19FA  29FC               	goto	u620_21
 15854     19FB  29FD               	goto	u620_20
 15855     19FC                     u620_21:
 15856     19FC  29E6               	goto	i1l5072
 15857     19FD                     u620_20:
 15858     19FD                     i1l331:
 15859     19FD  0008               	return
 15860     19FE                     __end_of_Escribir_Clave:
 15861                           
 15862                           	psect	text54
 15863     1A37                     __ptext54:	
 15864 ;; *************** function _EEPROM_Write *****************
 15865 ;; Defined at:
 15866 ;;		line 6 in file "eeprom.c"
 15867 ;; Parameters:    Size  Location     Type
 15868 ;;  dir             1    wreg     unsigned char 
 15869 ;;  data            1    0[COMMON] unsigned char 
 15870 ;; Auto vars:     Size  Location     Type
 15871 ;;  dir             1    3[COMMON] unsigned char 
 15872 ;; Return value:  Size  Location     Type
 15873 ;;                  1    wreg      void 
 15874 ;; Registers used:
 15875 ;;		wreg
 15876 ;; Tracked objects:
 15877 ;;		On entry : 0/0
 15878 ;;		On exit  : 0/0
 15879 ;;		Unchanged: 0/0
 15880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15881 ;;      Params:         1       0       0       0       0       0       0       0
 15882 ;;      Locals:         1       0       0       0       0       0       0       0
 15883 ;;      Temps:          2       0       0       0       0       0       0       0
 15884 ;;      Totals:         4       0       0       0       0       0       0       0
 15885 ;;Total ram usage:        4 bytes
 15886 ;; Hardware stack levels used: 1
 15887 ;; This function calls:
 15888 ;;		Nothing
 15889 ;; This function is called by:
 15890 ;;		_Escribir_Clave
 15891 ;;		_EEPROM_Clear
 15892 ;; This function uses a non-reentrant model
 15893 ;;
 15894                           
 15895     1A37                     _EEPROM_Write:	
 15896                           ;psect for function _EEPROM_Write
 15897                           
 15898                           
 15899                           ;incstack = 0
 15900                           ; Regs used in _EEPROM_Write: [wreg]
 15901                           ;EEPROM_Write@dir stored from wreg
 15902     1A37  00F3               	movwf	EEPROM_Write@dir
 15903     1A38                     i1l4816:
 15904                           
 15905                           ;eeprom.c: 6: void EEPROM_Write(uint8_t dir, uint8_t data);eeprom.c: 7: {;eeprom.c: 8:  
      +                             EEADR = dir;
 15906     1A38  0873               	movf	EEPROM_Write@dir,w
 15907     1A39  00F1               	movwf	??_EEPROM_Write
 15908     1A3A  01F2               	clrf	??_EEPROM_Write+1
 15909     1A3B  0871               	movf	??_EEPROM_Write,w
 15910     1A3C  0023               	movlb	3	; select bank3
 15911     1A3D  0091               	movwf	17	;volatile
 15912     1A3E  0872               	movf	??_EEPROM_Write+1,w
 15913     1A3F  0092               	movwf	18	;volatile
 15914                           
 15915                           ;eeprom.c: 9:     EEDAT = data;
 15916     1A40  0870               	movf	EEPROM_Write@data,w
 15917     1A41  00F1               	movwf	??_EEPROM_Write
 15918     1A42  01F2               	clrf	??_EEPROM_Write+1
 15919     1A43  0871               	movf	??_EEPROM_Write,w
 15920     1A44  0093               	movwf	19	;volatile
 15921     1A45  0872               	movf	??_EEPROM_Write+1,w
 15922     1A46  0094               	movwf	20	;volatile
 15923     1A47                     i1l4818:
 15924                           
 15925                           ;eeprom.c: 10:     EECON1bits.EEPGD = 0;
 15926     1A47  1395               	bcf	21,7	;volsfr
 15927     1A48                     i1l4820:
 15928                           
 15929                           ;eeprom.c: 11:     EECON1bits.WREN = 1;
 15930     1A48  1515               	bsf	21,2	;volsfr
 15931                           
 15932                           ;eeprom.c: 12:     EECON2 = 0x55;
 15933     1A49  3055               	movlw	85
 15934     1A4A  0096               	movwf	22	;volsfr
 15935                           
 15936                           ;eeprom.c: 13:     EECON2 = 0xAA;
 15937     1A4B  30AA               	movlw	170
 15938     1A4C  0096               	movwf	22	;volsfr
 15939     1A4D                     i1l4822:
 15940                           
 15941                           ;eeprom.c: 14:     EECON1bits.WR = 1;
 15942     1A4D  1495               	bsf	21,1	;volsfr
 15943     1A4E                     i1l478:	
 15944                           ;eeprom.c: 15:     while(PIR2bits.EEIF == 0);
 15945                           
 15946     1A4E  0020               	movlb	0	; select bank0
 15947     1A4F  1E12               	btfss	18,4	;volatile
 15948     1A50  2A52               	goto	u581_21
 15949     1A51  2A53               	goto	u581_20
 15950     1A52                     u581_21:
 15951     1A52  2A4E               	goto	i1l478
 15952     1A53                     u581_20:
 15953     1A53                     i1l480:
 15954                           
 15955                           ;eeprom.c: 16:     PIR2bits.EEIF = 0;
 15956     1A53  1212               	bcf	18,4	;volatile
 15957     1A54                     i1l481:
 15958     1A54  0008               	return
 15959     1A55                     __end_of_EEPROM_Write:
 15960     007E                     btemp	set	126	;btemp
 15961     007E                     int$flags	set	126
 15962     007E                     wtemp0	set	126
 15963                           
 15964                           	psect	config
 15965                           
 15966                           ;Config register CONFIG1 @ 0x8007
 15967                           ;	Oscillator Selection
 15968                           ;	FOSC = XT, XT Oscillator, Crystal/resonator connected between OSC1 and OSC2 pins
 15969                           ;	Watchdog Timer Enable
 15970                           ;	WDTE = OFF, WDT disabled
 15971                           ;	Power-up Timer Enable
 15972                           ;	PWRTE = OFF, PWRT disabled
 15973                           ;	MCLR Pin Function Select
 15974                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 15975                           ;	Flash Program Memory Code Protection
 15976                           ;	CP = OFF, Program memory code protection is disabled
 15977                           ;	Data Memory Code Protection
 15978                           ;	CPD = OFF, Data memory code protection is disabled
 15979                           ;	Brown-out Reset Enable
 15980                           ;	BOREN = OFF, Brown-out Reset disabled
 15981                           ;	Clock Out Enable
 15982                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 15983                           ;	Internal/External Switchover
 15984                           ;	IESO = ON, Internal/External Switchover mode is enabled
 15985                           ;	Fail-Safe Clock Monitor Enable
 15986                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 15987     8007                     	org	32775
 15988     8007  39E1               	dw	14817
 15989                           
 15990                           ;Config register CONFIG2 @ 0x8008
 15991                           ;	Flash Memory Self-Write Protection
 15992                           ;	WRT = OFF, Write protection off
 15993                           ;	Voltage Regulator Capacitor Enable
 15994                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 15995                           ;	PLL Enable
 15996                           ;	PLLEN = OFF, 4x PLL disabled
 15997                           ;	Stack Overflow/Underflow Reset Enable
 15998                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 15999                           ;	Brown-out Reset Voltage Selection
 16000                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 16001                           ;	Low-Voltage Programming Enable
 16002                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 16003     8008                     	org	32776
 16004     8008  1EFF               	dw	7935

Data Sizes:
    Strings     170
    Constant    0
    Data        0
    BSS         137
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     80      80
    BANK1            80     77      80
    BANK2            80     31      63
    BANK3            80      0      20
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    Escribir_Clave@str	PTR unsigned char  size(1) Largest target is 5
		 -> clave(BANK2[5]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK3[20]), STR_1(CODE[15]), STR_10(CODE[7]), STR_11(CODE[9]), 
		 -> STR_12(CODE[13]), STR_13(CODE[12]), STR_14(CODE[15]), STR_15(CODE[14]), 
		 -> STR_16(CODE[6]), STR_17(CODE[11]), STR_18(CODE[15]), STR_4(CODE[2]), 
		 -> STR_5(CODE[17]), STR_6(CODE[16]), STR_7(CODE[15]), STR_8(CODE[7]), 
		 -> STR_9(CODE[9]), 

    Leer_Clave@str	PTR unsigned char  size(1) Largest target is 5
		 -> clave_enter(BANK2[5]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1307$buffer	PTR unsigned char  size(2) Largest target is 0

    S1307$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_3(CODE[7]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK3[20]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> clave(BANK2[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> clave_enter(BANK2[5]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_19(CODE[4]), STR_22(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_3(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_3(CODE[7]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_3(CODE[7]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _IOC in COMMON

    _IOC->i1_Lcd_Write_String
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port
    _Leer_Clave->_EEPROM_Read
    _Escribir_Clave->_EEPROM_Write

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->__Umul8_16
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___xxtofl->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _IOC in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _IOC in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_sprintf

Critical Paths under _IOC in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IOC in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IOC in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IOC in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IOC in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   32091
                                             13 BANK2     18    18      0
            _ADC_GetConversionResult
                     _ADC_Initialize
               _ADC_IsConversionDone
                _ADC_StartConversion
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                             ___wmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             30    16     14   25770
                                             62 BANK1     15     1     14
                                              0 BANK2     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3   25347
                                             77 BANK0      3     0      3
                                             58 BANK1      4     4      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           15    13      2   25025
                                             75 BANK0      2     0      2
                                             45 BANK1     13    13      0
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2     685
                                              6 BANK0      9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              55    50      5   18708
                                             66 BANK0      9     4      5
                                              0 BANK1     45    45      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     4      2     291
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               8     5      3     328
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (5) _labs                                                 4     0      4     294
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             46 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2637
                                             35 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2288
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3177
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             35 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    2033
                                             20 BANK0     26    18      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13    11      2    4006
                                             22 BANK0     13    11      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     4      3    2445
                                             15 BANK0      7     4      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     888
                                              8 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              6 BANK0     14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2    1272
                                              5 BANK0      5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1804
                                              3 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     308
                                              3 BANK0      1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _IOC                                                  2     2      0    2883
                                             10 COMMON     2     2      0
                     _Escribir_Clave
                    _Keypad_Get_Char
                        _Keypad_Init
                         _Leer_Clave
                             _strcmp
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                   i1_Lcd_Write_Char
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (10) i1_Lcd_Write_String                                  5     3      2     632
                                              5 COMMON     5     3      2
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (11) i1_Lcd_Write_Char                                    4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (10) i1_Lcd_Set_Cursor                                    6     5      1    1092
                                              3 COMMON     6     5      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (10) i1_Lcd_Clear                                         0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (11) i1_Lcd_Cmd                                           2     2      0     110
                                              1 COMMON     2     2      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (12) i1_Lcd_Port                                          1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _strcmp                                              4     2      2     330
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _Leer_Clave                                          3     3      0     200
                                              3 COMMON     3     3      0
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (11) _EEPROM_Read                                         3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (10) _Keypad_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Keypad_Get_Char                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _Escribir_Clave                                      3     3      0     341
                                              4 COMMON     3     3      0
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (11) _EEPROM_Write                                        4     3      1     196
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_Initialize
   _ADC_IsConversionDone
   _ADC_StartConversion
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___wmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 _IOC (ROOT)
   _Escribir_Clave
     _EEPROM_Write
   _Keypad_Get_Char
   _Keypad_Init
   _Leer_Clave
     _EEPROM_Read
   _strcmp
   i1_Lcd_Clear
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
   i1_Lcd_Write_Char
     i1_Lcd_Port
   i1_Lcd_Write_String
     i1_Lcd_Write_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     151       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4D      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     1F      3F      10       78.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      14      12       25.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     151      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 18 13:12:13 2025

                   ___fldiv@aexp 004D                     ___fldiv@bexp 004C                     ___fldiv@sign 0045  
                ?_Escribir_Clave 0070                      _SSPSTATbits 0214                    Leer_Clave@pos 0075  
                  Leer_Clave@str 0074                               l23 07FE                               l17 1951  
                             l26 1949                               l29 196C                     ___awdiv@sign 0026  
            ___wmul@multiplicand 0022              __Umul8_16@word_mpld 0026                              l210 051A  
                            l204 0510                              l213 051F                              l222 052C  
                            l231 053B                              l207 0516                              l216 0523  
                            l241 0566                              l225 0531                              l410 100D  
                            l250 0575                              l234 053F                              l219 0528  
                            l244 056C                              l236 0543                              l228 0535  
                            l253 0579                              l237 0544                              l422 102B  
                            l414 1017                              l270 059B                              l262 0588  
                            l431 1975                              l271 059C                              l255 057D  
                            l247 0570                              l280 05B5                              l264 058C  
                            l256 057E                              l425 102D                              l441 1F80  
                            l265 058D                              l418 1021                              l282 05B9  
                            l274 05A6                              l283 05BA                              l259 0584  
                            l428 0816                              l444 1CB2                              l276 05AA  
                            l268 0597                              l437 1F80                              l453 1A73  
                            l277 05AB                              l447 07FB                              l641 1AD3  
                            l820 109F                              l805 1D06                              l814 1C61  
                            l639 1ABF                              l808 1C30                              l840 1E7C  
                            l809 1C4C                              l825 10B8                              l817 104B  
                            l833 1E91                              l843 1E91                              l940 164E  
                            l829 1981                              l792 1DBF                              l944 16CB  
                            l961 175B                              l953 17FF                              l946 16A9  
                            l971 179F                              l965 177D                              l982 17F8  
                            l974 17D6                              l983 17FF                              l986 1AB3  
                            l996 149F                              l998 15F7                              _IOC 0004  
                            _abs 198F                              _pad 1BE3                              _hor 0131  
                            _min 0132                              _seg 00EF                     ___awmod@sign 0026  
                            wreg 0009                     ___flmul@aexp 003B                     ___flmul@bexp 003C  
                   ___flmul@sign 0036                     ___flmul@temp 0041                     ___flmul@prod 003D  
                           ?_IOC 0070                     ___fltol@exp1 0029                             l1020 15F0  
                           l1012 157D                             l1102 1B19                             l1017 15C9  
                           l1018 15E3                             l1042 0447                             l1131 1BEB  
                           ?_abs 0027                             l1036 04C7                             l1300 1BA6  
                           l1142 083D                             l1222 1E20                             l1135 1C12  
                           l1143 085E                             l1055 1B2D                             l1303 1BB2  
                           l1231 12E1                             l1080 10DC                             l1048 04BB  
                           l1057 1B3D                             l1082 1163                             l1315 1D5F  
                           l1323 1B62                             l1147 085C                             l1156 08EF  
                           l1340 1A19                             l1164 0964                             l1093 112F  
                           l1237 144D                             l1229 12D5                             l1094 113B  
                           l1086 1115                             l1326 07FF                             l1183 0B8F  
                           l1167 0FFF                             l4000 1458                             l1193 0DE9  
                           l4010 146C                             l4002 1459                             l1282 0727  
                           l1283 07D0                             l1259 1AF6                             l4100 157A  
                           l4020 1481                             l4004 145E                             l4012 146E  
                           l1277 19A0                             l1269 1FFF                             l4110 1593  
                           l4030 1495                             l4022 1482                             l4014 1476  
                           l4006 1463                             l1287 07C8                             l4120 15DA  
                           l4112 15AB                             l4104 1582                             l4024 1487  
                           l4032 1497                             l4016 147B                             l4008 146B  
                           l4200 0382                             l1297 19CA                             l4122 15E2  
                           l4106 1587                             l4114 15AF                             l4050 14DE  
                           l4034 14A7                             l4042 14C0                             l4026 148C  
                           l4018 147D                             l4210 03BF                             l4202 0389  
                           l5100 110E                             l4124 15E6                             l4116 15BC  
                           l4108 158F                             l4060 14FD                             l4052 14E6  
                           l4044 14C5                             l4036 14B3                             l4028 1494  
                           l4220 0410                             l4212 03D1                             l4204 039B  
                           l4140 0297                             l4300 1FB4                             l5110 113D  
                           l5102 111C                             l4126 15EA                             l4118 15D7  
                           l4070 1529                             l4062 150B                             l4054 14EE  
                           l4038 14B7                             l4222 0417                             l4230 0427  
                           l4214 03E6                             l4206 03A2                             l4150 02AC  
                           l4142 0298                             l4134 028D                             l4310 1FDB  
                           l4302 1FCB                             l5112 1151                             l5104 1125  
                           l4400 084E                             l4128 15EC                             l4080 1544  
                           l4072 152A                             l4064 150F                             l4056 14F6  
                           l4048 14CE                             l4232 042B                             l4224 041B  
                           l4216 03FD                             l4208 03B4                             l4160 02C0  
                           l4152 02B4                             l4144 029D                             l4136 0291  
                           l3600 15F8                             l4304 1FD0                             l4320 1A02  
                           l5200 04D8                             l5114 1156                             l5106 1129  
                           l4410 086A                             l4402 0853                             l4090 1559  
                           l4082 1546                             l4074 1532                             l4066 1510  
                           l4058 14F8                             l4250 0475                             l4242 044C  
                           l4234 042C                             l4226 041C                             l4218 0404  
                           l4170 02DC                             l4162 02C5                             l4154 02B9  
                           l4146 02A2                             l4138 0293                             l3610 1608  
                           l3602 15FC                             l4314 1FFB                             l4330 06E6  
                           l4322 19B5                             l5210 04E3                             l5202 04DA  
                           l5116 115A                             l5108 1133                             l4420 08AC  
                           l4412 0886                             l4404 0858                             l4084 154D  
                           l4092 155D                             l4068 1517                             l4076 1536  
                           l4260 04A7                             l4244 0451                             l4252 0479  
                           l4236 0430                             l4228 0423                             l4180 02FA  
                           l4172 02E1                             l4164 02CA                             l4156 02BB  
                           l4148 02AA                             l3700 16D4                             l3620 1620  
                           l3612 160D                             l3604 15FE                             l4308 1FD5  
                           l4340 0744                             l4332 06FE                             l4324 19BA  
                           l4500 0AB9                             l5300 0697                             l5220 04EB  
                           l5212 04E5                             l5204 04DD                             l5118 115B  
                           l4430 08D9                             l4422 08B3                             l4414 088A  
                           l4406 0862                             l4094 1561                             l4086 1551  
                           l4078 153C                             l4270 04BF                             l4262 04A9  
                           l4254 0486                             l4246 0459                             l4238 0444  
                           l4190 0351                             l4182 0307                             l4174 02E6  
                           l4166 02D2                             l4158 02BF                             l3710 16ED  
                           l3630 1630                             l3622 1623                             l3614 1615  
                           l3606 1602                             l4350 0789                             l4334 0719  
                           l4326 19BB                             l4318 1A00                             l4502 0AEA  
                           l5310 06CE                             l5302 069F                             l5230 04F4  
                           l5222 04EC                             l5214 04E7                             l5206 04DF  
                           l5080 10C0                             l4280 1BF8                             l4432 08DD  
                           l4424 08C0                             l4416 088E                             l4408 0865  
                           l4096 1562                             l4088 1552                             l3800 1B29  
                           l4264 04B4                             l4256 0490                             l4248 045D  
                           l4192 035E                             l4184 031F                             l4168 02D4  
                           l3720 1700                             l3712 16F1                             l3704 16DD  
                           l3640 1644                             l3632 1631                             l3624 1629  
                           l3616 1616                             l3608 1603                             l4352 07A0  
                           l4344 0759                             l4336 0726                             l4360 1B8D  
                           l4600 0EAA                             l4520 0B8B                             l4504 0AF4  
                           l4512 0B55                             l4440 08F3                             l5312 06D6  
                           l5304 06A6                             l5240 04FE                             l5232 04F5  
                           l5224 04F0                             l5216 04E9                             l5208 04E1  
                           l4370 100A                             l5090 10ED                             l5082 10C4  
                           l4290 1995                             l3810 1B43                             l4282 1BFD  
                           l4274 1BE5                             l4434 08E4                             l4426 08CE  
                           l4418 089E                             l4098 1566                             l3802 1B34  
                           l4266 04B8                             l4258 049E                             l4194 0365  
                           l4186 032C                             l4178 02EF                             l3730 174A  
                           l3714 16F3                             l3706 16E5                             l3722 1705  
                           l3650 165E                             l3634 1636                             l3642 1646  
                           l3626 162A                             l3618 1618                             l4354 07A9  
                           l4346 0770                             l4338 072C                             l4362 1B92  
                           l4610 0F0E                             l4602 0EB0                             l4530 0BAB  
                           l4522 0B97                             l4506 0B20                             l4514 0B7C  
                           l4450 0949                             l4442 0903                             l5306 06BF  
                           l5250 0527                             l5242 0501                             l5234 04F6  
                           l5226 04F2                             l5218 04EA                             l4380 1023  
                           l4372 100F                             l5092 10F0                             l5084 10D4  
                           l3900 1CED                             l3812 1B4F                             l4284 1C0B  
                           l4276 1BE9                             l4428 08D3                             l3804 1B39  
                           l4268 04B9                             l4196 0370                             l4188 0344  
                           l3740 1771                             l3724 171B                             l3732 1753  
                           l3716 16F7                             l3708 16E9                             l3660 1668  
                           l3652 1660                             l3644 1654                             l3636 163B  
                           l3628 162C                             l4356 07C0                             l4348 0778  
                           l4364 1B98                             l4620 0F64                             l4612 0F3A  
                           l4604 0EB8                             l4540 0BC8                             l4532 0BB1  
                           l4524 0B9D                             l4516 0B82                             l4508 0B24  
                           l4460 0966                             l4452 0951                             l4444 0921  
                           l3820 1ABB                             l4700 1317                             l5308 06C7  
                           l5260 0557                             l5252 0530                             l5244 050E  
                           l5236 04F8                             l5228 04F3                             l5180 04CD  
                           l4382 1028                             l4374 1014                             l5094 10FB  
                           l5086 10E4                             l5078 10BB                             l3830 1D60  
                           l3902 1CF2                             l4286 198F                             l3590 1D17  
                           l3814 1B54                             l4278 1BEE                             l4390 082B  
                           l4198 0377                             l3750 1786                             l3742 1778  
                           l3734 1763                             l3726 173F                             l3718 16F8  
                           l3670 1672                             l3662 166A                             l3654 1662  
                           l3646 1658                             l3638 1643                             l4294 1F81  
                           l4366 1B9C                             l4630 0F9D                             l4622 0F69  
                           l4614 0F3E                             l4606 0EBC                             l4550 0D0D  
                           l4542 0C9B                             l4526 0BA1                             l4534 0BB5  
                           l4518 0B86                             l4462 097F                             l4454 0956  
                           l4446 0924                             l4438 08F2                             l3822 1AC4  
                           l4710 134B                             l4702 1320                             l5270 0591  
                           l5262 0564                             l5254 0539                             l5246 0514  
                           l5238 04FB                             l5190 04D2                             l5182 04CE  
                           l5174 04C8                             ?_pad 002F                             l4376 1019  
                           l4368 1006                             l4800 07DB                             l5096 1102  
                           l3840 1D71                             l3832 1D62                             l3904 1CF8  
                           l4288 1994                             l3592 1D22                             l3584 1D07  
                           l3808 1B40                             l4392 0830                             l4384 0819  
                           l3920 1C60                             l3912 1C13                             l3760 1796  
                           l3752 178B                             l3744 177C                             l3736 1768  
                           l3728 1745                             l3680 167B                             l3672 1674  
                           l3664 166C                             l3656 1664                             l3648 165C  
                           l4296 1F99                             l4640 0FC6                             l4624 0F6F  
                           l4608 0EC0                             l4616 0F42                             l4560 0DAE  
                           l4552 0D34                             l4544 0C9F                             l4536 0BB7  
                           l4528 0BA9                             l4480 09E9                             l4464 0985  
                           l4472 09B2                             l4456 095B                             l4448 0946  
                           l3824 1AC9                             l3816 1AB4                             l4720 137F  
                           l4712 135A                             l4704 132E                             l5280 05A5  
                           l5272 0594                             l5264 056A                             l5256 0548  
                           l5248 051E                             l5192 04D4                             l5184 04CF  
                           l5176 04CA                             l4378 101E                             l4810 07F3  
                           l4802 07E6                             l5098 1106                             l3850 1D85  
                           l3842 1D76                             l3834 1D66                             l3906 1CFD  
                           l3594 1D42                             l3586 1D0D                             l4394 0836  
                           l4386 0820                             l3914 1C28                             l3930 1067  
                           l3770 17B1                             l3762 179C                             l3746 1781  
                           l3754 178D                             l3690 16B7                             l3682 1692  
                           l3674 1676                             l3666 166E                             l3658 1666  
                           l4298 1FAE                             l4634 0FA3                             l4642 0FD9  
                           l4626 0F85                             l4618 0F54                             l4570 0DF7  
                           l4562 0DB3                             l4554 0D39                             l4546 0CB1  
                           l4538 0BBF                             l4474 09CC                             l4466 0991  
                           l4458 0960                             l3826 1ACF                             l3818 1AB7  
                           l4722 1386                             l4730 1390                             l4714 1369  
                           l4706 1337                             l5290 05C1                             l5282 05AF  
                           l5274 0596                             l5266 0574                             l5258 054F  
                           l5194 04D5                             l5186 04D0                             l5178 04CC  
                           l4900 1F09                             l4812 07F5                             l4804 07E8  
                           l3860 1DA5                             l3852 1D8A                             l3844 1D7A  
                           l3836 1D6B                             l3908 1D02                             l3596 1D55  
                           l3588 1D12                             l4396 0845                             l4388 0825  
                           l3916 1C44                             l3940 10B7                             l3932 106B  
                           l3924 102E                             l3780 17E8                             l3772 17B5  
                           l3748 1784                             l3756 1791                             l3692 16B8  
                           l3684 16AD                             l3676 1678                             l3668 1670  
                           l4644 0FDF                             l4636 0FAF                             l4628 0F8C  
                           l4580 0E7C                             l4572 0DF9                             l4564 0DDF  
                           l4556 0D41                             l4548 0D03                             l4492 0A29  
                           l4476 09D2                             l4484 09FF                             l4468 099C  
                           l4660 1DEB                             l4652 1DC2                             l4740 13D6  
                           l4724 138B                             l4732 13A3                             l4708 1341  
                           l5292 05C9                             l5284 05B2                             l5276 05A0  
                           l5268 0582                             l5196 04D6                             l5188 04D1  
                           l4670 0802                             l4902 1F0E                             l4910 1F26  
                           l4814 07F9                             l4806 07EC                             l3870 1DBB  
                           l3862 1DA6                             l3854 1D8E                             l3846 1D7C  
                           l3838 1D6D                             l4398 084A                             l3918 1C5E  
                           l3934 1083                             l3926 1043                             l3790 17FA  
                           l3782 17ED                             l3774 17D2                             l3766 17A4  
                           l3758 1792                             l3694 16C0                             l3686 16B1  
                           l3678 167A                             l4646 0FEA                             l4638 0FB3  
                           l4590 0E94                             l4582 0E81                             l4574 0DFC  
                           l4566 0DE5                             l4558 0D74                             l4494 0A36  
                           l4486 0A08                             l4478 09DE                             l4662 1E00  
                           l4654 1DC4                             l4750 1413                             l4742 13E6  
                           l4734 13AE                             l4726 138E                             l4718 1376  
                           l5294 05D4                             l5286 05B4                             l5278 05A3  
                           l5198 04D7                             l4672 0804                             l4912 1F2C  
                           l4920 1F44                             l4904 1F19                             l4808 07EE  
                           l3864 1DAB                             l3856 1D92                             l3848 1D82  
                           l3880 1CBE                             l3936 1087                             l3928 105F  
                           l3944 1976                             l3792 17FE                             l3784 17EE  
                           l3776 17DB                             l3768 17A9                             l3688 16B3  
                           l3696 16C4                             l3960 1E45                             l3952 1E21  
                           l4648 0FEE                             l4592 0E97                             l4584 0E85  
                           l4576 0E5B                             l4568 0DF6                             l4496 0A62  
                           l4488 0A0A                             l4656 1DD5                             l4664 1E08  
                           l4744 13F6                             l4736 13C2                             l4752 1424  
                           l4680 12AA                             l4832 1AD6                             l5296 0625  
                           l5288 05BE                             l4674 0809                             l4922 1F4A  
                           l4930 1F62                             l4914 1F37                             l4906 1F1C  
                           l3858 1DA1                             l3866 1DB1                             l3890 1CD2  
                           l3882 1CC0                             l3874 1CB3                             l3938 10B5  
                           l3794 1B1C                             l3946 197F                             l3786 17F2  
                           l3778 17E0                             l3698 16CF                             l3962 1E46  
                           l3954 1E2B                             l4594 0E9E                             l4586 0E8C  
                           l4578 0E77                             l4498 0A92                             l4666 1E1C  
                           l4658 1DDD                             l4690 12D7                             l4682 12BD  
                           l4834 1ADF                             l5298 0690                             l4676 080B  
                           l4932 1F68                             l4924 1F55                             l4916 1F3A  
                           l4908 1F20                             l4940 1A55                             l3868 1DB6  
                           l3892 1CD7                             l3884 1CC4                             l3876 1CB5  
                           l3796 1B1E                             l3948 1981                             l3788 17F4  
                           l3964 1E4E                             l4596 0EA2                             l4588 0E90  
                           l4684 12C6                             l4756 142E                             l4836 1AE9  
                           l4678 0814                             l4934 1F73                             l4926 1F58  
                           l4918 1F3E                             l4942 1A59                             l3894 1CDB  
                           l3886 1CC9                             l3878 1CB9                             l3798 1B25  
                           l3990 1A97                             l3982 1E73                             l3974 1E5C  
                           l3966 1E50                             l3958 1E34                             l4598 0EA6  
                           l5750 13DE                             l4694 12E4                             l4686 12CE  
                           l4838 1AF3                             l4950 1AFD                             l4872 194A  
                           l4880 1943                             l4936 1F76                             l4928 1F5C  
                           l4944 1A63                             l3896 1CDF                             l3888 1CCF  
                           l3984 1E81                             l3968 1E54                             l3976 1E6C  
                           l5752 141F                             l4696 12FE                             l4688 12D3  
                           l4952 1AFF                             l4874 194D                             l4794 196D  
                           l4890 1C69                             l4938 1F7A                             l4946 1A68  
                           l3898 1CE9                             l3994 144E                             l3986 1E86  
                           l4698 1304                             l5746 12F9                             l4954 1B01  
                           l4884 1964                             l4876 194E                             l4892 1C6D  
                           l4796 07D3                             l3996 1452                             l3988 1A94  
                           l5748 1398                             l4956 1B0F                             l4948 1AF9  
                           l4878 07FC                             l4894 1C76                             l4798 07D9  
                           l3998 1454                             l4896 1C82                             l4888 1C62  
                           l4898 1C86                             STR_1 1821                             STR_2 183F  
                           STR_3 1892                             STR_4 18A8                             STR_5 1800  
                           STR_6 1811                             STR_7 1802                             STR_8 1899  
                           STR_9 1880                             _LATA 010C                             _LATB 010D  
                           _LATC 010E                             u4000 1D71                             _LATD 010F  
                           u4001 1D70                             _LATE 0110                             u4010 1D82  
                           u4011 1D81                             u4100 1CC4                             u4101 1CC3  
                           u4030 1D92                             u4110 1CCF                             u4031 1D91  
                           u4111 1CCE                             u4200 1C5E                             u5000 1FE8  
                           u4025 1D86                             u4201 1C5D                             u4050 1DA1  
                           u4130 1CDF                             u4210 1043                             u5010 1FF3  
                           u4051 1DA0                             u4131 1CDE                             u4211 1042  
                           u5011 1FF1                             u4140 1CE9                             u4220 105F  
                           u3500 160D                             u4300 1E5B                             u5020 1FF4  
                           u5100 0766                             u4045 1D93                             u4141 1CE8  
                           u4125 1CD3                             u4205 1C5A                             u4221 105E  
                           u3501 160C                             u4301 1E5A                             u5005 1FE4  
                           u4070 1DB1                             u4230 106B                             u3510 1629  
                           u5110 0770                             u5030 1A19                             u4071 1DB0  
                           u4055 1D9D                             u4231 106A                             u3511 1628  
                           u5111 076F                             u5031 1A18                             u5200 1028  
                           u4080 1DB6                             u4160 1CF8                             u3440 1D0D  
                           u4400 1481                             u4240 1087                             u3600 16AD  
                           u3520 1630                             u4320 1E6B                             u5120 0796  
                           u5040 19BA                             u5201 1027                             u4081 1DB5  
                           u4065 1DA7                             u4161 1CF7                             u4145 1CE5  
                           u3441 1D0C                             u4401 1480                             u4241 1086  
                           u3601 16AC                             u3521 162F                             u4321 1E6A  
                           u5105 0762                             u5041 19B9                             u4170 1CFD  
                           u4090 1CB9                             u3450 1D12                             u5210 081E  
                           u4410 1487                             u4250 10B5                             u3610 16B7  
                           u3530 1636                             u4330 1E72                             u5130 07A0  
                           u5050 070B                             u4171 1CFC                             u4155 1CEE  
                           u4091 1CB8                             u3451 1D11                             u5211 081C  
                           u4411 1486                             u4251 10B4                             u3611 16B6  
                           u3531 1635                             u4331 1E71                             u4315 1E5D  
                           u5131 079F                             u3460 1D22                             u5300 08CE  
                           u5220 081F                             u4500 1529                             u4420 148C  
                           u4180 1C28                             u4260 197F                             u3700 171B  
                           u3540 163B                             u5140 07B6                             u5060 0726  
                           u3461 1D21                             u5301 08CD                             u4501 1528  
                           u4421 148B                             u4181 1C27                             u4261 197E  
                           u3701 171A                             u3541 163A                             u5125 0792  
                           u5061 0725                             u3470 1D42                             u5310 08D3  
                           u5230 0825                             u4510 153C                             u4430 14A7  
                           u4190 1C44                             u3710 174A                             u3630 16CB  
                           u3550 1654                             u4350 1E81                             u4270 1E2B  
                           u5150 07C0                             u5070 072C                             u3471 1D41  
                           u5311 08D2                             u5231 0824                             u4511 153B  
                           u4431 14A6                             u4191 1C43                             u4255 10B1  
                           u3711 1749                             u3703 1717                             u3631 16CA  
                           u3551 1653                             u4351 1E80                             u4271 1E2A  
                           u5151 07BF                             u5071 072B                             u5055 0707  
                           u5320 08D9                             u5240 0830                             u4600 1587  
                           u4520 1544                             u4440 14C5                             u3800 179C  
                           u3720 1763                             u3640 16CF                             u3560 1658  
                           u3480 1602                             u4360 1E86                             u4280 1E41  
                           u5080 073A                             u5160 1BB2                             u5400 0A28  
                           u5321 08D8                             u5305 08CA                             u5241 082F  
                           u4601 1586                             u4521 1543                             u4505 1525  
                           u4441 14C4                             u3801 179B                             u3721 1762  
                           u3641 16CE                             u3625 16BA                             u3561 1657  
                           u3481 1601                             u4361 1E85                             u4345 1E74  
                           u5145 07B2                             u5065 0722                             u5161 1BB1  
                           u5401 0A27                             u5170 100A                             u6210 10C0  
                           u5250 084A                             u4610 1593                             u4450 14FD  
                           u4370 1458                             u3810 17A3                             u3730 1768  
                           u3650 16D4                             u3570 1692                             u3490 1608  
                           u4290 1E54                             u5090 0758                             u5410 0A92  
                           u5330 0921                             u5171 1009                             u6211 10BF  
                           u3475 1D3E                             u5251 0849                             u4611 1592  
                           u4451 14FC                             u4371 1457                             u3811 17A2  
                           u3731 1767                             u3651 16D3                             u3571 1691  
                           u3491 1607                             u4291 1E53                             u5091 0757  
                           u5411 0A91                             u5331 0920                             u5180 1014  
                           u6300 112F                             u6220 10C4                             u5260 0853  
                           u4620 15A1                             u4540 1551                             u4380 145E  
                           u4700 02C5                             u3900 17FE                             u3820 17A9  
                           u3660 16E9                             u3580 169C                             u5500 0CB1  
                           u5420 0AB9                             u5340 0956                             u5181 1013  
                           u6301 112E                             u6221 10C3                             u5261 0852  
                           u4541 1550                             u4381 145D                             u4701 02C4  
                           u3901 17FD                             u3821 17A8                             u3661 16E8  
                           u3581 169A                             u4285 1E3D                             u5085 0736  
                           u5501 0CB0                             u5421 0AB8                             u5341 0955  
                           u5190 101E                             u6310 1133                             u6230 10E4  
                           u5270 08AC                             u4630 15BC                             u4390 1463  
                           u3910 1B29                             u4710 02CA                             u3830 17B5  
                           u3750 177C                             u3670 16ED                             u3590 169D  
                           u5510 0D03                             u5430 0AEA                             u5350 095B  
                           u5191 101D                             u6311 1132                             u6231 10E3  
                           u5271 08AB                             u4631 15BB                             u4535 1547  
                           u4391 1462                             u3911 1B28                             u4711 02C9  
                           u3831 17B4                             u3751 177B                             u3671 16EC  
                           u3575 168E                             u5511 0D02                             u5431 0AE9  
                           u5351 095A                             u6320 1147                             u5280 08B3  
                           u4640 15D7                             u4560 1561                             u4480 150F  
                           u4800 041B                             u4720 02E1                             u3840 17C3  
                           u3760 1781                             u3680 16F7                             u5600 0F54  
                           u5520 0D34                             u5440 0B54                             u5360 097F  
                           u5281 08B2                             u4641 15D6                             u4625 159D  
                           u4561 1560                             u4481 150E                             u4465 14FE  
                           u4801 041A                             u4721 02E0                             u3761 1780  
                           u3745 1772                             u3681 16F6                             u5601 0F53  
                           u5521 0D33                             u5505 0CAD                             u5441 0B53  
                           u5361 097E                             u6330 1156                             u6250 1101  
                           u5290 08C0                             u4650 15EA                             u4570 1566  
                           u3930 1B39                             u4730 02E6                             u3850 17D2  
                           u3770 178B                             u5610 0F64                             u5530 0D39  
                           u5450 0B7C                             u5370 0985                             u6331 1155  
                           u6251 1100                             u5291 08BF                             u5275 08A8  
                           u4651 15E9                             u4635 15B8                             u4571 1565  
                           u4555 1553                             u4475 1505                             u3931 1B38  
                           u4731 02E5                             u3851 17D1                             u3771 178A  
                           u5611 0F63                             u5531 0D38                             u5451 0B7B  
                           u5371 0984                             u6340 115A                             u3940 1B62  
                           u4580 157A                             u4900 049E                             u4820 042B  
                           u4660 0297                             u3860 17DB                             u3780 1791  
                           u5620 0F92                             u5540 0DAE                             u5460 0B86  
                           u5380 09CC                             u5700 12BD                             u6500 0530  
                           u6341 1159                             u6325 1143                             u6245 10F5  
                           u3941 1B61                             u4645 15D3                             u4581 1579  
                           u3925 1B2E                             u4901 049D                             u4821 042A  
                           u4661 0296                             u3861 17DA                             u3845 17BF  
                           u3781 1790                             u5621 0F90                             u5605 0F50  
                           u5541 0DAD                             u5461 0B85                             u5381 09CB  
                           u5701 12BC                             u6501 052F                             u6270 111B  
                           u4590 1581                             u4910 04B8                             u4830 0430  
                           u4670 029D                             u3870 17E0                             u3790 1796  
                           u5630 0F93                             u5550 0DE5                             u5470 0B9D  
                           u5390 09D2                             u3950 1ABB                             u5710 1304  
                           u6510 0535                             u6271 111A                             u5295 08BC  
                           u4591 1580                             u4495 1511                             u4911 04B7  
                           u4831 042F                             u4815 041D                             u4671 029C  
                           u3871 17DF                             u3791 1795                             u3695 16FA  
                           u5615 0F60                             u5551 0DE4                             u5471 0B9C  
                           u5391 09D1                             u3951 1ABA                             u5711 1303  
                           u6511 0534                             u4920 1BE9                             u4840 0444  
                           u4760 03DC                             u4680 02A2                             u3880 17ED  
                           u5640 0FA2                             u5560 0E5B                             u5480 0BA1  
                           u5720 1317                             u6600 057D                             u6520 0539  
                           u6440 0514                             u6265 110F                             u4921 1BE8  
                           u4905 049A                             u4841 0443                             u4745 035F  
                           u4681 02A1                             u3881 17EC                             u5641 0FA1  
                           u5561 0E5A                             u5481 0BA0                             u5721 1316  
                           u6601 057C                             u6521 0538                             u6441 0513  
                           u6290 1129                             u4930 1C0B                             u4850 044B  
                           u4770 03F3                             u4690 02BF                             u3890 17F2  
                           u5650 0FC6                             u5570 0E81                             u5490 0BB1  
                           u5730 1341                             u6610 0582                             u6530 053F  
                           u6450 051A                             u6291 1128                             u4931 1C0A  
                           u4851 044A                             u4755 038A                             u4691 02BE  
                           u3891 17F1                             u5651 0FC5                             u5571 0E80  
                           u5491 0BB0                             u5731 1340                             u6611 0581  
                           u6531 053E                             u6451 0519                             u5900 1F68  
                           u4940 1994                             u4860 0451                             u5660 0FD9  
                           u5580 0E85                             u3980 1ACF                             u5740 134B  
                           u5820 1AF3                             u6700 05BE                             u6620 0588  
                           u6540 0543                             u6460 051E                             u5901 1F67  
                           u5805 07DF                             u6285 111F                             u4941 1993  
                           u4861 0450                             u4765 03D8                             u5661 0FD8  
                           u5581 0E84                             u5565 0E57                             u3981 1ACE  
                           u3965 1AC0                             u5741 134A                             u5821 1AF2  
                           u6701 05BD                             u6621 0587                             u6541 0542  
                           u6461 051D                             u3990 1D66                             u4870 045D  
                           u4950 1FA6                             u5670 0FDF                             u5590 0EB0  
                           u5750 13AD                             u6710 05C9                             u6630 058C  
                           u6550 0548                             u6470 0523                             u3991 1D65  
                           u4935 1C07                             u4871 045C                             u4775 03EF  
                           u5671 0FDE                             u5655 0FC2                             u5591 0EAF  
                           u3975 1AC5                             u5751 13AC                             u6711 05C8  
                           u6631 058B                             u6551 0547                             u6471 0522  
                           u5840 1F0E                             u5920 1A73                             u4880 046B  
                           u4960 1FB4                             u5680 1DD5                             u6640 0591  
                           u6560 056A                             u6480 0527                             u5841 1F0D  
                           u5921 1A72                             u4785 03FE                             u4961 1FB3  
                           u5665 0FD5                             u5681 1DD4                             u6641 0590  
                           u6561 0569                             u6481 0526                             u4890 0486  
                           u4970 1FC1                             u5690 1E1C                             u6650 059B  
                           u6570 0570                             u6490 052C                             u5915 1F6E  
                           u4891 0485                             u4795 0411                             u4955 1FA2  
                           u5691 1E1B                             u6651 059A                             u6571 056F  
                           u6491 052B                             u5860 1F2C                             u4980 1FCB  
                           u6660 05A0                             u6580 0574                             u5861 1F2B  
                           u4885 0467                             u4981 1FCA                             u6725 062E  
                           u6661 059F                             u6581 0573                             u4990 1FDB  
                           u6670 05AA                             u6590 0579                             u5855 1F14  
                           u4895 0482                             u4991 1FDA                             u4975 1FBD  
                           u6735 064E                             u6671 05A9                             u6591 0578  
                           u5880 1F4A                             u6680 05AF                             u5881 1F49  
                           u6745 066E                             u6681 05AE                             u6690 05B9  
                           u5875 1F32                             u6907 07F6                             u6691 05B8  
                           u6917 1C71                             u6927 1C7E                             u5895 1F50  
                           u6937 1C8A                             u6947 080F                             u6867 0507  
                           u6877 055D                             u6887 06DC                             u6897 07E9  
                           _WPUB 020D                             _WPUE 0210                             abs@a 0027  
              ?_Lcd_Write_String 0025                             _dbuf 0220                             _labs 19B5  
                           _main 04C8                             _dtoa 0817                             _prec 00ED  
                           _temp 0128                             pad@i 0033                             pad@p 0030  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                    ___fpclassifyf 1F81                             start 0269  
             ??_Lcd_Write_String 0027                  ___fldiv@new_exp 0046                  EEPROM_Write@dir 0073  
                __end_of_Lcd_Cmd 0817                            ??_IOC 007A                            ??_abs 0029  
           __end_of_EEPROM_Write 1A55                            ??_pad 0032                    ___fltol@sign1 0028  
                          ?_labs 0020                  __end_of___fladd 1800                            ?_main 0070  
                          ?_dtoa 0036                  __end_of___fldiv 15F8                  __end_of___awdiv 1DC0  
                __end_of___flneg 1982                            _EEADR 0191                            STR_10 1899  
                          _EEDAT 0193                            STR_11 1889                            STR_12 185C  
                          STR_13 1869                            STR_22 18A4                            STR_14 1830  
                          STR_15 184E                            STR_16 181B                            STR_17 1875  
                          STR_18 1821                            STR_19 18A0                  __end_of___awmod 1D07  
                __end_of___flmul 04C8                  __end_of___flsub 1AB4                  __end_of___fltol 1E92  
                ___awdiv@divisor 0020                            _IOCBF 0396                            _IOCBN 0395  
                          i1l302 003E                            i1l410 1A7C                            i1l331 19FD  
                          i1l325 0254                            i1l422 1A92                            i1l414 1A84  
                          i1l326 0267                            i1l431 1963                            i1l352 12A7  
                          i1l336 19E3                            i1l361 11D0                            i1l353 119C  
                          i1l345 195A                            i1l425 1A93                            i1l441 1F06  
                          i1l370 11F8                            i1l362 11C1                            i1l354 118D  
                          i1l418 1A8B                            i1l348 1182                            i1l428 19B4  
                          i1l381 1258                            i1l373 1221                            i1l365 11ED  
                          i1l357 11B6                            i1l349 1173                            i1l437 1F06  
                          i1l453 1A36                            i1l390 127D                            i1l382 1249  
                          i1l374 1212                            i1l366 11DE                            i1l358 11A7  
                          i1l447 1B8A                            i1l480 1A53                            i1l481 1A54  
                          i1l385 1272                            i1l377 123B                            i1l369 1207  
                          i1l394 1297                            i1l386 1263                            i1l378 122C  
                          i1l484 198E                            i1l389 128C                            i1l478 1A4E  
              ?i1_Lcd_Set_Cursor 0073                  ___awdiv@counter 0025                    ??_Keypad_Init 0070  
                   vfpfcnvrt@fmt 006B                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E                            _TRISD 008F                            _TRISE 0090  
                    ?i1_Lcd_Port 0070               ??i1_Lcd_Set_Cursor 0074                            _clave 0139  
                          _flags 0130              read_prec_or_width@c 002B              read_prec_or_width@n 002C  
                          _fputc 1D07                            _fputs 1B3E                            _tecla 007D  
                          labs@a 0020                       _Leer_Clave 19CB                            pad@fp 0035  
                          _width 012C                            _putch 07FF                            dtoa@d 0036  
                          dtoa@i 0041                            dtoa@p 003C                            dtoa@s 0040  
                          dtoa@w 003E                            status 0003                            wtemp0 007E  
                __end_of_sprintf 1B1A                   ?___fpclassifyf 0020                 EEPROM_Write@data 0070  
               __end_of_Lcd_Init 1CB3                 __end_of_Lcd_Port 102E                  __initialization 026B  
                   __end_of_labs 19CB                     __end_of_main 06E6                     __end_of_dtoa 08F0  
                         ??_labs 0024                           ??_main 014D                           ??_dtoa 0038  
     __end_of_read_prec_or_width 1E21                   _convertedValue 013E                           _ADCON0 009D  
                         _ADCON1 009E                           ?_fputc 0020                           ?_fputs 0028  
                         _ADRESH 009C                           _ADRESL 009B                           _EECON2 0196  
               ___awdiv@dividend 0022                           _APFCON 011D                           _ANSELA 018C  
                         ?_putch 0070                           _ANSELB 018D                           _ANSELD 018F  
                         _ANSELE 0190              __end_of_Keypad_Init 195B                           _BORCON 0116  
                         i1l1334 1BE2                           i1l5000 120B                           i1l5002 1217  
                         i1l5020 1268                           i1l5012 1242                           i1l5030 1290  
                         i1l5014 124E                           i1l5006 1225                           i1l5032 129C  
                         i1l5024 1276                           i1l5008 1231                           i1l5040 19CC  
                         i1l5026 1282                           i1l5018 125C                           i1l5050 19DD  
                         i1l5122 195B                           i1l5130 1EA6                           i1l5036 12A6  
                         i1l5060 1BCB                           i1l5052 1BB4                           i1l5140 1EC3  
                         i1l5132 1EAA                           i1l5124 1E93                           i1l5046 19CD  
                         i1l5062 1BD4                           i1l5054 1BB5                           i1l5150 1EE0  
                         i1l5142 1EC7                           i1l5126 1E98                           i1l5134 1EAF  
                         i1l5072 19E6                           i1l5048 19D9                           i1l5056 1BB9  
                         i1l5160 1EFD                           i1l5152 1EE4                           i1l5136 1EB5  
                         i1l5144 1ECC                           i1l5128 1EA3                           i1l5400 0102  
                         i1l5320 001A                           i1l5074 19F3                           i1l5066 19E5  
                         i1l5058 1BBD                           i1l5162 1F01                           i1l5146 1ED2  
                         i1l5154 1EE9                           i1l5138 1EC0                           i1l5170 1A2B  
                         i1l5402 010F                           i1l5410 011F                           i1l5322 0020  
                         i1l5314 0006                           i1l5076 19F7                           i1l5156 1EEF  
                         i1l5148 1EDD                           i1l5164 1A1A                           i1l5500 01F2  
                         i1l5420 0128                           i1l5412 0120                           i1l5404 0111  
                         i1l5340 0057                           i1l5332 0042                           i1l5324 0027  
                         i1l5316 0009                           i1l5158 1EFA                           i1l5166 1A1D  
                         i1l5510 021B                           i1l5502 01FF                           i1l5430 012D  
                         i1l5422 0129                           i1l5414 0122                           i1l5406 0112  
                         i1l5342 0059                           i1l5334 0046                           i1l5326 0034  
                         i1l5318 000C                           i1l5168 1A27                           i1l5520 022B  
                         i1l5512 021C                           i1l5504 0205                           i1l5440 0145  
                         i1l5432 0130                           i1l5424 012A                           i1l5416 0125  
                         i1l5408 0113                           i1l5360 0083                           i1l5344 005A  
                         i1l5336 0048                           i1l5352 0061                           i1l5328 0038  
                         i1l5530 0235                           i1l5522 022E                           i1l5514 021D  
                         i1l5506 020C                           i1l5442 014A                           i1l5450 0160  
                         i1l5434 0133                           i1l5426 012B                           i1l5418 0127  
                         i1l5370 009E                           i1l5362 0087                           i1l5346 005B  
                         i1l5338 004B                           i1l5354 0071                           i1l4820 1A48  
                         i1l5540 023A                           i1l5532 0237                           i1l5524 0230  
                         i1l5508 0219                           i1l5516 0228                           i1l5460 0188  
                         i1l5452 0166                           i1l5444 0151                           i1l5436 0139  
                         i1l5428 012C                           i1l5380 00BE                           i1l5364 008C  
                         i1l5372 00A2                           i1l5356 0075                           i1l5348 005E  
                         i1l4822 1A4D                           i1l5534 0238                           i1l5526 0231  
                         i1l5518 0229                           i1l5470 019E                           i1l5462 018E  
                         i1l5454 0175                           i1l5446 0158                           i1l5438 0141  
                         i1l5390 00E6                           i1l5382 00C0                           i1l5374 00A8  
                         i1l5366 0093                           i1l5358 007B                           i1l5542 024E  
                         i1l4816 1A38                           i1l4824 1983                           i1l5544 0256  
                         i1l5528 0232                           i1l5472 01A3                           i1l5480 01B9  
                         i1l5464 0195                           i1l5456 0178                           i1l5448 015C  
                         i1l5392 00E8                           i1l5384 00CC                           i1l5376 00B7  
                         i1l5368 009A                           i1l4818 1A47                           i1l4826 198B  
                         i1l4850 19B2                           i1l4842 19A2                           i1l5546 025F  
                         i1l5490 01DB                           i1l5482 01BF                           i1l5474 01AA  
                         i1l5466 0196                           i1l5458 017C                           i1l5394 00E9  
                         i1l5386 00D2                           i1l5378 00BA                           i1l4828 198C  
                         i1l4780 1A79                           i1l4844 19A4                           i1l4860 1B78  
                         i1l4852 1B64                           i1l5548 0266                           i1l5492 01E2  
                         i1l5484 01CE                           i1l5476 01B1                           i1l5468 019A  
                         i1l5388 00D9                           i1l5396 00F5                           i1l4790 1A8C  
                         i1l4782 1A7E                           i1l4846 19A8                           i1l4870 1B88  
                         i1l4862 1B7C                           i1l4854 1B6A                           i1l5494 01E8  
                         i1l5486 01D1                           i1l5478 01B5                           i1l5398 00FB  
                         i1l4960 1952                           i1l4792 1A90                           i1l4784 1A82  
                         i1l4848 19AA                           i1l4864 1B7E                           i1l4856 1B6C  
                         i1l5496 01EF                           i1l5488 01D5                           i1l4970 1186  
                         i1l4962 1164                           i1l4786 1A85                           i1l4778 1A75  
                         i1l4866 1B82                           i1l4858 1B76                           i1l5498 01F1  
                         i1l5754 0069                           i1l4972 1192                           i1l4964 116C  
                         i1l4788 1A89                           i1l4868 1B84                           i1l5756 0243  
                         i1l4990 11E3                           i1l4982 11BA                           i1l4966 1178  
                         i1l4984 11C6                           i1l4976 11A0                           i1l4994 11F1  
                         i1l4978 11AC                           i1l4996 11FD                           i1l4988 11D7  
                         u600_20 11C6                           u600_21 11C5                           u601_20 11D7  
                         u601_21 11D6                           u610_20 124E                           u602_20 11E3  
                         u610_21 124D                           u602_21 11E2                           u611_20 125C  
                         u603_20 11F1                           u611_21 125B                           u603_21 11F0  
                         u620_20 19FD                           u612_20 1268                           u604_20 11FD  
                         u620_21 19FC                           u612_21 1267                           u604_21 11FC  
                         u700_27 016E                           u613_20 1276                           u605_20 120B  
                         u613_21 1275                           u605_21 120A                           u701_27 01C7  
                         u614_20 1282                           u606_20 1217                           u614_21 1281  
                         u606_21 1216                           u710_27 1195                           u702_27 01F7  
                         u615_20 1290                           u607_20 1225                           u615_21 128F  
                         u607_21 1224                           u711_27 11A3                           u703_27 0222  
                         u616_20 129C                           u608_20 1231                           u616_21 129B  
                         u608_21 1230                           u640_25 1ED8                           u720_27 121A  
                         u712_27 11AF                           u704_27 1B79                           u609_20 1242  
                         u617_20 19E3                           u641_20 1EEF                           u609_21 1241  
                         u617_21 19E2                           u641_21 1EEE                           u721_27 1228  
                         u713_27 11BD                           u705_27 1B85                           u618_20 1BCB  
                         _OSCCON 0099                           u618_21 1BCA                           u642_25 1EF5  
                         u730_27 129F                           u722_27 1234                           u714_27 11C9  
                         u706_27 19AD                           u619_20 1BD4                           u635_20 1E98  
                         u643_20 1A36                           u619_21 1BD3                           u635_21 1E97  
                         u643_21 1A35                ?i1_Lcd_Write_Char 0070                           u723_27 1245  
                         u715_27 11DA                           u707_27 116F                           u636_25 1E9E  
                         u724_27 1251                           u716_27 11E6                           u708_27 117B  
                         u581_20 1A53                           u637_20 1EB5                           u581_21 1A52  
                         u637_21 1EB4                           u725_27 125F                           u717_27 11F4  
                         u709_27 1189                           u638_25 1EBB                           u726_27 126B  
                         u718_27 1200                           u639_20 1ED2                           u639_21 1ED1  
                         u583_25 1B6F                           u727_27 1279                           u719_27 120E  
                         u576_20 1A79                           u680_20 0166                           u576_21 1A78  
                         u680_21 0165                        ??_Lcd_Cmd 0021                           u728_27 1285  
                  vfpfcnvrt@done 00D1                           u593_20 116C                           u577_20 1A82  
                         u681_20 0188                           u593_21 116B                           u577_21 1A81  
                         u681_21 0187                           u729_27 1293                           u594_20 1178  
                         u578_20 1A89                           u682_20 01A3                           u594_21 1177  
                         u578_21 1A88                           u682_21 01A2                           u595_20 1186  
                         u579_20 1A90                           u683_20 01BF                           u675_20 003D  
                         u595_21 1185                           u579_21 1A8F                           u683_21 01BE  
                         u675_21 003C                           u596_20 1192                           u684_20 0254  
                         u676_20 008C                           u596_21 1191                           u684_21 0253  
                         u676_21 008B                           u597_20 11A0                           u677_20 00A8  
                         u597_21 119F                           u677_21 00A7                           u598_20 11AC  
                         u678_20 00CC                           u598_21 11AB                           u678_21 00CB  
                         u599_20 11BA                           u679_20 014A                           u599_21 11B9  
                         u679_21 0149                           u695_27 0013                           u696_27 0050  
                         u697_27 00B0                           u698_27 00EE                           u699_27 0118  
                         _WDTCON 0097                           _SSPADD 0212                     ?i1_Lcd_Clear 0070  
                         _SSPBUF 0211                 __end_of___xxtofl 1164               ??i1_Lcd_Write_Char 0071  
              __end_ofi1_Lcd_Cmd 19B5                     vfprintf@cfmt 00DC                           ___flge 102E  
                         ___fleq 1C13                i1Lcd_Write_Char@a 0074                i1Lcd_Write_Char@y 0073  
                      ??___fladd 0028                           ___wmul 1AB4                        ??___fldiv 003C  
                      ??___awdiv 0024                        ??___flneg 0024                        ??___awmod 0024  
                      ??___flmul 0031                        ??___flsub 004B                        ??___fltol 0024  
                         _efgtoa 08F0                           _buffer 01A0                           _floorf 06E6  
                         _estado 0133                           _memcpy 1B8B             read_prec_or_width@ap 0026  
               ___awdiv@quotient 0027                  ___awmod@divisor 0020                  ___awmod@counter 0025  
                         pad@buf 002F                           dtoa@fp 003B                           _strcmp 1BB3  
                         _strcpy 19FE                           fputc@c 0020                           fputs@c 002B  
                         fputs@i 002C                           fputs@s 002E                  ___fpclassifyf@e 002A  
                ___fpclassifyf@u 002C                  ___fpclassifyf@x 0020                           putch@c 0070  
               __end_of_vfprintf 1AF7                        ??_sprintf 00EC                      ?_Leer_Clave 0070  
                Lcd_Set_Cursor@a 0025                  Lcd_Set_Cursor@b 0023                  Lcd_Set_Cursor@y 0027  
                Lcd_Set_Cursor@z 0026                       ___flge@ff1 0043                       ___flge@ff2 0047  
                ??___fpclassifyf 0024                     ___xxtofl@arg 0030                     ___xxtofl@exp 002F  
                   ___xxtofl@val 0026                       ___fleq@ff1 0020                       ___fleq@ff2 0024  
        __end_of__initialization 0289                       ___flneg@f1 0020                __end_of_Lcd_Clear 1976  
                     ___fltol@f1 0020                 ??_Escribir_Clave 0074                   __pcstackCOMMON 0070  
                  __end_of_fputc 1D60                    __end_of_fputs 1B63                    __end_of_putch 0800  
        _ADC_GetConversionResult 1964                   _Lcd_Set_Cursor 1F07                   _OPTION_REGbits 0095  
                    _Keypad_Init 1952                        ?_Lcd_Init 0070                        ?_Lcd_Port 0070  
                        ??_fputc 0023                          ??_fputs 0029                          ??_putch 0020  
                   _EEPROM_Write 1A37                       __pbssBANK1 00ED                       __pbssBANK2 0120  
                     __pbssBANK3 01A0                       __pbssBANK4 0220                __end_of__Umul8_16 1B3E  
                     __pmaintext 04C8                          ?___flge 0043                          ?___fleq 0020  
                        ?___wmul 0020                       __pintentry 0004                          ?_efgtoa 0062  
                        ?_floorf 004E                          ?_memcpy 0020           __end_of_Lcd_Set_Cursor 1F81  
                        ?_strcmp 0070                          ?_strcpy 0020                        ?___xxtofl 0026  
                   ??i1_Lcd_Port 0070                          _OSCTUNE 0098                       ??_Lcd_Init 0023  
                     ??_Lcd_Port 0020                   _Lcd_Write_Char 07D1                          _Lcd_Cmd 0800  
           _ADC_InterruptHandler 012E               __end_ofi1_Lcd_Port 1A94                          ___fladd 15F8  
                        ___fldiv 144E                          ___awdiv 1D60                          ___flneg 1976  
                        ___awmod 1CB3                          ___flmul 028D                          ___flsub 1A94  
                        ___fltol 1E21                        ?_vfprintf 006D        ??_ADC_GetConversionResult 0022  
                ?_Lcd_Set_Cursor 0023                          __ptext1 1AF7                          __ptext2 1AD4  
                        __ptext3 12A8                          __ptext4 1DC0                          __ptext5 1AB4  
                        __ptext6 08F0                          __ptext7 19FE                          __ptext8 1B8B  
                        __ptext9 19B5            read_prec_or_width@fmt 002E                       ??___xxtofl 002A  
               ___awmod@dividend 0022                          efgtoa@c 0066                          efgtoa@d 00AB  
                        efgtoa@e 00B0                          efgtoa@f 0062                          efgtoa@g 00C3  
                        efgtoa@h 00B8                          efgtoa@i 00C0                          efgtoa@l 00BC  
                        efgtoa@m 00AD                          efgtoa@n 00C7                          efgtoa@p 00A2  
                        efgtoa@t 00A4                          efgtoa@u 00C9                          efgtoa@w 00B2  
     __end_ofi1_Lcd_Write_String 1A37                          _sprintf 1AF7                          clrloop0 193E  
         __end_of_Lcd_Write_Char 07FC             end_of_initialization 0289                          floorf@e 005C  
                        floorf@m 0058                          floorf@u 005E                          floorf@x 004E  
              ??_Keypad_Get_Char 0070                          memcpy@d 0026                          memcpy@n 0021  
                        memcpy@s 0027                    ??_EEPROM_Read 0070                          fputc@fp 0022  
                        fputs@fp 0028               _read_prec_or_width 1DC0     __end_of_ADC_IsConversionDone 194A  
              Escribir_Clave@pos 0076                Escribir_Clave@str 0075                __end_of_vfpfcnvrt 144E  
                     efgtoa@mode 00A9                       efgtoa@sign 00C2              ?_read_prec_or_width 0026  
               vfpfcnvrt@convarg 00D2                        Lcd_Port@a 0020                       ??_vfprintf 00DA  
                        strcmp@l 0073                          strcmp@r 0070                        i1_Lcd_Cmd 19A1  
                        strcpy@d 0024                        _PORTBbits 000D                      ___fladd@grs 0033  
                  ___xxtofl@sign 002E                        _TRISAbits 008C                        _TRISBbits 008D  
                      _TRISCbits 008E                        _TRISDbits 008F              _ADC_StartConversion 07FC  
           ??_read_prec_or_width 0028                      ___fldiv@grs 0048                      ___fldiv@rem 0041  
                   ??_Leer_Clave 0073                  ?_Lcd_Write_Char 0070                Lcd_Write_String@a 0025  
              Lcd_Write_String@i 0028                      ___flmul@grs 0037             ?_ADC_StartConversion 0070  
            __end_of_EEPROM_Read 198F                        _Lcd_Clear 196D                   __end_of___flge 10B9  
                 __end_of___fleq 1C62                      vfpfcnvrt@ap 006C                      vfpfcnvrt@cp 00D8  
                    vfpfcnvrt@fp 00D7                   __end_of___wmul 1AD4                       ?i1_Lcd_Cmd 0070  
               _Lcd_Write_String 1A55                   __end_of_efgtoa 1000               __end_of_Leer_Clave 19E4  
                 _ADC_Initialize 194A                   __end_of_floorf 07D1                   __end_of_memcpy 1BB3  
                     floorf@F521 0120                     ?_Keypad_Init 0070                   __end_of_strcmp 1BE3  
                 __end_of_strcpy 1A1A              start_initialization 026B                      __end_of_IOC 0269  
                    __end_of_abs 19A1                      __end_of_pad 1C13                 i1_Lcd_Set_Cursor 1E92  
          __end_of___fpclassifyf 2000            ??_ADC_StartConversion 0020                      vfprintf@fmt 006D  
                     ?_Lcd_Clear 0070                         ??___flge 004B                         ??___fleq 0028  
                       ??___wmul 0024                         ??_efgtoa 0067           __end_of_ADC_Initialize 1952  
                      __Umul8_16 1B1A                         ??_floorf 0052                         ??_memcpy 0023  
                Lcd_Write_Char@a 0024                  Lcd_Write_Char@y 0023                         ??_strcmp 0072  
                       ??_strcpy 0022                        ___fladd@a 0024                        ___fladd@b 0020  
                      ___fldiv@a 0034                        ___fldiv@b 0038                        ___flmul@a 002D  
                      ___flmul@b 0029                      __pbssCOMMON 007C                        ___flsub@a 0043  
                      ___flsub@b 0047                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00A0                    __pcstackBANK2 0140             _ADC_IsConversionDone 1943  
           i1Lcd_Write_Char@temp 0072                         ?_Lcd_Cmd 0070                      _EEPROM_Read 1982  
                    _efgtoa$1448 00A6                        _dtoa$1417 0039                 ??_Lcd_Set_Cursor 0024  
                       ?___fladd 0020                         ?___fldiv 0034                         ?___awdiv 0020  
                       ?___flneg 0020                         ?___awmod 0020                         ?___flmul 0029  
                       ?___flsub 0043                         ?___fltol 0020                       ?__Umul8_16 0020  
                ?_ADC_Initialize 0070                      _clave_enter 0134                 i1_Lcd_Write_Char 1B63  
                    ??i1_Lcd_Cmd 0071             i1Lcd_Set_Cursor@temp 0078                  _Keypad_Get_Char 1164  
          ?_ADC_IsConversionDone 0070                         ?_sprintf 00DE                    ??i1_Lcd_Clear 0073  
                 ___wmul@product 0024                         _LATAbits 010C                         _LATBbits 010D  
                       _LATCbits 010E                         _LATDbits 010F                        clear_ram0 193D  
             i1_Lcd_Write_String 1A1A                         Lcd_Cmd@a 0022                         _PIR2bits 0012  
                    ??_Lcd_Clear 0023              ?i1_Lcd_Write_String 0075                        _vfpfcnvrt 12A8  
                     _ADCON0bits 009D                ___wmul@multiplier 0020                 ??_Lcd_Write_Char 0021  
                       _Lcd_Init 1C62                         _Lcd_Port 1004                       vfpfcnvrt@c 00D6  
           ??i1_Lcd_Write_String 0077         __end_of_Lcd_Write_String 1A74                       _EECON1bits 0195  
                      memcpy@tmp 0024                       vfprintf@ap 006F                       vfprintf@fp 00DB  
       ?_ADC_GetConversionResult 0020              __end_ofi1_Lcd_Clear 1964          __end_of_Keypad_Get_Char 12A8  
                    ??__Umul8_16 0022                       ?_vfpfcnvrt 006B         __end_ofi1_Lcd_Set_Cursor 1F07  
             ___fpclassifyf@F465 0124           ??_ADC_IsConversionDone 0020                       sprintf@fmt 00DE  
                       ___xxtofl 10B9                i1Lcd_Set_Cursor@a 0075                i1Lcd_Set_Cursor@b 0073  
              i1Lcd_Set_Cursor@y 0077                i1Lcd_Set_Cursor@z 0076                         __ptext10 06E6  
                       __ptext11 1F81                         __ptext20 144E                         __ptext12 1E21  
                       __ptext21 0817                         __ptext13 1A94                         __ptext30 1A55  
                       __ptext22 1BE3                         __ptext14 15F8                         __ptext31 07D1  
                       __ptext23 1B3E                         __ptext15 1976                         __ptext40 1964  
                       __ptext32 1F07                         __ptext24 1D07                         __ptext16 028D  
                       __ptext33 1C62                         __ptext25 07FF                         __ptext17 1B1A  
                       __ptext50 1982                         __ptext42 1A1A                         __ptext34 196D  
                       __ptext26 198F                         __ptext18 102E                         __ptext51 1952  
                       __ptext43 1B63                         __ptext35 0800                         __ptext27 1CB3  
                       __ptext19 1C13                         __ptext52 1164                         __ptext44 1E92  
                       __ptext36 1004                         __ptext28 1D60                         __ptext53 19E4  
                       __ptext45 195B                         __ptext37 07FC                         __ptext29 10B9  
                       __ptext54 1A37                         __ptext46 19A1                         __ptext38 1943  
                       __ptext47 1A74                         __ptext39 194A                         __ptext48 1BB3  
                       __ptext49 19CB                    ?_EEPROM_Write 0070                         _cont_key 007C  
                     strcpy@dest 0025                      i1Lcd_Port@a 0070                         efgtoa@fp 00AF  
                       efgtoa@ne 00A0                         efgtoa@pp 00A8                         efgtoa@ou 00B4  
                       int$flags 007E                         _vfprintf 1AD4              i1Lcd_Write_String@a 0075  
            i1Lcd_Write_String@i 0078                   _Escribir_Clave 19E4                       _INTCONbits 000B  
                       memcpy@d1 0025                         memcpy@s1 0020                   __pstringtext10 1880  
                 __pstringtext11 1889                   __pstringtext12 1892                   __pstringtext13 1899  
                 __pstringtext14 18A0                   __pstringtext15 18A4                   __pstringtext16 18A8  
                 __pstringtext17 0000                   ??_EEPROM_Write 0071               Lcd_Write_Char@temp 0022  
                       intlevel1 0000                        sprintf@ap 0141         __end_ofi1_Lcd_Write_Char 1B8B  
    __end_of_ADC_StartConversion 07FF                     ?_EEPROM_Read 0070                      i1_Lcd_Clear 195B  
__end_of_ADC_GetConversionResult 196D                       i1Lcd_Cmd@a 0072                        strcpy@src 0020  
               ??_ADC_Initialize 0020                      efgtoa@nmode 00AA           __end_of_Escribir_Clave 19FE  
               ?_Keypad_Get_Char 0070                      ??_vfpfcnvrt 00CD               Lcd_Set_Cursor@temp 0028  
                  __pstringtext1 1800                    __pstringtext2 1811                    __pstringtext3 1821  
                  __pstringtext4 1830                    __pstringtext5 183F                    __pstringtext6 184E  
                  __pstringtext7 185C                    __pstringtext8 1869                    __pstringtext9 1875  
         __Umul8_16@multiplicand 0020                         sprintf@f 0142                         sprintf@s 0140  
                     i1_Lcd_Port 1A74                      _SSPCON1bits 0215                      _SSPCON2bits 0216  
                  ___fladd@signs 0030                     ___fladd@aexp 0031                     ___fladd@bexp 0032  
           __Umul8_16@multiplier 0028                       _SSPCONbits 0215                   EEPROM_Read@dir 0072  
              __Umul8_16@product 0024  
