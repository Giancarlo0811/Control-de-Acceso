

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Jan 30 19:45:14 2025

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F1937
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	cinit,global,class=CODE,merge=1,delta=2
    23                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    26                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    27                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    28                           	psect	clrtext,global,class=CODE,delta=2
    29                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    34                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    45                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    60                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text30,local,class=CODE,merge=1,delta=2
    64                           	psect	text31,local,class=CODE,merge=1,delta=2
    65                           	psect	text32,local,class=CODE,merge=1,delta=2
    66                           	psect	text33,local,class=CODE,merge=1,delta=2
    67                           	psect	text34,local,class=CODE,merge=1,delta=2
    68                           	psect	text35,local,class=CODE,merge=1,delta=2
    69                           	psect	text36,local,class=CODE,merge=1,delta=2
    70                           	psect	text37,local,class=CODE,merge=1,delta=2
    71                           	psect	text38,local,class=CODE,merge=1,delta=2
    72                           	psect	text39,local,class=CODE,merge=1,delta=2
    73                           	psect	text40,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	psect	text42,local,class=CODE,merge=1,delta=2
    76                           	psect	text43,local,class=CODE,merge=1,delta=2
    77                           	psect	text44,local,class=CODE,merge=1,delta=2
    78                           	psect	text45,local,class=CODE,merge=1,delta=2
    79                           	psect	text46,local,class=CODE,merge=1,delta=2
    80                           	psect	text47,local,class=CODE,merge=1,delta=2
    81                           	psect	text48,local,class=CODE,merge=1,delta=2,group=3
    82                           	psect	text49,local,class=CODE,merge=1,delta=2
    83                           	psect	text50,local,class=CODE,merge=1,delta=2
    84                           	psect	text51,local,class=CODE,merge=1,delta=2
    85                           	psect	text52,local,class=CODE,merge=1,delta=2
    86                           	psect	text53,local,class=CODE,merge=1,delta=2
    87                           	psect	text54,local,class=CODE,merge=1,delta=2
    88                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    89                           	dabs	1,0x7E,2
    90     0000                     
    91                           ; Generated 06/07/2023 GMT
    92                           ; 
    93                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution. Publication is not required when
   107                           ;        this file is used in an embedded application.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC16F1937 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0008                     	;# 
   134     0009                     	;# 
   135     000A                     	;# 
   136     000B                     	;# 
   137     000C                     	;# 
   138     000D                     	;# 
   139     000E                     	;# 
   140     000F                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0015                     	;# 
   146     0016                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001C                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     008F                     	;# 
   160     0090                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0095                     	;# 
   165     0096                     	;# 
   166     0097                     	;# 
   167     0098                     	;# 
   168     0099                     	;# 
   169     009A                     	;# 
   170     009B                     	;# 
   171     009B                     	;# 
   172     009C                     	;# 
   173     009D                     	;# 
   174     009E                     	;# 
   175     010C                     	;# 
   176     010D                     	;# 
   177     010E                     	;# 
   178     010F                     	;# 
   179     0110                     	;# 
   180     0111                     	;# 
   181     0112                     	;# 
   182     0113                     	;# 
   183     0114                     	;# 
   184     0115                     	;# 
   185     0116                     	;# 
   186     0117                     	;# 
   187     0118                     	;# 
   188     0119                     	;# 
   189     011A                     	;# 
   190     011B                     	;# 
   191     011D                     	;# 
   192     018C                     	;# 
   193     018D                     	;# 
   194     018F                     	;# 
   195     0190                     	;# 
   196     0191                     	;# 
   197     0191                     	;# 
   198     0192                     	;# 
   199     0193                     	;# 
   200     0193                     	;# 
   201     0193                     	;# 
   202     0194                     	;# 
   203     0195                     	;# 
   204     0196                     	;# 
   205     0199                     	;# 
   206     019A                     	;# 
   207     019B                     	;# 
   208     019B                     	;# 
   209     019B                     	;# 
   210     019B                     	;# 
   211     019C                     	;# 
   212     019C                     	;# 
   213     019D                     	;# 
   214     019E                     	;# 
   215     019F                     	;# 
   216     020D                     	;# 
   217     0210                     	;# 
   218     0211                     	;# 
   219     0212                     	;# 
   220     0213                     	;# 
   221     0214                     	;# 
   222     0215                     	;# 
   223     0215                     	;# 
   224     0216                     	;# 
   225     0217                     	;# 
   226     0291                     	;# 
   227     0291                     	;# 
   228     0292                     	;# 
   229     0293                     	;# 
   230     0294                     	;# 
   231     0295                     	;# 
   232     0295                     	;# 
   233     0296                     	;# 
   234     0298                     	;# 
   235     0298                     	;# 
   236     0299                     	;# 
   237     029A                     	;# 
   238     029B                     	;# 
   239     029C                     	;# 
   240     029C                     	;# 
   241     029D                     	;# 
   242     029E                     	;# 
   243     029F                     	;# 
   244     0311                     	;# 
   245     0311                     	;# 
   246     0312                     	;# 
   247     0313                     	;# 
   248     0314                     	;# 
   249     0315                     	;# 
   250     0315                     	;# 
   251     0316                     	;# 
   252     0318                     	;# 
   253     0318                     	;# 
   254     0319                     	;# 
   255     031A                     	;# 
   256     031C                     	;# 
   257     031C                     	;# 
   258     031D                     	;# 
   259     031E                     	;# 
   260     0394                     	;# 
   261     0395                     	;# 
   262     0396                     	;# 
   263     0415                     	;# 
   264     0416                     	;# 
   265     0417                     	;# 
   266     041C                     	;# 
   267     041D                     	;# 
   268     041E                     	;# 
   269     0791                     	;# 
   270     0792                     	;# 
   271     0793                     	;# 
   272     0794                     	;# 
   273     0795                     	;# 
   274     0798                     	;# 
   275     0799                     	;# 
   276     079A                     	;# 
   277     07A0                     	;# 
   278     07A1                     	;# 
   279     07A2                     	;# 
   280     07A3                     	;# 
   281     07A4                     	;# 
   282     07A5                     	;# 
   283     07A6                     	;# 
   284     07A7                     	;# 
   285     07A8                     	;# 
   286     07A9                     	;# 
   287     07AA                     	;# 
   288     07AB                     	;# 
   289     0FE4                     	;# 
   290     0FE5                     	;# 
   291     0FE6                     	;# 
   292     0FE7                     	;# 
   293     0FE8                     	;# 
   294     0FE9                     	;# 
   295     0FEA                     	;# 
   296     0FEB                     	;# 
   297     0FED                     	;# 
   298     0FEE                     	;# 
   299     0FEF                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000F                     	;# 
   316     0010                     	;# 
   317     0011                     	;# 
   318     0012                     	;# 
   319     0013                     	;# 
   320     0015                     	;# 
   321     0016                     	;# 
   322     0016                     	;# 
   323     0017                     	;# 
   324     0018                     	;# 
   325     0019                     	;# 
   326     001A                     	;# 
   327     001B                     	;# 
   328     001C                     	;# 
   329     001E                     	;# 
   330     001F                     	;# 
   331     008C                     	;# 
   332     008D                     	;# 
   333     008E                     	;# 
   334     008F                     	;# 
   335     0090                     	;# 
   336     0091                     	;# 
   337     0092                     	;# 
   338     0093                     	;# 
   339     0095                     	;# 
   340     0096                     	;# 
   341     0097                     	;# 
   342     0098                     	;# 
   343     0099                     	;# 
   344     009A                     	;# 
   345     009B                     	;# 
   346     009B                     	;# 
   347     009C                     	;# 
   348     009D                     	;# 
   349     009E                     	;# 
   350     010C                     	;# 
   351     010D                     	;# 
   352     010E                     	;# 
   353     010F                     	;# 
   354     0110                     	;# 
   355     0111                     	;# 
   356     0112                     	;# 
   357     0113                     	;# 
   358     0114                     	;# 
   359     0115                     	;# 
   360     0116                     	;# 
   361     0117                     	;# 
   362     0118                     	;# 
   363     0119                     	;# 
   364     011A                     	;# 
   365     011B                     	;# 
   366     011D                     	;# 
   367     018C                     	;# 
   368     018D                     	;# 
   369     018F                     	;# 
   370     0190                     	;# 
   371     0191                     	;# 
   372     0191                     	;# 
   373     0192                     	;# 
   374     0193                     	;# 
   375     0193                     	;# 
   376     0193                     	;# 
   377     0194                     	;# 
   378     0195                     	;# 
   379     0196                     	;# 
   380     0199                     	;# 
   381     019A                     	;# 
   382     019B                     	;# 
   383     019B                     	;# 
   384     019B                     	;# 
   385     019B                     	;# 
   386     019C                     	;# 
   387     019C                     	;# 
   388     019D                     	;# 
   389     019E                     	;# 
   390     019F                     	;# 
   391     020D                     	;# 
   392     0210                     	;# 
   393     0211                     	;# 
   394     0212                     	;# 
   395     0213                     	;# 
   396     0214                     	;# 
   397     0215                     	;# 
   398     0215                     	;# 
   399     0216                     	;# 
   400     0217                     	;# 
   401     0291                     	;# 
   402     0291                     	;# 
   403     0292                     	;# 
   404     0293                     	;# 
   405     0294                     	;# 
   406     0295                     	;# 
   407     0295                     	;# 
   408     0296                     	;# 
   409     0298                     	;# 
   410     0298                     	;# 
   411     0299                     	;# 
   412     029A                     	;# 
   413     029B                     	;# 
   414     029C                     	;# 
   415     029C                     	;# 
   416     029D                     	;# 
   417     029E                     	;# 
   418     029F                     	;# 
   419     0311                     	;# 
   420     0311                     	;# 
   421     0312                     	;# 
   422     0313                     	;# 
   423     0314                     	;# 
   424     0315                     	;# 
   425     0315                     	;# 
   426     0316                     	;# 
   427     0318                     	;# 
   428     0318                     	;# 
   429     0319                     	;# 
   430     031A                     	;# 
   431     031C                     	;# 
   432     031C                     	;# 
   433     031D                     	;# 
   434     031E                     	;# 
   435     0394                     	;# 
   436     0395                     	;# 
   437     0396                     	;# 
   438     0415                     	;# 
   439     0416                     	;# 
   440     0417                     	;# 
   441     041C                     	;# 
   442     041D                     	;# 
   443     041E                     	;# 
   444     0791                     	;# 
   445     0792                     	;# 
   446     0793                     	;# 
   447     0794                     	;# 
   448     0795                     	;# 
   449     0798                     	;# 
   450     0799                     	;# 
   451     079A                     	;# 
   452     07A0                     	;# 
   453     07A1                     	;# 
   454     07A2                     	;# 
   455     07A3                     	;# 
   456     07A4                     	;# 
   457     07A5                     	;# 
   458     07A6                     	;# 
   459     07A7                     	;# 
   460     07A8                     	;# 
   461     07A9                     	;# 
   462     07AA                     	;# 
   463     07AB                     	;# 
   464     0FE4                     	;# 
   465     0FE5                     	;# 
   466     0FE6                     	;# 
   467     0FE7                     	;# 
   468     0FE8                     	;# 
   469     0FE9                     	;# 
   470     0FEA                     	;# 
   471     0FEB                     	;# 
   472     0FED                     	;# 
   473     0FEE                     	;# 
   474     0FEF                     	;# 
   475     0000                     	;# 
   476     0001                     	;# 
   477     0002                     	;# 
   478     0003                     	;# 
   479     0004                     	;# 
   480     0005                     	;# 
   481     0006                     	;# 
   482     0007                     	;# 
   483     0008                     	;# 
   484     0009                     	;# 
   485     000A                     	;# 
   486     000B                     	;# 
   487     000C                     	;# 
   488     000D                     	;# 
   489     000E                     	;# 
   490     000F                     	;# 
   491     0010                     	;# 
   492     0011                     	;# 
   493     0012                     	;# 
   494     0013                     	;# 
   495     0015                     	;# 
   496     0016                     	;# 
   497     0016                     	;# 
   498     0017                     	;# 
   499     0018                     	;# 
   500     0019                     	;# 
   501     001A                     	;# 
   502     001B                     	;# 
   503     001C                     	;# 
   504     001E                     	;# 
   505     001F                     	;# 
   506     008C                     	;# 
   507     008D                     	;# 
   508     008E                     	;# 
   509     008F                     	;# 
   510     0090                     	;# 
   511     0091                     	;# 
   512     0092                     	;# 
   513     0093                     	;# 
   514     0095                     	;# 
   515     0096                     	;# 
   516     0097                     	;# 
   517     0098                     	;# 
   518     0099                     	;# 
   519     009A                     	;# 
   520     009B                     	;# 
   521     009B                     	;# 
   522     009C                     	;# 
   523     009D                     	;# 
   524     009E                     	;# 
   525     010C                     	;# 
   526     010D                     	;# 
   527     010E                     	;# 
   528     010F                     	;# 
   529     0110                     	;# 
   530     0111                     	;# 
   531     0112                     	;# 
   532     0113                     	;# 
   533     0114                     	;# 
   534     0115                     	;# 
   535     0116                     	;# 
   536     0117                     	;# 
   537     0118                     	;# 
   538     0119                     	;# 
   539     011A                     	;# 
   540     011B                     	;# 
   541     011D                     	;# 
   542     018C                     	;# 
   543     018D                     	;# 
   544     018F                     	;# 
   545     0190                     	;# 
   546     0191                     	;# 
   547     0191                     	;# 
   548     0192                     	;# 
   549     0193                     	;# 
   550     0193                     	;# 
   551     0193                     	;# 
   552     0194                     	;# 
   553     0195                     	;# 
   554     0196                     	;# 
   555     0199                     	;# 
   556     019A                     	;# 
   557     019B                     	;# 
   558     019B                     	;# 
   559     019B                     	;# 
   560     019B                     	;# 
   561     019C                     	;# 
   562     019C                     	;# 
   563     019D                     	;# 
   564     019E                     	;# 
   565     019F                     	;# 
   566     020D                     	;# 
   567     0210                     	;# 
   568     0211                     	;# 
   569     0212                     	;# 
   570     0213                     	;# 
   571     0214                     	;# 
   572     0215                     	;# 
   573     0215                     	;# 
   574     0216                     	;# 
   575     0217                     	;# 
   576     0291                     	;# 
   577     0291                     	;# 
   578     0292                     	;# 
   579     0293                     	;# 
   580     0294                     	;# 
   581     0295                     	;# 
   582     0295                     	;# 
   583     0296                     	;# 
   584     0298                     	;# 
   585     0298                     	;# 
   586     0299                     	;# 
   587     029A                     	;# 
   588     029B                     	;# 
   589     029C                     	;# 
   590     029C                     	;# 
   591     029D                     	;# 
   592     029E                     	;# 
   593     029F                     	;# 
   594     0311                     	;# 
   595     0311                     	;# 
   596     0312                     	;# 
   597     0313                     	;# 
   598     0314                     	;# 
   599     0315                     	;# 
   600     0315                     	;# 
   601     0316                     	;# 
   602     0318                     	;# 
   603     0318                     	;# 
   604     0319                     	;# 
   605     031A                     	;# 
   606     031C                     	;# 
   607     031C                     	;# 
   608     031D                     	;# 
   609     031E                     	;# 
   610     0394                     	;# 
   611     0395                     	;# 
   612     0396                     	;# 
   613     0415                     	;# 
   614     0416                     	;# 
   615     0417                     	;# 
   616     041C                     	;# 
   617     041D                     	;# 
   618     041E                     	;# 
   619     0791                     	;# 
   620     0792                     	;# 
   621     0793                     	;# 
   622     0794                     	;# 
   623     0795                     	;# 
   624     0798                     	;# 
   625     0799                     	;# 
   626     079A                     	;# 
   627     07A0                     	;# 
   628     07A1                     	;# 
   629     07A2                     	;# 
   630     07A3                     	;# 
   631     07A4                     	;# 
   632     07A5                     	;# 
   633     07A6                     	;# 
   634     07A7                     	;# 
   635     07A8                     	;# 
   636     07A9                     	;# 
   637     07AA                     	;# 
   638     07AB                     	;# 
   639     0FE4                     	;# 
   640     0FE5                     	;# 
   641     0FE6                     	;# 
   642     0FE7                     	;# 
   643     0FE8                     	;# 
   644     0FE9                     	;# 
   645     0FEA                     	;# 
   646     0FEB                     	;# 
   647     0FED                     	;# 
   648     0FEE                     	;# 
   649     0FEF                     	;# 
   650     0000                     	;# 
   651     0001                     	;# 
   652     0002                     	;# 
   653     0003                     	;# 
   654     0004                     	;# 
   655     0005                     	;# 
   656     0006                     	;# 
   657     0007                     	;# 
   658     0008                     	;# 
   659     0009                     	;# 
   660     000A                     	;# 
   661     000B                     	;# 
   662     000C                     	;# 
   663     000D                     	;# 
   664     000E                     	;# 
   665     000F                     	;# 
   666     0010                     	;# 
   667     0011                     	;# 
   668     0012                     	;# 
   669     0013                     	;# 
   670     0015                     	;# 
   671     0016                     	;# 
   672     0016                     	;# 
   673     0017                     	;# 
   674     0018                     	;# 
   675     0019                     	;# 
   676     001A                     	;# 
   677     001B                     	;# 
   678     001C                     	;# 
   679     001E                     	;# 
   680     001F                     	;# 
   681     008C                     	;# 
   682     008D                     	;# 
   683     008E                     	;# 
   684     008F                     	;# 
   685     0090                     	;# 
   686     0091                     	;# 
   687     0092                     	;# 
   688     0093                     	;# 
   689     0095                     	;# 
   690     0096                     	;# 
   691     0097                     	;# 
   692     0098                     	;# 
   693     0099                     	;# 
   694     009A                     	;# 
   695     009B                     	;# 
   696     009B                     	;# 
   697     009C                     	;# 
   698     009D                     	;# 
   699     009E                     	;# 
   700     010C                     	;# 
   701     010D                     	;# 
   702     010E                     	;# 
   703     010F                     	;# 
   704     0110                     	;# 
   705     0111                     	;# 
   706     0112                     	;# 
   707     0113                     	;# 
   708     0114                     	;# 
   709     0115                     	;# 
   710     0116                     	;# 
   711     0117                     	;# 
   712     0118                     	;# 
   713     0119                     	;# 
   714     011A                     	;# 
   715     011B                     	;# 
   716     011D                     	;# 
   717     018C                     	;# 
   718     018D                     	;# 
   719     018F                     	;# 
   720     0190                     	;# 
   721     0191                     	;# 
   722     0191                     	;# 
   723     0192                     	;# 
   724     0193                     	;# 
   725     0193                     	;# 
   726     0193                     	;# 
   727     0194                     	;# 
   728     0195                     	;# 
   729     0196                     	;# 
   730     0199                     	;# 
   731     019A                     	;# 
   732     019B                     	;# 
   733     019B                     	;# 
   734     019B                     	;# 
   735     019B                     	;# 
   736     019C                     	;# 
   737     019C                     	;# 
   738     019D                     	;# 
   739     019E                     	;# 
   740     019F                     	;# 
   741     020D                     	;# 
   742     0210                     	;# 
   743     0211                     	;# 
   744     0212                     	;# 
   745     0213                     	;# 
   746     0214                     	;# 
   747     0215                     	;# 
   748     0215                     	;# 
   749     0216                     	;# 
   750     0217                     	;# 
   751     0291                     	;# 
   752     0291                     	;# 
   753     0292                     	;# 
   754     0293                     	;# 
   755     0294                     	;# 
   756     0295                     	;# 
   757     0295                     	;# 
   758     0296                     	;# 
   759     0298                     	;# 
   760     0298                     	;# 
   761     0299                     	;# 
   762     029A                     	;# 
   763     029B                     	;# 
   764     029C                     	;# 
   765     029C                     	;# 
   766     029D                     	;# 
   767     029E                     	;# 
   768     029F                     	;# 
   769     0311                     	;# 
   770     0311                     	;# 
   771     0312                     	;# 
   772     0313                     	;# 
   773     0314                     	;# 
   774     0315                     	;# 
   775     0315                     	;# 
   776     0316                     	;# 
   777     0318                     	;# 
   778     0318                     	;# 
   779     0319                     	;# 
   780     031A                     	;# 
   781     031C                     	;# 
   782     031C                     	;# 
   783     031D                     	;# 
   784     031E                     	;# 
   785     0394                     	;# 
   786     0395                     	;# 
   787     0396                     	;# 
   788     0415                     	;# 
   789     0416                     	;# 
   790     0417                     	;# 
   791     041C                     	;# 
   792     041D                     	;# 
   793     041E                     	;# 
   794     0791                     	;# 
   795     0792                     	;# 
   796     0793                     	;# 
   797     0794                     	;# 
   798     0795                     	;# 
   799     0798                     	;# 
   800     0799                     	;# 
   801     079A                     	;# 
   802     07A0                     	;# 
   803     07A1                     	;# 
   804     07A2                     	;# 
   805     07A3                     	;# 
   806     07A4                     	;# 
   807     07A5                     	;# 
   808     07A6                     	;# 
   809     07A7                     	;# 
   810     07A8                     	;# 
   811     07A9                     	;# 
   812     07AA                     	;# 
   813     07AB                     	;# 
   814     0FE4                     	;# 
   815     0FE5                     	;# 
   816     0FE6                     	;# 
   817     0FE7                     	;# 
   818     0FE8                     	;# 
   819     0FE9                     	;# 
   820     0FEA                     	;# 
   821     0FEB                     	;# 
   822     0FED                     	;# 
   823     0FEE                     	;# 
   824     0FEF                     	;# 
   825                           
   826                           	psect	eeprom_data
   827     0000  0031 0032 0033 0034 00FF 00FF 00FF 00FF 	db	49,50,51,52,255,255,255,255	;# 
   828     0000                     	;# 
   829     0001                     	;# 
   830     0002                     	;# 
   831     0003                     	;# 
   832     0004                     	;# 
   833     0005                     	;# 
   834     0006                     	;# 
   835     0007                     	;# 
   836     0008                     	;# 
   837     0009                     	;# 
   838     000A                     	;# 
   839     000B                     	;# 
   840     000C                     	;# 
   841     000D                     	;# 
   842     000E                     	;# 
   843     000F                     	;# 
   844     0010                     	;# 
   845     0011                     	;# 
   846     0012                     	;# 
   847     0013                     	;# 
   848     0015                     	;# 
   849     0016                     	;# 
   850     0016                     	;# 
   851     0017                     	;# 
   852     0018                     	;# 
   853     0019                     	;# 
   854     001A                     	;# 
   855     001B                     	;# 
   856     001C                     	;# 
   857     001E                     	;# 
   858     001F                     	;# 
   859     008C                     	;# 
   860     008D                     	;# 
   861     008E                     	;# 
   862     008F                     	;# 
   863     0090                     	;# 
   864     0091                     	;# 
   865     0092                     	;# 
   866     0093                     	;# 
   867     0095                     	;# 
   868     0096                     	;# 
   869     0097                     	;# 
   870     0098                     	;# 
   871     0099                     	;# 
   872     009A                     	;# 
   873     009B                     	;# 
   874     009B                     	;# 
   875     009C                     	;# 
   876     009D                     	;# 
   877     009E                     	;# 
   878     010C                     	;# 
   879     010D                     	;# 
   880     010E                     	;# 
   881     010F                     	;# 
   882     0110                     	;# 
   883     0111                     	;# 
   884     0112                     	;# 
   885     0113                     	;# 
   886     0114                     	;# 
   887     0115                     	;# 
   888     0116                     	;# 
   889     0117                     	;# 
   890     0118                     	;# 
   891     0119                     	;# 
   892     011A                     	;# 
   893     011B                     	;# 
   894     011D                     	;# 
   895     018C                     	;# 
   896     018D                     	;# 
   897     018F                     	;# 
   898     0190                     	;# 
   899     0191                     	;# 
   900     0191                     	;# 
   901     0192                     	;# 
   902     0193                     	;# 
   903     0193                     	;# 
   904     0193                     	;# 
   905     0194                     	;# 
   906     0195                     	;# 
   907     0196                     	;# 
   908     0199                     	;# 
   909     019A                     	;# 
   910     019B                     	;# 
   911     019B                     	;# 
   912     019B                     	;# 
   913     019B                     	;# 
   914     019C                     	;# 
   915     019C                     	;# 
   916     019D                     	;# 
   917     019E                     	;# 
   918     019F                     	;# 
   919     020D                     	;# 
   920     0210                     	;# 
   921     0211                     	;# 
   922     0212                     	;# 
   923     0213                     	;# 
   924     0214                     	;# 
   925     0215                     	;# 
   926     0215                     	;# 
   927     0216                     	;# 
   928     0217                     	;# 
   929     0291                     	;# 
   930     0291                     	;# 
   931     0292                     	;# 
   932     0293                     	;# 
   933     0294                     	;# 
   934     0295                     	;# 
   935     0295                     	;# 
   936     0296                     	;# 
   937     0298                     	;# 
   938     0298                     	;# 
   939     0299                     	;# 
   940     029A                     	;# 
   941     029B                     	;# 
   942     029C                     	;# 
   943     029C                     	;# 
   944     029D                     	;# 
   945     029E                     	;# 
   946     029F                     	;# 
   947     0311                     	;# 
   948     0311                     	;# 
   949     0312                     	;# 
   950     0313                     	;# 
   951     0314                     	;# 
   952     0315                     	;# 
   953     0315                     	;# 
   954     0316                     	;# 
   955     0318                     	;# 
   956     0318                     	;# 
   957     0319                     	;# 
   958     031A                     	;# 
   959     031C                     	;# 
   960     031C                     	;# 
   961     031D                     	;# 
   962     031E                     	;# 
   963     0394                     	;# 
   964     0395                     	;# 
   965     0396                     	;# 
   966     0415                     	;# 
   967     0416                     	;# 
   968     0417                     	;# 
   969     041C                     	;# 
   970     041D                     	;# 
   971     041E                     	;# 
   972     0791                     	;# 
   973     0792                     	;# 
   974     0793                     	;# 
   975     0794                     	;# 
   976     0795                     	;# 
   977     0798                     	;# 
   978     0799                     	;# 
   979     079A                     	;# 
   980     07A0                     	;# 
   981     07A1                     	;# 
   982     07A2                     	;# 
   983     07A3                     	;# 
   984     07A4                     	;# 
   985     07A5                     	;# 
   986     07A6                     	;# 
   987     07A7                     	;# 
   988     07A8                     	;# 
   989     07A9                     	;# 
   990     07AA                     	;# 
   991     07AB                     	;# 
   992     0FE4                     	;# 
   993     0FE5                     	;# 
   994     0FE6                     	;# 
   995     0FE7                     	;# 
   996     0FE8                     	;# 
   997     0FE9                     	;# 
   998     0FEA                     	;# 
   999     0FEB                     	;# 
  1000     0FED                     	;# 
  1001     0FEE                     	;# 
  1002     0FEF                     	;# 
  1003     0000                     	;# 
  1004     0001                     	;# 
  1005     0002                     	;# 
  1006     0003                     	;# 
  1007     0004                     	;# 
  1008     0005                     	;# 
  1009     0006                     	;# 
  1010     0007                     	;# 
  1011     0008                     	;# 
  1012     0009                     	;# 
  1013     000A                     	;# 
  1014     000B                     	;# 
  1015     000C                     	;# 
  1016     000D                     	;# 
  1017     000E                     	;# 
  1018     000F                     	;# 
  1019     0010                     	;# 
  1020     0011                     	;# 
  1021     0012                     	;# 
  1022     0013                     	;# 
  1023     0015                     	;# 
  1024     0016                     	;# 
  1025     0016                     	;# 
  1026     0017                     	;# 
  1027     0018                     	;# 
  1028     0019                     	;# 
  1029     001A                     	;# 
  1030     001B                     	;# 
  1031     001C                     	;# 
  1032     001E                     	;# 
  1033     001F                     	;# 
  1034     008C                     	;# 
  1035     008D                     	;# 
  1036     008E                     	;# 
  1037     008F                     	;# 
  1038     0090                     	;# 
  1039     0091                     	;# 
  1040     0092                     	;# 
  1041     0093                     	;# 
  1042     0095                     	;# 
  1043     0096                     	;# 
  1044     0097                     	;# 
  1045     0098                     	;# 
  1046     0099                     	;# 
  1047     009A                     	;# 
  1048     009B                     	;# 
  1049     009B                     	;# 
  1050     009C                     	;# 
  1051     009D                     	;# 
  1052     009E                     	;# 
  1053     010C                     	;# 
  1054     010D                     	;# 
  1055     010E                     	;# 
  1056     010F                     	;# 
  1057     0110                     	;# 
  1058     0111                     	;# 
  1059     0112                     	;# 
  1060     0113                     	;# 
  1061     0114                     	;# 
  1062     0115                     	;# 
  1063     0116                     	;# 
  1064     0117                     	;# 
  1065     0118                     	;# 
  1066     0119                     	;# 
  1067     011A                     	;# 
  1068     011B                     	;# 
  1069     011D                     	;# 
  1070     018C                     	;# 
  1071     018D                     	;# 
  1072     018F                     	;# 
  1073     0190                     	;# 
  1074     0191                     	;# 
  1075     0191                     	;# 
  1076     0192                     	;# 
  1077     0193                     	;# 
  1078     0193                     	;# 
  1079     0193                     	;# 
  1080     0194                     	;# 
  1081     0195                     	;# 
  1082     0196                     	;# 
  1083     0199                     	;# 
  1084     019A                     	;# 
  1085     019B                     	;# 
  1086     019B                     	;# 
  1087     019B                     	;# 
  1088     019B                     	;# 
  1089     019C                     	;# 
  1090     019C                     	;# 
  1091     019D                     	;# 
  1092     019E                     	;# 
  1093     019F                     	;# 
  1094     020D                     	;# 
  1095     0210                     	;# 
  1096     0211                     	;# 
  1097     0212                     	;# 
  1098     0213                     	;# 
  1099     0214                     	;# 
  1100     0215                     	;# 
  1101     0215                     	;# 
  1102     0216                     	;# 
  1103     0217                     	;# 
  1104     0291                     	;# 
  1105     0291                     	;# 
  1106     0292                     	;# 
  1107     0293                     	;# 
  1108     0294                     	;# 
  1109     0295                     	;# 
  1110     0295                     	;# 
  1111     0296                     	;# 
  1112     0298                     	;# 
  1113     0298                     	;# 
  1114     0299                     	;# 
  1115     029A                     	;# 
  1116     029B                     	;# 
  1117     029C                     	;# 
  1118     029C                     	;# 
  1119     029D                     	;# 
  1120     029E                     	;# 
  1121     029F                     	;# 
  1122     0311                     	;# 
  1123     0311                     	;# 
  1124     0312                     	;# 
  1125     0313                     	;# 
  1126     0314                     	;# 
  1127     0315                     	;# 
  1128     0315                     	;# 
  1129     0316                     	;# 
  1130     0318                     	;# 
  1131     0318                     	;# 
  1132     0319                     	;# 
  1133     031A                     	;# 
  1134     031C                     	;# 
  1135     031C                     	;# 
  1136     031D                     	;# 
  1137     031E                     	;# 
  1138     0394                     	;# 
  1139     0395                     	;# 
  1140     0396                     	;# 
  1141     0415                     	;# 
  1142     0416                     	;# 
  1143     0417                     	;# 
  1144     041C                     	;# 
  1145     041D                     	;# 
  1146     041E                     	;# 
  1147     0791                     	;# 
  1148     0792                     	;# 
  1149     0793                     	;# 
  1150     0794                     	;# 
  1151     0795                     	;# 
  1152     0798                     	;# 
  1153     0799                     	;# 
  1154     079A                     	;# 
  1155     07A0                     	;# 
  1156     07A1                     	;# 
  1157     07A2                     	;# 
  1158     07A3                     	;# 
  1159     07A4                     	;# 
  1160     07A5                     	;# 
  1161     07A6                     	;# 
  1162     07A7                     	;# 
  1163     07A8                     	;# 
  1164     07A9                     	;# 
  1165     07AA                     	;# 
  1166     07AB                     	;# 
  1167     0FE4                     	;# 
  1168     0FE5                     	;# 
  1169     0FE6                     	;# 
  1170     0FE7                     	;# 
  1171     0FE8                     	;# 
  1172     0FE9                     	;# 
  1173     0FEA                     	;# 
  1174     0FEB                     	;# 
  1175     0FED                     	;# 
  1176     0FEE                     	;# 
  1177     0FEF                     	;# 
  1178     0000                     	;# 
  1179     0001                     	;# 
  1180     0002                     	;# 
  1181     0003                     	;# 
  1182     0004                     	;# 
  1183     0005                     	;# 
  1184     0006                     	;# 
  1185     0007                     	;# 
  1186     0008                     	;# 
  1187     0009                     	;# 
  1188     000A                     	;# 
  1189     000B                     	;# 
  1190     000C                     	;# 
  1191     000D                     	;# 
  1192     000E                     	;# 
  1193     000F                     	;# 
  1194     0010                     	;# 
  1195     0011                     	;# 
  1196     0012                     	;# 
  1197     0013                     	;# 
  1198     0015                     	;# 
  1199     0016                     	;# 
  1200     0016                     	;# 
  1201     0017                     	;# 
  1202     0018                     	;# 
  1203     0019                     	;# 
  1204     001A                     	;# 
  1205     001B                     	;# 
  1206     001C                     	;# 
  1207     001E                     	;# 
  1208     001F                     	;# 
  1209     008C                     	;# 
  1210     008D                     	;# 
  1211     008E                     	;# 
  1212     008F                     	;# 
  1213     0090                     	;# 
  1214     0091                     	;# 
  1215     0092                     	;# 
  1216     0093                     	;# 
  1217     0095                     	;# 
  1218     0096                     	;# 
  1219     0097                     	;# 
  1220     0098                     	;# 
  1221     0099                     	;# 
  1222     009A                     	;# 
  1223     009B                     	;# 
  1224     009B                     	;# 
  1225     009C                     	;# 
  1226     009D                     	;# 
  1227     009E                     	;# 
  1228     010C                     	;# 
  1229     010D                     	;# 
  1230     010E                     	;# 
  1231     010F                     	;# 
  1232     0110                     	;# 
  1233     0111                     	;# 
  1234     0112                     	;# 
  1235     0113                     	;# 
  1236     0114                     	;# 
  1237     0115                     	;# 
  1238     0116                     	;# 
  1239     0117                     	;# 
  1240     0118                     	;# 
  1241     0119                     	;# 
  1242     011A                     	;# 
  1243     011B                     	;# 
  1244     011D                     	;# 
  1245     018C                     	;# 
  1246     018D                     	;# 
  1247     018F                     	;# 
  1248     0190                     	;# 
  1249     0191                     	;# 
  1250     0191                     	;# 
  1251     0192                     	;# 
  1252     0193                     	;# 
  1253     0193                     	;# 
  1254     0193                     	;# 
  1255     0194                     	;# 
  1256     0195                     	;# 
  1257     0196                     	;# 
  1258     0199                     	;# 
  1259     019A                     	;# 
  1260     019B                     	;# 
  1261     019B                     	;# 
  1262     019B                     	;# 
  1263     019B                     	;# 
  1264     019C                     	;# 
  1265     019C                     	;# 
  1266     019D                     	;# 
  1267     019E                     	;# 
  1268     019F                     	;# 
  1269     020D                     	;# 
  1270     0210                     	;# 
  1271     0211                     	;# 
  1272     0212                     	;# 
  1273     0213                     	;# 
  1274     0214                     	;# 
  1275     0215                     	;# 
  1276     0215                     	;# 
  1277     0216                     	;# 
  1278     0217                     	;# 
  1279     0291                     	;# 
  1280     0291                     	;# 
  1281     0292                     	;# 
  1282     0293                     	;# 
  1283     0294                     	;# 
  1284     0295                     	;# 
  1285     0295                     	;# 
  1286     0296                     	;# 
  1287     0298                     	;# 
  1288     0298                     	;# 
  1289     0299                     	;# 
  1290     029A                     	;# 
  1291     029B                     	;# 
  1292     029C                     	;# 
  1293     029C                     	;# 
  1294     029D                     	;# 
  1295     029E                     	;# 
  1296     029F                     	;# 
  1297     0311                     	;# 
  1298     0311                     	;# 
  1299     0312                     	;# 
  1300     0313                     	;# 
  1301     0314                     	;# 
  1302     0315                     	;# 
  1303     0315                     	;# 
  1304     0316                     	;# 
  1305     0318                     	;# 
  1306     0318                     	;# 
  1307     0319                     	;# 
  1308     031A                     	;# 
  1309     031C                     	;# 
  1310     031C                     	;# 
  1311     031D                     	;# 
  1312     031E                     	;# 
  1313     0394                     	;# 
  1314     0395                     	;# 
  1315     0396                     	;# 
  1316     0415                     	;# 
  1317     0416                     	;# 
  1318     0417                     	;# 
  1319     041C                     	;# 
  1320     041D                     	;# 
  1321     041E                     	;# 
  1322     0791                     	;# 
  1323     0792                     	;# 
  1324     0793                     	;# 
  1325     0794                     	;# 
  1326     0795                     	;# 
  1327     0798                     	;# 
  1328     0799                     	;# 
  1329     079A                     	;# 
  1330     07A0                     	;# 
  1331     07A1                     	;# 
  1332     07A2                     	;# 
  1333     07A3                     	;# 
  1334     07A4                     	;# 
  1335     07A5                     	;# 
  1336     07A6                     	;# 
  1337     07A7                     	;# 
  1338     07A8                     	;# 
  1339     07A9                     	;# 
  1340     07AA                     	;# 
  1341     07AB                     	;# 
  1342     0FE4                     	;# 
  1343     0FE5                     	;# 
  1344     0FE6                     	;# 
  1345     0FE7                     	;# 
  1346     0FE8                     	;# 
  1347     0FE9                     	;# 
  1348     0FEA                     	;# 
  1349     0FEB                     	;# 
  1350     0FED                     	;# 
  1351     0FEE                     	;# 
  1352     0FEF                     	;# 
  1353     0000                     	;# 
  1354     0001                     	;# 
  1355     0002                     	;# 
  1356     0003                     	;# 
  1357     0004                     	;# 
  1358     0005                     	;# 
  1359     0006                     	;# 
  1360     0007                     	;# 
  1361     0008                     	;# 
  1362     0009                     	;# 
  1363     000A                     	;# 
  1364     000B                     	;# 
  1365     000C                     	;# 
  1366     000D                     	;# 
  1367     000E                     	;# 
  1368     000F                     	;# 
  1369     0010                     	;# 
  1370     0011                     	;# 
  1371     0012                     	;# 
  1372     0013                     	;# 
  1373     0015                     	;# 
  1374     0016                     	;# 
  1375     0016                     	;# 
  1376     0017                     	;# 
  1377     0018                     	;# 
  1378     0019                     	;# 
  1379     001A                     	;# 
  1380     001B                     	;# 
  1381     001C                     	;# 
  1382     001E                     	;# 
  1383     001F                     	;# 
  1384     008C                     	;# 
  1385     008D                     	;# 
  1386     008E                     	;# 
  1387     008F                     	;# 
  1388     0090                     	;# 
  1389     0091                     	;# 
  1390     0092                     	;# 
  1391     0093                     	;# 
  1392     0095                     	;# 
  1393     0096                     	;# 
  1394     0097                     	;# 
  1395     0098                     	;# 
  1396     0099                     	;# 
  1397     009A                     	;# 
  1398     009B                     	;# 
  1399     009B                     	;# 
  1400     009C                     	;# 
  1401     009D                     	;# 
  1402     009E                     	;# 
  1403     010C                     	;# 
  1404     010D                     	;# 
  1405     010E                     	;# 
  1406     010F                     	;# 
  1407     0110                     	;# 
  1408     0111                     	;# 
  1409     0112                     	;# 
  1410     0113                     	;# 
  1411     0114                     	;# 
  1412     0115                     	;# 
  1413     0116                     	;# 
  1414     0117                     	;# 
  1415     0118                     	;# 
  1416     0119                     	;# 
  1417     011A                     	;# 
  1418     011B                     	;# 
  1419     011D                     	;# 
  1420     018C                     	;# 
  1421     018D                     	;# 
  1422     018F                     	;# 
  1423     0190                     	;# 
  1424     0191                     	;# 
  1425     0191                     	;# 
  1426     0192                     	;# 
  1427     0193                     	;# 
  1428     0193                     	;# 
  1429     0193                     	;# 
  1430     0194                     	;# 
  1431     0195                     	;# 
  1432     0196                     	;# 
  1433     0199                     	;# 
  1434     019A                     	;# 
  1435     019B                     	;# 
  1436     019B                     	;# 
  1437     019B                     	;# 
  1438     019B                     	;# 
  1439     019C                     	;# 
  1440     019C                     	;# 
  1441     019D                     	;# 
  1442     019E                     	;# 
  1443     019F                     	;# 
  1444     020D                     	;# 
  1445     0210                     	;# 
  1446     0211                     	;# 
  1447     0212                     	;# 
  1448     0213                     	;# 
  1449     0214                     	;# 
  1450     0215                     	;# 
  1451     0215                     	;# 
  1452     0216                     	;# 
  1453     0217                     	;# 
  1454     0291                     	;# 
  1455     0291                     	;# 
  1456     0292                     	;# 
  1457     0293                     	;# 
  1458     0294                     	;# 
  1459     0295                     	;# 
  1460     0295                     	;# 
  1461     0296                     	;# 
  1462     0298                     	;# 
  1463     0298                     	;# 
  1464     0299                     	;# 
  1465     029A                     	;# 
  1466     029B                     	;# 
  1467     029C                     	;# 
  1468     029C                     	;# 
  1469     029D                     	;# 
  1470     029E                     	;# 
  1471     029F                     	;# 
  1472     0311                     	;# 
  1473     0311                     	;# 
  1474     0312                     	;# 
  1475     0313                     	;# 
  1476     0314                     	;# 
  1477     0315                     	;# 
  1478     0315                     	;# 
  1479     0316                     	;# 
  1480     0318                     	;# 
  1481     0318                     	;# 
  1482     0319                     	;# 
  1483     031A                     	;# 
  1484     031C                     	;# 
  1485     031C                     	;# 
  1486     031D                     	;# 
  1487     031E                     	;# 
  1488     0394                     	;# 
  1489     0395                     	;# 
  1490     0396                     	;# 
  1491     0415                     	;# 
  1492     0416                     	;# 
  1493     0417                     	;# 
  1494     041C                     	;# 
  1495     041D                     	;# 
  1496     041E                     	;# 
  1497     0791                     	;# 
  1498     0792                     	;# 
  1499     0793                     	;# 
  1500     0794                     	;# 
  1501     0795                     	;# 
  1502     0798                     	;# 
  1503     0799                     	;# 
  1504     079A                     	;# 
  1505     07A0                     	;# 
  1506     07A1                     	;# 
  1507     07A2                     	;# 
  1508     07A3                     	;# 
  1509     07A4                     	;# 
  1510     07A5                     	;# 
  1511     07A6                     	;# 
  1512     07A7                     	;# 
  1513     07A8                     	;# 
  1514     07A9                     	;# 
  1515     07AA                     	;# 
  1516     07AB                     	;# 
  1517     0FE4                     	;# 
  1518     0FE5                     	;# 
  1519     0FE6                     	;# 
  1520     0FE7                     	;# 
  1521     0FE8                     	;# 
  1522     0FE9                     	;# 
  1523     0FEA                     	;# 
  1524     0FEB                     	;# 
  1525     0FED                     	;# 
  1526     0FEE                     	;# 
  1527     0FEF                     	;# 
  1528     0012                     _PIR2bits	set	18
  1529     000D                     _PORTBbits	set	13
  1530     000B                     _INTCONbits	set	11
  1531     008F                     _TRISDbits	set	143
  1532     008D                     _TRISBbits	set	141
  1533     008E                     _TRISCbits	set	142
  1534     008C                     _TRISAbits	set	140
  1535     0095                     _OPTION_REGbits	set	149
  1536     008F                     _TRISD	set	143
  1537     008E                     _TRISC	set	142
  1538     008D                     _TRISB	set	141
  1539     008C                     _TRISA	set	140
  1540     0090                     _TRISE	set	144
  1541     0097                     _WDTCON	set	151
  1542     0098                     _OSCTUNE	set	152
  1543     0099                     _OSCCON	set	153
  1544     009D                     _ADCON0bits	set	157
  1545     009D                     _ADCON0	set	157
  1546     009C                     _ADRESH	set	156
  1547     009B                     _ADRESL	set	155
  1548     009E                     _ADCON1	set	158
  1549     010F                     _LATDbits	set	271
  1550     010D                     _LATBbits	set	269
  1551     010E                     _LATCbits	set	270
  1552     010C                     _LATAbits	set	268
  1553     011D                     _APFCON	set	285
  1554     010E                     _LATC	set	270
  1555     010D                     _LATB	set	269
  1556     010C                     _LATA	set	268
  1557     010F                     _LATD	set	271
  1558     0110                     _LATE	set	272
  1559     0116                     _BORCON	set	278
  1560     0193                     _EEDAT	set	403
  1561     0191                     _EEADR	set	401
  1562     0196                     _EECON2	set	406
  1563     0195                     _EECON1bits	set	405
  1564     018C                     _ANSELA	set	396
  1565     0190                     _ANSELE	set	400
  1566     018D                     _ANSELB	set	397
  1567     018F                     _ANSELD	set	399
  1568     0214                     _SSPSTATbits	set	532
  1569     0211                     _SSPBUF	set	529
  1570     0216                     _SSPCON2bits	set	534
  1571     0212                     _SSPADD	set	530
  1572     0215                     _SSPCONbits	set	533
  1573     0215                     _SSPCON1bits	set	533
  1574     020D                     _WPUB	set	525
  1575     0210                     _WPUE	set	528
  1576     0396                     _IOCBF	set	918
  1577     0395                     _IOCBN	set	917
  1578                           
  1579                           	psect	stringtext1
  1580     1800                     __pstringtext1:
  1581     1800                     STR_5:
  1582     1800  3431               	retlw	49	;'1'
  1583     1801  343A               	retlw	58	;':'
  1584     1802  3449               	retlw	73	;'I'
  1585     1803  344E               	retlw	78	;'N'
  1586     1804  3447               	retlw	71	;'G'
  1587     1805  3452               	retlw	82	;'R'
  1588     1806  3445               	retlw	69	;'E'
  1589     1807  3453               	retlw	83	;'S'
  1590     1808  3441               	retlw	65	;'A'
  1591     1809  3452               	retlw	82	;'R'
  1592     180A  3420               	retlw	32	;' '
  1593     180B  3443               	retlw	67	;'C'
  1594     180C  344C               	retlw	76	;'L'
  1595     180D  3441               	retlw	65	;'A'
  1596     180E  3456               	retlw	86	;'V'
  1597     180F  3445               	retlw	69	;'E'
  1598     1810  3400               	retlw	0
  1599                           
  1600                           	psect	stringtext2
  1601     1811                     __pstringtext2:
  1602     1811                     STR_6:
  1603     1811  3432               	retlw	50	;'2'
  1604     1812  343A               	retlw	58	;':'
  1605     1813  3443               	retlw	67	;'C'
  1606     1814  3441               	retlw	65	;'A'
  1607     1815  344D               	retlw	77	;'M'
  1608     1816  3442               	retlw	66	;'B'
  1609     1817  3449               	retlw	73	;'I'
  1610     1818  3441               	retlw	65	;'A'
  1611     1819  3452               	retlw	82	;'R'
  1612     181A  3420               	retlw	32	;' '
  1613     181B  3443               	retlw	67	;'C'
  1614     181C  344C               	retlw	76	;'L'
  1615     181D  3441               	retlw	65	;'A'
  1616     181E  3456               	retlw	86	;'V'
  1617     181F  3445               	retlw	69	;'E'
  1618     1820  3400               	retlw	0
  1619                           
  1620                           	psect	stringtext3
  1621     1821                     __pstringtext3:
  1622     1821                     STR_1:
  1623     1821  3443               	retlw	67	;'C'
  1624     1822  346F               	retlw	111	;'o'
  1625     1823  346E               	retlw	110	;'n'
  1626     1824  3474               	retlw	116	;'t'
  1627     1825  3472               	retlw	114	;'r'
  1628     1826  346F               	retlw	111	;'o'
  1629     1827  346C               	retlw	108	;'l'
  1630     1828  3454               	retlw	84	;'T'
  1631     1829  3465               	retlw	101	;'e'
  1632     182A  3463               	retlw	99	;'c'
  1633     182B  3468               	retlw	104	;'h'
  1634     182C  3420               	retlw	32	;' '
  1635     182D  3443               	retlw	67	;'C'
  1636     182E  3441               	retlw	65	;'A'
  1637     182F  3400               	retlw	0
  1638                           
  1639                           	psect	stringtext4
  1640     1830                     __pstringtext4:
  1641     1830                     STR_14:
  1642     1830  3443               	retlw	67	;'C'
  1643     1831  344C               	retlw	76	;'L'
  1644     1832  3441               	retlw	65	;'A'
  1645     1833  3456               	retlw	86	;'V'
  1646     1834  3445               	retlw	69	;'E'
  1647     1835  3420               	retlw	32	;' '
  1648     1836  3443               	retlw	67	;'C'
  1649     1837  3441               	retlw	65	;'A'
  1650     1838  344D               	retlw	77	;'M'
  1651     1839  3442               	retlw	66	;'B'
  1652     183A  3449               	retlw	73	;'I'
  1653     183B  3441               	retlw	65	;'A'
  1654     183C  3444               	retlw	68	;'D'
  1655     183D  3441               	retlw	65	;'A'
  1656     183E  3400               	retlw	0
  1657                           
  1658                           	psect	stringtext5
  1659     183F                     __pstringtext5:
  1660     183F                     STR_2:
  1661     183F  3425               	retlw	37	;'%'
  1662     1840  3464               	retlw	100	;'d'
  1663     1841  3425               	retlw	37	;'%'
  1664     1842  3464               	retlw	100	;'d'
  1665     1843  343A               	retlw	58	;':'
  1666     1844  3425               	retlw	37	;'%'
  1667     1845  3464               	retlw	100	;'d'
  1668     1846  3425               	retlw	37	;'%'
  1669     1847  3464               	retlw	100	;'d'
  1670     1848  343A               	retlw	58	;':'
  1671     1849  3425               	retlw	37	;'%'
  1672     184A  3464               	retlw	100	;'d'
  1673     184B  3425               	retlw	37	;'%'
  1674     184C  3464               	retlw	100	;'d'
  1675     184D  3400               	retlw	0
  1676                           
  1677                           	psect	stringtext6
  1678     184E                     __pstringtext6:
  1679     184E                     STR_15:
  1680     184E  3443               	retlw	67	;'C'
  1681     184F  344F               	retlw	79	;'O'
  1682     1850  3452               	retlw	82	;'R'
  1683     1851  3452               	retlw	82	;'R'
  1684     1852  3445               	retlw	69	;'E'
  1685     1853  3443               	retlw	67	;'C'
  1686     1854  3454               	retlw	84	;'T'
  1687     1855  3441               	retlw	65	;'A'
  1688     1856  344D               	retlw	77	;'M'
  1689     1857  3445               	retlw	69	;'E'
  1690     1858  344E               	retlw	78	;'N'
  1691     1859  3454               	retlw	84	;'T'
  1692     185A  3445               	retlw	69	;'E'
  1693     185B  3400               	retlw	0
  1694                           
  1695                           	psect	stringtext7
  1696     185C                     __pstringtext7:
  1697     185C                     STR_12:
  1698     185C  3443               	retlw	67	;'C'
  1699     185D  344C               	retlw	76	;'L'
  1700     185E  3441               	retlw	65	;'A'
  1701     185F  3456               	retlw	86	;'V'
  1702     1860  3445               	retlw	69	;'E'
  1703     1861  3420               	retlw	32	;' '
  1704     1862  3441               	retlw	65	;'A'
  1705     1863  3443               	retlw	67	;'C'
  1706     1864  3454               	retlw	84	;'T'
  1707     1865  3455               	retlw	85	;'U'
  1708     1866  3441               	retlw	65	;'A'
  1709     1867  344C               	retlw	76	;'L'
  1710     1868  3400               	retlw	0
  1711                           
  1712                           	psect	stringtext8
  1713     1869                     __pstringtext8:
  1714     1869                     STR_13:
  1715     1869  3443               	retlw	67	;'C'
  1716     186A  344C               	retlw	76	;'L'
  1717     186B  3441               	retlw	65	;'A'
  1718     186C  3456               	retlw	86	;'V'
  1719     186D  3445               	retlw	69	;'E'
  1720     186E  3420               	retlw	32	;' '
  1721     186F  344E               	retlw	78	;'N'
  1722     1870  3455               	retlw	85	;'U'
  1723     1871  3445               	retlw	69	;'E'
  1724     1872  3456               	retlw	86	;'V'
  1725     1873  3441               	retlw	65	;'A'
  1726     1874  3400               	retlw	0
  1727                           
  1728                           	psect	stringtext9
  1729     1875                     __pstringtext9:
  1730     1875                     STR_17:
  1731     1875  3449               	retlw	73	;'I'
  1732     1876  344E               	retlw	78	;'N'
  1733     1877  3443               	retlw	67	;'C'
  1734     1878  344F               	retlw	79	;'O'
  1735     1879  3452               	retlw	82	;'R'
  1736     187A  3452               	retlw	82	;'R'
  1737     187B  3445               	retlw	69	;'E'
  1738     187C  3443               	retlw	67	;'C'
  1739     187D  3454               	retlw	84	;'T'
  1740     187E  3441               	retlw	65	;'A'
  1741     187F  3400               	retlw	0
  1742                           
  1743                           	psect	stringtext10
  1744     1880                     __pstringtext10:
  1745     1880                     STR_9:
  1746     1880  3441               	retlw	65	;'A'
  1747     1881  3450               	retlw	80	;'P'
  1748     1882  3452               	retlw	82	;'R'
  1749     1883  344F               	retlw	79	;'O'
  1750     1884  3442               	retlw	66	;'B'
  1751     1885  3441               	retlw	65	;'A'
  1752     1886  3444               	retlw	68	;'D'
  1753     1887  344F               	retlw	79	;'O'
  1754     1888  3400               	retlw	0
  1755                           
  1756                           	psect	stringtext11
  1757     1889                     __pstringtext11:
  1758     1889                     STR_11:
  1759     1889  3444               	retlw	68	;'D'
  1760     188A  3445               	retlw	69	;'E'
  1761     188B  344E               	retlw	78	;'N'
  1762     188C  3445               	retlw	69	;'E'
  1763     188D  3447               	retlw	71	;'G'
  1764     188E  3441               	retlw	65	;'A'
  1765     188F  3444               	retlw	68	;'D'
  1766     1890  344F               	retlw	79	;'O'
  1767     1891  3400               	retlw	0
  1768                           
  1769                           	psect	stringtext12
  1770     1892                     __pstringtext12:
  1771     1892                     STR_3:
  1772     1892  3425               	retlw	37	;'%'
  1773     1893  3430               	retlw	48	;'0'
  1774     1894  342E               	retlw	46	;'.'
  1775     1895  3432               	retlw	50	;'2'
  1776     1896  3466               	retlw	102	;'f'
  1777     1897  34DF               	retlw	-33
  1778     1898  3400               	retlw	0
  1779                           
  1780                           	psect	stringtext13
  1781     1899                     __pstringtext13:
  1782     1899                     STR_8:
  1783     1899  3441               	retlw	65	;'A'
  1784     189A  3443               	retlw	67	;'C'
  1785     189B  3443               	retlw	67	;'C'
  1786     189C  3445               	retlw	69	;'E'
  1787     189D  3453               	retlw	83	;'S'
  1788     189E  344F               	retlw	79	;'O'
  1789     189F  3400               	retlw	0
  1790                           
  1791                           	psect	stringtext14
  1792     18A0                     __pstringtext14:
  1793     18A0                     STR_19:
  1794     18A0  3469               	retlw	105	;'i'
  1795     18A1  346E               	retlw	110	;'n'
  1796     18A2  3466               	retlw	102	;'f'
  1797     18A3  3400               	retlw	0
  1798                           
  1799                           	psect	stringtext15
  1800     18A4                     __pstringtext15:
  1801     18A4                     STR_22:
  1802     18A4  346E               	retlw	110	;'n'
  1803     18A5  3461               	retlw	97	;'a'
  1804     18A6  346E               	retlw	110	;'n'
  1805     18A7  3400               	retlw	0
  1806                           
  1807                           	psect	stringtext16
  1808     18A8                     __pstringtext16:
  1809     18A8                     STR_4:
  1810     18A8  3443               	retlw	67	;'C'
  1811     18A9  3400               	retlw	0
  1812                           
  1813                           	psect	stringtext17
  1814     0000                     __pstringtext17:
  1815     1821                     
  1816                           	psect	cinit
  1817     0250                     start_initialization:	
  1818                           ; #config settings
  1819                           
  1820     0250                     __initialization:
  1821                           
  1822                           ; Clear objects allocated to COMMON
  1823     0250  01FC               	clrf	__pbssCOMMON& (0+127)
  1824     0251  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1825                           
  1826                           ; Clear objects allocated to BANK1
  1827     0252  0021               	movlb	1	; select bank1
  1828     0253  01ED               	clrf	__pbssBANK1& (0+127)
  1829     0254  01EE               	clrf	(__pbssBANK1+1)& (0+127)
  1830     0255  01EF               	clrf	(__pbssBANK1+2)& (0+127)
  1831                           
  1832                           ; Clear objects allocated to BANK2
  1833     0256  3020               	movlw	low __pbssBANK2
  1834     0257  0084               	movwf	4
  1835     0258  3001               	movlw	high __pbssBANK2
  1836     0259  0085               	movwf	5
  1837     025A  3020               	movlw	32
  1838     025B  3199  21A1  3182   	fcall	clear_ram0
  1839                           
  1840                           ; Clear objects allocated to BANK3
  1841     025E  30A0               	movlw	low __pbssBANK3
  1842     025F  0084               	movwf	4
  1843     0260  3001               	movlw	high __pbssBANK3
  1844     0261  0085               	movwf	5
  1845     0262  3014               	movlw	20
  1846     0263  3199  21A1  3182   	fcall	clear_ram0
  1847                           
  1848                           ; Clear objects allocated to BANK4
  1849     0266  3020               	movlw	low __pbssBANK4
  1850     0267  0084               	movwf	4
  1851     0268  3002               	movlw	high __pbssBANK4
  1852     0269  0085               	movwf	5
  1853     026A  3050               	movlw	80
  1854     026B  3199  21A1  3182   	fcall	clear_ram0
  1855     026E                     end_of_initialization:	
  1856                           ;End of C runtime variable initialization code
  1857                           
  1858     026E                     __end_of__initialization:
  1859     026E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1860     026F  0020               	movlb	0
  1861     0270  3196  2E29         	ljmp	_main	;jump to C main() function
  1862                           
  1863                           	psect	bssCOMMON
  1864     007C                     __pbssCOMMON:
  1865     007C                     _cont_key:
  1866     007C                     	ds	1
  1867     007D                     _tecla:
  1868     007D                     	ds	1
  1869                           
  1870                           	psect	bssBANK1
  1871     00ED                     __pbssBANK1:
  1872     00ED                     _prec:
  1873     00ED                     	ds	2
  1874     00EF                     _seg:
  1875     00EF                     	ds	1
  1876                           
  1877                           	psect	bssBANK2
  1878     0120                     __pbssBANK2:
  1879     0120                     floorf@F521:
  1880     0120                     	ds	4
  1881     0124                     ___fpclassifyf@F465:
  1882     0124                     	ds	4
  1883     0128                     _temp:
  1884     0128                     	ds	4
  1885     012C                     _width:
  1886     012C                     	ds	2
  1887     012E                     _ADC_InterruptHandler:
  1888     012E                     	ds	2
  1889     0130                     _flags:
  1890     0130                     	ds	1
  1891     0131                     _hor:
  1892     0131                     	ds	1
  1893     0132                     _min:
  1894     0132                     	ds	1
  1895     0133                     _estado:
  1896     0133                     	ds	1
  1897     0134                     _clave_enter:
  1898     0134                     	ds	5
  1899     0139                     _clave:
  1900     0139                     	ds	5
  1901     013E                     _convertedValue:
  1902     013E                     	ds	2
  1903                           
  1904                           	psect	bssBANK3
  1905     01A0                     __pbssBANK3:
  1906     01A0                     _buffer:
  1907     01A0                     	ds	20
  1908                           
  1909                           	psect	bssBANK4
  1910     0220                     __pbssBANK4:
  1911     0220                     _dbuf:
  1912     0220                     	ds	80
  1913                           
  1914                           	psect	clrtext
  1915     19A1                     clear_ram0:	
  1916                           ;	Called with FSR0 containing the base address, and
  1917                           ;	WREG with the size to clear
  1918                           
  1919     19A1  0064               	clrwdt	;clear the watchdog before getting into this loop
  1920     19A2                     clrloop0:
  1921     19A2  0180               	clrf	0	;clear RAM location pointed to by FSR
  1922     19A3  3101               	addfsr 0,1
  1923     19A4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1924     19A5  29A2               	goto	clrloop0	;have we reached the end yet?
  1925     19A6  3400               	retlw	0	;all done for this memory range, return
  1926                           
  1927                           	psect	cstackBANK2
  1928     0140                     __pcstackBANK2:
  1929     0140                     sprintf@s:
  1930                           
  1931                           ; 1 bytes @ 0x0
  1932     0140                     	ds	1
  1933     0141                     sprintf@ap:
  1934                           
  1935                           ; 1 bytes @ 0x1
  1936     0141                     	ds	1
  1937     0142                     sprintf@f:
  1938                           
  1939                           ; 11 bytes @ 0x2
  1940     0142                     	ds	11
  1941     014D                     ??_main:
  1942                           
  1943                           ; 1 bytes @ 0xD
  1944     014D                     	ds	18
  1945                           
  1946                           	psect	cstackBANK1
  1947     00A0                     __pcstackBANK1:
  1948     00A0                     efgtoa@ne:
  1949                           
  1950                           ; 2 bytes @ 0x0
  1951     00A0                     	ds	2
  1952     00A2                     efgtoa@p:
  1953                           
  1954                           ; 2 bytes @ 0x2
  1955     00A2                     	ds	2
  1956     00A4                     efgtoa@t:
  1957                           
  1958                           ; 2 bytes @ 0x4
  1959     00A4                     	ds	2
  1960     00A6                     _efgtoa$1448:
  1961                           
  1962                           ; 2 bytes @ 0x6
  1963     00A6                     	ds	2
  1964     00A8                     efgtoa@pp:
  1965                           
  1966                           ; 1 bytes @ 0x8
  1967     00A8                     	ds	1
  1968     00A9                     efgtoa@mode:
  1969                           
  1970                           ; 1 bytes @ 0x9
  1971     00A9                     	ds	1
  1972     00AA                     efgtoa@nmode:
  1973                           
  1974                           ; 1 bytes @ 0xA
  1975     00AA                     	ds	1
  1976     00AB                     efgtoa@d:
  1977                           
  1978                           ; 2 bytes @ 0xB
  1979     00AB                     	ds	2
  1980     00AD                     efgtoa@m:
  1981                           
  1982                           ; 2 bytes @ 0xD
  1983     00AD                     	ds	2
  1984     00AF                     efgtoa@fp:
  1985                           
  1986                           ; 1 bytes @ 0xF
  1987     00AF                     	ds	1
  1988     00B0                     efgtoa@e:
  1989                           
  1990                           ; 2 bytes @ 0x10
  1991     00B0                     	ds	2
  1992     00B2                     efgtoa@w:
  1993                           
  1994                           ; 2 bytes @ 0x12
  1995     00B2                     	ds	2
  1996     00B4                     efgtoa@ou:
  1997                           
  1998                           ; 4 bytes @ 0x14
  1999     00B4                     	ds	4
  2000     00B8                     efgtoa@h:
  2001                           
  2002                           ; 4 bytes @ 0x18
  2003     00B8                     	ds	4
  2004     00BC                     efgtoa@l:
  2005                           
  2006                           ; 4 bytes @ 0x1C
  2007     00BC                     	ds	4
  2008     00C0                     efgtoa@i:
  2009                           
  2010                           ; 2 bytes @ 0x20
  2011     00C0                     	ds	2
  2012     00C2                     efgtoa@sign:
  2013                           
  2014                           ; 1 bytes @ 0x22
  2015     00C2                     	ds	1
  2016     00C3                     efgtoa@g:
  2017                           
  2018                           ; 4 bytes @ 0x23
  2019     00C3                     	ds	4
  2020     00C7                     efgtoa@n:
  2021                           
  2022                           ; 2 bytes @ 0x27
  2023     00C7                     	ds	2
  2024     00C9                     efgtoa@u:
  2025                           
  2026                           ; 4 bytes @ 0x29
  2027     00C9                     	ds	4
  2028     00CD                     ??_vfpfcnvrt:
  2029                           
  2030                           ; 1 bytes @ 0x2D
  2031     00CD                     	ds	4
  2032     00D1                     vfpfcnvrt@done:
  2033                           
  2034                           ; 1 bytes @ 0x31
  2035     00D1                     	ds	1
  2036     00D2                     vfpfcnvrt@convarg:
  2037                           
  2038                           ; 4 bytes @ 0x32
  2039     00D2                     	ds	4
  2040     00D6                     vfpfcnvrt@c:
  2041                           
  2042                           ; 1 bytes @ 0x36
  2043     00D6                     	ds	1
  2044     00D7                     vfpfcnvrt@fp:
  2045                           
  2046                           ; 1 bytes @ 0x37
  2047     00D7                     	ds	1
  2048     00D8                     vfpfcnvrt@cp:
  2049                           
  2050                           ; 2 bytes @ 0x38
  2051     00D8                     	ds	2
  2052     00DA                     ??_vfprintf:
  2053                           
  2054                           ; 1 bytes @ 0x3A
  2055     00DA                     	ds	1
  2056     00DB                     vfprintf@fp:
  2057                           
  2058                           ; 1 bytes @ 0x3B
  2059     00DB                     	ds	1
  2060     00DC                     vfprintf@cfmt:
  2061                           
  2062                           ; 2 bytes @ 0x3C
  2063     00DC                     	ds	2
  2064     00DE                     ?_sprintf:
  2065     00DE                     sprintf@fmt:	
  2066                           ; 2 bytes @ 0x3E
  2067                           
  2068                           
  2069                           ; 2 bytes @ 0x3E
  2070     00DE                     	ds	14
  2071     00EC                     ??_sprintf:
  2072                           
  2073                           ; 1 bytes @ 0x4C
  2074     00EC                     	ds	1
  2075                           
  2076                           	psect	cstackCOMMON
  2077     0070                     __pcstackCOMMON:
  2078     0070                     ?_Lcd_Init:
  2079     0070                     ?_Lcd_Clear:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082     0070                     ?_Keypad_Init:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085     0070                     ??_Keypad_Init:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088     0070                     ?_Keypad_Get_Char:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091     0070                     ??_Keypad_Get_Char:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094     0070                     ?_Lcd_Write_Char:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097     0070                     ?_Leer_Clave:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100     0070                     ?_Escribir_Clave:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103     0070                     ?_EEPROM_Write:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106     0070                     ?_EEPROM_Read:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109     0070                     ??_EEPROM_Read:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112     0070                     ?_putch:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115     0070                     ?_ADC_Initialize:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118     0070                     ?_ADC_StartConversion:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121     0070                     ?_ADC_IsConversionDone:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124     0070                     ?_main:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127     0070                     ?_IOC:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130     0070                     ?_Lcd_Port:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133     0070                     ?_Lcd_Cmd:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136     0070                     ?i1_Lcd_Port:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139     0070                     ??i1_Lcd_Port:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142     0070                     ?i1_Lcd_Cmd:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145     0070                     ?i1_Lcd_Clear:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148     0070                     ?i1_Lcd_Write_Char:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151     0070                     ?_strcmp:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154     0070                     EEPROM_Write@data:	
  2155                           ; 2 bytes @ 0x0
  2156                           
  2157     0070                     putch@c:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160     0070                     strcmp@r:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163     0070                     i1Lcd_Port@a:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166                           
  2167                           ; 1 bytes @ 0x0
  2168     0070                     	ds	1
  2169     0071                     ??_EEPROM_Write:
  2170     0071                     ??i1_Lcd_Cmd:	
  2171                           ; 1 bytes @ 0x1
  2172                           
  2173     0071                     ??i1_Lcd_Write_Char:	
  2174                           ; 1 bytes @ 0x1
  2175                           
  2176                           
  2177                           ; 1 bytes @ 0x1
  2178     0071                     	ds	1
  2179     0072                     ??_strcmp:
  2180     0072                     EEPROM_Read@dir:	
  2181                           ; 1 bytes @ 0x2
  2182                           
  2183     0072                     i1Lcd_Cmd@a:	
  2184                           ; 1 bytes @ 0x2
  2185                           
  2186     0072                     i1Lcd_Write_Char@temp:	
  2187                           ; 1 bytes @ 0x2
  2188                           
  2189                           
  2190                           ; 1 bytes @ 0x2
  2191     0072                     	ds	1
  2192     0073                     ??_Leer_Clave:
  2193     0073                     ??i1_Lcd_Clear:	
  2194                           ; 1 bytes @ 0x3
  2195                           
  2196     0073                     ?i1_Lcd_Set_Cursor:	
  2197                           ; 1 bytes @ 0x3
  2198                           
  2199     0073                     EEPROM_Write@dir:	
  2200                           ; 1 bytes @ 0x3
  2201                           
  2202     0073                     strcmp@l:	
  2203                           ; 1 bytes @ 0x3
  2204                           
  2205     0073                     i1Lcd_Set_Cursor@b:	
  2206                           ; 1 bytes @ 0x3
  2207                           
  2208     0073                     i1Lcd_Write_Char@y:	
  2209                           ; 1 bytes @ 0x3
  2210                           
  2211                           
  2212                           ; 1 bytes @ 0x3
  2213     0073                     	ds	1
  2214     0074                     ??_Escribir_Clave:
  2215     0074                     ??i1_Lcd_Set_Cursor:	
  2216                           ; 1 bytes @ 0x4
  2217                           
  2218     0074                     Leer_Clave@str:	
  2219                           ; 1 bytes @ 0x4
  2220                           
  2221     0074                     i1Lcd_Write_Char@a:	
  2222                           ; 1 bytes @ 0x4
  2223                           
  2224                           
  2225                           ; 1 bytes @ 0x4
  2226     0074                     	ds	1
  2227     0075                     ?i1_Lcd_Write_String:
  2228     0075                     Escribir_Clave@str:	
  2229                           ; 1 bytes @ 0x5
  2230                           
  2231     0075                     Leer_Clave@pos:	
  2232                           ; 1 bytes @ 0x5
  2233                           
  2234     0075                     i1Lcd_Set_Cursor@a:	
  2235                           ; 1 bytes @ 0x5
  2236                           
  2237     0075                     i1Lcd_Write_String@a:	
  2238                           ; 1 bytes @ 0x5
  2239                           
  2240                           
  2241                           ; 2 bytes @ 0x5
  2242     0075                     	ds	1
  2243     0076                     Escribir_Clave@pos:
  2244     0076                     i1Lcd_Set_Cursor@z:	
  2245                           ; 1 bytes @ 0x6
  2246                           
  2247                           
  2248                           ; 1 bytes @ 0x6
  2249     0076                     	ds	1
  2250     0077                     ??i1_Lcd_Write_String:
  2251     0077                     i1Lcd_Set_Cursor@y:	
  2252                           ; 1 bytes @ 0x7
  2253                           
  2254                           
  2255                           ; 1 bytes @ 0x7
  2256     0077                     	ds	1
  2257     0078                     i1Lcd_Set_Cursor@temp:
  2258     0078                     i1Lcd_Write_String@i:	
  2259                           ; 1 bytes @ 0x8
  2260                           
  2261                           
  2262                           ; 2 bytes @ 0x8
  2263     0078                     	ds	2
  2264     007A                     ??_IOC:
  2265                           
  2266                           ; 1 bytes @ 0xA
  2267     007A                     	ds	2
  2268                           
  2269                           	psect	cstackBANK0
  2270     0020                     __pcstackBANK0:
  2271     0020                     ?___fleq:
  2272     0020                     ?_strcpy:	
  2273                           ; 1 bit 
  2274                           
  2275     0020                     ?_memcpy:	
  2276                           ; 1 bytes @ 0x0
  2277                           
  2278     0020                     ??_putch:	
  2279                           ; 1 bytes @ 0x0
  2280                           
  2281     0020                     ??_ADC_Initialize:	
  2282                           ; 1 bytes @ 0x0
  2283                           
  2284     0020                     ??_ADC_StartConversion:	
  2285                           ; 1 bytes @ 0x0
  2286                           
  2287     0020                     ??_ADC_IsConversionDone:	
  2288                           ; 1 bytes @ 0x0
  2289                           
  2290     0020                     ??_Lcd_Port:	
  2291                           ; 1 bytes @ 0x0
  2292                           
  2293     0020                     ?__Umul8_16:	
  2294                           ; 1 bytes @ 0x0
  2295                           
  2296     0020                     ?_fputc:	
  2297                           ; 2 bytes @ 0x0
  2298                           
  2299     0020                     ?___fpclassifyf:	
  2300                           ; 2 bytes @ 0x0
  2301                           
  2302     0020                     ?_ADC_GetConversionResult:	
  2303                           ; 2 bytes @ 0x0
  2304                           
  2305     0020                     ?___wmul:	
  2306                           ; 2 bytes @ 0x0
  2307                           
  2308     0020                     ?___awdiv:	
  2309                           ; 2 bytes @ 0x0
  2310                           
  2311     0020                     ?___awmod:	
  2312                           ; 2 bytes @ 0x0
  2313                           
  2314     0020                     ?_labs:	
  2315                           ; 2 bytes @ 0x0
  2316                           
  2317     0020                     ?___flneg:	
  2318                           ; 4 bytes @ 0x0
  2319                           
  2320     0020                     ?___fltol:	
  2321                           ; 4 bytes @ 0x0
  2322                           
  2323     0020                     ?___fladd:	
  2324                           ; 4 bytes @ 0x0
  2325                           
  2326     0020                     Lcd_Port@a:	
  2327                           ; 4 bytes @ 0x0
  2328                           
  2329     0020                     __Umul8_16@multiplicand:	
  2330                           ; 1 bytes @ 0x0
  2331                           
  2332     0020                     memcpy@s1:	
  2333                           ; 1 bytes @ 0x0
  2334                           
  2335     0020                     ___wmul@multiplier:	
  2336                           ; 1 bytes @ 0x0
  2337                           
  2338     0020                     ___awdiv@divisor:	
  2339                           ; 2 bytes @ 0x0
  2340                           
  2341     0020                     ___awmod@divisor:	
  2342                           ; 2 bytes @ 0x0
  2343                           
  2344     0020                     fputc@c:	
  2345                           ; 2 bytes @ 0x0
  2346                           
  2347     0020                     strcpy@src:	
  2348                           ; 2 bytes @ 0x0
  2349                           
  2350     0020                     ___fleq@ff1:	
  2351                           ; 2 bytes @ 0x0
  2352                           
  2353     0020                     ___flneg@f1:	
  2354                           ; 4 bytes @ 0x0
  2355                           
  2356     0020                     ___fltol@f1:	
  2357                           ; 4 bytes @ 0x0
  2358                           
  2359     0020                     ___fladd@b:	
  2360                           ; 4 bytes @ 0x0
  2361                           
  2362     0020                     ___fpclassifyf@x:	
  2363                           ; 4 bytes @ 0x0
  2364                           
  2365     0020                     labs@a:	
  2366                           ; 4 bytes @ 0x0
  2367                           
  2368                           
  2369                           ; 4 bytes @ 0x0
  2370     0020                     	ds	1
  2371     0021                     ??_Lcd_Write_Char:
  2372     0021                     ??_Lcd_Cmd:	
  2373                           ; 1 bytes @ 0x1
  2374                           
  2375     0021                     memcpy@n:	
  2376                           ; 1 bytes @ 0x1
  2377                           
  2378                           
  2379                           ; 2 bytes @ 0x1
  2380     0021                     	ds	1
  2381     0022                     ??__Umul8_16:
  2382     0022                     ??_strcpy:	
  2383                           ; 1 bytes @ 0x2
  2384                           
  2385     0022                     ??_ADC_GetConversionResult:	
  2386                           ; 1 bytes @ 0x2
  2387                           
  2388     0022                     Lcd_Cmd@a:	
  2389                           ; 1 bytes @ 0x2
  2390                           
  2391     0022                     Lcd_Write_Char@temp:	
  2392                           ; 1 bytes @ 0x2
  2393                           
  2394     0022                     fputc@fp:	
  2395                           ; 1 bytes @ 0x2
  2396                           
  2397     0022                     ___wmul@multiplicand:	
  2398                           ; 1 bytes @ 0x2
  2399                           
  2400     0022                     ___awdiv@dividend:	
  2401                           ; 2 bytes @ 0x2
  2402                           
  2403     0022                     ___awmod@dividend:	
  2404                           ; 2 bytes @ 0x2
  2405                           
  2406                           
  2407                           ; 2 bytes @ 0x2
  2408     0022                     	ds	1
  2409     0023                     ??_Lcd_Init:
  2410     0023                     ??_Lcd_Clear:	
  2411                           ; 1 bytes @ 0x3
  2412                           
  2413     0023                     ?_Lcd_Set_Cursor:	
  2414                           ; 1 bytes @ 0x3
  2415                           
  2416     0023                     ??_fputc:	
  2417                           ; 1 bytes @ 0x3
  2418                           
  2419     0023                     ??_memcpy:	
  2420                           ; 1 bytes @ 0x3
  2421                           
  2422     0023                     Lcd_Set_Cursor@b:	
  2423                           ; 1 bytes @ 0x3
  2424                           
  2425     0023                     Lcd_Write_Char@y:	
  2426                           ; 1 bytes @ 0x3
  2427                           
  2428                           
  2429                           ; 1 bytes @ 0x3
  2430     0023                     	ds	1
  2431     0024                     ??_Lcd_Set_Cursor:
  2432     0024                     ??___fpclassifyf:	
  2433                           ; 1 bytes @ 0x4
  2434                           
  2435     0024                     ??_labs:	
  2436                           ; 1 bytes @ 0x4
  2437                           
  2438     0024                     ??___wmul:	
  2439                           ; 1 bytes @ 0x4
  2440                           
  2441     0024                     ??___awdiv:	
  2442                           ; 1 bytes @ 0x4
  2443                           
  2444     0024                     ??___awmod:	
  2445                           ; 1 bytes @ 0x4
  2446                           
  2447     0024                     ??___flneg:	
  2448                           ; 1 bytes @ 0x4
  2449                           
  2450     0024                     ??___fltol:	
  2451                           ; 1 bytes @ 0x4
  2452                           
  2453     0024                     Lcd_Write_Char@a:	
  2454                           ; 1 bytes @ 0x4
  2455                           
  2456     0024                     memcpy@tmp:	
  2457                           ; 1 bytes @ 0x4
  2458                           
  2459     0024                     strcpy@d:	
  2460                           ; 1 bytes @ 0x4
  2461                           
  2462     0024                     ___wmul@product:	
  2463                           ; 1 bytes @ 0x4
  2464                           
  2465     0024                     __Umul8_16@product:	
  2466                           ; 2 bytes @ 0x4
  2467                           
  2468     0024                     ___fleq@ff2:	
  2469                           ; 2 bytes @ 0x4
  2470                           
  2471     0024                     ___fladd@a:	
  2472                           ; 4 bytes @ 0x4
  2473                           
  2474                           
  2475                           ; 4 bytes @ 0x4
  2476     0024                     	ds	1
  2477     0025                     ?_Lcd_Write_String:
  2478     0025                     Lcd_Set_Cursor@a:	
  2479                           ; 1 bytes @ 0x5
  2480                           
  2481     0025                     ___awdiv@counter:	
  2482                           ; 1 bytes @ 0x5
  2483                           
  2484     0025                     ___awmod@counter:	
  2485                           ; 1 bytes @ 0x5
  2486                           
  2487     0025                     memcpy@d1:	
  2488                           ; 1 bytes @ 0x5
  2489                           
  2490     0025                     strcpy@dest:	
  2491                           ; 1 bytes @ 0x5
  2492                           
  2493     0025                     Lcd_Write_String@a:	
  2494                           ; 1 bytes @ 0x5
  2495                           
  2496                           
  2497                           ; 2 bytes @ 0x5
  2498     0025                     	ds	1
  2499     0026                     ?_read_prec_or_width:
  2500     0026                     ?___xxtofl:	
  2501                           ; 2 bytes @ 0x6
  2502                           
  2503     0026                     Lcd_Set_Cursor@z:	
  2504                           ; 4 bytes @ 0x6
  2505                           
  2506     0026                     ___awdiv@sign:	
  2507                           ; 1 bytes @ 0x6
  2508                           
  2509     0026                     ___awmod@sign:	
  2510                           ; 1 bytes @ 0x6
  2511                           
  2512     0026                     read_prec_or_width@ap:	
  2513                           ; 1 bytes @ 0x6
  2514                           
  2515     0026                     memcpy@d:	
  2516                           ; 1 bytes @ 0x6
  2517                           
  2518     0026                     __Umul8_16@word_mpld:	
  2519                           ; 1 bytes @ 0x6
  2520                           
  2521     0026                     ___xxtofl@val:	
  2522                           ; 2 bytes @ 0x6
  2523                           
  2524                           
  2525                           ; 4 bytes @ 0x6
  2526     0026                     	ds	1
  2527     0027                     ??_Lcd_Write_String:
  2528     0027                     ?_abs:	
  2529                           ; 1 bytes @ 0x7
  2530                           
  2531     0027                     Lcd_Set_Cursor@y:	
  2532                           ; 2 bytes @ 0x7
  2533                           
  2534     0027                     memcpy@s:	
  2535                           ; 1 bytes @ 0x7
  2536                           
  2537     0027                     ___awdiv@quotient:	
  2538                           ; 1 bytes @ 0x7
  2539                           
  2540     0027                     abs@a:	
  2541                           ; 2 bytes @ 0x7
  2542                           
  2543                           
  2544                           ; 2 bytes @ 0x7
  2545     0027                     	ds	1
  2546     0028                     ??___fleq:
  2547     0028                     ??___fladd:	
  2548                           ; 1 bytes @ 0x8
  2549                           
  2550     0028                     ??_read_prec_or_width:	
  2551                           ; 1 bytes @ 0x8
  2552                           
  2553     0028                     ?_fputs:	
  2554                           ; 1 bytes @ 0x8
  2555                           
  2556     0028                     Lcd_Set_Cursor@temp:	
  2557                           ; 2 bytes @ 0x8
  2558                           
  2559     0028                     ___fltol@sign1:	
  2560                           ; 1 bytes @ 0x8
  2561                           
  2562     0028                     __Umul8_16@multiplier:	
  2563                           ; 1 bytes @ 0x8
  2564                           
  2565     0028                     fputs@fp:	
  2566                           ; 1 bytes @ 0x8
  2567                           
  2568     0028                     Lcd_Write_String@i:	
  2569                           ; 1 bytes @ 0x8
  2570                           
  2571                           
  2572                           ; 2 bytes @ 0x8
  2573     0028                     	ds	1
  2574     0029                     ??_fputs:
  2575     0029                     ??_abs:	
  2576                           ; 1 bytes @ 0x9
  2577                           
  2578     0029                     ?___flmul:	
  2579                           ; 1 bytes @ 0x9
  2580                           
  2581     0029                     ___fltol@exp1:	
  2582                           ; 4 bytes @ 0x9
  2583                           
  2584     0029                     ___flmul@b:	
  2585                           ; 1 bytes @ 0x9
  2586                           
  2587                           
  2588                           ; 4 bytes @ 0x9
  2589     0029                     	ds	1
  2590     002A                     ??___xxtofl:
  2591     002A                     ___fpclassifyf@e:	
  2592                           ; 1 bytes @ 0xA
  2593                           
  2594                           
  2595                           ; 2 bytes @ 0xA
  2596     002A                     	ds	1
  2597     002B                     read_prec_or_width@c:
  2598     002B                     fputs@c:	
  2599                           ; 1 bytes @ 0xB
  2600                           
  2601                           
  2602                           ; 1 bytes @ 0xB
  2603     002B                     	ds	1
  2604     002C                     read_prec_or_width@n:
  2605     002C                     fputs@i:	
  2606                           ; 2 bytes @ 0xC
  2607                           
  2608     002C                     ___fpclassifyf@u:	
  2609                           ; 2 bytes @ 0xC
  2610                           
  2611                           
  2612                           ; 4 bytes @ 0xC
  2613     002C                     	ds	1
  2614     002D                     ___flmul@a:
  2615                           
  2616                           ; 4 bytes @ 0xD
  2617     002D                     	ds	1
  2618     002E                     ___xxtofl@sign:
  2619     002E                     read_prec_or_width@fmt:	
  2620                           ; 1 bytes @ 0xE
  2621                           
  2622     002E                     fputs@s:	
  2623                           ; 1 bytes @ 0xE
  2624                           
  2625                           
  2626                           ; 1 bytes @ 0xE
  2627     002E                     	ds	1
  2628     002F                     ?_pad:
  2629     002F                     ___xxtofl@exp:	
  2630                           ; 1 bytes @ 0xF
  2631                           
  2632     002F                     pad@buf:	
  2633                           ; 1 bytes @ 0xF
  2634                           
  2635                           
  2636                           ; 1 bytes @ 0xF
  2637     002F                     	ds	1
  2638     0030                     ___fladd@signs:
  2639     0030                     pad@p:	
  2640                           ; 1 bytes @ 0x10
  2641                           
  2642     0030                     ___xxtofl@arg:	
  2643                           ; 2 bytes @ 0x10
  2644                           
  2645                           
  2646                           ; 4 bytes @ 0x10
  2647     0030                     	ds	1
  2648     0031                     ??___flmul:
  2649     0031                     ___fladd@aexp:	
  2650                           ; 1 bytes @ 0x11
  2651                           
  2652                           
  2653                           ; 1 bytes @ 0x11
  2654     0031                     	ds	1
  2655     0032                     ??_pad:
  2656     0032                     ___fladd@bexp:	
  2657                           ; 1 bytes @ 0x12
  2658                           
  2659                           
  2660                           ; 1 bytes @ 0x12
  2661     0032                     	ds	1
  2662     0033                     ___fladd@grs:
  2663     0033                     pad@i:	
  2664                           ; 1 bytes @ 0x13
  2665                           
  2666                           
  2667                           ; 2 bytes @ 0x13
  2668     0033                     	ds	1
  2669     0034                     ?___fldiv:
  2670     0034                     ___fldiv@a:	
  2671                           ; 4 bytes @ 0x14
  2672                           
  2673                           
  2674                           ; 4 bytes @ 0x14
  2675     0034                     	ds	1
  2676     0035                     pad@fp:
  2677                           
  2678                           ; 1 bytes @ 0x15
  2679     0035                     	ds	1
  2680     0036                     ?_dtoa:
  2681     0036                     ___flmul@sign:	
  2682                           ; 1 bytes @ 0x16
  2683                           
  2684     0036                     dtoa@d:	
  2685                           ; 1 bytes @ 0x16
  2686                           
  2687                           
  2688                           ; 2 bytes @ 0x16
  2689     0036                     	ds	1
  2690     0037                     ___flmul@grs:
  2691                           
  2692                           ; 4 bytes @ 0x17
  2693     0037                     	ds	1
  2694     0038                     ??_dtoa:
  2695     0038                     ___fldiv@b:	
  2696                           ; 1 bytes @ 0x18
  2697                           
  2698                           
  2699                           ; 4 bytes @ 0x18
  2700     0038                     	ds	1
  2701     0039                     _dtoa$1417:
  2702                           
  2703                           ; 2 bytes @ 0x19
  2704     0039                     	ds	2
  2705     003B                     ___flmul@aexp:
  2706     003B                     dtoa@fp:	
  2707                           ; 1 bytes @ 0x1B
  2708                           
  2709                           
  2710                           ; 1 bytes @ 0x1B
  2711     003B                     	ds	1
  2712     003C                     ??___fldiv:
  2713     003C                     ___flmul@bexp:	
  2714                           ; 1 bytes @ 0x1C
  2715                           
  2716     003C                     dtoa@p:	
  2717                           ; 1 bytes @ 0x1C
  2718                           
  2719                           
  2720                           ; 2 bytes @ 0x1C
  2721     003C                     	ds	1
  2722     003D                     ___flmul@prod:
  2723                           
  2724                           ; 4 bytes @ 0x1D
  2725     003D                     	ds	1
  2726     003E                     dtoa@w:
  2727                           
  2728                           ; 2 bytes @ 0x1E
  2729     003E                     	ds	2
  2730     0040                     dtoa@s:
  2731                           
  2732                           ; 1 bytes @ 0x20
  2733     0040                     	ds	1
  2734     0041                     ___flmul@temp:
  2735     0041                     dtoa@i:	
  2736                           ; 2 bytes @ 0x21
  2737                           
  2738     0041                     ___fldiv@rem:	
  2739                           ; 2 bytes @ 0x21
  2740                           
  2741                           
  2742                           ; 4 bytes @ 0x21
  2743     0041                     	ds	2
  2744     0043                     ?___flge:
  2745     0043                     ?___flsub:	
  2746                           ; 1 bit 
  2747                           
  2748     0043                     ___flge@ff1:	
  2749                           ; 4 bytes @ 0x23
  2750                           
  2751     0043                     ___flsub@a:	
  2752                           ; 4 bytes @ 0x23
  2753                           
  2754                           
  2755                           ; 4 bytes @ 0x23
  2756     0043                     	ds	2
  2757     0045                     ___fldiv@sign:
  2758                           
  2759                           ; 1 bytes @ 0x25
  2760     0045                     	ds	1
  2761     0046                     ___fldiv@new_exp:
  2762                           
  2763                           ; 2 bytes @ 0x26
  2764     0046                     	ds	1
  2765     0047                     ___flge@ff2:
  2766     0047                     ___flsub@b:	
  2767                           ; 4 bytes @ 0x27
  2768                           
  2769                           
  2770                           ; 4 bytes @ 0x27
  2771     0047                     	ds	1
  2772     0048                     ___fldiv@grs:
  2773                           
  2774                           ; 4 bytes @ 0x28
  2775     0048                     	ds	3
  2776     004B                     ??___flge:
  2777     004B                     ??___flsub:	
  2778                           ; 1 bytes @ 0x2B
  2779                           
  2780                           
  2781                           ; 1 bytes @ 0x2B
  2782     004B                     	ds	1
  2783     004C                     ___fldiv@bexp:
  2784                           
  2785                           ; 1 bytes @ 0x2C
  2786     004C                     	ds	1
  2787     004D                     ___fldiv@aexp:
  2788                           
  2789                           ; 1 bytes @ 0x2D
  2790     004D                     	ds	1
  2791     004E                     ?_floorf:
  2792     004E                     floorf@x:	
  2793                           ; 4 bytes @ 0x2E
  2794                           
  2795                           
  2796                           ; 4 bytes @ 0x2E
  2797     004E                     	ds	4
  2798     0052                     ??_floorf:
  2799                           
  2800                           ; 1 bytes @ 0x32
  2801     0052                     	ds	6
  2802     0058                     floorf@m:
  2803                           
  2804                           ; 4 bytes @ 0x38
  2805     0058                     	ds	4
  2806     005C                     floorf@e:
  2807                           
  2808                           ; 2 bytes @ 0x3C
  2809     005C                     	ds	2
  2810     005E                     floorf@u:
  2811                           
  2812                           ; 4 bytes @ 0x3E
  2813     005E                     	ds	4
  2814     0062                     ?_efgtoa:
  2815     0062                     efgtoa@f:	
  2816                           ; 1 bytes @ 0x42
  2817                           
  2818                           
  2819                           ; 4 bytes @ 0x42
  2820     0062                     	ds	4
  2821     0066                     efgtoa@c:
  2822                           
  2823                           ; 1 bytes @ 0x46
  2824     0066                     	ds	1
  2825     0067                     ??_efgtoa:
  2826                           
  2827                           ; 1 bytes @ 0x47
  2828     0067                     	ds	4
  2829     006B                     ?_vfpfcnvrt:
  2830     006B                     vfpfcnvrt@fmt:	
  2831                           ; 1 bytes @ 0x4B
  2832                           
  2833                           
  2834                           ; 1 bytes @ 0x4B
  2835     006B                     	ds	1
  2836     006C                     vfpfcnvrt@ap:
  2837                           
  2838                           ; 1 bytes @ 0x4C
  2839     006C                     	ds	1
  2840     006D                     ?_vfprintf:
  2841     006D                     vfprintf@fmt:	
  2842                           ; 2 bytes @ 0x4D
  2843                           
  2844                           
  2845                           ; 2 bytes @ 0x4D
  2846     006D                     	ds	2
  2847     006F                     vfprintf@ap:
  2848                           
  2849                           ; 1 bytes @ 0x4F
  2850     006F                     	ds	1
  2851                           
  2852                           	psect	maintext
  2853     1629                     __pmaintext:	
  2854 ;;
  2855 ;;Main: autosize = 0, tempsize = 18, incstack = 0, save=0
  2856 ;;
  2857 ;; *************** function _main *****************
  2858 ;; Defined at:
  2859 ;;		line 44 in file "main.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : B1F/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2873 ;;      Params:         0       0       0       0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0       0       0       0
  2875 ;;      Temps:          0       0       0      18       0       0       0       0
  2876 ;;      Totals:         0       0       0      18       0       0       0       0
  2877 ;;Total ram usage:       18 bytes
  2878 ;; Hardware stack levels required when called: 12
  2879 ;; This function calls:
  2880 ;;		_ADC_GetConversionResult
  2881 ;;		_ADC_Initialize
  2882 ;;		_ADC_IsConversionDone
  2883 ;;		_ADC_StartConversion
  2884 ;;		_Lcd_Clear
  2885 ;;		_Lcd_Init
  2886 ;;		_Lcd_Set_Cursor
  2887 ;;		_Lcd_Write_String
  2888 ;;		___fldiv
  2889 ;;		___wmul
  2890 ;;		___xxtofl
  2891 ;;		_sprintf
  2892 ;; This function is called by:
  2893 ;;		Startup code after reset
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897     1629                     _main:	
  2898                           ;psect for function _main
  2899                           
  2900     1629                     l5110:	
  2901                           ;incstack = 0
  2902                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2903                           
  2904                           
  2905                           ;main.c: 47:     ANSELB = 0;
  2906     1629  0023               	movlb	3	; select bank3
  2907     162A  018D               	clrf	13	;volatile
  2908     162B                     l5112:
  2909                           
  2910                           ;main.c: 48:     TRISAbits.TRISA1 = 0;
  2911     162B  0021               	movlb	1	; select bank1
  2912     162C  108C               	bcf	12,1	;volatile
  2913     162D                     l5114:
  2914                           
  2915                           ;main.c: 49:     TRISAbits.TRISA2 = 0;
  2916     162D  110C               	bcf	12,2	;volatile
  2917     162E                     l5116:
  2918                           
  2919                           ;main.c: 50:     TRISAbits.TRISA3 = 0;
  2920     162E  118C               	bcf	12,3	;volatile
  2921     162F                     l5118:
  2922                           
  2923                           ;main.c: 51:     TRISCbits.TRISC2 = 0;
  2924     162F  110E               	bcf	14,2	;volatile
  2925     1630                     l5120:
  2926                           
  2927                           ;main.c: 52:     TRISCbits.TRISC5 = 0;
  2928     1630  128E               	bcf	14,5	;volatile
  2929     1631                     l5122:
  2930                           
  2931                           ;main.c: 53:     TRISCbits.TRISC3 = 1;
  2932     1631  158E               	bsf	14,3	;volatile
  2933     1632                     l5124:
  2934                           
  2935                           ;main.c: 54:     TRISCbits.TRISC4 = 1;
  2936     1632  160E               	bsf	14,4	;volatile
  2937     1633                     l5126:
  2938                           
  2939                           ;main.c: 55:     LATAbits.LATA1 = 1;
  2940     1633  0022               	movlb	2	; select bank2
  2941     1634  148C               	bsf	12,1	;volatile
  2942     1635                     l5128:
  2943                           
  2944                           ;main.c: 56:     LATAbits.LATA2 = 1;
  2945     1635  150C               	bsf	12,2	;volatile
  2946     1636                     l5130:
  2947                           
  2948                           ;main.c: 57:     LATAbits.LATA3 = 1;
  2949     1636  158C               	bsf	12,3	;volatile
  2950     1637                     l5132:
  2951                           
  2952                           ;main.c: 58:     LATCbits.LATC2 = 0;
  2953     1637  110E               	bcf	14,2	;volatile
  2954     1638                     l5134:
  2955                           
  2956                           ;main.c: 59:     LATCbits.LATC5 = 1;
  2957     1638  168E               	bsf	14,5	;volatile
  2958     1639                     l5136:
  2959                           
  2960                           ;main.c: 62:     OPTION_REGbits.nWPUEN = 0;
  2961     1639  0021               	movlb	1	; select bank1
  2962     163A  1395               	bcf	21,7	;volatile
  2963     163B                     l5138:
  2964                           
  2965                           ;main.c: 63:     WPUB = 0b00001110;
  2966     163B  300E               	movlw	14
  2967     163C  0024               	movlb	4	; select bank4
  2968     163D  008D               	movwf	13	;volatile
  2969     163E                     l5140:
  2970                           
  2971                           ;main.c: 66:     TRISBbits.TRISB1 = 0;
  2972     163E  0021               	movlb	1	; select bank1
  2973     163F  108D               	bcf	13,1	;volatile
  2974     1640                     l5142:
  2975                           
  2976                           ;main.c: 67:     LATBbits.LATB1 = 0;
  2977     1640  0022               	movlb	2	; select bank2
  2978     1641  108D               	bcf	13,1	;volatile
  2979     1642                     l5144:
  2980                           
  2981                           ;main.c: 68:     TRISBbits.TRISB2 = 0;
  2982     1642  0021               	movlb	1	; select bank1
  2983     1643  110D               	bcf	13,2	;volatile
  2984     1644                     l5146:
  2985                           
  2986                           ;main.c: 69:     LATBbits.LATB2 = 0;
  2987     1644  0022               	movlb	2	; select bank2
  2988     1645  110D               	bcf	13,2	;volatile
  2989     1646                     l5148:
  2990                           
  2991                           ;main.c: 70:     TRISBbits.TRISB3 = 0;
  2992     1646  0021               	movlb	1	; select bank1
  2993     1647  118D               	bcf	13,3	;volatile
  2994     1648                     l5150:
  2995                           
  2996                           ;main.c: 71:     LATBbits.LATB3 = 0;
  2997     1648  0022               	movlb	2	; select bank2
  2998     1649  118D               	bcf	13,3	;volatile
  2999     164A                     l5152:
  3000                           
  3001                           ;main.c: 74:     INTCONbits.GIE = 1;
  3002     164A  178B               	bsf	11,7	;volatile
  3003     164B                     l5154:
  3004                           
  3005                           ;main.c: 75:     INTCONbits.IOCIE = 0;
  3006     164B  118B               	bcf	11,3	;volatile
  3007     164C                     l5156:
  3008                           
  3009                           ;main.c: 76:     INTCONbits.IOCIE = 1;
  3010     164C  158B               	bsf	11,3	;volatile
  3011     164D                     l5158:
  3012                           
  3013                           ;main.c: 78:     IOCBN = 0b11110000;
  3014     164D  30F0               	movlw	240
  3015     164E  0027               	movlb	7	; select bank7
  3016     164F  0095               	movwf	21	;volatile
  3017                           
  3018                           ;main.c: 79:     IOCBF = 0;
  3019     1650  0196               	clrf	22	;volatile
  3020     1651                     l5160:
  3021                           
  3022                           ;main.c: 82:     SSPCON1bits.SSPEN = 1;
  3023     1651  0024               	movlb	4	; select bank4
  3024     1652  1695               	bsf	21,5	;volatile
  3025     1653                     l5162:
  3026                           
  3027                           ;main.c: 83:     SSPCON1bits.SSPM3 = 1;
  3028     1653  1595               	bsf	21,3	;volatile
  3029     1654                     l5164:
  3030                           
  3031                           ;main.c: 84:     SSPCONbits.SSPM2 = 0;
  3032     1654  1115               	bcf	21,2	;volatile
  3033     1655                     l5166:
  3034                           
  3035                           ;main.c: 85:     SSPCONbits.SSPM1 = 0;
  3036     1655  1095               	bcf	21,1	;volatile
  3037     1656                     l5168:
  3038                           
  3039                           ;main.c: 86:     SSPCON1bits.SSPM0 = 0;
  3040     1656  1015               	bcf	21,0	;volatile
  3041     1657                     l5170:
  3042                           
  3043                           ;main.c: 87:     SSPADD = 0x4F;
  3044     1657  304F               	movlw	79
  3045     1658  0092               	movwf	18	;volatile
  3046     1659                     l5172:
  3047                           
  3048                           ;main.c: 90:     ADC_Initialize();
  3049     1659  3199  21A7  3196   	fcall	_ADC_Initialize
  3050     165C                     l5174:
  3051                           
  3052                           ;main.c: 91:     Lcd_Init();
  3053     165C  319C  24E1  3196   	fcall	_Lcd_Init
  3054     165F                     l5176:
  3055                           
  3056                           ;main.c: 92:     Lcd_Clear();
  3057     165F  3199  21CA  3196   	fcall	_Lcd_Clear
  3058     1662                     l5178:
  3059                           
  3060                           ;main.c: 94:     _delay((unsigned long)((200)*(4000000/4000.0)));
  3061     1662  3002               	movlw	2
  3062     1663  0022               	movlb	2	; select bank2
  3063     1664  00CE               	movwf	(??_main^(0+256)+1)
  3064     1665  3004               	movlw	4
  3065     1666  00CD               	movwf	??_main^(0+256)
  3066     1667  30BA               	movlw	186
  3067     1668                     u6627:
  3068     1668  0B89               	decfsz	9,f
  3069     1669  2E68               	goto	u6627
  3070     166A  0BCD               	decfsz	??_main^(0+256),f
  3071     166B  2E68               	goto	u6627
  3072     166C  0BCE               	decfsz	(??_main^(0+256)+1),f
  3073     166D  2E68               	goto	u6627
  3074     166E  0000               	nop
  3075     166F                     l5180:
  3076                           
  3077                           ;main.c: 97:     Lcd_Set_Cursor(1,2);
  3078     166F  3002               	movlw	2
  3079     1670  0020               	movlb	0	; select bank0
  3080     1671  00A3               	movwf	Lcd_Set_Cursor@b
  3081     1672  3001               	movlw	1
  3082     1673  319F  2786  3196   	fcall	_Lcd_Set_Cursor
  3083     1676                     l5182:
  3084                           
  3085                           ;main.c: 98:     Lcd_Write_String("ControlTech CA");
  3086     1676  3021               	movlw	low (STR_1| (0+32768))
  3087     1677  0020               	movlb	0	; select bank0
  3088     1678  00A5               	movwf	Lcd_Write_String@a
  3089     1679  3098               	movlw	high (STR_1| (0+32768))
  3090     167A  00A6               	movwf	Lcd_Write_String@a+1
  3091     167B  319A  22AF  3196   	fcall	_Lcd_Write_String
  3092     167E                     l5184:
  3093                           
  3094                           ;main.c: 103:         SSPCON2bits.SEN = 1;
  3095     167E  0024               	movlb	4	; select bank4
  3096     167F  1416               	bsf	22,0	;volatile
  3097     1680                     l205:	
  3098                           ;main.c: 104:         while(SSPCON2bits.SEN);
  3099                           
  3100     1680  1816               	btfsc	22,0	;volatile
  3101     1681  2E83               	goto	u6321
  3102     1682  2E84               	goto	u6320
  3103     1683                     u6321:
  3104     1683  2E80               	goto	l205
  3105     1684                     u6320:
  3106     1684                     l5186:
  3107                           
  3108                           ;main.c: 105:         SSPBUF = 0b11010000;
  3109     1684  30D0               	movlw	208
  3110     1685  0091               	movwf	17	;volatile
  3111     1686                     l208:	
  3112                           ;main.c: 106:         while(SSPSTATbits.BF);
  3113                           
  3114     1686  1814               	btfsc	20,0	;volatile
  3115     1687  2E89               	goto	u6331
  3116     1688  2E8A               	goto	u6330
  3117     1689                     u6331:
  3118     1689  2E86               	goto	l208
  3119     168A                     u6330:
  3120     168A                     l211:
  3121     168A  1914               	btfsc	20,2	;volatile
  3122     168B  2E8D               	goto	u6341
  3123     168C  2E8E               	goto	u6340
  3124     168D                     u6341:
  3125     168D  2E8A               	goto	l211
  3126     168E                     u6340:
  3127     168E                     l5188:
  3128                           
  3129                           ;main.c: 108:         SSPBUF = 0;
  3130     168E  0191               	clrf	17	;volatile
  3131     168F                     l214:	
  3132                           ;main.c: 109:         while(SSPSTATbits.BF);
  3133                           
  3134     168F  1814               	btfsc	20,0	;volatile
  3135     1690  2E92               	goto	u6351
  3136     1691  2E93               	goto	u6350
  3137     1692                     u6351:
  3138     1692  2E8F               	goto	l214
  3139     1693                     u6350:
  3140     1693                     l217:
  3141     1693  1914               	btfsc	20,2	;volatile
  3142     1694  2E96               	goto	u6361
  3143     1695  2E97               	goto	u6360
  3144     1696                     u6361:
  3145     1696  2E93               	goto	l217
  3146     1697                     u6360:
  3147     1697                     l219:
  3148                           
  3149                           ;main.c: 111:         SSPCON2bits.RSEN = 1;
  3150     1697  1496               	bsf	22,1	;volatile
  3151     1698                     l220:	
  3152                           ;main.c: 112:         while(SSPCON2bits.RSEN);
  3153                           
  3154     1698  1896               	btfsc	22,1	;volatile
  3155     1699  2E9B               	goto	u6371
  3156     169A  2E9C               	goto	u6370
  3157     169B                     u6371:
  3158     169B  2E98               	goto	l220
  3159     169C                     u6370:
  3160     169C                     l5190:
  3161                           
  3162                           ;main.c: 113:         SSPBUF = 0b11010001;
  3163     169C  30D1               	movlw	209
  3164     169D  0091               	movwf	17	;volatile
  3165     169E                     l223:	
  3166                           ;main.c: 114:         while(SSPSTATbits.BF);
  3167                           
  3168     169E  1814               	btfsc	20,0	;volatile
  3169     169F  2EA1               	goto	u6381
  3170     16A0  2EA2               	goto	u6380
  3171     16A1                     u6381:
  3172     16A1  2E9E               	goto	l223
  3173     16A2                     u6380:
  3174     16A2                     l226:
  3175     16A2  1914               	btfsc	20,2	;volatile
  3176     16A3  2EA5               	goto	u6391
  3177     16A4  2EA6               	goto	u6390
  3178     16A5                     u6391:
  3179     16A5  2EA2               	goto	l226
  3180     16A6                     u6390:
  3181     16A6                     l228:
  3182                           
  3183                           ;main.c: 116:         SSPCON2bits.RCEN = 1;
  3184     16A6  1596               	bsf	22,3	;volatile
  3185     16A7                     l229:	
  3186                           ;main.c: 117:         while(SSPSTATbits.BF==0);
  3187                           
  3188     16A7  1C14               	btfss	20,0	;volatile
  3189     16A8  2EAA               	goto	u6401
  3190     16A9  2EAB               	goto	u6400
  3191     16AA                     u6401:
  3192     16AA  2EA7               	goto	l229
  3193     16AB                     u6400:
  3194     16AB                     l5192:
  3195                           
  3196                           ;main.c: 118:         seg = SSPBUF;
  3197     16AB  0811               	movf	17,w	;volatile
  3198     16AC  0021               	movlb	1	; select bank1
  3199     16AD  00EF               	movwf	_seg^(0+128)
  3200     16AE                     l5194:
  3201                           
  3202                           ;main.c: 119:         SSPCON2bits.ACKDT = 0;
  3203     16AE  0024               	movlb	4	; select bank4
  3204     16AF  1296               	bcf	22,5	;volatile
  3205     16B0                     l5196:
  3206                           
  3207                           ;main.c: 120:         SSPCON2bits.ACKEN = 1;
  3208     16B0  1616               	bsf	22,4	;volatile
  3209     16B1                     l232:	
  3210                           ;main.c: 121:         while(SSPCON2bits.ACKEN);
  3211                           
  3212     16B1  1A16               	btfsc	22,4	;volatile
  3213     16B2  2EB4               	goto	u6411
  3214     16B3  2EB5               	goto	u6410
  3215     16B4                     u6411:
  3216     16B4  2EB1               	goto	l232
  3217     16B5                     u6410:
  3218     16B5                     l234:
  3219                           
  3220                           ;main.c: 122:         SSPCON2bits.RCEN = 1;
  3221     16B5  1596               	bsf	22,3	;volatile
  3222     16B6                     l235:	
  3223                           ;main.c: 123:         while(SSPSTATbits.BF==0);
  3224                           
  3225     16B6  1C14               	btfss	20,0	;volatile
  3226     16B7  2EB9               	goto	u6421
  3227     16B8  2EBA               	goto	u6420
  3228     16B9                     u6421:
  3229     16B9  2EB6               	goto	l235
  3230     16BA                     u6420:
  3231     16BA                     l5198:
  3232                           
  3233                           ;main.c: 124:         min = SSPBUF;
  3234     16BA  0811               	movf	17,w	;volatile
  3235     16BB  0022               	movlb	2	; select bank2
  3236     16BC  00B2               	movwf	_min^(0+256)
  3237     16BD                     l5200:
  3238                           
  3239                           ;main.c: 125:         SSPCON2bits.ACKDT = 0;
  3240     16BD  0024               	movlb	4	; select bank4
  3241     16BE  1296               	bcf	22,5	;volatile
  3242     16BF                     l5202:
  3243                           
  3244                           ;main.c: 126:         SSPCON2bits.ACKEN = 1;
  3245     16BF  1616               	bsf	22,4	;volatile
  3246     16C0                     l238:	
  3247                           ;main.c: 127:         while(SSPCON2bits.ACKEN);
  3248                           
  3249     16C0  1A16               	btfsc	22,4	;volatile
  3250     16C1  2EC3               	goto	u6431
  3251     16C2  2EC4               	goto	u6430
  3252     16C3                     u6431:
  3253     16C3  2EC0               	goto	l238
  3254     16C4                     u6430:
  3255     16C4                     l240:
  3256                           
  3257                           ;main.c: 128:         SSPCON2bits.RCEN = 1;
  3258     16C4  1596               	bsf	22,3	;volatile
  3259     16C5                     l241:	
  3260                           ;main.c: 129:         while(SSPSTATbits.BF==0);
  3261                           
  3262     16C5  1C14               	btfss	20,0	;volatile
  3263     16C6  2EC8               	goto	u6441
  3264     16C7  2EC9               	goto	u6440
  3265     16C8                     u6441:
  3266     16C8  2EC5               	goto	l241
  3267     16C9                     u6440:
  3268     16C9                     l5204:
  3269                           
  3270                           ;main.c: 130:         hor = SSPBUF;
  3271     16C9  0811               	movf	17,w	;volatile
  3272     16CA  0022               	movlb	2	; select bank2
  3273     16CB  00B1               	movwf	_hor^(0+256)
  3274     16CC                     l5206:
  3275                           
  3276                           ;main.c: 131:         SSPCON2bits.ACKDT = 1;
  3277     16CC  0024               	movlb	4	; select bank4
  3278     16CD  1696               	bsf	22,5	;volatile
  3279     16CE                     l5208:
  3280                           
  3281                           ;main.c: 132:         SSPCON2bits.ACKEN = 1;
  3282     16CE  1616               	bsf	22,4	;volatile
  3283     16CF                     l244:	
  3284                           ;main.c: 133:         while(SSPCON2bits.ACKEN);
  3285                           
  3286     16CF  1A16               	btfsc	22,4	;volatile
  3287     16D0  2ED2               	goto	u6451
  3288     16D1  2ED3               	goto	u6450
  3289     16D2                     u6451:
  3290     16D2  2ECF               	goto	l244
  3291     16D3                     u6450:
  3292     16D3                     l246:
  3293                           
  3294                           ;main.c: 134:         SSPCON2bits.PEN = 1;
  3295     16D3  1516               	bsf	22,2	;volatile
  3296     16D4                     l247:	
  3297                           ;main.c: 135:         while(SSPCON2bits.PEN);
  3298                           
  3299     16D4  1916               	btfsc	22,2	;volatile
  3300     16D5  2ED7               	goto	u6461
  3301     16D6  2ED8               	goto	u6460
  3302     16D7                     u6461:
  3303     16D7  2ED4               	goto	l247
  3304     16D8                     u6460:
  3305     16D8                     l5210:
  3306                           
  3307                           ;main.c: 138:         ADC_StartConversion();
  3308     16D8  3188  2002  3196   	fcall	_ADC_StartConversion
  3309     16DB                     l5212:	
  3310                           ;main.c: 139:         while (!ADC_IsConversionDone());
  3311                           
  3312     16DB  3187  27F9  3196   	fcall	_ADC_IsConversionDone
  3313     16DE  3A00               	xorlw	0
  3314     16DF  1903               	skipnz
  3315     16E0  2EE2               	goto	u6471
  3316     16E1  2EE3               	goto	u6470
  3317     16E2                     u6471:
  3318     16E2  2EDB               	goto	l5212
  3319     16E3                     u6470:
  3320     16E3                     l5214:
  3321                           
  3322                           ;main.c: 140:         convertedValue = ADC_GetConversionResult();
  3323     16E3  3199  21C1  3196   	fcall	_ADC_GetConversionResult
  3324     16E6  0020               	movlb	0	; select bank0
  3325     16E7  0821               	movf	?_ADC_GetConversionResult+1,w
  3326     16E8  0022               	movlb	2	; select bank2
  3327     16E9  00BF               	movwf	(_convertedValue+1)^(0+256)
  3328     16EA  0020               	movlb	0	; select bank0
  3329     16EB  0820               	movf	?_ADC_GetConversionResult,w
  3330     16EC  0022               	movlb	2	; select bank2
  3331     16ED  00BE               	movwf	_convertedValue^(0+256)
  3332     16EE                     l5216:
  3333                           
  3334                           ;main.c: 141:         temp = (float)(convertedValue*5*100)/1024;
  3335     16EE  3044               	movlw	68
  3336     16EF  0020               	movlb	0	; select bank0
  3337     16F0  00B7               	movwf	___fldiv@a+3
  3338     16F1  3080               	movlw	128
  3339     16F2  00B6               	movwf	___fldiv@a+2
  3340     16F3  3000               	movlw	0
  3341     16F4  00B5               	movwf	___fldiv@a+1
  3342     16F5  3000               	movlw	0
  3343     16F6  00B4               	movwf	___fldiv@a
  3344     16F7  30F4               	movlw	244
  3345     16F8  00A2               	movwf	___wmul@multiplicand
  3346     16F9  3001               	movlw	1
  3347     16FA  00A3               	movwf	___wmul@multiplicand+1
  3348     16FB  0022               	movlb	2	; select bank2
  3349     16FC  083F               	movf	(_convertedValue+1)^(0+256),w
  3350     16FD  0020               	movlb	0	; select bank0
  3351     16FE  00A1               	movwf	___wmul@multiplier+1
  3352     16FF  0022               	movlb	2	; select bank2
  3353     1700  083E               	movf	_convertedValue^(0+256),w
  3354     1701  0020               	movlb	0	; select bank0
  3355     1702  00A0               	movwf	___wmul@multiplier
  3356     1703  319B  230E  3196   	fcall	___wmul
  3357     1706  0020               	movlb	0	; select bank0
  3358     1707  0820               	movf	?___wmul,w
  3359     1708  0022               	movlb	2	; select bank2
  3360     1709  00CD               	movwf	??_main^(0+256)
  3361     170A  0020               	movlb	0	; select bank0
  3362     170B  0821               	movf	?___wmul+1,w
  3363     170C  0022               	movlb	2	; select bank2
  3364     170D  00CE               	movwf	(??_main^(0+256)+1)
  3365     170E  01CF               	clrf	(??_main^(0+256)+2)
  3366     170F  01D0               	clrf	(??_main^(0+256)+3)
  3367     1710  0850               	movf	(??_main+3)^(0+256),w
  3368     1711  0020               	movlb	0	; select bank0
  3369     1712  00A9               	movwf	___xxtofl@val+3
  3370     1713  0022               	movlb	2	; select bank2
  3371     1714  084F               	movf	(??_main+2)^(0+256),w
  3372     1715  0020               	movlb	0	; select bank0
  3373     1716  00A8               	movwf	___xxtofl@val+2
  3374     1717  0022               	movlb	2	; select bank2
  3375     1718  084E               	movf	(??_main+1)^(0+256),w
  3376     1719  0020               	movlb	0	; select bank0
  3377     171A  00A7               	movwf	___xxtofl@val+1
  3378     171B  0022               	movlb	2	; select bank2
  3379     171C  084D               	movf	??_main^(0+256),w
  3380     171D  0020               	movlb	0	; select bank0
  3381     171E  00A6               	movwf	___xxtofl@val
  3382     171F  3000               	movlw	0
  3383     1720  3191  2155  3196   	fcall	___xxtofl
  3384     1723  0020               	movlb	0	; select bank0
  3385     1724  0829               	movf	?___xxtofl+3,w
  3386     1725  00BB               	movwf	___fldiv@b+3
  3387     1726  0828               	movf	?___xxtofl+2,w
  3388     1727  00BA               	movwf	___fldiv@b+2
  3389     1728  0827               	movf	?___xxtofl+1,w
  3390     1729  00B9               	movwf	___fldiv@b+1
  3391     172A  0826               	movf	?___xxtofl,w
  3392     172B  00B8               	movwf	___fldiv@b
  3393     172C  3194  247F  3196   	fcall	___fldiv
  3394     172F  0020               	movlb	0	; select bank0
  3395     1730  0837               	movf	?___fldiv+3,w
  3396     1731  0022               	movlb	2	; select bank2
  3397     1732  00AB               	movwf	(_temp+3)^(0+256)
  3398     1733  0020               	movlb	0	; select bank0
  3399     1734  0836               	movf	?___fldiv+2,w
  3400     1735  0022               	movlb	2	; select bank2
  3401     1736  00AA               	movwf	(_temp+2)^(0+256)
  3402     1737  0020               	movlb	0	; select bank0
  3403     1738  0835               	movf	?___fldiv+1,w
  3404     1739  0022               	movlb	2	; select bank2
  3405     173A  00A9               	movwf	(_temp+1)^(0+256)
  3406     173B  0020               	movlb	0	; select bank0
  3407     173C  0834               	movf	?___fldiv,w
  3408     173D  0022               	movlb	2	; select bank2
  3409     173E  00A8               	movwf	_temp^(0+256)
  3410     173F                     l5218:
  3411                           
  3412                           ;main.c: 144:         sprintf(buffer,"%d%d:%d%d:%d%d",hor>>4,hor&=0x0F,min>>4,min&=0x0F,
      +                          seg>>4,seg&=0x0F);
  3413     173F  303F               	movlw	low (STR_2| (0+32768))
  3414     1740  0021               	movlb	1	; select bank1
  3415     1741  00DE               	movwf	sprintf@fmt^(0+128)
  3416     1742  3098               	movlw	high (STR_2| (0+32768))
  3417     1743  00DF               	movwf	(sprintf@fmt^(0+128)+1)
  3418     1744  0022               	movlb	2	; select bank2
  3419     1745  0831               	movf	_hor^(0+256),w
  3420     1746  00CD               	movwf	??_main^(0+256)
  3421     1747  3004               	movlw	4
  3422     1748                     u6485:
  3423     1748  36CD               	lsrf	??_main^(0+256),f
  3424     1749  0B89               	decfsz	9,f
  3425     174A  2F48               	goto	u6485
  3426     174B  084D               	movf	??_main^(0+256),w
  3427     174C  00CE               	movwf	(??_main+1)^(0+256)
  3428     174D  01CF               	clrf	((??_main+1)^(0+256)+1)
  3429     174E  084E               	movf	(??_main+1)^(0+256),w
  3430     174F  0021               	movlb	1	; select bank1
  3431     1750  00E0               	movwf	(?_sprintf^(0+128)+2)
  3432     1751  0022               	movlb	2	; select bank2
  3433     1752  084F               	movf	(??_main+2)^(0+256),w
  3434     1753  0021               	movlb	1	; select bank1
  3435     1754  00E1               	movwf	((?_sprintf+1)^(0+128)+2)
  3436     1755  300F               	movlw	15
  3437     1756  0022               	movlb	2	; select bank2
  3438     1757  00D0               	movwf	(??_main+3)^(0+256)
  3439     1758  0850               	movf	(??_main+3)^(0+256),w
  3440     1759  05B1               	andwf	_hor^(0+256),f
  3441     175A  0831               	movf	_hor^(0+256),w
  3442     175B  00D1               	movwf	(??_main+4)^(0+256)
  3443     175C  01D2               	clrf	((??_main+4)^(0+256)+1)
  3444     175D  0851               	movf	(??_main+4)^(0+256),w
  3445     175E  0021               	movlb	1	; select bank1
  3446     175F  00E2               	movwf	(?_sprintf^(0+128)+4)
  3447     1760  0022               	movlb	2	; select bank2
  3448     1761  0852               	movf	(??_main+5)^(0+256),w
  3449     1762  0021               	movlb	1	; select bank1
  3450     1763  00E3               	movwf	((?_sprintf+1)^(0+128)+4)
  3451     1764  0022               	movlb	2	; select bank2
  3452     1765  0832               	movf	_min^(0+256),w
  3453     1766  00D3               	movwf	(??_main+6)^(0+256)
  3454     1767  3004               	movlw	4
  3455     1768                     u6495:
  3456     1768  36D3               	lsrf	(??_main+6)^(0+256),f
  3457     1769  0B89               	decfsz	9,f
  3458     176A  2F68               	goto	u6495
  3459     176B  0853               	movf	(??_main+6)^(0+256),w
  3460     176C  00D4               	movwf	(??_main+7)^(0+256)
  3461     176D  01D5               	clrf	((??_main+7)^(0+256)+1)
  3462     176E  0854               	movf	(??_main+7)^(0+256),w
  3463     176F  0021               	movlb	1	; select bank1
  3464     1770  00E4               	movwf	(?_sprintf^(0+128)+6)
  3465     1771  0022               	movlb	2	; select bank2
  3466     1772  0855               	movf	(??_main+8)^(0+256),w
  3467     1773  0021               	movlb	1	; select bank1
  3468     1774  00E5               	movwf	((?_sprintf+1)^(0+128)+6)
  3469     1775  300F               	movlw	15
  3470     1776  0022               	movlb	2	; select bank2
  3471     1777  00D6               	movwf	(??_main+9)^(0+256)
  3472     1778  0856               	movf	(??_main+9)^(0+256),w
  3473     1779  05B2               	andwf	_min^(0+256),f
  3474     177A  0832               	movf	_min^(0+256),w
  3475     177B  00D7               	movwf	(??_main+10)^(0+256)
  3476     177C  01D8               	clrf	((??_main+10)^(0+256)+1)
  3477     177D  0857               	movf	(??_main+10)^(0+256),w
  3478     177E  0021               	movlb	1	; select bank1
  3479     177F  00E6               	movwf	(?_sprintf^(0+128)+8)
  3480     1780  0022               	movlb	2	; select bank2
  3481     1781  0858               	movf	(??_main+11)^(0+256),w
  3482     1782  0021               	movlb	1	; select bank1
  3483     1783  00E7               	movwf	((?_sprintf+1)^(0+128)+8)
  3484     1784  086F               	movf	_seg^(0+128),w
  3485     1785  0022               	movlb	2	; select bank2
  3486     1786  00D9               	movwf	(??_main+12)^(0+256)
  3487     1787  3004               	movlw	4
  3488     1788                     u6505:
  3489     1788  36D9               	lsrf	(??_main+12)^(0+256),f
  3490     1789  0B89               	decfsz	9,f
  3491     178A  2F88               	goto	u6505
  3492     178B  0859               	movf	(??_main+12)^(0+256),w
  3493     178C  00DA               	movwf	(??_main+13)^(0+256)
  3494     178D  01DB               	clrf	((??_main+13)^(0+256)+1)
  3495     178E  085A               	movf	(??_main+13)^(0+256),w
  3496     178F  0021               	movlb	1	; select bank1
  3497     1790  00E8               	movwf	(?_sprintf^(0+128)+10)
  3498     1791  0022               	movlb	2	; select bank2
  3499     1792  085B               	movf	(??_main+14)^(0+256),w
  3500     1793  0021               	movlb	1	; select bank1
  3501     1794  00E9               	movwf	((?_sprintf+1)^(0+128)+10)
  3502     1795  300F               	movlw	15
  3503     1796  0022               	movlb	2	; select bank2
  3504     1797  00DC               	movwf	(??_main+15)^(0+256)
  3505     1798  085C               	movf	(??_main+15)^(0+256),w
  3506     1799  0021               	movlb	1	; select bank1
  3507     179A  05EF               	andwf	_seg^(0+128),f
  3508     179B  086F               	movf	_seg^(0+128),w
  3509     179C  0022               	movlb	2	; select bank2
  3510     179D  00DD               	movwf	(??_main+16)^(0+256)
  3511     179E  01DE               	clrf	((??_main+16)^(0+256)+1)
  3512     179F  085D               	movf	(??_main+16)^(0+256),w
  3513     17A0  0021               	movlb	1	; select bank1
  3514     17A1  00EA               	movwf	(?_sprintf^(0+128)+12)
  3515     17A2  0022               	movlb	2	; select bank2
  3516     17A3  085E               	movf	(??_main+17)^(0+256),w
  3517     17A4  0021               	movlb	1	; select bank1
  3518     17A5  00EB               	movwf	((?_sprintf+1)^(0+128)+12)
  3519     17A6  30A0               	movlw	(low (_buffer| (0+256)))& (0+255)
  3520     17A7  319B  2351  3196   	fcall	_sprintf
  3521     17AA                     l5220:
  3522                           
  3523                           ;main.c: 145:         Lcd_Set_Cursor(2,1);
  3524     17AA  0020               	movlb	0	; select bank0
  3525     17AB  01A3               	clrf	Lcd_Set_Cursor@b
  3526     17AC  0AA3               	incf	Lcd_Set_Cursor@b,f
  3527     17AD  3002               	movlw	2
  3528     17AE  319F  2786  3196   	fcall	_Lcd_Set_Cursor
  3529     17B1                     l5222:
  3530                           
  3531                           ;main.c: 146:         Lcd_Write_String(buffer);
  3532     17B1  30A0               	movlw	low _buffer
  3533     17B2  0020               	movlb	0	; select bank0
  3534     17B3  00A5               	movwf	Lcd_Write_String@a
  3535     17B4  3001               	movlw	high _buffer
  3536     17B5  00A6               	movwf	Lcd_Write_String@a+1
  3537     17B6  319A  22AF  3196   	fcall	_Lcd_Write_String
  3538     17B9                     l5224:
  3539                           
  3540                           ;main.c: 149:         Lcd_Set_Cursor(2,10);
  3541     17B9  300A               	movlw	10
  3542     17BA  0020               	movlb	0	; select bank0
  3543     17BB  00A3               	movwf	Lcd_Set_Cursor@b
  3544     17BC  3002               	movlw	2
  3545     17BD  319F  2786  3196   	fcall	_Lcd_Set_Cursor
  3546     17C0                     l5226:
  3547                           
  3548                           ;main.c: 150:         sprintf(buffer,"%0.2f\xDF",temp);
  3549     17C0  3092               	movlw	low (STR_3| (0+32768))
  3550     17C1  0021               	movlb	1	; select bank1
  3551     17C2  00DE               	movwf	sprintf@fmt^(0+128)
  3552     17C3  3098               	movlw	high (STR_3| (0+32768))
  3553     17C4  00DF               	movwf	(sprintf@fmt^(0+128)+1)
  3554     17C5  0022               	movlb	2	; select bank2
  3555     17C6  082B               	movf	(_temp+3)^(0+256),w
  3556     17C7  0021               	movlb	1	; select bank1
  3557     17C8  00E3               	movwf	((?_sprintf+3)^(0+128)+2)
  3558     17C9  0022               	movlb	2	; select bank2
  3559     17CA  082A               	movf	(_temp+2)^(0+256),w
  3560     17CB  0021               	movlb	1	; select bank1
  3561     17CC  00E2               	movwf	((?_sprintf+2)^(0+128)+2)
  3562     17CD  0022               	movlb	2	; select bank2
  3563     17CE  0829               	movf	(_temp+1)^(0+256),w
  3564     17CF  0021               	movlb	1	; select bank1
  3565     17D0  00E1               	movwf	((?_sprintf+1)^(0+128)+2)
  3566     17D1  0022               	movlb	2	; select bank2
  3567     17D2  0828               	movf	_temp^(0+256),w
  3568     17D3  0021               	movlb	1	; select bank1
  3569     17D4  00E0               	movwf	(?_sprintf^(0+128)+2)
  3570     17D5  30A0               	movlw	(low (_buffer| (0+256)))& (0+255)
  3571     17D6  319B  2351  3196   	fcall	_sprintf
  3572     17D9                     l5228:
  3573                           
  3574                           ;main.c: 151:         Lcd_Write_String(buffer);
  3575     17D9  30A0               	movlw	low _buffer
  3576     17DA  0020               	movlb	0	; select bank0
  3577     17DB  00A5               	movwf	Lcd_Write_String@a
  3578     17DC  3001               	movlw	high _buffer
  3579     17DD  00A6               	movwf	Lcd_Write_String@a+1
  3580     17DE  319A  22AF  3196   	fcall	_Lcd_Write_String
  3581     17E1                     l5230:
  3582                           
  3583                           ;main.c: 152:         Lcd_Set_Cursor(2,16);
  3584     17E1  3010               	movlw	16
  3585     17E2  0020               	movlb	0	; select bank0
  3586     17E3  00A3               	movwf	Lcd_Set_Cursor@b
  3587     17E4  3002               	movlw	2
  3588     17E5  319F  2786  3196   	fcall	_Lcd_Set_Cursor
  3589     17E8                     l5232:
  3590                           
  3591                           ;main.c: 153:         Lcd_Write_String("C");
  3592     17E8  30A8               	movlw	low (STR_4| (0+32768))
  3593     17E9  0020               	movlb	0	; select bank0
  3594     17EA  00A5               	movwf	Lcd_Write_String@a
  3595     17EB  3098               	movlw	high (STR_4| (0+32768))
  3596     17EC  00A6               	movwf	Lcd_Write_String@a+1
  3597     17ED  319A  22AF  3196   	fcall	_Lcd_Write_String
  3598     17F0                     l5234:
  3599                           
  3600                           ;main.c: 155:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  3601     17F0  3006               	movlw	6
  3602     17F1  0022               	movlb	2	; select bank2
  3603     17F2  00CE               	movwf	(??_main^(0+256)+1)
  3604     17F3  3013               	movlw	19
  3605     17F4  00CD               	movwf	??_main^(0+256)
  3606     17F5  30AD               	movlw	173
  3607     17F6                     u6637:
  3608     17F6  0B89               	decfsz	9,f
  3609     17F7  2FF6               	goto	u6637
  3610     17F8  0BCD               	decfsz	??_main^(0+256),f
  3611     17F9  2FF6               	goto	u6637
  3612     17FA  0BCE               	decfsz	(??_main^(0+256)+1),f
  3613     17FB  2FF6               	goto	u6637
  3614     17FC  3200               	nop2
  3615     17FD  2E7E               	goto	l5184
  3616     17FE  3182  2A4E         	ljmp	start
  3617     1800                     __end_of_main:
  3618                           
  3619                           	psect	text1
  3620     1B51                     __ptext1:	
  3621 ;; *************** function _sprintf *****************
  3622 ;; Defined at:
  3623 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  s               1    wreg     PTR unsigned char 
  3626 ;;		 -> buffer(20), 
  3627 ;;  fmt             2   62[BANK1 ] PTR const unsigned char 
  3628 ;;		 -> STR_3(7), STR_2(15), 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  s               1    0[BANK2 ] PTR unsigned char 
  3631 ;;		 -> buffer(20), 
  3632 ;;  f              11    2[BANK2 ] struct _IO_FILE
  3633 ;;  ret             2    0        int 
  3634 ;;  ap              1    1[BANK2 ] PTR void [1]
  3635 ;;		 -> ?_sprintf(2), 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  2   62[BANK1 ] int 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3645 ;;      Params:         0       0      14       0       0       0       0       0
  3646 ;;      Locals:         0       0       0      13       0       0       0       0
  3647 ;;      Temps:          0       0       1       0       0       0       0       0
  3648 ;;      Totals:         0       0      15      13       0       0       0       0
  3649 ;;Total ram usage:       28 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 11
  3652 ;; This function calls:
  3653 ;;		_vfprintf
  3654 ;; This function is called by:
  3655 ;;		_main
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659     1B51                     _sprintf:	
  3660                           ;psect for function _sprintf
  3661                           
  3662                           
  3663                           ;incstack = 0
  3664                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3665                           ;sprintf@s stored from wreg
  3666     1B51  0022               	movlb	2	; select bank2
  3667     1B52  00C0               	movwf	sprintf@s^(0+256)
  3668     1B53                     l4884:
  3669     1B53  30E0               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3670     1B54  00C1               	movwf	sprintf@ap^(0+256)
  3671     1B55  0840               	movf	sprintf@s^(0+256),w
  3672     1B56  00C2               	movwf	sprintf@f^(0+256)
  3673     1B57                     l4886:
  3674     1B57  01C4               	clrf	(sprintf@f^(0+256)+2)
  3675     1B58  01C5               	clrf	((sprintf@f+1)^(0+256)+2)
  3676     1B59                     l4888:
  3677     1B59  01CB               	clrf	(sprintf@f^(0+256)+9)
  3678     1B5A  01CC               	clrf	((sprintf@f+1)^(0+256)+9)
  3679     1B5B                     l4890:
  3680     1B5B  0021               	movlb	1	; select bank1
  3681     1B5C  085F               	movf	(sprintf@fmt+1)^(0+128),w
  3682     1B5D  0020               	movlb	0	; select bank0
  3683     1B5E  00EE               	movwf	vfprintf@fmt+1
  3684     1B5F  0021               	movlb	1	; select bank1
  3685     1B60  085E               	movf	sprintf@fmt^(0+128),w
  3686     1B61  0020               	movlb	0	; select bank0
  3687     1B62  00ED               	movwf	vfprintf@fmt
  3688     1B63  3041               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  3689     1B64  00EF               	movwf	vfprintf@ap
  3690     1B65  3042               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  3691     1B66  319B  232E  319B   	fcall	_vfprintf
  3692     1B69                     l4892:
  3693     1B69  0022               	movlb	2	; select bank2
  3694     1B6A  0844               	movf	(sprintf@f^(0+256)+2),w
  3695     1B6B  0740               	addwf	sprintf@s^(0+256),w
  3696     1B6C  0021               	movlb	1	; select bank1
  3697     1B6D  00EC               	movwf	??_sprintf^(0+128)
  3698     1B6E  086C               	movf	??_sprintf^(0+128),w
  3699     1B6F  0086               	movwf	6
  3700     1B70  3001               	movlw	1	; select bank2/3
  3701     1B71  0087               	movwf	7
  3702     1B72  0181               	clrf	1
  3703     1B73                     l1066:
  3704     1B73  0008               	return
  3705     1B74                     __end_of_sprintf:
  3706                           
  3707                           	psect	text2
  3708     1B2E                     __ptext2:	
  3709 ;; *************** function _vfprintf *****************
  3710 ;; Defined at:
  3711 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  fp              1    wreg     PTR struct _IO_FILE
  3714 ;;		 -> sprintf@f(11), 
  3715 ;;  fmt             2   77[BANK0 ] PTR const unsigned char 
  3716 ;;		 -> STR_3(7), STR_2(15), 
  3717 ;;  ap              1   79[BANK0 ] PTR PTR void 
  3718 ;;		 -> sprintf@ap(1), 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  fp              1   59[BANK1 ] PTR struct _IO_FILE
  3721 ;;		 -> sprintf@f(11), 
  3722 ;;  cfmt            2   60[BANK1 ] PTR unsigned char 
  3723 ;;		 -> STR_3(7), STR_2(15), 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  2   77[BANK0 ] int 
  3726 ;; Registers used:
  3727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3733 ;;      Params:         0       3       0       0       0       0       0       0
  3734 ;;      Locals:         0       0       3       0       0       0       0       0
  3735 ;;      Temps:          0       0       1       0       0       0       0       0
  3736 ;;      Totals:         0       3       4       0       0       0       0       0
  3737 ;;Total ram usage:        7 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 10
  3740 ;; This function calls:
  3741 ;;		_vfpfcnvrt
  3742 ;; This function is called by:
  3743 ;;		_sprintf
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747     1B2E                     _vfprintf:	
  3748                           ;psect for function _vfprintf
  3749                           
  3750                           
  3751                           ;incstack = 0
  3752                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3753                           ;vfprintf@fp stored from wreg
  3754     1B2E  0021               	movlb	1	; select bank1
  3755     1B2F  00DB               	movwf	vfprintf@fp^(0+128)
  3756     1B30                     l4768:
  3757                           
  3758                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3759     1B30  0020               	movlb	0	; select bank0
  3760     1B31  086E               	movf	vfprintf@fmt+1,w
  3761     1B32  0021               	movlb	1	; select bank1
  3762     1B33  00DD               	movwf	(vfprintf@cfmt+1)^(0+128)
  3763     1B34  0020               	movlb	0	; select bank0
  3764     1B35  086D               	movf	vfprintf@fmt,w
  3765     1B36  0021               	movlb	1	; select bank1
  3766     1B37  00DC               	movwf	vfprintf@cfmt^(0+128)
  3767                           
  3768                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3769     1B38  2B43               	goto	l4772
  3770     1B39                     l4770:
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3773     1B39  30DC               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3774     1B3A  0020               	movlb	0	; select bank0
  3775     1B3B  00EB               	movwf	vfpfcnvrt@fmt
  3776     1B3C  086F               	movf	vfprintf@ap,w
  3777     1B3D  00EC               	movwf	vfpfcnvrt@ap
  3778     1B3E  0021               	movlb	1	; select bank1
  3779     1B3F  085B               	movf	vfprintf@fp^(0+128),w
  3780     1B40  3192  22D9  319B   	fcall	_vfpfcnvrt
  3781     1B43                     l4772:
  3782                           
  3783                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3784     1B43  0021               	movlb	1	; select bank1
  3785     1B44  085C               	movf	vfprintf@cfmt^(0+128),w
  3786     1B45  0084               	movwf	4
  3787     1B46  085D               	movf	(vfprintf@cfmt+1)^(0+128),w
  3788     1B47  0085               	movwf	5
  3789     1B48  0012               	moviw fsr0++
  3790     1B49  1D03               	btfss	3,2
  3791     1B4A  2B4C               	goto	u5701
  3792     1B4B  2B4D               	goto	u5700
  3793     1B4C                     u5701:
  3794     1B4C  2B39               	goto	l4770
  3795     1B4D                     u5700:
  3796     1B4D                     l4774:
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3799     1B4D  0020               	movlb	0	; select bank0
  3800     1B4E  01ED               	clrf	?_vfprintf
  3801     1B4F  01EE               	clrf	?_vfprintf+1
  3802     1B50                     l1223:
  3803     1B50  0008               	return
  3804     1B51                     __end_of_vfprintf:
  3805                           
  3806                           	psect	text3
  3807     12D9                     __ptext3:	
  3808 ;; *************** function _vfpfcnvrt *****************
  3809 ;; Defined at:
  3810 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  fp              1    wreg     PTR struct _IO_FILE
  3813 ;;		 -> sprintf@f(11), 
  3814 ;;  fmt             1   75[BANK0 ] PTR PTR unsigned char 
  3815 ;;		 -> vfprintf@cfmt(2), 
  3816 ;;  ap              1   76[BANK0 ] PTR PTR void 
  3817 ;;		 -> sprintf@ap(1), 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  fp              1   55[BANK1 ] PTR struct _IO_FILE
  3820 ;;		 -> sprintf@f(11), 
  3821 ;;  convarg         4   50[BANK1 ] struct .
  3822 ;;  cp              2   56[BANK1 ] PTR unsigned char 
  3823 ;;		 -> STR_3(7), STR_2(15), 
  3824 ;;  c               1   54[BANK1 ] unsigned char 
  3825 ;;  done            1   49[BANK1 ] _Bool 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3835 ;;      Params:         0       2       0       0       0       0       0       0
  3836 ;;      Locals:         0       0       9       0       0       0       0       0
  3837 ;;      Temps:          0       0       4       0       0       0       0       0
  3838 ;;      Totals:         0       2      13       0       0       0       0       0
  3839 ;;Total ram usage:       15 bytes
  3840 ;; Hardware stack levels used: 1
  3841 ;; Hardware stack levels required when called: 9
  3842 ;; This function calls:
  3843 ;;		_dtoa
  3844 ;;		_efgtoa
  3845 ;;		_fputc
  3846 ;;		_read_prec_or_width
  3847 ;; This function is called by:
  3848 ;;		_vfprintf
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852     12D9                     _vfpfcnvrt:	
  3853                           ;psect for function _vfpfcnvrt
  3854                           
  3855                           
  3856                           ;incstack = 0
  3857                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3858                           ;vfpfcnvrt@fp stored from wreg
  3859     12D9  0021               	movlb	1	; select bank1
  3860     12DA  00D7               	movwf	vfpfcnvrt@fp^(0+128)
  3861     12DB                     l4616:
  3862                           
  3863                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3864     12DB  0020               	movlb	0	; select bank0
  3865     12DC  086B               	movf	vfpfcnvrt@fmt,w
  3866     12DD  0086               	movwf	6
  3867     12DE  0187               	clrf	7
  3868     12DF  3F40               	moviw [0]fsr1
  3869     12E0  0021               	movlb	1	; select bank1
  3870     12E1  00CD               	movwf	??_vfpfcnvrt^(0+128)
  3871     12E2  3F41               	moviw [1]fsr1
  3872     12E3  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3873     12E4  084D               	movf	??_vfpfcnvrt^(0+128),w
  3874     12E5  0084               	movwf	4
  3875     12E6  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3876     12E7  0085               	movwf	5
  3877     12E8  0012               	moviw fsr0++
  3878     12E9  3A25               	xorlw	37
  3879     12EA  1D03               	btfss	3,2
  3880     12EB  2AED               	goto	u5581
  3881     12EC  2AEE               	goto	u5580
  3882     12ED                     u5581:
  3883     12ED  2C5F               	goto	l4692
  3884     12EE                     u5580:
  3885     12EE                     l4618:
  3886                           
  3887                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3888     12EE  0020               	movlb	0	; select bank0
  3889     12EF  086B               	movf	vfpfcnvrt@fmt,w
  3890     12F0  0086               	movwf	6
  3891     12F1  0187               	clrf	7
  3892     12F2  3001               	movlw	1
  3893     12F3  0781               	addwf	1,f
  3894     12F4  3141               	addfsr 1,1
  3895     12F5  1803               	skipnc
  3896     12F6  0A81               	incf	1,f
  3897     12F7                     l4620:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3900     12F7  0022               	movlb	2	; select bank2
  3901     12F8  01AC               	clrf	_width^(0+256)
  3902     12F9  01AD               	clrf	(_width+1)^(0+256)
  3903     12FA  1003               	clrc
  3904     12FB  3000               	movlw	0
  3905     12FC  1803               	btfsc	3,0
  3906     12FD  3001               	movlw	1
  3907     12FE  00B0               	movwf	_flags^(0+256)
  3908     12FF                     l4622:
  3909                           
  3910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3911     12FF  30FF               	movlw	255
  3912     1300  0021               	movlb	1	; select bank1
  3913     1301  00ED               	movwf	_prec^(0+128)
  3914     1302  30FF               	movlw	255
  3915     1303  00EE               	movwf	(_prec^(0+128)+1)
  3916     1304                     l4624:
  3917                           
  3918                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  3919     1304  01D1               	clrf	vfpfcnvrt@done^(0+128)
  3920                           
  3921                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  3922     1305  2B2F               	goto	l4632
  3923     1306                     l1193:	
  3924                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  3925                           
  3926                           
  3927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  3928     1306  0022               	movlb	2	; select bank2
  3929     1307  14B0               	bsf	_flags^(0+256),1
  3930     1308                     l4626:
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  3933     1308  0020               	movlb	0	; select bank0
  3934     1309  086B               	movf	vfpfcnvrt@fmt,w
  3935     130A  0086               	movwf	6
  3936     130B  0187               	clrf	7
  3937     130C  3001               	movlw	1
  3938     130D  0781               	addwf	1,f
  3939     130E  3141               	addfsr 1,1
  3940     130F  1803               	skipnc
  3941     1310  0A81               	incf	1,f
  3942                           
  3943                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  3944     1311  2B2F               	goto	l4632
  3945     1312                     l1195:	
  3946                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  3947                           
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  3950     1312  01D1               	clrf	vfpfcnvrt@done^(0+128)
  3951     1313  0AD1               	incf	vfpfcnvrt@done^(0+128),f
  3952                           
  3953                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  3954     1314  2B2F               	goto	l4632
  3955     1315                     l4630:
  3956     1315  0020               	movlb	0	; select bank0
  3957     1316  086B               	movf	vfpfcnvrt@fmt,w
  3958     1317  0086               	movwf	6
  3959     1318  0187               	clrf	7
  3960     1319  3F40               	moviw [0]fsr1
  3961     131A  0021               	movlb	1	; select bank1
  3962     131B  00CD               	movwf	??_vfpfcnvrt^(0+128)
  3963     131C  3F41               	moviw [1]fsr1
  3964     131D  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3965     131E  084D               	movf	??_vfpfcnvrt^(0+128),w
  3966     131F  0084               	movwf	4
  3967     1320  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3968     1321  0085               	movwf	5
  3969     1322  0800               	movf	0,w	;code access
  3970     1323  00CF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3971     1324  01D0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3972                           
  3973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3974                           ; Switch size 1, requested type "simple"
  3975                           ; Number of cases is 1, Range of values is 0 to 0
  3976                           ; switch strategies available:
  3977                           ; Name         Instructions Cycles
  3978                           ; simple_byte            4     3 (average)
  3979                           ; direct_byte            8     6 (fixed)
  3980                           ; jumptable            260     6 (fixed)
  3981                           ;	Chosen strategy is simple_byte
  3982     1325  0850               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3983     1326  3A00               	xorlw	0	; case 0
  3984     1327  1903               	skipnz
  3985     1328  2B2A               	goto	l5654
  3986     1329  2B12               	goto	l1195
  3987     132A                     l5654:
  3988                           
  3989                           ; Switch size 1, requested type "simple"
  3990                           ; Number of cases is 1, Range of values is 48 to 48
  3991                           ; switch strategies available:
  3992                           ; Name         Instructions Cycles
  3993                           ; simple_byte            4     3 (average)
  3994                           ; direct_byte           11     9 (fixed)
  3995                           ; jumptable            263     9 (fixed)
  3996                           ;	Chosen strategy is simple_byte
  3997     132A  084F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3998     132B  3A30               	xorlw	48	; case 48
  3999     132C  1903               	skipnz
  4000     132D  2B06               	goto	l1193
  4001     132E  2B12               	goto	l1195
  4002     132F                     l4632:
  4003                           
  4004                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  4005     132F  0021               	movlb	1	; select bank1
  4006     1330  0851               	movf	vfpfcnvrt@done^(0+128),w
  4007     1331  1903               	btfsc	3,2
  4008     1332  2B34               	goto	u5591
  4009     1333  2B35               	goto	u5590
  4010     1334                     u5591:
  4011     1334  2B15               	goto	l4630
  4012     1335                     u5590:
  4013     1335                     l4634:
  4014                           
  4015                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  4016     1335  0020               	movlb	0	; select bank0
  4017     1336  086B               	movf	vfpfcnvrt@fmt,w
  4018     1337  0086               	movwf	6
  4019     1338  0187               	clrf	7
  4020     1339  3F40               	moviw [0]fsr1
  4021     133A  0021               	movlb	1	; select bank1
  4022     133B  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4023     133C  3F41               	moviw [1]fsr1
  4024     133D  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4025     133E  084D               	movf	??_vfpfcnvrt^(0+128),w
  4026     133F  0084               	movwf	4
  4027     1340  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4028     1341  0085               	movwf	5
  4029     1342  0012               	moviw fsr0++
  4030     1343  3A2E               	xorlw	46
  4031     1344  1D03               	btfss	3,2
  4032     1345  2B47               	goto	u5601
  4033     1346  2B48               	goto	u5600
  4034     1347                     u5601:
  4035     1347  2B5F               	goto	l4640
  4036     1348                     u5600:
  4037     1348                     l4636:
  4038                           
  4039                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  4040     1348  0020               	movlb	0	; select bank0
  4041     1349  086B               	movf	vfpfcnvrt@fmt,w
  4042     134A  0086               	movwf	6
  4043     134B  0187               	clrf	7
  4044     134C  3001               	movlw	1
  4045     134D  0781               	addwf	1,f
  4046     134E  3141               	addfsr 1,1
  4047     134F  1803               	skipnc
  4048     1350  0A81               	incf	1,f
  4049     1351                     l4638:
  4050                           
  4051                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  4052     1351  086C               	movf	vfpfcnvrt@ap,w
  4053     1352  00A6               	movwf	read_prec_or_width@ap
  4054     1353  086B               	movf	vfpfcnvrt@fmt,w
  4055     1354  319E  263F  3192   	fcall	_read_prec_or_width
  4056     1357  0020               	movlb	0	; select bank0
  4057     1358  0827               	movf	?_read_prec_or_width+1,w
  4058     1359  0021               	movlb	1	; select bank1
  4059     135A  00EE               	movwf	(_prec+1)^(0+128)
  4060     135B  0020               	movlb	0	; select bank0
  4061     135C  0826               	movf	?_read_prec_or_width,w
  4062     135D  0021               	movlb	1	; select bank1
  4063     135E  00ED               	movwf	_prec^(0+128)
  4064     135F                     l4640:
  4065                           
  4066                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4067     135F  0020               	movlb	0	; select bank0
  4068     1360  086B               	movf	vfpfcnvrt@fmt,w
  4069     1361  0086               	movwf	6
  4070     1362  0187               	clrf	7
  4071     1363  3F40               	moviw [0]fsr1
  4072     1364  0021               	movlb	1	; select bank1
  4073     1365  00D8               	movwf	vfpfcnvrt@cp^(0+128)
  4074     1366  3F41               	moviw [1]fsr1
  4075     1367  00D9               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4076     1368                     l4642:
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4079     1368  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4080     1369  0084               	movwf	4
  4081     136A  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4082     136B  0085               	movwf	5
  4083     136C  0012               	moviw fsr0++
  4084     136D  3A64               	xorlw	100
  4085     136E  1903               	btfsc	3,2
  4086     136F  2B71               	goto	u5611
  4087     1370  2B72               	goto	u5610
  4088     1371                     u5611:
  4089     1371  2B7C               	goto	l4646
  4090     1372                     u5610:
  4091     1372                     l4644:
  4092     1372  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4093     1373  0084               	movwf	4
  4094     1374  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4095     1375  0085               	movwf	5
  4096     1376  0012               	moviw fsr0++
  4097     1377  3A69               	xorlw	105
  4098     1378  1D03               	btfss	3,2
  4099     1379  2B7B               	goto	u5621
  4100     137A  2B7C               	goto	u5620
  4101     137B                     u5621:
  4102     137B  2BA7               	goto	l4654
  4103     137C                     u5620:
  4104     137C                     l4646:
  4105                           
  4106                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4107     137C  0020               	movlb	0	; select bank0
  4108     137D  086C               	movf	vfpfcnvrt@ap,w
  4109     137E  0086               	movwf	6
  4110     137F  3001               	movlw	1	; select bank2/3
  4111     1380  0087               	movwf	7
  4112     1381  0801               	movf	1,w
  4113     1382  0084               	movwf	4
  4114     1383  0185               	clrf	5
  4115     1384  3002               	movlw	2
  4116     1385  0781               	addwf	1,f
  4117     1386  3F00               	moviw [0]fsr0
  4118     1387  0021               	movlb	1	; select bank1
  4119     1388  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
  4120     1389  3F01               	moviw [1]fsr0
  4121     138A  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4122     138B                     l4648:
  4123                           
  4124                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4125     138B  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4126     138C  3E01               	addlw	1
  4127     138D  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4128     138E  3000               	movlw	0
  4129     138F  3D59               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4130     1390  00CE               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4131     1391  0020               	movlb	0	; select bank0
  4132     1392  086B               	movf	vfpfcnvrt@fmt,w
  4133     1393  0086               	movwf	6
  4134     1394  0187               	clrf	7
  4135     1395  0021               	movlb	1	; select bank1
  4136     1396  084D               	movf	??_vfpfcnvrt^(0+128),w
  4137     1397  3FC0               	movwi [0]fsr1
  4138     1398  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4139     1399  3FC1               	movwi [1]fsr1
  4140     139A                     l4650:
  4141                           
  4142                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  4143     139A  0853               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4144     139B  0020               	movlb	0	; select bank0
  4145     139C  00B7               	movwf	dtoa@d+1
  4146     139D  0021               	movlb	1	; select bank1
  4147     139E  0852               	movf	vfpfcnvrt@convarg^(0+128),w
  4148     139F  0020               	movlb	0	; select bank0
  4149     13A0  00B6               	movwf	dtoa@d
  4150     13A1  0021               	movlb	1	; select bank1
  4151     13A2  0857               	movf	vfpfcnvrt@fp^(0+128),w
  4152     13A3  3192  2200  3192   	fcall	_dtoa
  4153     13A6  2C7E               	goto	l1201
  4154     13A7                     l4654:
  4155                           
  4156                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  4157     13A7  0020               	movlb	0	; select bank0
  4158     13A8  086B               	movf	vfpfcnvrt@fmt,w
  4159     13A9  0086               	movwf	6
  4160     13AA  0187               	clrf	7
  4161     13AB  3F40               	moviw [0]fsr1
  4162     13AC  0021               	movlb	1	; select bank1
  4163     13AD  00D8               	movwf	vfpfcnvrt@cp^(0+128)
  4164     13AE  3F41               	moviw [1]fsr1
  4165     13AF  00D9               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4166     13B0                     l4656:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  4169     13B0  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4170     13B1  0084               	movwf	4
  4171     13B2  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4172     13B3  0085               	movwf	5
  4173     13B4  0800               	movf	0,w	;code access
  4174     13B5  00D6               	movwf	vfpfcnvrt@c^(0+128)
  4175                           
  4176                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  4177     13B6  2BC1               	goto	l4666
  4178     13B7                     l4658:
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  4181     13B7  3001               	movlw	1
  4182     13B8  07D8               	addwf	vfpfcnvrt@cp^(0+128),f
  4183     13B9  3000               	movlw	0
  4184     13BA  3DD9               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
  4185                           
  4186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  4187     13BB  2BD4               	goto	l4668
  4188     13BC                     l4660:
  4189                           
  4190                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  4191     13BC  306C               	movlw	108
  4192     13BD  00D6               	movwf	vfpfcnvrt@c^(0+128)
  4193                           
  4194                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  4195     13BE  2BD4               	goto	l4668
  4196     13BF                     l4662:
  4197                           
  4198                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  4199     13BF  01D6               	clrf	vfpfcnvrt@c^(0+128)
  4200                           
  4201                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  4202     13C0  2BD4               	goto	l4668
  4203     13C1                     l4666:
  4204     13C1  0856               	movf	vfpfcnvrt@c^(0+128),w
  4205     13C2  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4206     13C3  01CE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4207                           
  4208                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4209                           ; Switch size 1, requested type "simple"
  4210                           ; Number of cases is 1, Range of values is 0 to 0
  4211                           ; switch strategies available:
  4212                           ; Name         Instructions Cycles
  4213                           ; simple_byte            4     3 (average)
  4214                           ; direct_byte            8     6 (fixed)
  4215                           ; jumptable            260     6 (fixed)
  4216                           ;	Chosen strategy is simple_byte
  4217     13C4  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4218     13C5  3A00               	xorlw	0	; case 0
  4219     13C6  1903               	skipnz
  4220     13C7  2BC9               	goto	l5656
  4221     13C8  2BBF               	goto	l4662
  4222     13C9                     l5656:
  4223                           
  4224                           ; Switch size 1, requested type "simple"
  4225                           ; Number of cases is 3, Range of values is 76 to 108
  4226                           ; switch strategies available:
  4227                           ; Name         Instructions Cycles
  4228                           ; simple_byte           10     6 (average)
  4229                           ; direct_byte           75     9 (fixed)
  4230                           ; jumptable            263     9 (fixed)
  4231                           ;	Chosen strategy is simple_byte
  4232     13C9  084D               	movf	??_vfpfcnvrt^(0+128),w
  4233     13CA  3A4C               	xorlw	76	; case 76
  4234     13CB  1903               	skipnz
  4235     13CC  2BB7               	goto	l4658
  4236     13CD  3A2A               	xorlw	42	; case 102
  4237     13CE  1903               	skipnz
  4238     13CF  2BBC               	goto	l4660
  4239     13D0  3A0A               	xorlw	10	; case 108
  4240     13D1  1903               	skipnz
  4241     13D2  2BB7               	goto	l4658
  4242     13D3  2BBF               	goto	l4662
  4243     13D4                     l4668:
  4244     13D4  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4245     13D5  0084               	movwf	4
  4246     13D6  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4247     13D7  0085               	movwf	5
  4248     13D8  0012               	moviw fsr0++
  4249     13D9  3A66               	xorlw	102
  4250     13DA  1D03               	btfss	3,2
  4251     13DB  2BDD               	goto	u5631
  4252     13DC  2BDE               	goto	u5630
  4253     13DD                     u5631:
  4254     13DD  2C55               	goto	l4688
  4255     13DE                     u5630:
  4256     13DE  2C07               	goto	l4676
  4257     13DF                     l4670:
  4258                           
  4259                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4260     13DF  0020               	movlb	0	; select bank0
  4261     13E0  086C               	movf	vfpfcnvrt@ap,w
  4262     13E1  0086               	movwf	6
  4263     13E2  3001               	movlw	1	; select bank2/3
  4264     13E3  0087               	movwf	7
  4265     13E4  0801               	movf	1,w
  4266     13E5  0084               	movwf	4
  4267     13E6  0185               	clrf	5
  4268     13E7  3004               	movlw	4
  4269     13E8  0781               	addwf	1,f
  4270     13E9  3F00               	moviw [0]fsr0
  4271     13EA  0021               	movlb	1	; select bank1
  4272     13EB  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
  4273     13EC  3F01               	moviw [1]fsr0
  4274     13ED  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4275     13EE  3F02               	moviw [2]fsr0
  4276     13EF  00D4               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4277     13F0  3F03               	moviw [3]fsr0
  4278     13F1  00D5               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4279                           
  4280                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  4281     13F2  2C17               	goto	l4678
  4282     13F3                     l4672:
  4283                           
  4284                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4285     13F3  0020               	movlb	0	; select bank0
  4286     13F4  086C               	movf	vfpfcnvrt@ap,w
  4287     13F5  0086               	movwf	6
  4288     13F6  3001               	movlw	1	; select bank2/3
  4289     13F7  0087               	movwf	7
  4290     13F8  0801               	movf	1,w
  4291     13F9  0084               	movwf	4
  4292     13FA  0185               	clrf	5
  4293     13FB  3004               	movlw	4
  4294     13FC  0781               	addwf	1,f
  4295     13FD  3F00               	moviw [0]fsr0
  4296     13FE  0021               	movlb	1	; select bank1
  4297     13FF  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
  4298     1400  3F01               	moviw [1]fsr0
  4299     1401  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4300     1402  3F02               	moviw [2]fsr0
  4301     1403  00D4               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4302     1404  3F03               	moviw [3]fsr0
  4303     1405  00D5               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4304                           
  4305                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  4306     1406  2C17               	goto	l4678
  4307     1407                     l4676:
  4308     1407  0856               	movf	vfpfcnvrt@c^(0+128),w
  4309     1408  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4310     1409  01CE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4311                           
  4312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4313                           ; Switch size 1, requested type "simple"
  4314                           ; Number of cases is 1, Range of values is 0 to 0
  4315                           ; switch strategies available:
  4316                           ; Name         Instructions Cycles
  4317                           ; simple_byte            4     3 (average)
  4318                           ; direct_byte            8     6 (fixed)
  4319                           ; jumptable            260     6 (fixed)
  4320                           ;	Chosen strategy is simple_byte
  4321     140A  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4322     140B  3A00               	xorlw	0	; case 0
  4323     140C  1903               	skipnz
  4324     140D  2C0F               	goto	l5658
  4325     140E  2C17               	goto	l4678
  4326     140F                     l5658:
  4327                           
  4328                           ; Switch size 1, requested type "simple"
  4329                           ; Number of cases is 2, Range of values is 76 to 108
  4330                           ; switch strategies available:
  4331                           ; Name         Instructions Cycles
  4332                           ; simple_byte            7     4 (average)
  4333                           ; direct_byte           75     9 (fixed)
  4334                           ; jumptable            263     9 (fixed)
  4335                           ;	Chosen strategy is simple_byte
  4336     140F  084D               	movf	??_vfpfcnvrt^(0+128),w
  4337     1410  3A4C               	xorlw	76	; case 76
  4338     1411  1903               	skipnz
  4339     1412  2BF3               	goto	l4672
  4340     1413  3A20               	xorlw	32	; case 108
  4341     1414  1903               	skipnz
  4342     1415  2BDF               	goto	l4670
  4343     1416  2C17               	goto	l4678
  4344     1417                     l4678:
  4345                           
  4346                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  4347     1417  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4348     1418  3E01               	addlw	1
  4349     1419  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4350     141A  3000               	movlw	0
  4351     141B  3D59               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4352     141C  00CE               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4353     141D  0020               	movlb	0	; select bank0
  4354     141E  086B               	movf	vfpfcnvrt@fmt,w
  4355     141F  0086               	movwf	6
  4356     1420  0187               	clrf	7
  4357     1421  0021               	movlb	1	; select bank1
  4358     1422  084D               	movf	??_vfpfcnvrt^(0+128),w
  4359     1423  3FC0               	movwi [0]fsr1
  4360     1424  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4361     1425  3FC1               	movwi [1]fsr1
  4362                           
  4363                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  4364     1426  2C44               	goto	l4686
  4365     1427                     l4680:
  4366                           
  4367                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  4368     1427  0855               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  4369     1428  0020               	movlb	0	; select bank0
  4370     1429  00E5               	movwf	efgtoa@f+3
  4371     142A  0021               	movlb	1	; select bank1
  4372     142B  0854               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  4373     142C  0020               	movlb	0	; select bank0
  4374     142D  00E4               	movwf	efgtoa@f+2
  4375     142E  0021               	movlb	1	; select bank1
  4376     142F  0853               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4377     1430  0020               	movlb	0	; select bank0
  4378     1431  00E3               	movwf	efgtoa@f+1
  4379     1432  0021               	movlb	1	; select bank1
  4380     1433  0852               	movf	vfpfcnvrt@convarg^(0+128),w
  4381     1434  0020               	movlb	0	; select bank0
  4382     1435  00E2               	movwf	efgtoa@f
  4383     1436  0021               	movlb	1	; select bank1
  4384     1437  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4385     1438  0084               	movwf	4
  4386     1439  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4387     143A  0085               	movwf	5
  4388     143B  0800               	movf	0,w	;code access
  4389     143C  0020               	movlb	0	; select bank0
  4390     143D  00E6               	movwf	efgtoa@c
  4391     143E  0021               	movlb	1	; select bank1
  4392     143F  0857               	movf	vfpfcnvrt@fp^(0+128),w
  4393     1440  3188  20F0  3192   	fcall	_efgtoa
  4394     1443  2C7E               	goto	l1201
  4395     1444                     l4686:
  4396     1444  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4397     1445  0084               	movwf	4
  4398     1446  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4399     1447  0085               	movwf	5
  4400     1448  0800               	movf	0,w	;code access
  4401     1449  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4402     144A  01CE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4403                           
  4404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4405                           ; Switch size 1, requested type "simple"
  4406                           ; Number of cases is 1, Range of values is 0 to 0
  4407                           ; switch strategies available:
  4408                           ; Name         Instructions Cycles
  4409                           ; simple_byte            4     3 (average)
  4410                           ; direct_byte            8     6 (fixed)
  4411                           ; jumptable            260     6 (fixed)
  4412                           ;	Chosen strategy is simple_byte
  4413     144B  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4414     144C  3A00               	xorlw	0	; case 0
  4415     144D  1903               	skipnz
  4416     144E  2C50               	goto	l5660
  4417     144F  2C55               	goto	l4688
  4418     1450                     l5660:
  4419                           
  4420                           ; Switch size 1, requested type "simple"
  4421                           ; Number of cases is 1, Range of values is 102 to 102
  4422                           ; switch strategies available:
  4423                           ; Name         Instructions Cycles
  4424                           ; simple_byte            4     3 (average)
  4425                           ; direct_byte           11     9 (fixed)
  4426                           ; jumptable            263     9 (fixed)
  4427                           ;	Chosen strategy is simple_byte
  4428     1450  084D               	movf	??_vfpfcnvrt^(0+128),w
  4429     1451  3A66               	xorlw	102	; case 102
  4430     1452  1903               	skipnz
  4431     1453  2C27               	goto	l4680
  4432     1454  2C55               	goto	l4688
  4433     1455                     l4688:
  4434                           
  4435                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4436     1455  0020               	movlb	0	; select bank0
  4437     1456  086B               	movf	vfpfcnvrt@fmt,w
  4438     1457  0086               	movwf	6
  4439     1458  0187               	clrf	7
  4440     1459  3001               	movlw	1
  4441     145A  0781               	addwf	1,f
  4442     145B  3141               	addfsr 1,1
  4443     145C  1803               	skipnc
  4444     145D  0A81               	incf	1,f
  4445     145E  2C7E               	goto	l1201
  4446     145F                     l4692:
  4447                           
  4448                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4449     145F  0020               	movlb	0	; select bank0
  4450     1460  086B               	movf	vfpfcnvrt@fmt,w
  4451     1461  0086               	movwf	6
  4452     1462  0187               	clrf	7
  4453     1463  3F40               	moviw [0]fsr1
  4454     1464  0021               	movlb	1	; select bank1
  4455     1465  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4456     1466  3F41               	moviw [1]fsr1
  4457     1467  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4458     1468  084D               	movf	??_vfpfcnvrt^(0+128),w
  4459     1469  0084               	movwf	4
  4460     146A  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4461     146B  0085               	movwf	5
  4462     146C  0800               	movf	0,w	;code access
  4463     146D  00CF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4464     146E  01D0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  4465     146F  084F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  4466     1470  0020               	movlb	0	; select bank0
  4467     1471  00A0               	movwf	fputc@c
  4468     1472  0021               	movlb	1	; select bank1
  4469     1473  0850               	movf	(??_vfpfcnvrt+3)^(0+128),w
  4470     1474  0020               	movlb	0	; select bank0
  4471     1475  00A1               	movwf	fputc@c+1
  4472     1476  0021               	movlb	1	; select bank1
  4473     1477  0857               	movf	vfpfcnvrt@fp^(0+128),w
  4474     1478  0020               	movlb	0	; select bank0
  4475     1479  00A2               	movwf	fputc@fp
  4476     147A  319D  2586  3192   	fcall	_fputc
  4477     147D  2C55               	goto	l4688
  4478     147E                     l1201:
  4479     147E  0008               	return
  4480     147F                     __end_of_vfpfcnvrt:
  4481                           
  4482                           	psect	text4
  4483     1E3F                     __ptext4:	
  4484 ;; *************** function _read_prec_or_width *****************
  4485 ;; Defined at:
  4486 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  fmt             1    wreg     PTR PTR const unsigned c
  4489 ;;		 -> vfprintf@cfmt(2), 
  4490 ;;  ap              1    6[BANK0 ] PTR PTR void [1]
  4491 ;;		 -> sprintf@ap(1), 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  fmt             1   14[BANK0 ] PTR PTR const unsigned c
  4494 ;;		 -> vfprintf@cfmt(2), 
  4495 ;;  c               1   11[BANK0 ] unsigned char 
  4496 ;;  n               2   12[BANK0 ] int 
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  2    6[BANK0 ] int 
  4499 ;; Registers used:
  4500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4506 ;;      Params:         0       2       0       0       0       0       0       0
  4507 ;;      Locals:         0       4       0       0       0       0       0       0
  4508 ;;      Temps:          0       3       0       0       0       0       0       0
  4509 ;;      Totals:         0       9       0       0       0       0       0       0
  4510 ;;Total ram usage:        9 bytes
  4511 ;; Hardware stack levels used: 1
  4512 ;; Hardware stack levels required when called: 5
  4513 ;; This function calls:
  4514 ;;		___wmul
  4515 ;; This function is called by:
  4516 ;;		_vfpfcnvrt
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520     1E3F                     _read_prec_or_width:	
  4521                           ;psect for function _read_prec_or_width
  4522                           
  4523                           
  4524                           ;incstack = 0
  4525                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4526                           ;read_prec_or_width@fmt stored from wreg
  4527     1E3F  0020               	movlb	0	; select bank0
  4528     1E40  00AE               	movwf	read_prec_or_width@fmt
  4529     1E41                     l4588:
  4530                           
  4531                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  4532     1E41  01AC               	clrf	read_prec_or_width@n
  4533     1E42  01AD               	clrf	read_prec_or_width@n+1
  4534     1E43                     l4590:
  4535                           
  4536                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  4537     1E43  082E               	movf	read_prec_or_width@fmt,w
  4538     1E44  0086               	movwf	6
  4539     1E45  0187               	clrf	7
  4540     1E46  3F40               	moviw [0]fsr1
  4541     1E47  00A8               	movwf	??_read_prec_or_width
  4542     1E48  3F41               	moviw [1]fsr1
  4543     1E49  00A9               	movwf	??_read_prec_or_width+1
  4544     1E4A  0828               	movf	??_read_prec_or_width,w
  4545     1E4B  0084               	movwf	4
  4546     1E4C  0829               	movf	??_read_prec_or_width+1,w
  4547     1E4D  0085               	movwf	5
  4548     1E4E  0012               	moviw fsr0++
  4549     1E4F  3A2A               	xorlw	42
  4550     1E50  1D03               	btfss	3,2
  4551     1E51  2E53               	goto	u5561
  4552     1E52  2E54               	goto	u5560
  4553     1E53                     u5561:
  4554     1E53  2E87               	goto	l4600
  4555     1E54                     u5560:
  4556     1E54                     l4592:
  4557                           
  4558                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  4559     1E54  082E               	movf	read_prec_or_width@fmt,w
  4560     1E55  0086               	movwf	6
  4561     1E56  0187               	clrf	7
  4562     1E57  3001               	movlw	1
  4563     1E58  0781               	addwf	1,f
  4564     1E59  3141               	addfsr 1,1
  4565     1E5A  1803               	skipnc
  4566     1E5B  0A81               	incf	1,f
  4567     1E5C                     l4594:
  4568                           
  4569                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4570     1E5C  0826               	movf	read_prec_or_width@ap,w
  4571     1E5D  0086               	movwf	6
  4572     1E5E  3001               	movlw	1	; select bank2/3
  4573     1E5F  0087               	movwf	7
  4574     1E60  0801               	movf	1,w
  4575     1E61  0084               	movwf	4
  4576     1E62  0185               	clrf	5
  4577     1E63  3002               	movlw	2
  4578     1E64  0781               	addwf	1,f
  4579     1E65  3F00               	moviw [0]fsr0
  4580     1E66  00AC               	movwf	read_prec_or_width@n
  4581     1E67  3F01               	moviw [1]fsr0
  4582     1E68  00AD               	movwf	read_prec_or_width@n+1
  4583                           
  4584                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  4585     1E69  2E9B               	goto	l4602
  4586     1E6A                     l4596:
  4587                           
  4588                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  4589     1E6A  082B               	movf	read_prec_or_width@c,w
  4590     1E6B  00A8               	movwf	??_read_prec_or_width
  4591     1E6C  01A9               	clrf	??_read_prec_or_width+1
  4592     1E6D  082D               	movf	read_prec_or_width@n+1,w
  4593     1E6E  00A1               	movwf	___wmul@multiplier+1
  4594     1E6F  082C               	movf	read_prec_or_width@n,w
  4595     1E70  00A0               	movwf	___wmul@multiplier
  4596     1E71  300A               	movlw	10
  4597     1E72  00A2               	movwf	___wmul@multiplicand
  4598     1E73  3000               	movlw	0
  4599     1E74  00A3               	movwf	___wmul@multiplicand+1
  4600     1E75  319B  230E  319E   	fcall	___wmul
  4601     1E78  0020               	movlb	0	; select bank0
  4602     1E79  0828               	movf	??_read_prec_or_width,w
  4603     1E7A  0720               	addwf	?___wmul,w
  4604     1E7B  00AC               	movwf	read_prec_or_width@n
  4605     1E7C  0829               	movf	??_read_prec_or_width+1,w
  4606     1E7D  3D21               	addwfc	?___wmul+1,w
  4607     1E7E  00AD               	movwf	read_prec_or_width@n+1
  4608     1E7F                     l4598:
  4609                           
  4610                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  4611     1E7F  082E               	movf	read_prec_or_width@fmt,w
  4612     1E80  0086               	movwf	6
  4613     1E81  0187               	clrf	7
  4614     1E82  3001               	movlw	1
  4615     1E83  0781               	addwf	1,f
  4616     1E84  3141               	addfsr 1,1
  4617     1E85  1803               	skipnc
  4618     1E86  0A81               	incf	1,f
  4619     1E87                     l4600:
  4620                           
  4621                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4622     1E87  082E               	movf	read_prec_or_width@fmt,w
  4623     1E88  0086               	movwf	6
  4624     1E89  0187               	clrf	7
  4625     1E8A  3F40               	moviw [0]fsr1
  4626     1E8B  00A8               	movwf	??_read_prec_or_width
  4627     1E8C  3F41               	moviw [1]fsr1
  4628     1E8D  00A9               	movwf	??_read_prec_or_width+1
  4629     1E8E  0828               	movf	??_read_prec_or_width,w
  4630     1E8F  0084               	movwf	4
  4631     1E90  0829               	movf	??_read_prec_or_width+1,w
  4632     1E91  0085               	movwf	5
  4633     1E92  0800               	movf	0,w	;code access
  4634     1E93  3ED0               	addlw	208
  4635     1E94  00AB               	movwf	read_prec_or_width@c
  4636     1E95  300A               	movlw	10
  4637     1E96  022B               	subwf	read_prec_or_width@c,w
  4638     1E97  1C03               	skipc
  4639     1E98  2E9A               	goto	u5571
  4640     1E99  2E9B               	goto	u5570
  4641     1E9A                     u5571:
  4642     1E9A  2E6A               	goto	l4596
  4643     1E9B                     u5570:
  4644     1E9B                     l4602:
  4645                           
  4646                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  4647     1E9B  082D               	movf	read_prec_or_width@n+1,w
  4648     1E9C  00A7               	movwf	?_read_prec_or_width+1
  4649     1E9D  082C               	movf	read_prec_or_width@n,w
  4650     1E9E  00A6               	movwf	?_read_prec_or_width
  4651     1E9F                     l1186:
  4652     1E9F  0008               	return
  4653     1EA0                     __end_of_read_prec_or_width:
  4654                           
  4655                           	psect	text5
  4656     1B0E                     __ptext5:	
  4657 ;; *************** function ___wmul *****************
  4658 ;; Defined at:
  4659 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4662 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  product         2    4[BANK0 ] unsigned int 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  2    0[BANK0 ] unsigned int 
  4667 ;; Registers used:
  4668 ;;		wreg, status,2, status,0
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4674 ;;      Params:         0       4       0       0       0       0       0       0
  4675 ;;      Locals:         0       2       0       0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0       0
  4677 ;;      Totals:         0       6       0       0       0       0       0       0
  4678 ;;Total ram usage:        6 bytes
  4679 ;; Hardware stack levels used: 1
  4680 ;; Hardware stack levels required when called: 4
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_main
  4685 ;;		_read_prec_or_width
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689     1B0E                     ___wmul:	
  4690                           ;psect for function ___wmul
  4691                           
  4692     1B0E                     l3752:	
  4693                           ;incstack = 0
  4694                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4695                           
  4696     1B0E  0020               	movlb	0	; select bank0
  4697     1B0F  01A4               	clrf	___wmul@product
  4698     1B10  01A5               	clrf	___wmul@product+1
  4699     1B11                     l3754:
  4700     1B11  1C20               	btfss	___wmul@multiplier,0
  4701     1B12  2B14               	goto	u3831
  4702     1B13  2B15               	goto	u3830
  4703     1B14                     u3831:
  4704     1B14  2B19               	goto	l603
  4705     1B15                     u3830:
  4706     1B15                     l3756:
  4707     1B15  0822               	movf	___wmul@multiplicand,w
  4708     1B16  07A4               	addwf	___wmul@product,f
  4709     1B17  0823               	movf	___wmul@multiplicand+1,w
  4710     1B18  3DA5               	addwfc	___wmul@product+1,f
  4711     1B19                     l603:
  4712     1B19  3001               	movlw	1
  4713     1B1A                     u3845:
  4714     1B1A  35A2               	lslf	___wmul@multiplicand,f
  4715     1B1B  0DA3               	rlf	___wmul@multiplicand+1,f
  4716     1B1C  0B89               	decfsz	9,f
  4717     1B1D  2B1A               	goto	u3845
  4718     1B1E                     l3758:
  4719     1B1E  3001               	movlw	1
  4720     1B1F                     u3855:
  4721     1B1F  36A1               	lsrf	___wmul@multiplier+1,f
  4722     1B20  0CA0               	rrf	___wmul@multiplier,f
  4723     1B21  0B89               	decfsz	9,f
  4724     1B22  2B1F               	goto	u3855
  4725     1B23                     l3760:
  4726     1B23  0820               	movf	___wmul@multiplier,w
  4727     1B24  0421               	iorwf	___wmul@multiplier+1,w
  4728     1B25  1D03               	btfss	3,2
  4729     1B26  2B28               	goto	u3861
  4730     1B27  2B29               	goto	u3860
  4731     1B28                     u3861:
  4732     1B28  2B11               	goto	l3754
  4733     1B29                     u3860:
  4734     1B29                     l3762:
  4735     1B29  0825               	movf	___wmul@product+1,w
  4736     1B2A  00A1               	movwf	?___wmul+1
  4737     1B2B  0824               	movf	___wmul@product,w
  4738     1B2C  00A0               	movwf	?___wmul
  4739     1B2D                     l605:
  4740     1B2D  0008               	return
  4741     1B2E                     __end_of___wmul:
  4742                           
  4743                           	psect	text6
  4744     08F0                     __ptext6:	
  4745 ;; *************** function _efgtoa *****************
  4746 ;; Defined at:
  4747 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;  fp              1    wreg     PTR struct _IO_FILE
  4750 ;;		 -> sprintf@f(11), 
  4751 ;;  f               4   66[BANK0 ] PTR struct _IO_FILE
  4752 ;;  c               1   70[BANK0 ] unsigned char 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  fp              1   15[BANK1 ] PTR struct _IO_FILE
  4755 ;;		 -> sprintf@f(11), 
  4756 ;;  u               4   41[BANK1 ] struct flui
  4757 ;;  g               4   35[BANK1 ] struct flui
  4758 ;;  l               4   28[BANK1 ] struct flui
  4759 ;;  h               4   24[BANK1 ] struct flui
  4760 ;;  ou              4   20[BANK1 ] struct flui
  4761 ;;  n               2   39[BANK1 ] int 
  4762 ;;  i               2   32[BANK1 ] int 
  4763 ;;  w               2   18[BANK1 ] int 
  4764 ;;  e               2   16[BANK1 ] int 
  4765 ;;  m               2   13[BANK1 ] int 
  4766 ;;  d               2   11[BANK1 ] int 
  4767 ;;  t               2    4[BANK1 ] int 
  4768 ;;  p               2    2[BANK1 ] int 
  4769 ;;  ne              2    0[BANK1 ] int 
  4770 ;;  sign            1   34[BANK1 ] unsigned char 
  4771 ;;  nmode           1   10[BANK1 ] unsigned char 
  4772 ;;  mode            1    9[BANK1 ] unsigned char 
  4773 ;;  pp              1    8[BANK1 ] unsigned char 
  4774 ;;  esign           1    0        unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4784 ;;      Params:         0       5       0       0       0       0       0       0
  4785 ;;      Locals:         0       0      45       0       0       0       0       0
  4786 ;;      Temps:          0       4       0       0       0       0       0       0
  4787 ;;      Totals:         0       9      45       0       0       0       0       0
  4788 ;;Total ram usage:       54 bytes
  4789 ;; Hardware stack levels used: 1
  4790 ;; Hardware stack levels required when called: 8
  4791 ;; This function calls:
  4792 ;;		___fladd
  4793 ;;		___fldiv
  4794 ;;		___fleq
  4795 ;;		___flge
  4796 ;;		___flmul
  4797 ;;		___flneg
  4798 ;;		___flsub
  4799 ;;		___fltol
  4800 ;;		___fpclassifyf
  4801 ;;		_floorf
  4802 ;;		_labs
  4803 ;;		_memcpy
  4804 ;;		_pad
  4805 ;;		_strcpy
  4806 ;; This function is called by:
  4807 ;;		_vfpfcnvrt
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811     08F0                     _efgtoa:	
  4812                           ;psect for function _efgtoa
  4813                           
  4814                           
  4815                           ;incstack = 0
  4816                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4817                           ;efgtoa@fp stored from wreg
  4818     08F0  0021               	movlb	1	; select bank1
  4819     08F1  00AF               	movwf	efgtoa@fp^(0+128)
  4820     08F2                     l4374:
  4821                           
  4822                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  4823     08F2  01C2               	clrf	efgtoa@sign^(0+128)
  4824     08F3                     l4376:
  4825                           
  4826                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  4827     08F3  0020               	movlb	0	; select bank0
  4828     08F4  0865               	movf	efgtoa@f+3,w
  4829     08F5  0021               	movlb	1	; select bank1
  4830     08F6  00C6               	movwf	(efgtoa@g+3)^(0+128)
  4831     08F7  0020               	movlb	0	; select bank0
  4832     08F8  0864               	movf	efgtoa@f+2,w
  4833     08F9  0021               	movlb	1	; select bank1
  4834     08FA  00C5               	movwf	(efgtoa@g+2)^(0+128)
  4835     08FB  0020               	movlb	0	; select bank0
  4836     08FC  0863               	movf	efgtoa@f+1,w
  4837     08FD  0021               	movlb	1	; select bank1
  4838     08FE  00C4               	movwf	(efgtoa@g+1)^(0+128)
  4839     08FF  0020               	movlb	0	; select bank0
  4840     0900  0862               	movf	efgtoa@f,w
  4841     0901  0021               	movlb	1	; select bank1
  4842     0902  00C3               	movwf	efgtoa@g^(0+128)
  4843     0903                     l4378:
  4844                           
  4845                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  4846     0903  0846               	movf	(efgtoa@g+3)^(0+128),w
  4847     0904  0020               	movlb	0	; select bank0
  4848     0905  00C6               	movwf	___flge@ff1+3
  4849     0906  0021               	movlb	1	; select bank1
  4850     0907  0845               	movf	(efgtoa@g+2)^(0+128),w
  4851     0908  0020               	movlb	0	; select bank0
  4852     0909  00C5               	movwf	___flge@ff1+2
  4853     090A  0021               	movlb	1	; select bank1
  4854     090B  0844               	movf	(efgtoa@g+1)^(0+128),w
  4855     090C  0020               	movlb	0	; select bank0
  4856     090D  00C4               	movwf	___flge@ff1+1
  4857     090E  0021               	movlb	1	; select bank1
  4858     090F  0843               	movf	efgtoa@g^(0+128),w
  4859     0910  0020               	movlb	0	; select bank0
  4860     0911  00C3               	movwf	___flge@ff1
  4861     0912  3000               	movlw	0
  4862     0913  00CA               	movwf	___flge@ff2+3
  4863     0914  3000               	movlw	0
  4864     0915  00C9               	movwf	___flge@ff2+2
  4865     0916  3000               	movlw	0
  4866     0917  00C8               	movwf	___flge@ff2+1
  4867     0918  3000               	movlw	0
  4868     0919  00C7               	movwf	___flge@ff2
  4869     091A  3190  20CA  3188   	fcall	___flge
  4870     091D  1803               	btfsc	3,0
  4871     091E  2920               	goto	u5211
  4872     091F  2921               	goto	u5210
  4873     0920                     u5211:
  4874     0920  2946               	goto	l4384
  4875     0921                     u5210:
  4876     0921                     l4380:
  4877                           
  4878                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  4879     0921  0021               	movlb	1	; select bank1
  4880     0922  01C2               	clrf	efgtoa@sign^(0+128)
  4881     0923  0AC2               	incf	efgtoa@sign^(0+128),f
  4882     0924                     l4382:
  4883                           
  4884                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  4885     0924  0846               	movf	(efgtoa@g+3)^(0+128),w
  4886     0925  0020               	movlb	0	; select bank0
  4887     0926  00A3               	movwf	___flneg@f1+3
  4888     0927  0021               	movlb	1	; select bank1
  4889     0928  0845               	movf	(efgtoa@g+2)^(0+128),w
  4890     0929  0020               	movlb	0	; select bank0
  4891     092A  00A2               	movwf	___flneg@f1+2
  4892     092B  0021               	movlb	1	; select bank1
  4893     092C  0844               	movf	(efgtoa@g+1)^(0+128),w
  4894     092D  0020               	movlb	0	; select bank0
  4895     092E  00A1               	movwf	___flneg@f1+1
  4896     092F  0021               	movlb	1	; select bank1
  4897     0930  0843               	movf	efgtoa@g^(0+128),w
  4898     0931  0020               	movlb	0	; select bank0
  4899     0932  00A0               	movwf	___flneg@f1
  4900     0933  3199  21D3  3188   	fcall	___flneg
  4901     0936  0020               	movlb	0	; select bank0
  4902     0937  0823               	movf	?___flneg+3,w
  4903     0938  0021               	movlb	1	; select bank1
  4904     0939  00C6               	movwf	(efgtoa@g+3)^(0+128)
  4905     093A  0020               	movlb	0	; select bank0
  4906     093B  0822               	movf	?___flneg+2,w
  4907     093C  0021               	movlb	1	; select bank1
  4908     093D  00C5               	movwf	(efgtoa@g+2)^(0+128)
  4909     093E  0020               	movlb	0	; select bank0
  4910     093F  0821               	movf	?___flneg+1,w
  4911     0940  0021               	movlb	1	; select bank1
  4912     0941  00C4               	movwf	(efgtoa@g+1)^(0+128)
  4913     0942  0020               	movlb	0	; select bank0
  4914     0943  0820               	movf	?___flneg,w
  4915     0944  0021               	movlb	1	; select bank1
  4916     0945  00C3               	movwf	efgtoa@g^(0+128)
  4917     0946                     l4384:
  4918                           
  4919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  4920     0946  0021               	movlb	1	; select bank1
  4921     0947  01C7               	clrf	efgtoa@n^(0+128)
  4922     0948  01C8               	clrf	(efgtoa@n+1)^(0+128)
  4923     0949                     l4386:
  4924                           
  4925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  4926     0949  0022               	movlb	2	; select bank2
  4927     094A  082D               	movf	(_width+1)^(0+256),w
  4928     094B  0021               	movlb	1	; select bank1
  4929     094C  00B3               	movwf	(efgtoa@w+1)^(0+128)
  4930     094D  0022               	movlb	2	; select bank2
  4931     094E  082C               	movf	_width^(0+256),w
  4932     094F  0021               	movlb	1	; select bank1
  4933     0950  00B2               	movwf	efgtoa@w^(0+128)
  4934     0951                     l4388:
  4935                           
  4936                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  4937     0951  0842               	movf	efgtoa@sign^(0+128),w
  4938     0952  1903               	btfsc	3,2
  4939     0953  2955               	goto	u5221
  4940     0954  2956               	goto	u5220
  4941     0955                     u5221:
  4942     0955  2966               	goto	l4396
  4943     0956                     u5220:
  4944     0956                     l4390:
  4945                           
  4946                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  4947     0956  0842               	movf	efgtoa@sign^(0+128),w
  4948     0957  1D03               	btfss	3,2
  4949     0958  295A               	goto	u5231
  4950     0959  295B               	goto	u5230
  4951     095A                     u5231:
  4952     095A  2960               	goto	l4394
  4953     095B                     u5230:
  4954     095B                     l4392:
  4955     095B  302B               	movlw	43
  4956     095C  00A6               	movwf	_efgtoa$1448^(0+128)
  4957     095D  3000               	movlw	0
  4958     095E  00A7               	movwf	(_efgtoa$1448^(0+128)+1)
  4959     095F  2964               	goto	l1128
  4960     0960                     l4394:
  4961     0960  302D               	movlw	45
  4962     0961  00A6               	movwf	_efgtoa$1448^(0+128)
  4963     0962  3000               	movlw	0
  4964     0963  00A7               	movwf	(_efgtoa$1448^(0+128)+1)
  4965     0964                     l1128:
  4966     0964  0826               	movf	_efgtoa$1448^(0+128),w
  4967     0965  00C2               	movwf	efgtoa@sign^(0+128)
  4968     0966                     l4396:
  4969                           
  4970                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4971     0966  0846               	movf	(efgtoa@g+3)^(0+128),w
  4972     0967  0020               	movlb	0	; select bank0
  4973     0968  00A3               	movwf	___fpclassifyf@x+3
  4974     0969  0021               	movlb	1	; select bank1
  4975     096A  0845               	movf	(efgtoa@g+2)^(0+128),w
  4976     096B  0020               	movlb	0	; select bank0
  4977     096C  00A2               	movwf	___fpclassifyf@x+2
  4978     096D  0021               	movlb	1	; select bank1
  4979     096E  0844               	movf	(efgtoa@g+1)^(0+128),w
  4980     096F  0020               	movlb	0	; select bank0
  4981     0970  00A1               	movwf	___fpclassifyf@x+1
  4982     0971  0021               	movlb	1	; select bank1
  4983     0972  0843               	movf	efgtoa@g^(0+128),w
  4984     0973  0020               	movlb	0	; select bank0
  4985     0974  00A0               	movwf	___fpclassifyf@x
  4986     0975  3190  204B  3188   	fcall	___fpclassifyf
  4987     0978  0020               	movlb	0	; select bank0
  4988     0979  0320               	decf	?___fpclassifyf,w
  4989     097A  0421               	iorwf	?___fpclassifyf+1,w
  4990     097B  1D03               	btfss	3,2
  4991     097C  297E               	goto	u5241
  4992     097D  297F               	goto	u5240
  4993     097E                     u5241:
  4994     097E  29B2               	goto	l4408
  4995     097F                     u5240:
  4996     097F                     l4398:
  4997                           
  4998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  4999     097F  0021               	movlb	1	; select bank1
  5000     0980  0842               	movf	efgtoa@sign^(0+128),w
  5001     0981  1903               	btfsc	3,2
  5002     0982  2984               	goto	u5251
  5003     0983  2985               	goto	u5250
  5004     0984                     u5251:
  5005     0984  2991               	goto	l4402
  5006     0985                     u5250:
  5007     0985                     l4400:
  5008                           
  5009                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  5010     0985  0842               	movf	efgtoa@sign^(0+128),w
  5011     0986  0024               	movlb	4	; select bank4
  5012     0987  00A0               	movwf	_dbuf^(0+512)
  5013                           
  5014                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  5015     0988  30FF               	movlw	255
  5016     0989  0021               	movlb	1	; select bank1
  5017     098A  07B2               	addwf	efgtoa@w^(0+128),f
  5018     098B  30FF               	movlw	255
  5019     098C  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  5020                           
  5021                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  5022     098D  3001               	movlw	1
  5023     098E  00C7               	movwf	efgtoa@n^(0+128)
  5024     098F  3000               	movlw	0
  5025     0990  00C8               	movwf	(efgtoa@n^(0+128)+1)
  5026     0991                     l4402:
  5027                           
  5028                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  5029     0991  30A0               	movlw	low (STR_19| (0+32768))
  5030     0992  0020               	movlb	0	; select bank0
  5031     0993  00A0               	movwf	strcpy@src
  5032     0994  3098               	movlw	high (STR_19| (0+32768))
  5033     0995  00A1               	movwf	strcpy@src+1
  5034     0996  0021               	movlb	1	; select bank1
  5035     0997  0847               	movf	efgtoa@n^(0+128),w
  5036     0998  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5037     0999  319A  2258  3188   	fcall	_strcpy
  5038     099C                     l4404:
  5039                           
  5040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  5041     099C  30FD               	movlw	253
  5042     099D  0021               	movlb	1	; select bank1
  5043     099E  07B2               	addwf	efgtoa@w^(0+128),f
  5044     099F  30FF               	movlw	255
  5045     09A0  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  5046                           
  5047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  5048     09A1  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  5049     09A2  0020               	movlb	0	; select bank0
  5050     09A3  00AF               	movwf	pad@buf
  5051     09A4  0021               	movlb	1	; select bank1
  5052     09A5  0833               	movf	(efgtoa@w+1)^(0+128),w
  5053     09A6  0020               	movlb	0	; select bank0
  5054     09A7  00B1               	movwf	pad@p+1
  5055     09A8  0021               	movlb	1	; select bank1
  5056     09A9  0832               	movf	efgtoa@w^(0+128),w
  5057     09AA  0020               	movlb	0	; select bank0
  5058     09AB  00B0               	movwf	pad@p
  5059     09AC  0021               	movlb	1	; select bank1
  5060     09AD  082F               	movf	efgtoa@fp^(0+128),w
  5061     09AE  3190  201B  3188   	fcall	_pad
  5062     09B1  2FFF               	goto	l1131
  5063     09B2                     l4408:
  5064                           
  5065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  5066     09B2  0021               	movlb	1	; select bank1
  5067     09B3  0846               	movf	(efgtoa@g+3)^(0+128),w
  5068     09B4  0020               	movlb	0	; select bank0
  5069     09B5  00A3               	movwf	___fpclassifyf@x+3
  5070     09B6  0021               	movlb	1	; select bank1
  5071     09B7  0845               	movf	(efgtoa@g+2)^(0+128),w
  5072     09B8  0020               	movlb	0	; select bank0
  5073     09B9  00A2               	movwf	___fpclassifyf@x+2
  5074     09BA  0021               	movlb	1	; select bank1
  5075     09BB  0844               	movf	(efgtoa@g+1)^(0+128),w
  5076     09BC  0020               	movlb	0	; select bank0
  5077     09BD  00A1               	movwf	___fpclassifyf@x+1
  5078     09BE  0021               	movlb	1	; select bank1
  5079     09BF  0843               	movf	efgtoa@g^(0+128),w
  5080     09C0  0020               	movlb	0	; select bank0
  5081     09C1  00A0               	movwf	___fpclassifyf@x
  5082     09C2  3190  204B  3188   	fcall	___fpclassifyf
  5083     09C5  0020               	movlb	0	; select bank0
  5084     09C6  0820               	movf	?___fpclassifyf,w
  5085     09C7  0421               	iorwf	?___fpclassifyf+1,w
  5086     09C8  1D03               	btfss	3,2
  5087     09C9  29CB               	goto	u5261
  5088     09CA  29CC               	goto	u5260
  5089     09CB                     u5261:
  5090     09CB  29FF               	goto	l4420
  5091     09CC                     u5260:
  5092     09CC                     l4410:
  5093                           
  5094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  5095     09CC  0021               	movlb	1	; select bank1
  5096     09CD  0842               	movf	efgtoa@sign^(0+128),w
  5097     09CE  1903               	btfsc	3,2
  5098     09CF  29D1               	goto	u5271
  5099     09D0  29D2               	goto	u5270
  5100     09D1                     u5271:
  5101     09D1  29DE               	goto	l4414
  5102     09D2                     u5270:
  5103     09D2                     l4412:
  5104                           
  5105                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  5106     09D2  0842               	movf	efgtoa@sign^(0+128),w
  5107     09D3  0024               	movlb	4	; select bank4
  5108     09D4  00A0               	movwf	_dbuf^(0+512)
  5109                           
  5110                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  5111     09D5  30FF               	movlw	255
  5112     09D6  0021               	movlb	1	; select bank1
  5113     09D7  07B2               	addwf	efgtoa@w^(0+128),f
  5114     09D8  30FF               	movlw	255
  5115     09D9  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  5116                           
  5117                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  5118     09DA  3001               	movlw	1
  5119     09DB  00C7               	movwf	efgtoa@n^(0+128)
  5120     09DC  3000               	movlw	0
  5121     09DD  00C8               	movwf	(efgtoa@n^(0+128)+1)
  5122     09DE                     l4414:
  5123                           
  5124                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  5125     09DE  30A4               	movlw	low (STR_22| (0+32768))
  5126     09DF  0020               	movlb	0	; select bank0
  5127     09E0  00A0               	movwf	strcpy@src
  5128     09E1  3098               	movlw	high (STR_22| (0+32768))
  5129     09E2  00A1               	movwf	strcpy@src+1
  5130     09E3  0021               	movlb	1	; select bank1
  5131     09E4  0847               	movf	efgtoa@n^(0+128),w
  5132     09E5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5133     09E6  319A  2258  3188   	fcall	_strcpy
  5134     09E9                     l4416:
  5135                           
  5136                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 651:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 652:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
  5137     09E9  30FD               	movlw	253
  5138     09EA  0021               	movlb	1	; select bank1
  5139     09EB  07B2               	addwf	efgtoa@w^(0+128),f
  5140     09EC  30FF               	movlw	255
  5141     09ED  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  5142                           
  5143                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 653:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  5144     09EE  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  5145     09EF  0020               	movlb	0	; select bank0
  5146     09F0  00AF               	movwf	pad@buf
  5147     09F1  0021               	movlb	1	; select bank1
  5148     09F2  0833               	movf	(efgtoa@w+1)^(0+128),w
  5149     09F3  0020               	movlb	0	; select bank0
  5150     09F4  00B1               	movwf	pad@p+1
  5151     09F5  0021               	movlb	1	; select bank1
  5152     09F6  0832               	movf	efgtoa@w^(0+128),w
  5153     09F7  0020               	movlb	0	; select bank0
  5154     09F8  00B0               	movwf	pad@p
  5155     09F9  0021               	movlb	1	; select bank1
  5156     09FA  082F               	movf	efgtoa@fp^(0+128),w
  5157     09FB  3190  201B  3188   	fcall	_pad
  5158     09FE  2FFF               	goto	l1131
  5159     09FF                     l4420:
  5160                           
  5161                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  5162     09FF  303F               	movlw	63
  5163     0A00  0021               	movlb	1	; select bank1
  5164     0A01  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5165     0A02  3080               	movlw	128
  5166     0A03  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5167     0A04  3000               	movlw	0
  5168     0A05  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5169     0A06  3000               	movlw	0
  5170     0A07  00C9               	movwf	efgtoa@u^(0+128)
  5171     0A08                     l4422:
  5172                           
  5173                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  5174     0A08  01B0               	clrf	efgtoa@e^(0+128)
  5175     0A09  01B1               	clrf	(efgtoa@e+1)^(0+128)
  5176     0A0A                     l4424:
  5177                           
  5178                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  5179     0A0A  0846               	movf	(efgtoa@g+3)^(0+128),w
  5180     0A0B  0020               	movlb	0	; select bank0
  5181     0A0C  00A3               	movwf	___fleq@ff1+3
  5182     0A0D  0021               	movlb	1	; select bank1
  5183     0A0E  0845               	movf	(efgtoa@g+2)^(0+128),w
  5184     0A0F  0020               	movlb	0	; select bank0
  5185     0A10  00A2               	movwf	___fleq@ff1+2
  5186     0A11  0021               	movlb	1	; select bank1
  5187     0A12  0844               	movf	(efgtoa@g+1)^(0+128),w
  5188     0A13  0020               	movlb	0	; select bank0
  5189     0A14  00A1               	movwf	___fleq@ff1+1
  5190     0A15  0021               	movlb	1	; select bank1
  5191     0A16  0843               	movf	efgtoa@g^(0+128),w
  5192     0A17  0020               	movlb	0	; select bank0
  5193     0A18  00A0               	movwf	___fleq@ff1
  5194     0A19  3000               	movlw	0
  5195     0A1A  00A7               	movwf	___fleq@ff2+3
  5196     0A1B  3000               	movlw	0
  5197     0A1C  00A6               	movwf	___fleq@ff2+2
  5198     0A1D  3000               	movlw	0
  5199     0A1E  00A5               	movwf	___fleq@ff2+1
  5200     0A1F  3000               	movlw	0
  5201     0A20  00A4               	movwf	___fleq@ff2
  5202     0A21  319C  2492  3188   	fcall	___fleq
  5203     0A24  1803               	btfsc	3,0
  5204     0A25  2A27               	goto	u5281
  5205     0A26  2A28               	goto	u5280
  5206     0A27                     u5281:
  5207     0A27  2B7C               	goto	l4450
  5208     0A28                     u5280:
  5209     0A28  2A36               	goto	l4430
  5210     0A29                     l4428:
  5211                           
  5212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  5213     0A29  0021               	movlb	1	; select bank1
  5214     0A2A  0837               	movf	(efgtoa@ou+3)^(0+128),w
  5215     0A2B  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5216     0A2C  0836               	movf	(efgtoa@ou+2)^(0+128),w
  5217     0A2D  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5218     0A2E  0835               	movf	(efgtoa@ou+1)^(0+128),w
  5219     0A2F  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5220     0A30  0834               	movf	efgtoa@ou^(0+128),w
  5221     0A31  00C9               	movwf	efgtoa@u^(0+128)
  5222                           
  5223                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  5224     0A32  3001               	movlw	1
  5225     0A33  07B0               	addwf	efgtoa@e^(0+128),f
  5226     0A34  3000               	movlw	0
  5227     0A35  3DB1               	addwfc	(efgtoa@e+1)^(0+128),f
  5228     0A36                     l4430:
  5229                           
  5230                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  5231     0A36  3041               	movlw	65
  5232     0A37  0020               	movlb	0	; select bank0
  5233     0A38  00AC               	movwf	___flmul@b+3
  5234     0A39  3020               	movlw	32
  5235     0A3A  00AB               	movwf	___flmul@b+2
  5236     0A3B  3000               	movlw	0
  5237     0A3C  00AA               	movwf	___flmul@b+1
  5238     0A3D  3000               	movlw	0
  5239     0A3E  00A9               	movwf	___flmul@b
  5240     0A3F  0021               	movlb	1	; select bank1
  5241     0A40  084C               	movf	(efgtoa@u+3)^(0+128),w
  5242     0A41  0020               	movlb	0	; select bank0
  5243     0A42  00B0               	movwf	___flmul@a+3
  5244     0A43  0021               	movlb	1	; select bank1
  5245     0A44  084B               	movf	(efgtoa@u+2)^(0+128),w
  5246     0A45  0020               	movlb	0	; select bank0
  5247     0A46  00AF               	movwf	___flmul@a+2
  5248     0A47  0021               	movlb	1	; select bank1
  5249     0A48  084A               	movf	(efgtoa@u+1)^(0+128),w
  5250     0A49  0020               	movlb	0	; select bank0
  5251     0A4A  00AE               	movwf	___flmul@a+1
  5252     0A4B  0021               	movlb	1	; select bank1
  5253     0A4C  0849               	movf	efgtoa@u^(0+128),w
  5254     0A4D  0020               	movlb	0	; select bank0
  5255     0A4E  00AD               	movwf	___flmul@a
  5256     0A4F  3182  2272  3188   	fcall	___flmul
  5257     0A52  0020               	movlb	0	; select bank0
  5258     0A53  082C               	movf	?___flmul+3,w
  5259     0A54  0021               	movlb	1	; select bank1
  5260     0A55  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  5261     0A56  0020               	movlb	0	; select bank0
  5262     0A57  082B               	movf	?___flmul+2,w
  5263     0A58  0021               	movlb	1	; select bank1
  5264     0A59  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  5265     0A5A  0020               	movlb	0	; select bank0
  5266     0A5B  082A               	movf	?___flmul+1,w
  5267     0A5C  0021               	movlb	1	; select bank1
  5268     0A5D  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  5269     0A5E  0020               	movlb	0	; select bank0
  5270     0A5F  0829               	movf	?___flmul,w
  5271     0A60  0021               	movlb	1	; select bank1
  5272     0A61  00B4               	movwf	efgtoa@ou^(0+128)
  5273     0A62                     l4432:
  5274     0A62  0834               	movf	efgtoa@ou^(0+128),w
  5275     0A63  0243               	subwf	efgtoa@g^(0+128),w
  5276     0A64  0020               	movlb	0	; select bank0
  5277     0A65  00E7               	movwf	??_efgtoa
  5278     0A66  0021               	movlb	1	; select bank1
  5279     0A67  0835               	movf	(efgtoa@ou+1)^(0+128),w
  5280     0A68  3B44               	subwfb	(efgtoa@g+1)^(0+128),w
  5281     0A69  0020               	movlb	0	; select bank0
  5282     0A6A  00E8               	movwf	??_efgtoa+1
  5283     0A6B  0021               	movlb	1	; select bank1
  5284     0A6C  0836               	movf	(efgtoa@ou+2)^(0+128),w
  5285     0A6D  3B45               	subwfb	(efgtoa@g+2)^(0+128),w
  5286     0A6E  0020               	movlb	0	; select bank0
  5287     0A6F  00E9               	movwf	??_efgtoa+2
  5288     0A70  0021               	movlb	1	; select bank1
  5289     0A71  0837               	movf	(efgtoa@ou+3)^(0+128),w
  5290     0A72  3B46               	subwfb	(efgtoa@g+3)^(0+128),w
  5291     0A73  0020               	movlb	0	; select bank0
  5292     0A74  00EA               	movwf	??_efgtoa+3
  5293     0A75  086A               	movf	??_efgtoa+3,w
  5294     0A76  00A3               	movwf	labs@a+3
  5295     0A77  0869               	movf	??_efgtoa+2,w
  5296     0A78  00A2               	movwf	labs@a+2
  5297     0A79  0868               	movf	??_efgtoa+1,w
  5298     0A7A  00A1               	movwf	labs@a+1
  5299     0A7B  0867               	movf	??_efgtoa,w
  5300     0A7C  00A0               	movwf	labs@a
  5301     0A7D  319A  2212  3188   	fcall	_labs
  5302     0A80  0020               	movlb	0	; select bank0
  5303     0A81  1BA3               	btfsc	?_labs+3,7
  5304     0A82  2A91               	goto	u5291
  5305     0A83  0823               	movf	?_labs+3,w
  5306     0A84  1D03               	btfss	3,2
  5307     0A85  2A92               	goto	u5290
  5308     0A86  0822               	movf	?_labs+2,w
  5309     0A87  1D03               	btfss	3,2
  5310     0A88  2A92               	goto	u5290
  5311     0A89  0821               	movf	?_labs+1,w
  5312     0A8A  1D03               	btfss	3,2
  5313     0A8B  2A92               	goto	u5290
  5314     0A8C  3002               	movlw	2
  5315     0A8D  0220               	subwf	?_labs,w
  5316     0A8E  1C03               	btfss	3,0
  5317     0A8F  2A91               	goto	u5291
  5318     0A90  2A92               	goto	u5290
  5319     0A91                     u5291:
  5320     0A91  2A29               	goto	l4428
  5321     0A92                     u5290:
  5322     0A92                     l4434:
  5323     0A92  0021               	movlb	1	; select bank1
  5324     0A93  0837               	movf	(efgtoa@ou+3)^(0+128),w
  5325     0A94  0020               	movlb	0	; select bank0
  5326     0A95  00C6               	movwf	___flge@ff1+3
  5327     0A96  0021               	movlb	1	; select bank1
  5328     0A97  0836               	movf	(efgtoa@ou+2)^(0+128),w
  5329     0A98  0020               	movlb	0	; select bank0
  5330     0A99  00C5               	movwf	___flge@ff1+2
  5331     0A9A  0021               	movlb	1	; select bank1
  5332     0A9B  0835               	movf	(efgtoa@ou+1)^(0+128),w
  5333     0A9C  0020               	movlb	0	; select bank0
  5334     0A9D  00C4               	movwf	___flge@ff1+1
  5335     0A9E  0021               	movlb	1	; select bank1
  5336     0A9F  0834               	movf	efgtoa@ou^(0+128),w
  5337     0AA0  0020               	movlb	0	; select bank0
  5338     0AA1  00C3               	movwf	___flge@ff1
  5339     0AA2  0021               	movlb	1	; select bank1
  5340     0AA3  0846               	movf	(efgtoa@g+3)^(0+128),w
  5341     0AA4  0020               	movlb	0	; select bank0
  5342     0AA5  00CA               	movwf	___flge@ff2+3
  5343     0AA6  0021               	movlb	1	; select bank1
  5344     0AA7  0845               	movf	(efgtoa@g+2)^(0+128),w
  5345     0AA8  0020               	movlb	0	; select bank0
  5346     0AA9  00C9               	movwf	___flge@ff2+2
  5347     0AAA  0021               	movlb	1	; select bank1
  5348     0AAB  0844               	movf	(efgtoa@g+1)^(0+128),w
  5349     0AAC  0020               	movlb	0	; select bank0
  5350     0AAD  00C8               	movwf	___flge@ff2+1
  5351     0AAE  0021               	movlb	1	; select bank1
  5352     0AAF  0843               	movf	efgtoa@g^(0+128),w
  5353     0AB0  0020               	movlb	0	; select bank0
  5354     0AB1  00C7               	movwf	___flge@ff2
  5355     0AB2  3190  20CA  3188   	fcall	___flge
  5356     0AB5  1C03               	btfss	3,0
  5357     0AB6  2AB8               	goto	u5301
  5358     0AB7  2AB9               	goto	u5300
  5359     0AB8                     u5301:
  5360     0AB8  2A29               	goto	l4428
  5361     0AB9                     u5300:
  5362     0AB9                     l4436:
  5363                           
  5364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  5365     0AB9  0021               	movlb	1	; select bank1
  5366     0ABA  0849               	movf	efgtoa@u^(0+128),w
  5367     0ABB  0243               	subwf	efgtoa@g^(0+128),w
  5368     0ABC  0020               	movlb	0	; select bank0
  5369     0ABD  00E7               	movwf	??_efgtoa
  5370     0ABE  0021               	movlb	1	; select bank1
  5371     0ABF  084A               	movf	(efgtoa@u+1)^(0+128),w
  5372     0AC0  3B44               	subwfb	(efgtoa@g+1)^(0+128),w
  5373     0AC1  0020               	movlb	0	; select bank0
  5374     0AC2  00E8               	movwf	??_efgtoa+1
  5375     0AC3  0021               	movlb	1	; select bank1
  5376     0AC4  084B               	movf	(efgtoa@u+2)^(0+128),w
  5377     0AC5  3B45               	subwfb	(efgtoa@g+2)^(0+128),w
  5378     0AC6  0020               	movlb	0	; select bank0
  5379     0AC7  00E9               	movwf	??_efgtoa+2
  5380     0AC8  0021               	movlb	1	; select bank1
  5381     0AC9  084C               	movf	(efgtoa@u+3)^(0+128),w
  5382     0ACA  3B46               	subwfb	(efgtoa@g+3)^(0+128),w
  5383     0ACB  0020               	movlb	0	; select bank0
  5384     0ACC  00EA               	movwf	??_efgtoa+3
  5385     0ACD  086A               	movf	??_efgtoa+3,w
  5386     0ACE  00A3               	movwf	labs@a+3
  5387     0ACF  0869               	movf	??_efgtoa+2,w
  5388     0AD0  00A2               	movwf	labs@a+2
  5389     0AD1  0868               	movf	??_efgtoa+1,w
  5390     0AD2  00A1               	movwf	labs@a+1
  5391     0AD3  0867               	movf	??_efgtoa,w
  5392     0AD4  00A0               	movwf	labs@a
  5393     0AD5  319A  2212  3188   	fcall	_labs
  5394     0AD8  0020               	movlb	0	; select bank0
  5395     0AD9  1BA3               	btfsc	?_labs+3,7
  5396     0ADA  2AEA               	goto	u5310
  5397     0ADB  0823               	movf	?_labs+3,w
  5398     0ADC  1D03               	btfss	3,2
  5399     0ADD  2AE9               	goto	u5311
  5400     0ADE  0822               	movf	?_labs+2,w
  5401     0ADF  1D03               	btfss	3,2
  5402     0AE0  2AE9               	goto	u5311
  5403     0AE1  0821               	movf	?_labs+1,w
  5404     0AE2  1D03               	btfss	3,2
  5405     0AE3  2AE9               	goto	u5311
  5406     0AE4  3002               	movlw	2
  5407     0AE5  0220               	subwf	?_labs,w
  5408     0AE6  1803               	btfsc	3,0
  5409     0AE7  2AE9               	goto	u5311
  5410     0AE8  2AEA               	goto	u5310
  5411     0AE9                     u5311:
  5412     0AE9  2B55               	goto	l4448
  5413     0AEA                     u5310:
  5414     0AEA                     l4438:
  5415                           
  5416                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  5417     0AEA  0021               	movlb	1	; select bank1
  5418     0AEB  084C               	movf	(efgtoa@u+3)^(0+128),w
  5419     0AEC  00C6               	movwf	(efgtoa@g+3)^(0+128)
  5420     0AED  084B               	movf	(efgtoa@u+2)^(0+128),w
  5421     0AEE  00C5               	movwf	(efgtoa@g+2)^(0+128)
  5422     0AEF  084A               	movf	(efgtoa@u+1)^(0+128),w
  5423     0AF0  00C4               	movwf	(efgtoa@g+1)^(0+128)
  5424     0AF1  0849               	movf	efgtoa@u^(0+128),w
  5425     0AF2  00C3               	movwf	efgtoa@g^(0+128)
  5426                           
  5427                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  5428     0AF3  2B7C               	goto	l4450
  5429     0AF4                     l4440:
  5430                           
  5431                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  5432     0AF4  3041               	movlw	65
  5433     0AF5  0020               	movlb	0	; select bank0
  5434     0AF6  00B7               	movwf	___fldiv@a+3
  5435     0AF7  3020               	movlw	32
  5436     0AF8  00B6               	movwf	___fldiv@a+2
  5437     0AF9  3000               	movlw	0
  5438     0AFA  00B5               	movwf	___fldiv@a+1
  5439     0AFB  3000               	movlw	0
  5440     0AFC  00B4               	movwf	___fldiv@a
  5441     0AFD  0021               	movlb	1	; select bank1
  5442     0AFE  084C               	movf	(efgtoa@u+3)^(0+128),w
  5443     0AFF  0020               	movlb	0	; select bank0
  5444     0B00  00BB               	movwf	___fldiv@b+3
  5445     0B01  0021               	movlb	1	; select bank1
  5446     0B02  084B               	movf	(efgtoa@u+2)^(0+128),w
  5447     0B03  0020               	movlb	0	; select bank0
  5448     0B04  00BA               	movwf	___fldiv@b+2
  5449     0B05  0021               	movlb	1	; select bank1
  5450     0B06  084A               	movf	(efgtoa@u+1)^(0+128),w
  5451     0B07  0020               	movlb	0	; select bank0
  5452     0B08  00B9               	movwf	___fldiv@b+1
  5453     0B09  0021               	movlb	1	; select bank1
  5454     0B0A  0849               	movf	efgtoa@u^(0+128),w
  5455     0B0B  0020               	movlb	0	; select bank0
  5456     0B0C  00B8               	movwf	___fldiv@b
  5457     0B0D  3194  247F  3188   	fcall	___fldiv
  5458     0B10  0020               	movlb	0	; select bank0
  5459     0B11  0837               	movf	?___fldiv+3,w
  5460     0B12  0021               	movlb	1	; select bank1
  5461     0B13  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5462     0B14  0020               	movlb	0	; select bank0
  5463     0B15  0836               	movf	?___fldiv+2,w
  5464     0B16  0021               	movlb	1	; select bank1
  5465     0B17  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5466     0B18  0020               	movlb	0	; select bank0
  5467     0B19  0835               	movf	?___fldiv+1,w
  5468     0B1A  0021               	movlb	1	; select bank1
  5469     0B1B  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5470     0B1C  0020               	movlb	0	; select bank0
  5471     0B1D  0834               	movf	?___fldiv,w
  5472     0B1E  0021               	movlb	1	; select bank1
  5473     0B1F  00C9               	movwf	efgtoa@u^(0+128)
  5474     0B20                     l4442:
  5475                           
  5476                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  5477     0B20  30FF               	movlw	255
  5478     0B21  07B0               	addwf	efgtoa@e^(0+128),f
  5479     0B22  30FF               	movlw	255
  5480     0B23  3DB1               	addwfc	(efgtoa@e+1)^(0+128),f
  5481     0B24                     l4444:
  5482                           
  5483                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  5484     0B24  0849               	movf	efgtoa@u^(0+128),w
  5485     0B25  0243               	subwf	efgtoa@g^(0+128),w
  5486     0B26  0020               	movlb	0	; select bank0
  5487     0B27  00E7               	movwf	??_efgtoa
  5488     0B28  0021               	movlb	1	; select bank1
  5489     0B29  084A               	movf	(efgtoa@u+1)^(0+128),w
  5490     0B2A  3B44               	subwfb	(efgtoa@g+1)^(0+128),w
  5491     0B2B  0020               	movlb	0	; select bank0
  5492     0B2C  00E8               	movwf	??_efgtoa+1
  5493     0B2D  0021               	movlb	1	; select bank1
  5494     0B2E  084B               	movf	(efgtoa@u+2)^(0+128),w
  5495     0B2F  3B45               	subwfb	(efgtoa@g+2)^(0+128),w
  5496     0B30  0020               	movlb	0	; select bank0
  5497     0B31  00E9               	movwf	??_efgtoa+2
  5498     0B32  0021               	movlb	1	; select bank1
  5499     0B33  084C               	movf	(efgtoa@u+3)^(0+128),w
  5500     0B34  3B46               	subwfb	(efgtoa@g+3)^(0+128),w
  5501     0B35  0020               	movlb	0	; select bank0
  5502     0B36  00EA               	movwf	??_efgtoa+3
  5503     0B37  086A               	movf	??_efgtoa+3,w
  5504     0B38  00A3               	movwf	labs@a+3
  5505     0B39  0869               	movf	??_efgtoa+2,w
  5506     0B3A  00A2               	movwf	labs@a+2
  5507     0B3B  0868               	movf	??_efgtoa+1,w
  5508     0B3C  00A1               	movwf	labs@a+1
  5509     0B3D  0867               	movf	??_efgtoa,w
  5510     0B3E  00A0               	movwf	labs@a
  5511     0B3F  319A  2212  3188   	fcall	_labs
  5512     0B42  0020               	movlb	0	; select bank0
  5513     0B43  1BA3               	btfsc	?_labs+3,7
  5514     0B44  2B54               	goto	u5320
  5515     0B45  0823               	movf	?_labs+3,w
  5516     0B46  1D03               	btfss	3,2
  5517     0B47  2B53               	goto	u5321
  5518     0B48  0822               	movf	?_labs+2,w
  5519     0B49  1D03               	btfss	3,2
  5520     0B4A  2B53               	goto	u5321
  5521     0B4B  0821               	movf	?_labs+1,w
  5522     0B4C  1D03               	btfss	3,2
  5523     0B4D  2B53               	goto	u5321
  5524     0B4E  3002               	movlw	2
  5525     0B4F  0220               	subwf	?_labs,w
  5526     0B50  1803               	btfsc	3,0
  5527     0B51  2B53               	goto	u5321
  5528     0B52  2B54               	goto	u5320
  5529     0B53                     u5321:
  5530     0B53  2B55               	goto	l4448
  5531     0B54                     u5320:
  5532     0B54  2AEA               	goto	l4438
  5533     0B55                     l4448:
  5534                           
  5535                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  5536     0B55  0021               	movlb	1	; select bank1
  5537     0B56  0846               	movf	(efgtoa@g+3)^(0+128),w
  5538     0B57  0020               	movlb	0	; select bank0
  5539     0B58  00C6               	movwf	___flge@ff1+3
  5540     0B59  0021               	movlb	1	; select bank1
  5541     0B5A  0845               	movf	(efgtoa@g+2)^(0+128),w
  5542     0B5B  0020               	movlb	0	; select bank0
  5543     0B5C  00C5               	movwf	___flge@ff1+2
  5544     0B5D  0021               	movlb	1	; select bank1
  5545     0B5E  0844               	movf	(efgtoa@g+1)^(0+128),w
  5546     0B5F  0020               	movlb	0	; select bank0
  5547     0B60  00C4               	movwf	___flge@ff1+1
  5548     0B61  0021               	movlb	1	; select bank1
  5549     0B62  0843               	movf	efgtoa@g^(0+128),w
  5550     0B63  0020               	movlb	0	; select bank0
  5551     0B64  00C3               	movwf	___flge@ff1
  5552     0B65  0021               	movlb	1	; select bank1
  5553     0B66  084C               	movf	(efgtoa@u+3)^(0+128),w
  5554     0B67  0020               	movlb	0	; select bank0
  5555     0B68  00CA               	movwf	___flge@ff2+3
  5556     0B69  0021               	movlb	1	; select bank1
  5557     0B6A  084B               	movf	(efgtoa@u+2)^(0+128),w
  5558     0B6B  0020               	movlb	0	; select bank0
  5559     0B6C  00C9               	movwf	___flge@ff2+2
  5560     0B6D  0021               	movlb	1	; select bank1
  5561     0B6E  084A               	movf	(efgtoa@u+1)^(0+128),w
  5562     0B6F  0020               	movlb	0	; select bank0
  5563     0B70  00C8               	movwf	___flge@ff2+1
  5564     0B71  0021               	movlb	1	; select bank1
  5565     0B72  0849               	movf	efgtoa@u^(0+128),w
  5566     0B73  0020               	movlb	0	; select bank0
  5567     0B74  00C7               	movwf	___flge@ff2
  5568     0B75  3190  20CA  3188   	fcall	___flge
  5569     0B78  1C03               	btfss	3,0
  5570     0B79  2B7B               	goto	u5331
  5571     0B7A  2B7C               	goto	u5330
  5572     0B7B                     u5331:
  5573     0B7B  2AF4               	goto	l4440
  5574     0B7C                     u5330:
  5575     0B7C                     l4450:
  5576                           
  5577                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  5578     0B7C  0020               	movlb	0	; select bank0
  5579     0B7D  0866               	movf	efgtoa@c,w
  5580     0B7E  0021               	movlb	1	; select bank1
  5581     0B7F  00A9               	movwf	efgtoa@mode^(0+128)
  5582                           
  5583                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  5584     0B80  0829               	movf	efgtoa@mode^(0+128),w
  5585     0B81  00AA               	movwf	efgtoa@nmode^(0+128)
  5586     0B82                     l4452:
  5587                           
  5588                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  5589     0B82  1BEE               	btfsc	(_prec+1)^(0+128),7
  5590     0B83  2B85               	goto	u5341
  5591     0B84  2B86               	goto	u5340
  5592     0B85                     u5341:
  5593     0B85  2B8B               	goto	l4456
  5594     0B86                     u5340:
  5595     0B86                     l4454:
  5596     0B86  086E               	movf	(_prec+1)^(0+128),w
  5597     0B87  00A3               	movwf	(efgtoa@p+1)^(0+128)
  5598     0B88  086D               	movf	_prec^(0+128),w
  5599     0B89  00A2               	movwf	efgtoa@p^(0+128)
  5600     0B8A  2B8F               	goto	l1147
  5601     0B8B                     l4456:
  5602     0B8B  3006               	movlw	6
  5603     0B8C  00A2               	movwf	efgtoa@p^(0+128)
  5604     0B8D  3000               	movlw	0
  5605     0B8E  00A3               	movwf	(efgtoa@p^(0+128)+1)
  5606     0B8F                     l1147:
  5607                           
  5608                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  5609     0B8F  0823               	movf	(efgtoa@p+1)^(0+128),w
  5610     0B90  00AE               	movwf	(efgtoa@m+1)^(0+128)
  5611     0B91  0822               	movf	efgtoa@p^(0+128),w
  5612     0B92  00AD               	movwf	efgtoa@m^(0+128)
  5613                           
  5614                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  5615     0B93  3001               	movlw	1
  5616     0B94  07AD               	addwf	efgtoa@m^(0+128),f
  5617     0B95  3000               	movlw	0
  5618     0B96  3DAE               	addwfc	(efgtoa@m+1)^(0+128),f
  5619     0B97                     l4458:
  5620                           
  5621                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  5622     0B97  3066               	movlw	102
  5623     0B98  062A               	xorwf	efgtoa@nmode^(0+128),w
  5624     0B99  1D03               	btfss	3,2
  5625     0B9A  2B9C               	goto	u5351
  5626     0B9B  2B9D               	goto	u5350
  5627     0B9C                     u5351:
  5628     0B9C  2BB5               	goto	l4470
  5629     0B9D                     u5350:
  5630     0B9D                     l4460:
  5631                           
  5632                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  5633     0B9D  1FB1               	btfss	(efgtoa@e+1)^(0+128),7
  5634     0B9E  2BA0               	goto	u5361
  5635     0B9F  2BA1               	goto	u5360
  5636     0BA0                     u5361:
  5637     0BA0  2BAB               	goto	l4466
  5638     0BA1                     u5360:
  5639     0BA1                     l4462:
  5640                           
  5641                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  5642     0BA1  303F               	movlw	63
  5643     0BA2  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5644     0BA3  3080               	movlw	128
  5645     0BA4  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5646     0BA5  3000               	movlw	0
  5647     0BA6  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5648     0BA7  3000               	movlw	0
  5649     0BA8  00C9               	movwf	efgtoa@u^(0+128)
  5650     0BA9                     l4464:
  5651                           
  5652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  5653     0BA9  01B0               	clrf	efgtoa@e^(0+128)
  5654     0BAA  01B1               	clrf	(efgtoa@e+1)^(0+128)
  5655     0BAB                     l4466:
  5656                           
  5657                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  5658     0BAB  3067               	movlw	103
  5659     0BAC  0629               	xorwf	efgtoa@mode^(0+128),w
  5660     0BAD  1903               	btfsc	3,2
  5661     0BAE  2BB0               	goto	u5371
  5662     0BAF  2BB1               	goto	u5370
  5663     0BB0                     u5371:
  5664     0BB0  2BB5               	goto	l4470
  5665     0BB1                     u5370:
  5666     0BB1                     l4468:
  5667                           
  5668                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  5669     0BB1  0830               	movf	efgtoa@e^(0+128),w
  5670     0BB2  07AD               	addwf	efgtoa@m^(0+128),f
  5671     0BB3  0831               	movf	(efgtoa@e+1)^(0+128),w
  5672     0BB4  3DAE               	addwfc	(efgtoa@m+1)^(0+128),f
  5673     0BB5                     l4470:
  5674                           
  5675                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  5676     0BB5  01C0               	clrf	efgtoa@i^(0+128)
  5677     0BB6  01C1               	clrf	(efgtoa@i+1)^(0+128)
  5678     0BB7                     l4472:
  5679                           
  5680                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  5681     0BB7  0846               	movf	(efgtoa@g+3)^(0+128),w
  5682     0BB8  00BB               	movwf	(efgtoa@h+3)^(0+128)
  5683     0BB9  0845               	movf	(efgtoa@g+2)^(0+128),w
  5684     0BBA  00BA               	movwf	(efgtoa@h+2)^(0+128)
  5685     0BBB  0844               	movf	(efgtoa@g+1)^(0+128),w
  5686     0BBC  00B9               	movwf	(efgtoa@h+1)^(0+128)
  5687     0BBD  0843               	movf	efgtoa@g^(0+128),w
  5688     0BBE  00B8               	movwf	efgtoa@h^(0+128)
  5689     0BBF                     l4474:
  5690                           
  5691                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  5692     0BBF  084C               	movf	(efgtoa@u+3)^(0+128),w
  5693     0BC0  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  5694     0BC1  084B               	movf	(efgtoa@u+2)^(0+128),w
  5695     0BC2  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  5696     0BC3  084A               	movf	(efgtoa@u+1)^(0+128),w
  5697     0BC4  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  5698     0BC5  0849               	movf	efgtoa@u^(0+128),w
  5699     0BC6  00B4               	movwf	efgtoa@ou^(0+128)
  5700                           
  5701                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  5702     0BC7  2C9F               	goto	l4480
  5703     0BC8                     l4476:
  5704                           
  5705                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  5706     0BC8  0021               	movlb	1	; select bank1
  5707     0BC9  084C               	movf	(efgtoa@u+3)^(0+128),w
  5708     0BCA  0020               	movlb	0	; select bank0
  5709     0BCB  00B7               	movwf	___fldiv@a+3
  5710     0BCC  0021               	movlb	1	; select bank1
  5711     0BCD  084B               	movf	(efgtoa@u+2)^(0+128),w
  5712     0BCE  0020               	movlb	0	; select bank0
  5713     0BCF  00B6               	movwf	___fldiv@a+2
  5714     0BD0  0021               	movlb	1	; select bank1
  5715     0BD1  084A               	movf	(efgtoa@u+1)^(0+128),w
  5716     0BD2  0020               	movlb	0	; select bank0
  5717     0BD3  00B5               	movwf	___fldiv@a+1
  5718     0BD4  0021               	movlb	1	; select bank1
  5719     0BD5  0849               	movf	efgtoa@u^(0+128),w
  5720     0BD6  0020               	movlb	0	; select bank0
  5721     0BD7  00B4               	movwf	___fldiv@a
  5722     0BD8  0021               	movlb	1	; select bank1
  5723     0BD9  083B               	movf	(efgtoa@h+3)^(0+128),w
  5724     0BDA  0020               	movlb	0	; select bank0
  5725     0BDB  00BB               	movwf	___fldiv@b+3
  5726     0BDC  0021               	movlb	1	; select bank1
  5727     0BDD  083A               	movf	(efgtoa@h+2)^(0+128),w
  5728     0BDE  0020               	movlb	0	; select bank0
  5729     0BDF  00BA               	movwf	___fldiv@b+2
  5730     0BE0  0021               	movlb	1	; select bank1
  5731     0BE1  0839               	movf	(efgtoa@h+1)^(0+128),w
  5732     0BE2  0020               	movlb	0	; select bank0
  5733     0BE3  00B9               	movwf	___fldiv@b+1
  5734     0BE4  0021               	movlb	1	; select bank1
  5735     0BE5  0838               	movf	efgtoa@h^(0+128),w
  5736     0BE6  0020               	movlb	0	; select bank0
  5737     0BE7  00B8               	movwf	___fldiv@b
  5738     0BE8  3194  247F  3188   	fcall	___fldiv
  5739     0BEB  0020               	movlb	0	; select bank0
  5740     0BEC  0837               	movf	?___fldiv+3,w
  5741     0BED  00D1               	movwf	floorf@x+3
  5742     0BEE  0836               	movf	?___fldiv+2,w
  5743     0BEF  00D0               	movwf	floorf@x+2
  5744     0BF0  0835               	movf	?___fldiv+1,w
  5745     0BF1  00CF               	movwf	floorf@x+1
  5746     0BF2  0834               	movf	?___fldiv,w
  5747     0BF3  00CE               	movwf	floorf@x
  5748     0BF4  3188  2005  3188   	fcall	_floorf
  5749     0BF7  0020               	movlb	0	; select bank0
  5750     0BF8  0851               	movf	?_floorf+3,w
  5751     0BF9  0021               	movlb	1	; select bank1
  5752     0BFA  00BF               	movwf	(efgtoa@l+3)^(0+128)
  5753     0BFB  0020               	movlb	0	; select bank0
  5754     0BFC  0850               	movf	?_floorf+2,w
  5755     0BFD  0021               	movlb	1	; select bank1
  5756     0BFE  00BE               	movwf	(efgtoa@l+2)^(0+128)
  5757     0BFF  0020               	movlb	0	; select bank0
  5758     0C00  084F               	movf	?_floorf+1,w
  5759     0C01  0021               	movlb	1	; select bank1
  5760     0C02  00BD               	movwf	(efgtoa@l+1)^(0+128)
  5761     0C03  0020               	movlb	0	; select bank0
  5762     0C04  084E               	movf	?_floorf,w
  5763     0C05  0021               	movlb	1	; select bank1
  5764     0C06  00BC               	movwf	efgtoa@l^(0+128)
  5765                           
  5766                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  5767     0C07  083F               	movf	(efgtoa@l+3)^(0+128),w
  5768     0C08  0020               	movlb	0	; select bank0
  5769     0C09  00A3               	movwf	___fltol@f1+3
  5770     0C0A  0021               	movlb	1	; select bank1
  5771     0C0B  083E               	movf	(efgtoa@l+2)^(0+128),w
  5772     0C0C  0020               	movlb	0	; select bank0
  5773     0C0D  00A2               	movwf	___fltol@f1+2
  5774     0C0E  0021               	movlb	1	; select bank1
  5775     0C0F  083D               	movf	(efgtoa@l+1)^(0+128),w
  5776     0C10  0020               	movlb	0	; select bank0
  5777     0C11  00A1               	movwf	___fltol@f1+1
  5778     0C12  0021               	movlb	1	; select bank1
  5779     0C13  083C               	movf	efgtoa@l^(0+128),w
  5780     0C14  0020               	movlb	0	; select bank0
  5781     0C15  00A0               	movwf	___fltol@f1
  5782     0C16  319E  26A0  3188   	fcall	___fltol
  5783     0C19  0020               	movlb	0	; select bank0
  5784     0C1A  0821               	movf	?___fltol+1,w
  5785     0C1B  0021               	movlb	1	; select bank1
  5786     0C1C  00AC               	movwf	(efgtoa@d+1)^(0+128)
  5787     0C1D  0020               	movlb	0	; select bank0
  5788     0C1E  0820               	movf	?___fltol,w
  5789     0C1F  0021               	movlb	1	; select bank1
  5790     0C20  00AB               	movwf	efgtoa@d^(0+128)
  5791                           
  5792                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  5793     0C21  084C               	movf	(efgtoa@u+3)^(0+128),w
  5794     0C22  0020               	movlb	0	; select bank0
  5795     0C23  00B0               	movwf	___flmul@a+3
  5796     0C24  0021               	movlb	1	; select bank1
  5797     0C25  084B               	movf	(efgtoa@u+2)^(0+128),w
  5798     0C26  0020               	movlb	0	; select bank0
  5799     0C27  00AF               	movwf	___flmul@a+2
  5800     0C28  0021               	movlb	1	; select bank1
  5801     0C29  084A               	movf	(efgtoa@u+1)^(0+128),w
  5802     0C2A  0020               	movlb	0	; select bank0
  5803     0C2B  00AE               	movwf	___flmul@a+1
  5804     0C2C  0021               	movlb	1	; select bank1
  5805     0C2D  0849               	movf	efgtoa@u^(0+128),w
  5806     0C2E  0020               	movlb	0	; select bank0
  5807     0C2F  00AD               	movwf	___flmul@a
  5808     0C30  0021               	movlb	1	; select bank1
  5809     0C31  083F               	movf	(efgtoa@l+3)^(0+128),w
  5810     0C32  0020               	movlb	0	; select bank0
  5811     0C33  00AC               	movwf	___flmul@b+3
  5812     0C34  0021               	movlb	1	; select bank1
  5813     0C35  083E               	movf	(efgtoa@l+2)^(0+128),w
  5814     0C36  0020               	movlb	0	; select bank0
  5815     0C37  00AB               	movwf	___flmul@b+2
  5816     0C38  0021               	movlb	1	; select bank1
  5817     0C39  083D               	movf	(efgtoa@l+1)^(0+128),w
  5818     0C3A  0020               	movlb	0	; select bank0
  5819     0C3B  00AA               	movwf	___flmul@b+1
  5820     0C3C  0021               	movlb	1	; select bank1
  5821     0C3D  083C               	movf	efgtoa@l^(0+128),w
  5822     0C3E  0020               	movlb	0	; select bank0
  5823     0C3F  00A9               	movwf	___flmul@b
  5824     0C40  3182  2272  3188   	fcall	___flmul
  5825     0C43  0020               	movlb	0	; select bank0
  5826     0C44  082C               	movf	?___flmul+3,w
  5827     0C45  00C6               	movwf	___flsub@a+3
  5828     0C46  082B               	movf	?___flmul+2,w
  5829     0C47  00C5               	movwf	___flsub@a+2
  5830     0C48  082A               	movf	?___flmul+1,w
  5831     0C49  00C4               	movwf	___flsub@a+1
  5832     0C4A  0829               	movf	?___flmul,w
  5833     0C4B  00C3               	movwf	___flsub@a
  5834     0C4C  0021               	movlb	1	; select bank1
  5835     0C4D  083B               	movf	(efgtoa@h+3)^(0+128),w
  5836     0C4E  0020               	movlb	0	; select bank0
  5837     0C4F  00CA               	movwf	___flsub@b+3
  5838     0C50  0021               	movlb	1	; select bank1
  5839     0C51  083A               	movf	(efgtoa@h+2)^(0+128),w
  5840     0C52  0020               	movlb	0	; select bank0
  5841     0C53  00C9               	movwf	___flsub@b+2
  5842     0C54  0021               	movlb	1	; select bank1
  5843     0C55  0839               	movf	(efgtoa@h+1)^(0+128),w
  5844     0C56  0020               	movlb	0	; select bank0
  5845     0C57  00C8               	movwf	___flsub@b+1
  5846     0C58  0021               	movlb	1	; select bank1
  5847     0C59  0838               	movf	efgtoa@h^(0+128),w
  5848     0C5A  0020               	movlb	0	; select bank0
  5849     0C5B  00C7               	movwf	___flsub@b
  5850     0C5C  319A  22EE  3188   	fcall	___flsub
  5851     0C5F  0020               	movlb	0	; select bank0
  5852     0C60  0846               	movf	?___flsub+3,w
  5853     0C61  0021               	movlb	1	; select bank1
  5854     0C62  00BB               	movwf	(efgtoa@h+3)^(0+128)
  5855     0C63  0020               	movlb	0	; select bank0
  5856     0C64  0845               	movf	?___flsub+2,w
  5857     0C65  0021               	movlb	1	; select bank1
  5858     0C66  00BA               	movwf	(efgtoa@h+2)^(0+128)
  5859     0C67  0020               	movlb	0	; select bank0
  5860     0C68  0844               	movf	?___flsub+1,w
  5861     0C69  0021               	movlb	1	; select bank1
  5862     0C6A  00B9               	movwf	(efgtoa@h+1)^(0+128)
  5863     0C6B  0020               	movlb	0	; select bank0
  5864     0C6C  0843               	movf	?___flsub,w
  5865     0C6D  0021               	movlb	1	; select bank1
  5866     0C6E  00B8               	movwf	efgtoa@h^(0+128)
  5867                           
  5868                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  5869     0C6F  3041               	movlw	65
  5870     0C70  0020               	movlb	0	; select bank0
  5871     0C71  00B7               	movwf	___fldiv@a+3
  5872     0C72  3020               	movlw	32
  5873     0C73  00B6               	movwf	___fldiv@a+2
  5874     0C74  3000               	movlw	0
  5875     0C75  00B5               	movwf	___fldiv@a+1
  5876     0C76  3000               	movlw	0
  5877     0C77  00B4               	movwf	___fldiv@a
  5878     0C78  0021               	movlb	1	; select bank1
  5879     0C79  084C               	movf	(efgtoa@u+3)^(0+128),w
  5880     0C7A  0020               	movlb	0	; select bank0
  5881     0C7B  00BB               	movwf	___fldiv@b+3
  5882     0C7C  0021               	movlb	1	; select bank1
  5883     0C7D  084B               	movf	(efgtoa@u+2)^(0+128),w
  5884     0C7E  0020               	movlb	0	; select bank0
  5885     0C7F  00BA               	movwf	___fldiv@b+2
  5886     0C80  0021               	movlb	1	; select bank1
  5887     0C81  084A               	movf	(efgtoa@u+1)^(0+128),w
  5888     0C82  0020               	movlb	0	; select bank0
  5889     0C83  00B9               	movwf	___fldiv@b+1
  5890     0C84  0021               	movlb	1	; select bank1
  5891     0C85  0849               	movf	efgtoa@u^(0+128),w
  5892     0C86  0020               	movlb	0	; select bank0
  5893     0C87  00B8               	movwf	___fldiv@b
  5894     0C88  3194  247F  3188   	fcall	___fldiv
  5895     0C8B  0020               	movlb	0	; select bank0
  5896     0C8C  0837               	movf	?___fldiv+3,w
  5897     0C8D  0021               	movlb	1	; select bank1
  5898     0C8E  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5899     0C8F  0020               	movlb	0	; select bank0
  5900     0C90  0836               	movf	?___fldiv+2,w
  5901     0C91  0021               	movlb	1	; select bank1
  5902     0C92  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5903     0C93  0020               	movlb	0	; select bank0
  5904     0C94  0835               	movf	?___fldiv+1,w
  5905     0C95  0021               	movlb	1	; select bank1
  5906     0C96  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5907     0C97  0020               	movlb	0	; select bank0
  5908     0C98  0834               	movf	?___fldiv,w
  5909     0C99  0021               	movlb	1	; select bank1
  5910     0C9A  00C9               	movwf	efgtoa@u^(0+128)
  5911     0C9B                     l4478:
  5912                           
  5913                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  5914     0C9B  3001               	movlw	1
  5915     0C9C  07C0               	addwf	efgtoa@i^(0+128),f
  5916     0C9D  3000               	movlw	0
  5917     0C9E  3DC1               	addwfc	(efgtoa@i+1)^(0+128),f
  5918     0C9F                     l4480:
  5919                           
  5920                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  5921     0C9F  0841               	movf	(efgtoa@i+1)^(0+128),w
  5922     0CA0  3A80               	xorlw	128
  5923     0CA1  0020               	movlb	0	; select bank0
  5924     0CA2  00E7               	movwf	??_efgtoa
  5925     0CA3  0021               	movlb	1	; select bank1
  5926     0CA4  082E               	movf	(efgtoa@m+1)^(0+128),w
  5927     0CA5  3A80               	xorlw	128
  5928     0CA6  0020               	movlb	0	; select bank0
  5929     0CA7  0267               	subwf	??_efgtoa,w
  5930     0CA8  1D03               	skipz
  5931     0CA9  2CAD               	goto	u5385
  5932     0CAA  0021               	movlb	1	; select bank1
  5933     0CAB  082D               	movf	efgtoa@m^(0+128),w
  5934     0CAC  0240               	subwf	efgtoa@i^(0+128),w
  5935     0CAD                     u5385:
  5936     0CAD  1C03               	skipc
  5937     0CAE  2CB0               	goto	u5381
  5938     0CAF  2CB1               	goto	u5380
  5939     0CB0                     u5381:
  5940     0CB0  2BC8               	goto	l4476
  5941     0CB1                     u5380:
  5942     0CB1                     l4482:
  5943                           
  5944                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  5945     0CB1  3040               	movlw	64
  5946     0CB2  0020               	movlb	0	; select bank0
  5947     0CB3  00AC               	movwf	___flmul@b+3
  5948     0CB4  30A0               	movlw	160
  5949     0CB5  00AB               	movwf	___flmul@b+2
  5950     0CB6  3000               	movlw	0
  5951     0CB7  00AA               	movwf	___flmul@b+1
  5952     0CB8  3000               	movlw	0
  5953     0CB9  00A9               	movwf	___flmul@b
  5954     0CBA  0021               	movlb	1	; select bank1
  5955     0CBB  084C               	movf	(efgtoa@u+3)^(0+128),w
  5956     0CBC  0020               	movlb	0	; select bank0
  5957     0CBD  00B0               	movwf	___flmul@a+3
  5958     0CBE  0021               	movlb	1	; select bank1
  5959     0CBF  084B               	movf	(efgtoa@u+2)^(0+128),w
  5960     0CC0  0020               	movlb	0	; select bank0
  5961     0CC1  00AF               	movwf	___flmul@a+2
  5962     0CC2  0021               	movlb	1	; select bank1
  5963     0CC3  084A               	movf	(efgtoa@u+1)^(0+128),w
  5964     0CC4  0020               	movlb	0	; select bank0
  5965     0CC5  00AE               	movwf	___flmul@a+1
  5966     0CC6  0021               	movlb	1	; select bank1
  5967     0CC7  0849               	movf	efgtoa@u^(0+128),w
  5968     0CC8  0020               	movlb	0	; select bank0
  5969     0CC9  00AD               	movwf	___flmul@a
  5970     0CCA  3182  2272  3188   	fcall	___flmul
  5971     0CCD  0020               	movlb	0	; select bank0
  5972     0CCE  082C               	movf	?___flmul+3,w
  5973     0CCF  0021               	movlb	1	; select bank1
  5974     0CD0  00BF               	movwf	(efgtoa@l+3)^(0+128)
  5975     0CD1  0020               	movlb	0	; select bank0
  5976     0CD2  082B               	movf	?___flmul+2,w
  5977     0CD3  0021               	movlb	1	; select bank1
  5978     0CD4  00BE               	movwf	(efgtoa@l+2)^(0+128)
  5979     0CD5  0020               	movlb	0	; select bank0
  5980     0CD6  082A               	movf	?___flmul+1,w
  5981     0CD7  0021               	movlb	1	; select bank1
  5982     0CD8  00BD               	movwf	(efgtoa@l+1)^(0+128)
  5983     0CD9  0020               	movlb	0	; select bank0
  5984     0CDA  0829               	movf	?___flmul,w
  5985     0CDB  0021               	movlb	1	; select bank1
  5986     0CDC  00BC               	movwf	efgtoa@l^(0+128)
  5987                           
  5988                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  5989     0CDD  083B               	movf	(efgtoa@h+3)^(0+128),w
  5990     0CDE  0020               	movlb	0	; select bank0
  5991     0CDF  00C6               	movwf	___flge@ff1+3
  5992     0CE0  0021               	movlb	1	; select bank1
  5993     0CE1  083A               	movf	(efgtoa@h+2)^(0+128),w
  5994     0CE2  0020               	movlb	0	; select bank0
  5995     0CE3  00C5               	movwf	___flge@ff1+2
  5996     0CE4  0021               	movlb	1	; select bank1
  5997     0CE5  0839               	movf	(efgtoa@h+1)^(0+128),w
  5998     0CE6  0020               	movlb	0	; select bank0
  5999     0CE7  00C4               	movwf	___flge@ff1+1
  6000     0CE8  0021               	movlb	1	; select bank1
  6001     0CE9  0838               	movf	efgtoa@h^(0+128),w
  6002     0CEA  0020               	movlb	0	; select bank0
  6003     0CEB  00C3               	movwf	___flge@ff1
  6004     0CEC  0021               	movlb	1	; select bank1
  6005     0CED  083F               	movf	(efgtoa@l+3)^(0+128),w
  6006     0CEE  0020               	movlb	0	; select bank0
  6007     0CEF  00CA               	movwf	___flge@ff2+3
  6008     0CF0  0021               	movlb	1	; select bank1
  6009     0CF1  083E               	movf	(efgtoa@l+2)^(0+128),w
  6010     0CF2  0020               	movlb	0	; select bank0
  6011     0CF3  00C9               	movwf	___flge@ff2+2
  6012     0CF4  0021               	movlb	1	; select bank1
  6013     0CF5  083D               	movf	(efgtoa@l+1)^(0+128),w
  6014     0CF6  0020               	movlb	0	; select bank0
  6015     0CF7  00C8               	movwf	___flge@ff2+1
  6016     0CF8  0021               	movlb	1	; select bank1
  6017     0CF9  083C               	movf	efgtoa@l^(0+128),w
  6018     0CFA  0020               	movlb	0	; select bank0
  6019     0CFB  00C7               	movwf	___flge@ff2
  6020     0CFC  3190  20CA  3188   	fcall	___flge
  6021     0CFF  1803               	btfsc	3,0
  6022     0D00  2D02               	goto	u5391
  6023     0D01  2D03               	goto	u5390
  6024     0D02                     u5391:
  6025     0D02  2D0D               	goto	l4486
  6026     0D03                     u5390:
  6027     0D03                     l4484:
  6028                           
  6029                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  6030     0D03  3000               	movlw	0
  6031     0D04  0021               	movlb	1	; select bank1
  6032     0D05  00BF               	movwf	(efgtoa@l+3)^(0+128)
  6033     0D06  3000               	movlw	0
  6034     0D07  00BE               	movwf	(efgtoa@l+2)^(0+128)
  6035     0D08  3000               	movlw	0
  6036     0D09  00BD               	movwf	(efgtoa@l+1)^(0+128)
  6037     0D0A  3000               	movlw	0
  6038     0D0B  00BC               	movwf	efgtoa@l^(0+128)
  6039                           
  6040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  6041     0D0C  2D41               	goto	l4492
  6042     0D0D                     l4486:
  6043                           
  6044                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  6045     0D0D  0021               	movlb	1	; select bank1
  6046     0D0E  083B               	movf	(efgtoa@h+3)^(0+128),w
  6047     0D0F  0020               	movlb	0	; select bank0
  6048     0D10  00A3               	movwf	___fleq@ff1+3
  6049     0D11  0021               	movlb	1	; select bank1
  6050     0D12  083A               	movf	(efgtoa@h+2)^(0+128),w
  6051     0D13  0020               	movlb	0	; select bank0
  6052     0D14  00A2               	movwf	___fleq@ff1+2
  6053     0D15  0021               	movlb	1	; select bank1
  6054     0D16  0839               	movf	(efgtoa@h+1)^(0+128),w
  6055     0D17  0020               	movlb	0	; select bank0
  6056     0D18  00A1               	movwf	___fleq@ff1+1
  6057     0D19  0021               	movlb	1	; select bank1
  6058     0D1A  0838               	movf	efgtoa@h^(0+128),w
  6059     0D1B  0020               	movlb	0	; select bank0
  6060     0D1C  00A0               	movwf	___fleq@ff1
  6061     0D1D  0021               	movlb	1	; select bank1
  6062     0D1E  083F               	movf	(efgtoa@l+3)^(0+128),w
  6063     0D1F  0020               	movlb	0	; select bank0
  6064     0D20  00A7               	movwf	___fleq@ff2+3
  6065     0D21  0021               	movlb	1	; select bank1
  6066     0D22  083E               	movf	(efgtoa@l+2)^(0+128),w
  6067     0D23  0020               	movlb	0	; select bank0
  6068     0D24  00A6               	movwf	___fleq@ff2+2
  6069     0D25  0021               	movlb	1	; select bank1
  6070     0D26  083D               	movf	(efgtoa@l+1)^(0+128),w
  6071     0D27  0020               	movlb	0	; select bank0
  6072     0D28  00A5               	movwf	___fleq@ff2+1
  6073     0D29  0021               	movlb	1	; select bank1
  6074     0D2A  083C               	movf	efgtoa@l^(0+128),w
  6075     0D2B  0020               	movlb	0	; select bank0
  6076     0D2C  00A4               	movwf	___fleq@ff2
  6077     0D2D  319C  2492  3188   	fcall	___fleq
  6078     0D30  1C03               	btfss	3,0
  6079     0D31  2D33               	goto	u5401
  6080     0D32  2D34               	goto	u5400
  6081     0D33                     u5401:
  6082     0D33  2D41               	goto	l4492
  6083     0D34                     u5400:
  6084     0D34                     l4488:
  6085     0D34  0021               	movlb	1	; select bank1
  6086     0D35  182B               	btfsc	efgtoa@d^(0+128),0
  6087     0D36  2D38               	goto	u5411
  6088     0D37  2D39               	goto	u5410
  6089     0D38                     u5411:
  6090     0D38  2D41               	goto	l4492
  6091     0D39                     u5410:
  6092     0D39                     l4490:
  6093                           
  6094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  6095     0D39  3000               	movlw	0
  6096     0D3A  00BF               	movwf	(efgtoa@l+3)^(0+128)
  6097     0D3B  3000               	movlw	0
  6098     0D3C  00BE               	movwf	(efgtoa@l+2)^(0+128)
  6099     0D3D  3000               	movlw	0
  6100     0D3E  00BD               	movwf	(efgtoa@l+1)^(0+128)
  6101     0D3F  3000               	movlw	0
  6102     0D40  00BC               	movwf	efgtoa@l^(0+128)
  6103     0D41                     l4492:
  6104                           
  6105                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  6106     0D41  0021               	movlb	1	; select bank1
  6107     0D42  083F               	movf	(efgtoa@l+3)^(0+128),w
  6108     0D43  0020               	movlb	0	; select bank0
  6109     0D44  00A3               	movwf	___fladd@b+3
  6110     0D45  0021               	movlb	1	; select bank1
  6111     0D46  083E               	movf	(efgtoa@l+2)^(0+128),w
  6112     0D47  0020               	movlb	0	; select bank0
  6113     0D48  00A2               	movwf	___fladd@b+2
  6114     0D49  0021               	movlb	1	; select bank1
  6115     0D4A  083D               	movf	(efgtoa@l+1)^(0+128),w
  6116     0D4B  0020               	movlb	0	; select bank0
  6117     0D4C  00A1               	movwf	___fladd@b+1
  6118     0D4D  0021               	movlb	1	; select bank1
  6119     0D4E  083C               	movf	efgtoa@l^(0+128),w
  6120     0D4F  0020               	movlb	0	; select bank0
  6121     0D50  00A0               	movwf	___fladd@b
  6122     0D51  0021               	movlb	1	; select bank1
  6123     0D52  0846               	movf	(efgtoa@g+3)^(0+128),w
  6124     0D53  0020               	movlb	0	; select bank0
  6125     0D54  00A7               	movwf	___fladd@a+3
  6126     0D55  0021               	movlb	1	; select bank1
  6127     0D56  0845               	movf	(efgtoa@g+2)^(0+128),w
  6128     0D57  0020               	movlb	0	; select bank0
  6129     0D58  00A6               	movwf	___fladd@a+2
  6130     0D59  0021               	movlb	1	; select bank1
  6131     0D5A  0844               	movf	(efgtoa@g+1)^(0+128),w
  6132     0D5B  0020               	movlb	0	; select bank0
  6133     0D5C  00A5               	movwf	___fladd@a+1
  6134     0D5D  0021               	movlb	1	; select bank1
  6135     0D5E  0843               	movf	efgtoa@g^(0+128),w
  6136     0D5F  0020               	movlb	0	; select bank0
  6137     0D60  00A4               	movwf	___fladd@a
  6138     0D61  3184  24AD  3188   	fcall	___fladd
  6139     0D64  0020               	movlb	0	; select bank0
  6140     0D65  0823               	movf	?___fladd+3,w
  6141     0D66  0021               	movlb	1	; select bank1
  6142     0D67  00BB               	movwf	(efgtoa@h+3)^(0+128)
  6143     0D68  0020               	movlb	0	; select bank0
  6144     0D69  0822               	movf	?___fladd+2,w
  6145     0D6A  0021               	movlb	1	; select bank1
  6146     0D6B  00BA               	movwf	(efgtoa@h+2)^(0+128)
  6147     0D6C  0020               	movlb	0	; select bank0
  6148     0D6D  0821               	movf	?___fladd+1,w
  6149     0D6E  0021               	movlb	1	; select bank1
  6150     0D6F  00B9               	movwf	(efgtoa@h+1)^(0+128)
  6151     0D70  0020               	movlb	0	; select bank0
  6152     0D71  0820               	movf	?___fladd,w
  6153     0D72  0021               	movlb	1	; select bank1
  6154     0D73  00B8               	movwf	efgtoa@h^(0+128)
  6155     0D74                     l4494:
  6156                           
  6157                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  6158     0D74  083B               	movf	(efgtoa@h+3)^(0+128),w
  6159     0D75  0020               	movlb	0	; select bank0
  6160     0D76  00C6               	movwf	___flge@ff1+3
  6161     0D77  0021               	movlb	1	; select bank1
  6162     0D78  083A               	movf	(efgtoa@h+2)^(0+128),w
  6163     0D79  0020               	movlb	0	; select bank0
  6164     0D7A  00C5               	movwf	___flge@ff1+2
  6165     0D7B  0021               	movlb	1	; select bank1
  6166     0D7C  0839               	movf	(efgtoa@h+1)^(0+128),w
  6167     0D7D  0020               	movlb	0	; select bank0
  6168     0D7E  00C4               	movwf	___flge@ff1+1
  6169     0D7F  0021               	movlb	1	; select bank1
  6170     0D80  0838               	movf	efgtoa@h^(0+128),w
  6171     0D81  0020               	movlb	0	; select bank0
  6172     0D82  00C3               	movwf	___flge@ff1
  6173     0D83  3041               	movlw	65
  6174     0D84  00AC               	movwf	___flmul@b+3
  6175     0D85  3020               	movlw	32
  6176     0D86  00AB               	movwf	___flmul@b+2
  6177     0D87  3000               	movlw	0
  6178     0D88  00AA               	movwf	___flmul@b+1
  6179     0D89  3000               	movlw	0
  6180     0D8A  00A9               	movwf	___flmul@b
  6181     0D8B  0021               	movlb	1	; select bank1
  6182     0D8C  0837               	movf	(efgtoa@ou+3)^(0+128),w
  6183     0D8D  0020               	movlb	0	; select bank0
  6184     0D8E  00B0               	movwf	___flmul@a+3
  6185     0D8F  0021               	movlb	1	; select bank1
  6186     0D90  0836               	movf	(efgtoa@ou+2)^(0+128),w
  6187     0D91  0020               	movlb	0	; select bank0
  6188     0D92  00AF               	movwf	___flmul@a+2
  6189     0D93  0021               	movlb	1	; select bank1
  6190     0D94  0835               	movf	(efgtoa@ou+1)^(0+128),w
  6191     0D95  0020               	movlb	0	; select bank0
  6192     0D96  00AE               	movwf	___flmul@a+1
  6193     0D97  0021               	movlb	1	; select bank1
  6194     0D98  0834               	movf	efgtoa@ou^(0+128),w
  6195     0D99  0020               	movlb	0	; select bank0
  6196     0D9A  00AD               	movwf	___flmul@a
  6197     0D9B  3182  2272  3188   	fcall	___flmul
  6198     0D9E  0020               	movlb	0	; select bank0
  6199     0D9F  082C               	movf	?___flmul+3,w
  6200     0DA0  00CA               	movwf	___flge@ff2+3
  6201     0DA1  082B               	movf	?___flmul+2,w
  6202     0DA2  00C9               	movwf	___flge@ff2+2
  6203     0DA3  082A               	movf	?___flmul+1,w
  6204     0DA4  00C8               	movwf	___flge@ff2+1
  6205     0DA5  0829               	movf	?___flmul,w
  6206     0DA6  00C7               	movwf	___flge@ff2
  6207     0DA7  3190  20CA  3188   	fcall	___flge
  6208     0DAA  1C03               	btfss	3,0
  6209     0DAB  2DAD               	goto	u5421
  6210     0DAC  2DAE               	goto	u5420
  6211     0DAD                     u5421:
  6212     0DAD  2DE9               	goto	l1157
  6213     0DAE                     u5420:
  6214     0DAE                     l4496:
  6215                           
  6216                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  6217     0DAE  3001               	movlw	1
  6218     0DAF  0021               	movlb	1	; select bank1
  6219     0DB0  07B0               	addwf	efgtoa@e^(0+128),f
  6220     0DB1  3000               	movlw	0
  6221     0DB2  3DB1               	addwfc	(efgtoa@e+1)^(0+128),f
  6222     0DB3                     l4498:
  6223                           
  6224                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  6225     0DB3  3041               	movlw	65
  6226     0DB4  0020               	movlb	0	; select bank0
  6227     0DB5  00AC               	movwf	___flmul@b+3
  6228     0DB6  3020               	movlw	32
  6229     0DB7  00AB               	movwf	___flmul@b+2
  6230     0DB8  3000               	movlw	0
  6231     0DB9  00AA               	movwf	___flmul@b+1
  6232     0DBA  3000               	movlw	0
  6233     0DBB  00A9               	movwf	___flmul@b
  6234     0DBC  0021               	movlb	1	; select bank1
  6235     0DBD  0837               	movf	(efgtoa@ou+3)^(0+128),w
  6236     0DBE  0020               	movlb	0	; select bank0
  6237     0DBF  00B0               	movwf	___flmul@a+3
  6238     0DC0  0021               	movlb	1	; select bank1
  6239     0DC1  0836               	movf	(efgtoa@ou+2)^(0+128),w
  6240     0DC2  0020               	movlb	0	; select bank0
  6241     0DC3  00AF               	movwf	___flmul@a+2
  6242     0DC4  0021               	movlb	1	; select bank1
  6243     0DC5  0835               	movf	(efgtoa@ou+1)^(0+128),w
  6244     0DC6  0020               	movlb	0	; select bank0
  6245     0DC7  00AE               	movwf	___flmul@a+1
  6246     0DC8  0021               	movlb	1	; select bank1
  6247     0DC9  0834               	movf	efgtoa@ou^(0+128),w
  6248     0DCA  0020               	movlb	0	; select bank0
  6249     0DCB  00AD               	movwf	___flmul@a
  6250     0DCC  3182  2272  3188   	fcall	___flmul
  6251     0DCF  0020               	movlb	0	; select bank0
  6252     0DD0  082C               	movf	?___flmul+3,w
  6253     0DD1  0021               	movlb	1	; select bank1
  6254     0DD2  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  6255     0DD3  0020               	movlb	0	; select bank0
  6256     0DD4  082B               	movf	?___flmul+2,w
  6257     0DD5  0021               	movlb	1	; select bank1
  6258     0DD6  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  6259     0DD7  0020               	movlb	0	; select bank0
  6260     0DD8  082A               	movf	?___flmul+1,w
  6261     0DD9  0021               	movlb	1	; select bank1
  6262     0DDA  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  6263     0DDB  0020               	movlb	0	; select bank0
  6264     0DDC  0829               	movf	?___flmul,w
  6265     0DDD  0021               	movlb	1	; select bank1
  6266     0DDE  00B4               	movwf	efgtoa@ou^(0+128)
  6267     0DDF                     l4500:
  6268                           
  6269                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  6270     0DDF  3066               	movlw	102
  6271     0DE0  062A               	xorwf	efgtoa@nmode^(0+128),w
  6272     0DE1  1D03               	btfss	3,2
  6273     0DE2  2DE4               	goto	u5431
  6274     0DE3  2DE5               	goto	u5430
  6275     0DE4                     u5431:
  6276     0DE4  2DE9               	goto	l1157
  6277     0DE5                     u5430:
  6278     0DE5                     l4502:
  6279                           
  6280                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  6281     0DE5  3001               	movlw	1
  6282     0DE6  07AD               	addwf	efgtoa@m^(0+128),f
  6283     0DE7  3000               	movlw	0
  6284     0DE8  3DAE               	addwfc	(efgtoa@m+1)^(0+128),f
  6285     0DE9                     l1157:	
  6286                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 767:  }
  6287                           
  6288                           
  6289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  6290     0DE9  0021               	movlb	1	; select bank1
  6291     0DEA  0837               	movf	(efgtoa@ou+3)^(0+128),w
  6292     0DEB  00CC               	movwf	(efgtoa@u+3)^(0+128)
  6293     0DEC  0836               	movf	(efgtoa@ou+2)^(0+128),w
  6294     0DED  00CB               	movwf	(efgtoa@u+2)^(0+128)
  6295     0DEE  0835               	movf	(efgtoa@ou+1)^(0+128),w
  6296     0DEF  00CA               	movwf	(efgtoa@u+1)^(0+128)
  6297     0DF0  0834               	movf	efgtoa@ou^(0+128),w
  6298     0DF1  00C9               	movwf	efgtoa@u^(0+128)
  6299                           
  6300                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  6301     0DF2  0831               	movf	(efgtoa@e+1)^(0+128),w
  6302     0DF3  00A1               	movwf	(efgtoa@ne+1)^(0+128)
  6303     0DF4  0830               	movf	efgtoa@e^(0+128),w
  6304     0DF5  00A0               	movwf	efgtoa@ne^(0+128)
  6305     0DF6                     l4504:
  6306                           
  6307                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  6308     0DF6  01A8               	clrf	efgtoa@pp^(0+128)
  6309     0DF7                     l4506:
  6310                           
  6311                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  6312     0DF7  01A4               	clrf	efgtoa@t^(0+128)
  6313     0DF8  01A5               	clrf	(efgtoa@t+1)^(0+128)
  6314     0DF9                     l4508:
  6315                           
  6316                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  6317     0DF9  01C0               	clrf	efgtoa@i^(0+128)
  6318     0DFA  01C1               	clrf	(efgtoa@i+1)^(0+128)
  6319                           
  6320                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6321     0DFB  2F42               	goto	l4552
  6322     0DFC                     l4510:
  6323                           
  6324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  6325     0DFC  0021               	movlb	1	; select bank1
  6326     0DFD  084C               	movf	(efgtoa@u+3)^(0+128),w
  6327     0DFE  0020               	movlb	0	; select bank0
  6328     0DFF  00B7               	movwf	___fldiv@a+3
  6329     0E00  0021               	movlb	1	; select bank1
  6330     0E01  084B               	movf	(efgtoa@u+2)^(0+128),w
  6331     0E02  0020               	movlb	0	; select bank0
  6332     0E03  00B6               	movwf	___fldiv@a+2
  6333     0E04  0021               	movlb	1	; select bank1
  6334     0E05  084A               	movf	(efgtoa@u+1)^(0+128),w
  6335     0E06  0020               	movlb	0	; select bank0
  6336     0E07  00B5               	movwf	___fldiv@a+1
  6337     0E08  0021               	movlb	1	; select bank1
  6338     0E09  0849               	movf	efgtoa@u^(0+128),w
  6339     0E0A  0020               	movlb	0	; select bank0
  6340     0E0B  00B4               	movwf	___fldiv@a
  6341     0E0C  0021               	movlb	1	; select bank1
  6342     0E0D  083B               	movf	(efgtoa@h+3)^(0+128),w
  6343     0E0E  0020               	movlb	0	; select bank0
  6344     0E0F  00BB               	movwf	___fldiv@b+3
  6345     0E10  0021               	movlb	1	; select bank1
  6346     0E11  083A               	movf	(efgtoa@h+2)^(0+128),w
  6347     0E12  0020               	movlb	0	; select bank0
  6348     0E13  00BA               	movwf	___fldiv@b+2
  6349     0E14  0021               	movlb	1	; select bank1
  6350     0E15  0839               	movf	(efgtoa@h+1)^(0+128),w
  6351     0E16  0020               	movlb	0	; select bank0
  6352     0E17  00B9               	movwf	___fldiv@b+1
  6353     0E18  0021               	movlb	1	; select bank1
  6354     0E19  0838               	movf	efgtoa@h^(0+128),w
  6355     0E1A  0020               	movlb	0	; select bank0
  6356     0E1B  00B8               	movwf	___fldiv@b
  6357     0E1C  3194  247F  3188   	fcall	___fldiv
  6358     0E1F  0020               	movlb	0	; select bank0
  6359     0E20  0837               	movf	?___fldiv+3,w
  6360     0E21  00D1               	movwf	floorf@x+3
  6361     0E22  0836               	movf	?___fldiv+2,w
  6362     0E23  00D0               	movwf	floorf@x+2
  6363     0E24  0835               	movf	?___fldiv+1,w
  6364     0E25  00CF               	movwf	floorf@x+1
  6365     0E26  0834               	movf	?___fldiv,w
  6366     0E27  00CE               	movwf	floorf@x
  6367     0E28  3188  2005  3188   	fcall	_floorf
  6368     0E2B  0020               	movlb	0	; select bank0
  6369     0E2C  0851               	movf	?_floorf+3,w
  6370     0E2D  0021               	movlb	1	; select bank1
  6371     0E2E  00BF               	movwf	(efgtoa@l+3)^(0+128)
  6372     0E2F  0020               	movlb	0	; select bank0
  6373     0E30  0850               	movf	?_floorf+2,w
  6374     0E31  0021               	movlb	1	; select bank1
  6375     0E32  00BE               	movwf	(efgtoa@l+2)^(0+128)
  6376     0E33  0020               	movlb	0	; select bank0
  6377     0E34  084F               	movf	?_floorf+1,w
  6378     0E35  0021               	movlb	1	; select bank1
  6379     0E36  00BD               	movwf	(efgtoa@l+1)^(0+128)
  6380     0E37  0020               	movlb	0	; select bank0
  6381     0E38  084E               	movf	?_floorf,w
  6382     0E39  0021               	movlb	1	; select bank1
  6383     0E3A  00BC               	movwf	efgtoa@l^(0+128)
  6384                           
  6385                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  6386     0E3B  083F               	movf	(efgtoa@l+3)^(0+128),w
  6387     0E3C  0020               	movlb	0	; select bank0
  6388     0E3D  00A3               	movwf	___fltol@f1+3
  6389     0E3E  0021               	movlb	1	; select bank1
  6390     0E3F  083E               	movf	(efgtoa@l+2)^(0+128),w
  6391     0E40  0020               	movlb	0	; select bank0
  6392     0E41  00A2               	movwf	___fltol@f1+2
  6393     0E42  0021               	movlb	1	; select bank1
  6394     0E43  083D               	movf	(efgtoa@l+1)^(0+128),w
  6395     0E44  0020               	movlb	0	; select bank0
  6396     0E45  00A1               	movwf	___fltol@f1+1
  6397     0E46  0021               	movlb	1	; select bank1
  6398     0E47  083C               	movf	efgtoa@l^(0+128),w
  6399     0E48  0020               	movlb	0	; select bank0
  6400     0E49  00A0               	movwf	___fltol@f1
  6401     0E4A  319E  26A0  3188   	fcall	___fltol
  6402     0E4D  0020               	movlb	0	; select bank0
  6403     0E4E  0821               	movf	?___fltol+1,w
  6404     0E4F  3A80               	xorlw	128
  6405     0E50  00E7               	movwf	??_efgtoa
  6406     0E51  3080               	movlw	128
  6407     0E52  0267               	subwf	??_efgtoa,w
  6408     0E53  1D03               	skipz
  6409     0E54  2E57               	goto	u5445
  6410     0E55  300A               	movlw	10
  6411     0E56  0220               	subwf	?___fltol,w
  6412     0E57                     u5445:
  6413     0E57  1803               	skipnc
  6414     0E58  2E5A               	goto	u5441
  6415     0E59  2E5B               	goto	u5440
  6416     0E5A                     u5441:
  6417     0E5A  2E77               	goto	l4514
  6418     0E5B                     u5440:
  6419     0E5B                     l4512:
  6420     0E5B  0021               	movlb	1	; select bank1
  6421     0E5C  083F               	movf	(efgtoa@l+3)^(0+128),w
  6422     0E5D  0020               	movlb	0	; select bank0
  6423     0E5E  00A3               	movwf	___fltol@f1+3
  6424     0E5F  0021               	movlb	1	; select bank1
  6425     0E60  083E               	movf	(efgtoa@l+2)^(0+128),w
  6426     0E61  0020               	movlb	0	; select bank0
  6427     0E62  00A2               	movwf	___fltol@f1+2
  6428     0E63  0021               	movlb	1	; select bank1
  6429     0E64  083D               	movf	(efgtoa@l+1)^(0+128),w
  6430     0E65  0020               	movlb	0	; select bank0
  6431     0E66  00A1               	movwf	___fltol@f1+1
  6432     0E67  0021               	movlb	1	; select bank1
  6433     0E68  083C               	movf	efgtoa@l^(0+128),w
  6434     0E69  0020               	movlb	0	; select bank0
  6435     0E6A  00A0               	movwf	___fltol@f1
  6436     0E6B  319E  26A0  3188   	fcall	___fltol
  6437     0E6E  0020               	movlb	0	; select bank0
  6438     0E6F  0821               	movf	?___fltol+1,w
  6439     0E70  0021               	movlb	1	; select bank1
  6440     0E71  00AC               	movwf	(efgtoa@d+1)^(0+128)
  6441     0E72  0020               	movlb	0	; select bank0
  6442     0E73  0820               	movf	?___fltol,w
  6443     0E74  0021               	movlb	1	; select bank1
  6444     0E75  00AB               	movwf	efgtoa@d^(0+128)
  6445     0E76  2E7C               	goto	l4516
  6446     0E77                     l4514:
  6447     0E77  3009               	movlw	9
  6448     0E78  0021               	movlb	1	; select bank1
  6449     0E79  00AB               	movwf	efgtoa@d^(0+128)
  6450     0E7A  3000               	movlw	0
  6451     0E7B  00AC               	movwf	(efgtoa@d^(0+128)+1)
  6452     0E7C                     l4516:
  6453                           
  6454                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  6455     0E7C  0828               	movf	efgtoa@pp^(0+128),w
  6456     0E7D  1D03               	btfss	3,2
  6457     0E7E  2E80               	goto	u5451
  6458     0E7F  2E81               	goto	u5450
  6459     0E80                     u5451:
  6460     0E80  2EAA               	goto	l4536
  6461     0E81                     u5450:
  6462     0E81                     l4518:
  6463     0E81  1FA1               	btfss	(efgtoa@ne+1)^(0+128),7
  6464     0E82  2E84               	goto	u5461
  6465     0E83  2E85               	goto	u5460
  6466     0E84                     u5461:
  6467     0E84  2EAA               	goto	l4536
  6468     0E85                     u5460:
  6469     0E85                     l4520:
  6470                           
  6471                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  6472     0E85  0847               	movf	efgtoa@n^(0+128),w
  6473     0E86  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6474     0E87  0086               	movwf	6
  6475     0E88  3002               	movlw	2	; select bank4/5
  6476     0E89  0087               	movwf	7
  6477     0E8A  302E               	movlw	46
  6478     0E8B  0081               	movwf	1
  6479     0E8C                     l4522:
  6480     0E8C  3001               	movlw	1
  6481     0E8D  07C7               	addwf	efgtoa@n^(0+128),f
  6482     0E8E  3000               	movlw	0
  6483     0E8F  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6484     0E90                     l4524:
  6485                           
  6486                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  6487     0E90  30FF               	movlw	255
  6488     0E91  07B2               	addwf	efgtoa@w^(0+128),f
  6489     0E92  30FF               	movlw	255
  6490     0E93  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  6491     0E94                     l4526:
  6492                           
  6493                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  6494     0E94  01A8               	clrf	efgtoa@pp^(0+128)
  6495     0E95  0AA8               	incf	efgtoa@pp^(0+128),f
  6496     0E96  2EAA               	goto	l4536
  6497     0E97                     l4528:
  6498                           
  6499                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  6500     0E97  0847               	movf	efgtoa@n^(0+128),w
  6501     0E98  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6502     0E99  0086               	movwf	6
  6503     0E9A  3002               	movlw	2	; select bank4/5
  6504     0E9B  0087               	movwf	7
  6505     0E9C  3030               	movlw	48
  6506     0E9D  0081               	movwf	1
  6507     0E9E                     l4530:
  6508     0E9E  3001               	movlw	1
  6509     0E9F  07C7               	addwf	efgtoa@n^(0+128),f
  6510     0EA0  3000               	movlw	0
  6511     0EA1  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6512     0EA2                     l4532:
  6513                           
  6514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  6515     0EA2  30FF               	movlw	255
  6516     0EA3  07B2               	addwf	efgtoa@w^(0+128),f
  6517     0EA4  30FF               	movlw	255
  6518     0EA5  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  6519     0EA6                     l4534:
  6520                           
  6521                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  6522     0EA6  30FF               	movlw	255
  6523     0EA7  07A4               	addwf	efgtoa@t^(0+128),f
  6524     0EA8  30FF               	movlw	255
  6525     0EA9  3DA5               	addwfc	(efgtoa@t+1)^(0+128),f
  6526     0EAA                     l4536:
  6527                           
  6528                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  6529     0EAA  0824               	movf	efgtoa@t^(0+128),w
  6530     0EAB  0425               	iorwf	(efgtoa@t+1)^(0+128),w
  6531     0EAC  1D03               	btfss	3,2
  6532     0EAD  2EAF               	goto	u5471
  6533     0EAE  2EB0               	goto	u5470
  6534     0EAF                     u5471:
  6535     0EAF  2E97               	goto	l4528
  6536     0EB0                     u5470:
  6537     0EB0                     l4538:
  6538                           
  6539                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6540     0EB0  0847               	movf	efgtoa@n^(0+128),w
  6541     0EB1  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6542     0EB2  0086               	movwf	6
  6543     0EB3  3002               	movlw	2	; select bank4/5
  6544     0EB4  0087               	movwf	7
  6545     0EB5  082B               	movf	efgtoa@d^(0+128),w
  6546     0EB6  3E30               	addlw	48
  6547     0EB7  0081               	movwf	1
  6548     0EB8                     l4540:
  6549     0EB8  3001               	movlw	1
  6550     0EB9  07C7               	addwf	efgtoa@n^(0+128),f
  6551     0EBA  3000               	movlw	0
  6552     0EBB  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6553     0EBC                     l4542:
  6554                           
  6555                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  6556     0EBC  30FF               	movlw	255
  6557     0EBD  07B2               	addwf	efgtoa@w^(0+128),f
  6558     0EBE  30FF               	movlw	255
  6559     0EBF  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  6560     0EC0                     l4544:
  6561                           
  6562                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  6563     0EC0  084C               	movf	(efgtoa@u+3)^(0+128),w
  6564     0EC1  0020               	movlb	0	; select bank0
  6565     0EC2  00B0               	movwf	___flmul@a+3
  6566     0EC3  0021               	movlb	1	; select bank1
  6567     0EC4  084B               	movf	(efgtoa@u+2)^(0+128),w
  6568     0EC5  0020               	movlb	0	; select bank0
  6569     0EC6  00AF               	movwf	___flmul@a+2
  6570     0EC7  0021               	movlb	1	; select bank1
  6571     0EC8  084A               	movf	(efgtoa@u+1)^(0+128),w
  6572     0EC9  0020               	movlb	0	; select bank0
  6573     0ECA  00AE               	movwf	___flmul@a+1
  6574     0ECB  0021               	movlb	1	; select bank1
  6575     0ECC  0849               	movf	efgtoa@u^(0+128),w
  6576     0ECD  0020               	movlb	0	; select bank0
  6577     0ECE  00AD               	movwf	___flmul@a
  6578     0ECF  0021               	movlb	1	; select bank1
  6579     0ED0  083F               	movf	(efgtoa@l+3)^(0+128),w
  6580     0ED1  0020               	movlb	0	; select bank0
  6581     0ED2  00AC               	movwf	___flmul@b+3
  6582     0ED3  0021               	movlb	1	; select bank1
  6583     0ED4  083E               	movf	(efgtoa@l+2)^(0+128),w
  6584     0ED5  0020               	movlb	0	; select bank0
  6585     0ED6  00AB               	movwf	___flmul@b+2
  6586     0ED7  0021               	movlb	1	; select bank1
  6587     0ED8  083D               	movf	(efgtoa@l+1)^(0+128),w
  6588     0ED9  0020               	movlb	0	; select bank0
  6589     0EDA  00AA               	movwf	___flmul@b+1
  6590     0EDB  0021               	movlb	1	; select bank1
  6591     0EDC  083C               	movf	efgtoa@l^(0+128),w
  6592     0EDD  0020               	movlb	0	; select bank0
  6593     0EDE  00A9               	movwf	___flmul@b
  6594     0EDF  3182  2272  3188   	fcall	___flmul
  6595     0EE2  0020               	movlb	0	; select bank0
  6596     0EE3  082C               	movf	?___flmul+3,w
  6597     0EE4  00C6               	movwf	___flsub@a+3
  6598     0EE5  082B               	movf	?___flmul+2,w
  6599     0EE6  00C5               	movwf	___flsub@a+2
  6600     0EE7  082A               	movf	?___flmul+1,w
  6601     0EE8  00C4               	movwf	___flsub@a+1
  6602     0EE9  0829               	movf	?___flmul,w
  6603     0EEA  00C3               	movwf	___flsub@a
  6604     0EEB  0021               	movlb	1	; select bank1
  6605     0EEC  083B               	movf	(efgtoa@h+3)^(0+128),w
  6606     0EED  0020               	movlb	0	; select bank0
  6607     0EEE  00CA               	movwf	___flsub@b+3
  6608     0EEF  0021               	movlb	1	; select bank1
  6609     0EF0  083A               	movf	(efgtoa@h+2)^(0+128),w
  6610     0EF1  0020               	movlb	0	; select bank0
  6611     0EF2  00C9               	movwf	___flsub@b+2
  6612     0EF3  0021               	movlb	1	; select bank1
  6613     0EF4  0839               	movf	(efgtoa@h+1)^(0+128),w
  6614     0EF5  0020               	movlb	0	; select bank0
  6615     0EF6  00C8               	movwf	___flsub@b+1
  6616     0EF7  0021               	movlb	1	; select bank1
  6617     0EF8  0838               	movf	efgtoa@h^(0+128),w
  6618     0EF9  0020               	movlb	0	; select bank0
  6619     0EFA  00C7               	movwf	___flsub@b
  6620     0EFB  319A  22EE  3188   	fcall	___flsub
  6621     0EFE  0020               	movlb	0	; select bank0
  6622     0EFF  0846               	movf	?___flsub+3,w
  6623     0F00  0021               	movlb	1	; select bank1
  6624     0F01  00BB               	movwf	(efgtoa@h+3)^(0+128)
  6625     0F02  0020               	movlb	0	; select bank0
  6626     0F03  0845               	movf	?___flsub+2,w
  6627     0F04  0021               	movlb	1	; select bank1
  6628     0F05  00BA               	movwf	(efgtoa@h+2)^(0+128)
  6629     0F06  0020               	movlb	0	; select bank0
  6630     0F07  0844               	movf	?___flsub+1,w
  6631     0F08  0021               	movlb	1	; select bank1
  6632     0F09  00B9               	movwf	(efgtoa@h+1)^(0+128)
  6633     0F0A  0020               	movlb	0	; select bank0
  6634     0F0B  0843               	movf	?___flsub,w
  6635     0F0C  0021               	movlb	1	; select bank1
  6636     0F0D  00B8               	movwf	efgtoa@h^(0+128)
  6637     0F0E                     l4546:
  6638                           
  6639                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  6640     0F0E  3041               	movlw	65
  6641     0F0F  0020               	movlb	0	; select bank0
  6642     0F10  00B7               	movwf	___fldiv@a+3
  6643     0F11  3020               	movlw	32
  6644     0F12  00B6               	movwf	___fldiv@a+2
  6645     0F13  3000               	movlw	0
  6646     0F14  00B5               	movwf	___fldiv@a+1
  6647     0F15  3000               	movlw	0
  6648     0F16  00B4               	movwf	___fldiv@a
  6649     0F17  0021               	movlb	1	; select bank1
  6650     0F18  084C               	movf	(efgtoa@u+3)^(0+128),w
  6651     0F19  0020               	movlb	0	; select bank0
  6652     0F1A  00BB               	movwf	___fldiv@b+3
  6653     0F1B  0021               	movlb	1	; select bank1
  6654     0F1C  084B               	movf	(efgtoa@u+2)^(0+128),w
  6655     0F1D  0020               	movlb	0	; select bank0
  6656     0F1E  00BA               	movwf	___fldiv@b+2
  6657     0F1F  0021               	movlb	1	; select bank1
  6658     0F20  084A               	movf	(efgtoa@u+1)^(0+128),w
  6659     0F21  0020               	movlb	0	; select bank0
  6660     0F22  00B9               	movwf	___fldiv@b+1
  6661     0F23  0021               	movlb	1	; select bank1
  6662     0F24  0849               	movf	efgtoa@u^(0+128),w
  6663     0F25  0020               	movlb	0	; select bank0
  6664     0F26  00B8               	movwf	___fldiv@b
  6665     0F27  3194  247F  3188   	fcall	___fldiv
  6666     0F2A  0020               	movlb	0	; select bank0
  6667     0F2B  0837               	movf	?___fldiv+3,w
  6668     0F2C  0021               	movlb	1	; select bank1
  6669     0F2D  00CC               	movwf	(efgtoa@u+3)^(0+128)
  6670     0F2E  0020               	movlb	0	; select bank0
  6671     0F2F  0836               	movf	?___fldiv+2,w
  6672     0F30  0021               	movlb	1	; select bank1
  6673     0F31  00CB               	movwf	(efgtoa@u+2)^(0+128)
  6674     0F32  0020               	movlb	0	; select bank0
  6675     0F33  0835               	movf	?___fldiv+1,w
  6676     0F34  0021               	movlb	1	; select bank1
  6677     0F35  00CA               	movwf	(efgtoa@u+1)^(0+128)
  6678     0F36  0020               	movlb	0	; select bank0
  6679     0F37  0834               	movf	?___fldiv,w
  6680     0F38  0021               	movlb	1	; select bank1
  6681     0F39  00C9               	movwf	efgtoa@u^(0+128)
  6682     0F3A                     l4548:
  6683                           
  6684                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  6685     0F3A  30FF               	movlw	255
  6686     0F3B  07A0               	addwf	efgtoa@ne^(0+128),f
  6687     0F3C  30FF               	movlw	255
  6688     0F3D  3DA1               	addwfc	(efgtoa@ne+1)^(0+128),f
  6689     0F3E                     l4550:
  6690                           
  6691                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  6692     0F3E  3001               	movlw	1
  6693     0F3F  07C0               	addwf	efgtoa@i^(0+128),f
  6694     0F40  3000               	movlw	0
  6695     0F41  3DC1               	addwfc	(efgtoa@i+1)^(0+128),f
  6696     0F42                     l4552:
  6697                           
  6698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6699     0F42  0841               	movf	(efgtoa@i+1)^(0+128),w
  6700     0F43  3A80               	xorlw	128
  6701     0F44  0020               	movlb	0	; select bank0
  6702     0F45  00E7               	movwf	??_efgtoa
  6703     0F46  0021               	movlb	1	; select bank1
  6704     0F47  082E               	movf	(efgtoa@m+1)^(0+128),w
  6705     0F48  3A80               	xorlw	128
  6706     0F49  0020               	movlb	0	; select bank0
  6707     0F4A  0267               	subwf	??_efgtoa,w
  6708     0F4B  1D03               	skipz
  6709     0F4C  2F50               	goto	u5485
  6710     0F4D  0021               	movlb	1	; select bank1
  6711     0F4E  082D               	movf	efgtoa@m^(0+128),w
  6712     0F4F  0240               	subwf	efgtoa@i^(0+128),w
  6713     0F50                     u5485:
  6714     0F50  1803               	skipnc
  6715     0F51  2F53               	goto	u5481
  6716     0F52  2F54               	goto	u5480
  6717     0F53                     u5481:
  6718     0F53  2F64               	goto	l4556
  6719     0F54                     u5480:
  6720     0F54                     l4554:
  6721     0F54  0021               	movlb	1	; select bank1
  6722     0F55  0848               	movf	(efgtoa@n+1)^(0+128),w
  6723     0F56  3A80               	xorlw	128
  6724     0F57  0020               	movlb	0	; select bank0
  6725     0F58  00E7               	movwf	??_efgtoa
  6726     0F59  3080               	movlw	128
  6727     0F5A  0267               	subwf	??_efgtoa,w
  6728     0F5B  1D03               	skipz
  6729     0F5C  2F60               	goto	u5495
  6730     0F5D  304B               	movlw	75
  6731     0F5E  0021               	movlb	1	; select bank1
  6732     0F5F  0247               	subwf	efgtoa@n^(0+128),w
  6733     0F60                     u5495:
  6734     0F60  1C03               	skipc
  6735     0F61  2F63               	goto	u5491
  6736     0F62  2F64               	goto	u5490
  6737     0F63                     u5491:
  6738     0F63  2DFC               	goto	l4510
  6739     0F64                     u5490:
  6740     0F64                     l4556:
  6741                           
  6742                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  6743     0F64  304F               	movlw	79
  6744     0F65  0021               	movlb	1	; select bank1
  6745     0F66  00C0               	movwf	efgtoa@i^(0+128)
  6746     0F67  3000               	movlw	0
  6747     0F68  00C1               	movwf	(efgtoa@i^(0+128)+1)
  6748     0F69                     l4558:
  6749                           
  6750                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  6751     0F69  0840               	movf	efgtoa@i^(0+128),w
  6752     0F6A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6753     0F6B  0086               	movwf	6
  6754     0F6C  3002               	movlw	2	; select bank4/5
  6755     0F6D  0087               	movwf	7
  6756     0F6E  0181               	clrf	1
  6757     0F6F                     l4560:
  6758                           
  6759                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  6760     0F6F  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6761     0F70  0020               	movlb	0	; select bank0
  6762     0F71  00A0               	movwf	memcpy@s1
  6763     0F72  0021               	movlb	1	; select bank1
  6764     0F73  0848               	movf	(efgtoa@n+1)^(0+128),w
  6765     0F74  0020               	movlb	0	; select bank0
  6766     0F75  00A2               	movwf	memcpy@n+1
  6767     0F76  0021               	movlb	1	; select bank1
  6768     0F77  0847               	movf	efgtoa@n^(0+128),w
  6769     0F78  0020               	movlb	0	; select bank0
  6770     0F79  00A1               	movwf	memcpy@n
  6771     0F7A  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6772     0F7B  00E7               	movwf	??_efgtoa
  6773     0F7C  0021               	movlb	1	; select bank1
  6774     0F7D  0847               	movf	efgtoa@n^(0+128),w
  6775     0F7E  0020               	movlb	0	; select bank0
  6776     0F7F  0267               	subwf	??_efgtoa,w
  6777     0F80  0021               	movlb	1	; select bank1
  6778     0F81  0740               	addwf	efgtoa@i^(0+128),w
  6779     0F82  319B  23E5  3188   	fcall	_memcpy
  6780     0F85                     l4562:
  6781                           
  6782                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  6783     0F85  0021               	movlb	1	; select bank1
  6784     0F86  0847               	movf	efgtoa@n^(0+128),w
  6785     0F87  0240               	subwf	efgtoa@i^(0+128),w
  6786     0F88  00C7               	movwf	efgtoa@n^(0+128)
  6787     0F89  0848               	movf	(efgtoa@n+1)^(0+128),w
  6788     0F8A  3B41               	subwfb	(efgtoa@i+1)^(0+128),w
  6789     0F8B  00C8               	movwf	(efgtoa@n+1)^(0+128)
  6790     0F8C                     l4564:
  6791                           
  6792                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  6793     0F8C  0842               	movf	efgtoa@sign^(0+128),w
  6794     0F8D  1D03               	btfss	3,2
  6795     0F8E  2F90               	goto	u5501
  6796     0F8F  2F92               	goto	u5500
  6797     0F90                     u5501:
  6798     0F90  3001               	movlw	1
  6799     0F91  2F93               	goto	u5510
  6800     0F92                     u5500:
  6801     0F92  3000               	movlw	0
  6802     0F93                     u5510:
  6803     0F93  0020               	movlb	0	; select bank0
  6804     0F94  00E7               	movwf	??_efgtoa
  6805     0F95  01E8               	clrf	??_efgtoa+1
  6806     0F96  0867               	movf	??_efgtoa,w
  6807     0F97  0021               	movlb	1	; select bank1
  6808     0F98  00C0               	movwf	efgtoa@i^(0+128)
  6809     0F99  0020               	movlb	0	; select bank0
  6810     0F9A  0868               	movf	??_efgtoa+1,w
  6811     0F9B  0021               	movlb	1	; select bank1
  6812     0F9C  00C1               	movwf	(efgtoa@i+1)^(0+128)
  6813     0F9D                     l4566:
  6814                           
  6815                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
  6816     0F9D  0022               	movlb	2	; select bank2
  6817     0F9E  1CB0               	btfss	_flags^(0+256),1
  6818     0F9F  2FA1               	goto	u5521
  6819     0FA0  2FA2               	goto	u5520
  6820     0FA1                     u5521:
  6821     0FA1  2FD9               	goto	l4578
  6822     0FA2                     u5520:
  6823     0FA2  2FB3               	goto	l4574
  6824     0FA3                     l4570:
  6825                           
  6826                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
  6827     0FA3  30FF               	movlw	255
  6828     0FA4  0021               	movlb	1	; select bank1
  6829     0FA5  07C7               	addwf	efgtoa@n^(0+128),f
  6830     0FA6  30FF               	movlw	255
  6831     0FA7  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6832     0FA8  0847               	movf	efgtoa@n^(0+128),w
  6833     0FA9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6834     0FAA  0086               	movwf	6
  6835     0FAB  3002               	movlw	2	; select bank4/5
  6836     0FAC  0087               	movwf	7
  6837     0FAD  3030               	movlw	48
  6838     0FAE  0081               	movwf	1
  6839     0FAF                     l4572:
  6840                           
  6841                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 856:    w--;
  6842     0FAF  30FF               	movlw	255
  6843     0FB0  07B2               	addwf	efgtoa@w^(0+128),f
  6844     0FB1  30FF               	movlw	255
  6845     0FB2  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  6846     0FB3                     l4574:
  6847                           
  6848                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
  6849     0FB3  0021               	movlb	1	; select bank1
  6850     0FB4  0841               	movf	(efgtoa@i+1)^(0+128),w
  6851     0FB5  3A80               	xorlw	128
  6852     0FB6  0020               	movlb	0	; select bank0
  6853     0FB7  00E7               	movwf	??_efgtoa
  6854     0FB8  0021               	movlb	1	; select bank1
  6855     0FB9  0833               	movf	(efgtoa@w+1)^(0+128),w
  6856     0FBA  3A80               	xorlw	128
  6857     0FBB  0020               	movlb	0	; select bank0
  6858     0FBC  0267               	subwf	??_efgtoa,w
  6859     0FBD  1D03               	skipz
  6860     0FBE  2FC2               	goto	u5535
  6861     0FBF  0021               	movlb	1	; select bank1
  6862     0FC0  0832               	movf	efgtoa@w^(0+128),w
  6863     0FC1  0240               	subwf	efgtoa@i^(0+128),w
  6864     0FC2                     u5535:
  6865     0FC2  1803               	skipnc
  6866     0FC3  2FC5               	goto	u5531
  6867     0FC4  2FC6               	goto	u5530
  6868     0FC5                     u5531:
  6869     0FC5  2FD9               	goto	l4578
  6870     0FC6                     u5530:
  6871     0FC6                     l4576:
  6872     0FC6  0021               	movlb	1	; select bank1
  6873     0FC7  0841               	movf	(efgtoa@i+1)^(0+128),w
  6874     0FC8  3A80               	xorlw	128
  6875     0FC9  0020               	movlb	0	; select bank0
  6876     0FCA  00E7               	movwf	??_efgtoa
  6877     0FCB  0021               	movlb	1	; select bank1
  6878     0FCC  0848               	movf	(efgtoa@n+1)^(0+128),w
  6879     0FCD  3A80               	xorlw	128
  6880     0FCE  0020               	movlb	0	; select bank0
  6881     0FCF  0267               	subwf	??_efgtoa,w
  6882     0FD0  1D03               	skipz
  6883     0FD1  2FD5               	goto	u5545
  6884     0FD2  0021               	movlb	1	; select bank1
  6885     0FD3  0847               	movf	efgtoa@n^(0+128),w
  6886     0FD4  0240               	subwf	efgtoa@i^(0+128),w
  6887     0FD5                     u5545:
  6888     0FD5  1C03               	skipc
  6889     0FD6  2FD8               	goto	u5541
  6890     0FD7  2FD9               	goto	u5540
  6891     0FD8                     u5541:
  6892     0FD8  2FA3               	goto	l4570
  6893     0FD9                     u5540:
  6894     0FD9                     l4578:
  6895                           
  6896                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  6897     0FD9  0021               	movlb	1	; select bank1
  6898     0FDA  0842               	movf	efgtoa@sign^(0+128),w
  6899     0FDB  1903               	btfsc	3,2
  6900     0FDC  2FDE               	goto	u5551
  6901     0FDD  2FDF               	goto	u5550
  6902     0FDE                     u5551:
  6903     0FDE  2FEA               	goto	l4582
  6904     0FDF                     u5550:
  6905     0FDF                     l4580:
  6906                           
  6907                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  6908     0FDF  30FF               	movlw	255
  6909     0FE0  07C7               	addwf	efgtoa@n^(0+128),f
  6910     0FE1  30FF               	movlw	255
  6911     0FE2  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6912     0FE3  0847               	movf	efgtoa@n^(0+128),w
  6913     0FE4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6914     0FE5  0086               	movwf	6
  6915     0FE6  3002               	movlw	2	; select bank4/5
  6916     0FE7  0087               	movwf	7
  6917     0FE8  0842               	movf	efgtoa@sign^(0+128),w
  6918     0FE9  0081               	movwf	1
  6919     0FEA                     l4582:
  6920                           
  6921                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  6922     0FEA  0840               	movf	efgtoa@i^(0+128),w
  6923     0FEB  02B2               	subwf	efgtoa@w^(0+128),f
  6924     0FEC  0841               	movf	(efgtoa@i+1)^(0+128),w
  6925     0FED  3BB3               	subwfb	(efgtoa@w+1)^(0+128),f
  6926     0FEE                     l4584:
  6927                           
  6928                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  6929     0FEE  0847               	movf	efgtoa@n^(0+128),w
  6930     0FEF  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6931     0FF0  0020               	movlb	0	; select bank0
  6932     0FF1  00AF               	movwf	pad@buf
  6933     0FF2  0021               	movlb	1	; select bank1
  6934     0FF3  0833               	movf	(efgtoa@w+1)^(0+128),w
  6935     0FF4  0020               	movlb	0	; select bank0
  6936     0FF5  00B1               	movwf	pad@p+1
  6937     0FF6  0021               	movlb	1	; select bank1
  6938     0FF7  0832               	movf	efgtoa@w^(0+128),w
  6939     0FF8  0020               	movlb	0	; select bank0
  6940     0FF9  00B0               	movwf	pad@p
  6941     0FFA  0021               	movlb	1	; select bank1
  6942     0FFB  082F               	movf	efgtoa@fp^(0+128),w
  6943     0FFC  3190  201B  3188   	fcall	_pad
  6944     0FFF                     l1131:
  6945     0FFF  0008               	return
  6946     1000                     __end_of_efgtoa:
  6947                           
  6948                           	psect	text7
  6949     1A58                     __ptext7:	
  6950 ;; *************** function _strcpy *****************
  6951 ;; Defined at:
  6952 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;  dest            1    wreg     PTR unsigned char 
  6955 ;;		 -> dbuf(80), 
  6956 ;;  src             2    0[BANK0 ] PTR const unsigned char 
  6957 ;;		 -> STR_22(4), STR_19(4), 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;  dest            1    5[BANK0 ] PTR unsigned char 
  6960 ;;		 -> dbuf(80), 
  6961 ;;  d               1    4[BANK0 ] PTR unsigned char 
  6962 ;;		 -> dbuf(80), 
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      PTR unsigned char 
  6965 ;; Registers used:
  6966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6972 ;;      Params:         0       2       0       0       0       0       0       0
  6973 ;;      Locals:         0       2       0       0       0       0       0       0
  6974 ;;      Temps:          0       2       0       0       0       0       0       0
  6975 ;;      Totals:         0       6       0       0       0       0       0       0
  6976 ;;Total ram usage:        6 bytes
  6977 ;; Hardware stack levels used: 1
  6978 ;; Hardware stack levels required when called: 4
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_efgtoa
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986     1A58                     _strcpy:	
  6987                           ;psect for function _strcpy
  6988                           
  6989                           
  6990                           ;incstack = 0
  6991                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6992                           ;strcpy@dest stored from wreg
  6993     1A58  0020               	movlb	0	; select bank0
  6994     1A59  00A5               	movwf	strcpy@dest
  6995     1A5A                     l4254:
  6996     1A5A  0825               	movf	strcpy@dest,w
  6997     1A5B  00A4               	movwf	strcpy@d
  6998     1A5C                     l4256:
  6999     1A5C  0824               	movf	strcpy@d,w
  7000     1A5D  0086               	movwf	6
  7001     1A5E  3002               	movlw	2	; select bank4/5
  7002     1A5F  0087               	movwf	7
  7003     1A60  0AA4               	incf	strcpy@d,f
  7004     1A61  0821               	movf	strcpy@src+1,w
  7005     1A62  00A3               	movwf	??_strcpy+1
  7006     1A63  0820               	movf	strcpy@src,w
  7007     1A64  00A2               	movwf	??_strcpy
  7008     1A65  0AA0               	incf	strcpy@src,f
  7009     1A66  1903               	skipnz
  7010     1A67  0AA1               	incf	strcpy@src+1,f
  7011     1A68  0822               	movf	??_strcpy,w
  7012     1A69  0084               	movwf	4
  7013     1A6A  0823               	movf	??_strcpy+1,w
  7014     1A6B  0085               	movwf	5
  7015     1A6C  0800               	movf	0,w	;code access
  7016     1A6D  3FC0               	movwi [0]fsr1
  7017     1A6E  0889               	movf	9,f
  7018     1A6F  1D03               	btfss	3,2
  7019     1A70  2A72               	goto	u4911
  7020     1A71  2A73               	goto	u4910
  7021     1A72                     u4911:
  7022     1A72  2A5C               	goto	l4256
  7023     1A73                     u4910:
  7024     1A73                     l1304:
  7025     1A73  0008               	return
  7026     1A74                     __end_of_strcpy:
  7027                           
  7028                           	psect	text8
  7029     1BE5                     __ptext8:	
  7030 ;; *************** function _memcpy *****************
  7031 ;; Defined at:
  7032 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  d1              1    wreg     PTR void 
  7035 ;;		 -> dbuf(80), 
  7036 ;;  s1              1    0[BANK0 ] PTR const void 
  7037 ;;		 -> dbuf(80), 
  7038 ;;  n               2    1[BANK0 ] unsigned int 
  7039 ;; Auto vars:     Size  Location     Type
  7040 ;;  d1              1    5[BANK0 ] PTR void 
  7041 ;;		 -> dbuf(80), 
  7042 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  7043 ;;		 -> dbuf(80), 
  7044 ;;  d               1    6[BANK0 ] PTR unsigned char 
  7045 ;;		 -> dbuf(80), 
  7046 ;;  tmp             1    4[BANK0 ] unsigned char 
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      PTR void 
  7049 ;; Registers used:
  7050 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7056 ;;      Params:         0       3       0       0       0       0       0       0
  7057 ;;      Locals:         0       4       0       0       0       0       0       0
  7058 ;;      Temps:          0       1       0       0       0       0       0       0
  7059 ;;      Totals:         0       8       0       0       0       0       0       0
  7060 ;;Total ram usage:        8 bytes
  7061 ;; Hardware stack levels used: 1
  7062 ;; Hardware stack levels required when called: 4
  7063 ;; This function calls:
  7064 ;;		Nothing
  7065 ;; This function is called by:
  7066 ;;		_efgtoa
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070     1BE5                     _memcpy:	
  7071                           ;psect for function _memcpy
  7072                           
  7073                           
  7074                           ;incstack = 0
  7075                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  7076                           ;memcpy@d1 stored from wreg
  7077     1BE5  0020               	movlb	0	; select bank0
  7078     1BE6  00A5               	movwf	memcpy@d1
  7079     1BE7                     l4296:
  7080     1BE7  0820               	movf	memcpy@s1,w
  7081     1BE8  00A7               	movwf	memcpy@s
  7082     1BE9  0825               	movf	memcpy@d1,w
  7083     1BEA  00A6               	movwf	memcpy@d
  7084     1BEB  2C00               	goto	l1264
  7085     1BEC                     l4298:
  7086     1BEC  0827               	movf	memcpy@s,w
  7087     1BED  0086               	movwf	6
  7088     1BEE  3002               	movlw	2	; select bank4/5
  7089     1BEF  0087               	movwf	7
  7090     1BF0  0801               	movf	1,w
  7091     1BF1  00A4               	movwf	memcpy@tmp
  7092     1BF2                     l4300:
  7093     1BF2  3001               	movlw	1
  7094     1BF3  00A3               	movwf	??_memcpy
  7095     1BF4  0823               	movf	??_memcpy,w
  7096     1BF5  07A7               	addwf	memcpy@s,f
  7097     1BF6                     l4302:
  7098     1BF6  0826               	movf	memcpy@d,w
  7099     1BF7  0086               	movwf	6
  7100     1BF8  3002               	movlw	2	; select bank4/5
  7101     1BF9  0087               	movwf	7
  7102     1BFA  0824               	movf	memcpy@tmp,w
  7103     1BFB  0081               	movwf	1
  7104     1BFC  3001               	movlw	1
  7105     1BFD  00A3               	movwf	??_memcpy
  7106     1BFE  0823               	movf	??_memcpy,w
  7107     1BFF  07A6               	addwf	memcpy@d,f
  7108     1C00                     l1264:
  7109     1C00  3001               	movlw	1
  7110     1C01  02A1               	subwf	memcpy@n,f
  7111     1C02  3000               	movlw	0
  7112     1C03  3BA2               	subwfb	memcpy@n+1,f
  7113     1C04  0A21               	incf	memcpy@n,w
  7114     1C05  1D03               	skipz
  7115     1C06  2C0B               	goto	u5041
  7116     1C07  0A22               	incf	memcpy@n+1,w
  7117     1C08  1D03               	btfss	3,2
  7118     1C09  2C0B               	goto	u5041
  7119     1C0A  2C0C               	goto	u5040
  7120     1C0B                     u5041:
  7121     1C0B  2BEC               	goto	l4298
  7122     1C0C                     u5040:
  7123     1C0C                     l1267:
  7124     1C0C  0008               	return
  7125     1C0D                     __end_of_memcpy:
  7126                           
  7127                           	psect	text9
  7128     1A12                     __ptext9:	
  7129 ;; *************** function _labs *****************
  7130 ;; Defined at:
  7131 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  a               4    0[BANK0 ] long 
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;		None
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  4    0[BANK0 ] long 
  7138 ;; Registers used:
  7139 ;;		wreg, status,2, status,0
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7145 ;;      Params:         0       4       0       0       0       0       0       0
  7146 ;;      Locals:         0       0       0       0       0       0       0       0
  7147 ;;      Temps:          0       0       0       0       0       0       0       0
  7148 ;;      Totals:         0       4       0       0       0       0       0       0
  7149 ;;Total ram usage:        4 bytes
  7150 ;; Hardware stack levels used: 1
  7151 ;; Hardware stack levels required when called: 4
  7152 ;; This function calls:
  7153 ;;		Nothing
  7154 ;; This function is called by:
  7155 ;;		_efgtoa
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159     1A12                     _labs:	
  7160                           ;psect for function _labs
  7161                           
  7162     1A12                     l4258:	
  7163                           ;incstack = 0
  7164                           ; Regs used in _labs: [wreg+status,2+status,0]
  7165                           
  7166     1A12  0020               	movlb	0	; select bank0
  7167     1A13  1BA3               	btfsc	labs@a+3,7
  7168     1A14  2A16               	goto	u4921
  7169     1A15  2A17               	goto	u4920
  7170     1A16                     u4921:
  7171     1A16  2A18               	goto	l4262
  7172     1A17                     u4920:
  7173     1A17                     l4260:
  7174     1A17  2A27               	goto	l1261
  7175     1A18                     l4262:
  7176     1A18  0920               	comf	labs@a,w
  7177     1A19  00A0               	movwf	?_labs
  7178     1A1A  0921               	comf	labs@a+1,w
  7179     1A1B  00A1               	movwf	?_labs+1
  7180     1A1C  0922               	comf	labs@a+2,w
  7181     1A1D  00A2               	movwf	?_labs+2
  7182     1A1E  0923               	comf	labs@a+3,w
  7183     1A1F  00A3               	movwf	?_labs+3
  7184     1A20  0AA0               	incf	?_labs,f
  7185     1A21  1903               	skipnz
  7186     1A22  0AA1               	incf	?_labs+1,f
  7187     1A23  1903               	skipnz
  7188     1A24  0AA2               	incf	?_labs+2,f
  7189     1A25  1903               	skipnz
  7190     1A26  0AA3               	incf	?_labs+3,f
  7191     1A27                     l1261:
  7192     1A27  0008               	return
  7193     1A28                     __end_of_labs:
  7194                           
  7195                           	psect	text10
  7196     0805                     __ptext10:	
  7197 ;; *************** function _floorf *****************
  7198 ;; Defined at:
  7199 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  x               4   46[BANK0 ] float 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  u               4   62[BANK0 ] struct .
  7204 ;;  m               4   56[BANK0 ] unsigned long 
  7205 ;;  e               2   60[BANK0 ] int 
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  4   46[BANK0 ] float 
  7208 ;; Registers used:
  7209 ;;		wreg, status,2, status,0
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7215 ;;      Params:         0       4       0       0       0       0       0       0
  7216 ;;      Locals:         0      10       0       0       0       0       0       0
  7217 ;;      Temps:          0       6       0       0       0       0       0       0
  7218 ;;      Totals:         0      20       0       0       0       0       0       0
  7219 ;;Total ram usage:       20 bytes
  7220 ;; Hardware stack levels used: 1
  7221 ;; Hardware stack levels required when called: 4
  7222 ;; This function calls:
  7223 ;;		Nothing
  7224 ;; This function is called by:
  7225 ;;		_efgtoa
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229     0805                     _floorf:	
  7230                           ;psect for function _floorf
  7231                           
  7232     0805                     l4266:	
  7233                           ;incstack = 0
  7234                           ; Regs used in _floorf: [wreg+status,2+status,0]
  7235                           
  7236     0805  0022               	movlb	2	; select bank2
  7237     0806  0823               	movf	(floorf@F521+3)^(0+256),w
  7238     0807  0020               	movlb	0	; select bank0
  7239     0808  00E1               	movwf	floorf@u+3
  7240     0809  0022               	movlb	2	; select bank2
  7241     080A  0822               	movf	(floorf@F521+2)^(0+256),w
  7242     080B  0020               	movlb	0	; select bank0
  7243     080C  00E0               	movwf	floorf@u+2
  7244     080D  0022               	movlb	2	; select bank2
  7245     080E  0821               	movf	(floorf@F521+1)^(0+256),w
  7246     080F  0020               	movlb	0	; select bank0
  7247     0810  00DF               	movwf	floorf@u+1
  7248     0811  0022               	movlb	2	; select bank2
  7249     0812  0820               	movf	floorf@F521^(0+256),w
  7250     0813  0020               	movlb	0	; select bank0
  7251     0814  00DE               	movwf	floorf@u
  7252     0815  0851               	movf	floorf@x+3,w
  7253     0816  00E1               	movwf	floorf@u+3
  7254     0817  0850               	movf	floorf@x+2,w
  7255     0818  00E0               	movwf	floorf@u+2
  7256     0819  084F               	movf	floorf@x+1,w
  7257     081A  00DF               	movwf	floorf@u+1
  7258     081B  084E               	movf	floorf@x,w
  7259     081C  00DE               	movwf	floorf@u
  7260     081D                     l4268:
  7261     081D  085E               	movf	floorf@u,w
  7262     081E  00D2               	movwf	??_floorf
  7263     081F  085F               	movf	floorf@u+1,w
  7264     0820  00D3               	movwf	??_floorf+1
  7265     0821  0860               	movf	floorf@u+2,w
  7266     0822  00D4               	movwf	??_floorf+2
  7267     0823  0861               	movf	floorf@u+3,w
  7268     0824  00D5               	movwf	??_floorf+3
  7269     0825  3017               	movlw	23
  7270     0826                     u4935:
  7271     0826  36D5               	lsrf	??_floorf+3,f
  7272     0827  0CD4               	rrf	??_floorf+2,f
  7273     0828  0CD3               	rrf	??_floorf+1,f
  7274     0829  0CD2               	rrf	??_floorf,f
  7275     082A                     u4930:
  7276     082A  0B89               	decfsz	9,f
  7277     082B  2826               	goto	u4935
  7278     082C  30FF               	movlw	255
  7279     082D  0552               	andwf	??_floorf,w
  7280     082E  00D6               	movwf	??_floorf+4
  7281     082F  3000               	movlw	0
  7282     0830  0553               	andwf	??_floorf+1,w
  7283     0831  00D7               	movwf	??_floorf+5
  7284     0832  0856               	movf	??_floorf+4,w
  7285     0833  3E81               	addlw	129
  7286     0834  00DC               	movwf	floorf@e
  7287     0835  30FF               	movlw	255
  7288     0836  3D57               	addwfc	??_floorf+5,w
  7289     0837  00DD               	movwf	floorf@e+1
  7290     0838                     l4270:
  7291     0838  085D               	movf	floorf@e+1,w
  7292     0839  3A80               	xorlw	128
  7293     083A  00D2               	movwf	??_floorf
  7294     083B  3080               	movlw	128
  7295     083C  0252               	subwf	??_floorf,w
  7296     083D  1D03               	skipz
  7297     083E  2841               	goto	u4945
  7298     083F  3017               	movlw	23
  7299     0840  025C               	subwf	floorf@e,w
  7300     0841                     u4945:
  7301     0841  1C03               	skipc
  7302     0842  2844               	goto	u4941
  7303     0843  2845               	goto	u4940
  7304     0844                     u4941:
  7305     0844  2846               	goto	l1246
  7306     0845                     u4940:
  7307     0845                     l4272:
  7308     0845  28EF               	goto	l1247
  7309     0846                     l1246:
  7310     0846  0020               	movlb	0	; select bank0
  7311     0847  1BDD               	btfsc	floorf@e+1,7
  7312     0848  284A               	goto	u4951
  7313     0849  284B               	goto	u4950
  7314     084A                     u4951:
  7315     084A  28A8               	goto	l4286
  7316     084B                     u4950:
  7317     084B                     l4274:
  7318     084B  30FF               	movlw	255
  7319     084C  00D2               	movwf	??_floorf
  7320     084D  30FF               	movlw	255
  7321     084E  00D3               	movwf	??_floorf+1
  7322     084F  307F               	movlw	127
  7323     0850  00D4               	movwf	??_floorf+2
  7324     0851  3000               	movlw	0
  7325     0852  00D5               	movwf	??_floorf+3
  7326     0853  0A5C               	incf	floorf@e,w
  7327     0854  2859               	goto	u4960
  7328     0855                     u4965:
  7329     0855  37D5               	asrf	??_floorf+3,f
  7330     0856  0CD4               	rrf	??_floorf+2,f
  7331     0857  0CD3               	rrf	??_floorf+1,f
  7332     0858  0CD2               	rrf	??_floorf,f
  7333     0859                     u4960:
  7334     0859  0B89               	decfsz	9,f
  7335     085A  2855               	goto	u4965
  7336     085B  0855               	movf	??_floorf+3,w
  7337     085C  00DB               	movwf	floorf@m+3
  7338     085D  0854               	movf	??_floorf+2,w
  7339     085E  00DA               	movwf	floorf@m+2
  7340     085F  0853               	movf	??_floorf+1,w
  7341     0860  00D9               	movwf	floorf@m+1
  7342     0861  0852               	movf	??_floorf,w
  7343     0862  00D8               	movwf	floorf@m
  7344     0863                     l4276:
  7345     0863  085E               	movf	floorf@u,w
  7346     0864  0558               	andwf	floorf@m,w
  7347     0865  00D2               	movwf	??_floorf
  7348     0866  085F               	movf	floorf@u+1,w
  7349     0867  0559               	andwf	floorf@m+1,w
  7350     0868  00D3               	movwf	??_floorf+1
  7351     0869  0860               	movf	floorf@u+2,w
  7352     086A  055A               	andwf	floorf@m+2,w
  7353     086B  00D4               	movwf	??_floorf+2
  7354     086C  0861               	movf	floorf@u+3,w
  7355     086D  055B               	andwf	floorf@m+3,w
  7356     086E  00D5               	movwf	??_floorf+3
  7357     086F  0855               	movf	??_floorf+3,w
  7358     0870  0454               	iorwf	??_floorf+2,w
  7359     0871  0453               	iorwf	??_floorf+1,w
  7360     0872  0452               	iorwf	??_floorf,w
  7361     0873  1D03               	skipz
  7362     0874  2876               	goto	u4971
  7363     0875  2877               	goto	u4970
  7364     0876                     u4971:
  7365     0876  2878               	goto	l4280
  7366     0877                     u4970:
  7367     0877  2845               	goto	l4272
  7368     0878                     l4280:
  7369     0878  085E               	movf	floorf@u,w
  7370     0879  00D2               	movwf	??_floorf
  7371     087A  085F               	movf	floorf@u+1,w
  7372     087B  00D3               	movwf	??_floorf+1
  7373     087C  0860               	movf	floorf@u+2,w
  7374     087D  00D4               	movwf	??_floorf+2
  7375     087E  0861               	movf	floorf@u+3,w
  7376     087F  00D5               	movwf	??_floorf+3
  7377     0880  301F               	movlw	31
  7378     0881                     u4985:
  7379     0881  36D5               	lsrf	??_floorf+3,f
  7380     0882  0CD4               	rrf	??_floorf+2,f
  7381     0883  0CD3               	rrf	??_floorf+1,f
  7382     0884  0CD2               	rrf	??_floorf,f
  7383     0885                     u4980:
  7384     0885  0B89               	decfsz	9,f
  7385     0886  2881               	goto	u4985
  7386     0887  0855               	movf	??_floorf+3,w
  7387     0888  0454               	iorwf	??_floorf+2,w
  7388     0889  0453               	iorwf	??_floorf+1,w
  7389     088A  0452               	iorwf	??_floorf,w
  7390     088B  1903               	skipnz
  7391     088C  288E               	goto	u4991
  7392     088D  288F               	goto	u4990
  7393     088E                     u4991:
  7394     088E  2897               	goto	l4284
  7395     088F                     u4990:
  7396     088F                     l4282:
  7397     088F  0858               	movf	floorf@m,w
  7398     0890  07DE               	addwf	floorf@u,f
  7399     0891  0859               	movf	floorf@m+1,w
  7400     0892  3DDF               	addwfc	floorf@u+1,f
  7401     0893  085A               	movf	floorf@m+2,w
  7402     0894  3DE0               	addwfc	floorf@u+2,f
  7403     0895  085B               	movf	floorf@m+3,w
  7404     0896  3DE1               	addwfc	floorf@u+3,f
  7405     0897                     l4284:
  7406     0897  0958               	comf	floorf@m,w
  7407     0898  00D2               	movwf	??_floorf
  7408     0899  0959               	comf	floorf@m+1,w
  7409     089A  00D3               	movwf	??_floorf+1
  7410     089B  095A               	comf	floorf@m+2,w
  7411     089C  00D4               	movwf	??_floorf+2
  7412     089D  095B               	comf	floorf@m+3,w
  7413     089E  00D5               	movwf	??_floorf+3
  7414     089F  0852               	movf	??_floorf,w
  7415     08A0  05DE               	andwf	floorf@u,f
  7416     08A1  0853               	movf	??_floorf+1,w
  7417     08A2  05DF               	andwf	floorf@u+1,f
  7418     08A3  0854               	movf	??_floorf+2,w
  7419     08A4  05E0               	andwf	floorf@u+2,f
  7420     08A5  0855               	movf	??_floorf+3,w
  7421     08A6  05E1               	andwf	floorf@u+3,f
  7422     08A7  28E7               	goto	l1251
  7423     08A8                     l4286:
  7424     08A8  085E               	movf	floorf@u,w
  7425     08A9  00D2               	movwf	??_floorf
  7426     08AA  085F               	movf	floorf@u+1,w
  7427     08AB  00D3               	movwf	??_floorf+1
  7428     08AC  0860               	movf	floorf@u+2,w
  7429     08AD  00D4               	movwf	??_floorf+2
  7430     08AE  0861               	movf	floorf@u+3,w
  7431     08AF  00D5               	movwf	??_floorf+3
  7432     08B0  301F               	movlw	31
  7433     08B1                     u5005:
  7434     08B1  36D5               	lsrf	??_floorf+3,f
  7435     08B2  0CD4               	rrf	??_floorf+2,f
  7436     08B3  0CD3               	rrf	??_floorf+1,f
  7437     08B4  0CD2               	rrf	??_floorf,f
  7438     08B5                     u5000:
  7439     08B5  0B89               	decfsz	9,f
  7440     08B6  28B1               	goto	u5005
  7441     08B7  0855               	movf	??_floorf+3,w
  7442     08B8  0454               	iorwf	??_floorf+2,w
  7443     08B9  0453               	iorwf	??_floorf+1,w
  7444     08BA  0452               	iorwf	??_floorf,w
  7445     08BB  1D03               	skipz
  7446     08BC  28BE               	goto	u5011
  7447     08BD  28BF               	goto	u5010
  7448     08BE                     u5011:
  7449     08BE  28C8               	goto	l4290
  7450     08BF                     u5010:
  7451     08BF                     l4288:
  7452     08BF  3000               	movlw	0
  7453     08C0  00E1               	movwf	floorf@u+3
  7454     08C1  3000               	movlw	0
  7455     08C2  00E0               	movwf	floorf@u+2
  7456     08C3  3000               	movlw	0
  7457     08C4  00DF               	movwf	floorf@u+1
  7458     08C5  3000               	movlw	0
  7459     08C6  00DE               	movwf	floorf@u
  7460     08C7  28E7               	goto	l1251
  7461     08C8                     l4290:
  7462     08C8  085E               	movf	floorf@u,w
  7463     08C9  00D2               	movwf	??_floorf
  7464     08CA  085F               	movf	floorf@u+1,w
  7465     08CB  00D3               	movwf	??_floorf+1
  7466     08CC  0860               	movf	floorf@u+2,w
  7467     08CD  00D4               	movwf	??_floorf+2
  7468     08CE  0861               	movf	floorf@u+3,w
  7469     08CF  00D5               	movwf	??_floorf+3
  7470     08D0  3001               	movlw	1
  7471     08D1                     u5025:
  7472     08D1  35D2               	lslf	??_floorf,f
  7473     08D2  0DD3               	rlf	??_floorf+1,f
  7474     08D3  0DD4               	rlf	??_floorf+2,f
  7475     08D4  0DD5               	rlf	??_floorf+3,f
  7476     08D5                     u5020:
  7477     08D5  0B89               	decfsz	9,f
  7478     08D6  28D1               	goto	u5025
  7479     08D7  0855               	movf	??_floorf+3,w
  7480     08D8  0454               	iorwf	??_floorf+2,w
  7481     08D9  0453               	iorwf	??_floorf+1,w
  7482     08DA  0452               	iorwf	??_floorf,w
  7483     08DB  1903               	skipnz
  7484     08DC  28DE               	goto	u5031
  7485     08DD  28DF               	goto	u5030
  7486     08DE                     u5031:
  7487     08DE  28E7               	goto	l1251
  7488     08DF                     u5030:
  7489     08DF                     l4292:
  7490     08DF  30BF               	movlw	191
  7491     08E0  00E1               	movwf	floorf@u+3
  7492     08E1  3080               	movlw	128
  7493     08E2  00E0               	movwf	floorf@u+2
  7494     08E3  3000               	movlw	0
  7495     08E4  00DF               	movwf	floorf@u+1
  7496     08E5  3000               	movlw	0
  7497     08E6  00DE               	movwf	floorf@u
  7498     08E7                     l1251:
  7499     08E7  0861               	movf	floorf@u+3,w
  7500     08E8  00D1               	movwf	?_floorf+3
  7501     08E9  0860               	movf	floorf@u+2,w
  7502     08EA  00D0               	movwf	?_floorf+2
  7503     08EB  085F               	movf	floorf@u+1,w
  7504     08EC  00CF               	movwf	?_floorf+1
  7505     08ED  085E               	movf	floorf@u,w
  7506     08EE  00CE               	movwf	?_floorf
  7507     08EF                     l1247:
  7508     08EF  0008               	return
  7509     08F0                     __end_of_floorf:
  7510                           
  7511                           	psect	text11
  7512     104B                     __ptext11:	
  7513 ;; *************** function ___fpclassifyf *****************
  7514 ;; Defined at:
  7515 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  x               4    0[BANK0 ] float 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  u               4   12[BANK0 ] struct .
  7520 ;;  e               2   10[BANK0 ] int 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  2    0[BANK0 ] int 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7530 ;;      Params:         0       4       0       0       0       0       0       0
  7531 ;;      Locals:         0       6       0       0       0       0       0       0
  7532 ;;      Temps:          0       6       0       0       0       0       0       0
  7533 ;;      Totals:         0      16       0       0       0       0       0       0
  7534 ;;Total ram usage:       16 bytes
  7535 ;; Hardware stack levels used: 1
  7536 ;; Hardware stack levels required when called: 4
  7537 ;; This function calls:
  7538 ;;		Nothing
  7539 ;; This function is called by:
  7540 ;;		_efgtoa
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544     104B                     ___fpclassifyf:	
  7545                           ;psect for function ___fpclassifyf
  7546                           
  7547     104B                     l4230:	
  7548                           ;incstack = 0
  7549                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  7550                           
  7551     104B  0022               	movlb	2	; select bank2
  7552     104C  0827               	movf	(___fpclassifyf@F465+3)^(0+256),w
  7553     104D  0020               	movlb	0	; select bank0
  7554     104E  00AF               	movwf	___fpclassifyf@u+3
  7555     104F  0022               	movlb	2	; select bank2
  7556     1050  0826               	movf	(___fpclassifyf@F465+2)^(0+256),w
  7557     1051  0020               	movlb	0	; select bank0
  7558     1052  00AE               	movwf	___fpclassifyf@u+2
  7559     1053  0022               	movlb	2	; select bank2
  7560     1054  0825               	movf	(___fpclassifyf@F465+1)^(0+256),w
  7561     1055  0020               	movlb	0	; select bank0
  7562     1056  00AD               	movwf	___fpclassifyf@u+1
  7563     1057  0022               	movlb	2	; select bank2
  7564     1058  0824               	movf	___fpclassifyf@F465^(0+256),w
  7565     1059  0020               	movlb	0	; select bank0
  7566     105A  00AC               	movwf	___fpclassifyf@u
  7567     105B  0823               	movf	___fpclassifyf@x+3,w
  7568     105C  00AF               	movwf	___fpclassifyf@u+3
  7569     105D  0822               	movf	___fpclassifyf@x+2,w
  7570     105E  00AE               	movwf	___fpclassifyf@u+2
  7571     105F  0821               	movf	___fpclassifyf@x+1,w
  7572     1060  00AD               	movwf	___fpclassifyf@u+1
  7573     1061  0820               	movf	___fpclassifyf@x,w
  7574     1062  00AC               	movwf	___fpclassifyf@u
  7575     1063                     l4232:
  7576     1063  082C               	movf	___fpclassifyf@u,w
  7577     1064  00A4               	movwf	??___fpclassifyf
  7578     1065  082D               	movf	___fpclassifyf@u+1,w
  7579     1066  00A5               	movwf	??___fpclassifyf+1
  7580     1067  082E               	movf	___fpclassifyf@u+2,w
  7581     1068  00A6               	movwf	??___fpclassifyf+2
  7582     1069  082F               	movf	___fpclassifyf@u+3,w
  7583     106A  00A7               	movwf	??___fpclassifyf+3
  7584     106B  3017               	movlw	23
  7585     106C                     u4835:
  7586     106C  36A7               	lsrf	??___fpclassifyf+3,f
  7587     106D  0CA6               	rrf	??___fpclassifyf+2,f
  7588     106E  0CA5               	rrf	??___fpclassifyf+1,f
  7589     106F  0CA4               	rrf	??___fpclassifyf,f
  7590     1070                     u4830:
  7591     1070  0B89               	decfsz	9,f
  7592     1071  286C               	goto	u4835
  7593     1072  30FF               	movlw	255
  7594     1073  0524               	andwf	??___fpclassifyf,w
  7595     1074  00AA               	movwf	___fpclassifyf@e
  7596     1075  3000               	movlw	0
  7597     1076  0525               	andwf	??___fpclassifyf+1,w
  7598     1077  00AB               	movwf	___fpclassifyf@e+1
  7599     1078                     l4234:
  7600     1078  082A               	movf	___fpclassifyf@e,w
  7601     1079  042B               	iorwf	___fpclassifyf@e+1,w
  7602     107A  1D03               	btfss	3,2
  7603     107B  287D               	goto	u4841
  7604     107C  287E               	goto	u4840
  7605     107D                     u4841:
  7606     107D  289F               	goto	l4244
  7607     107E                     u4840:
  7608     107E                     l4236:
  7609     107E  082C               	movf	___fpclassifyf@u,w
  7610     107F  00A4               	movwf	??___fpclassifyf
  7611     1080  082D               	movf	___fpclassifyf@u+1,w
  7612     1081  00A5               	movwf	??___fpclassifyf+1
  7613     1082  082E               	movf	___fpclassifyf@u+2,w
  7614     1083  00A6               	movwf	??___fpclassifyf+2
  7615     1084  082F               	movf	___fpclassifyf@u+3,w
  7616     1085  00A7               	movwf	??___fpclassifyf+3
  7617     1086  3001               	movlw	1
  7618     1087                     u4855:
  7619     1087  35A4               	lslf	??___fpclassifyf,f
  7620     1088  0DA5               	rlf	??___fpclassifyf+1,f
  7621     1089  0DA6               	rlf	??___fpclassifyf+2,f
  7622     108A  0DA7               	rlf	??___fpclassifyf+3,f
  7623     108B                     u4850:
  7624     108B  0B89               	decfsz	9,f
  7625     108C  2887               	goto	u4855
  7626     108D  0827               	movf	??___fpclassifyf+3,w
  7627     108E  0426               	iorwf	??___fpclassifyf+2,w
  7628     108F  0425               	iorwf	??___fpclassifyf+1,w
  7629     1090  0424               	iorwf	??___fpclassifyf,w
  7630     1091  1D03               	skipz
  7631     1092  2894               	goto	u4861
  7632     1093  2895               	goto	u4860
  7633     1094                     u4861:
  7634     1094  289A               	goto	l4240
  7635     1095                     u4860:
  7636     1095                     l4238:
  7637     1095  3002               	movlw	2
  7638     1096  00A0               	movwf	?___fpclassifyf
  7639     1097  3000               	movlw	0
  7640     1098  00A1               	movwf	?___fpclassifyf+1
  7641     1099  28C9               	goto	l1233
  7642     109A                     l4240:
  7643     109A  3003               	movlw	3
  7644     109B  00A0               	movwf	?___fpclassifyf
  7645     109C  3000               	movlw	0
  7646     109D  00A1               	movwf	?___fpclassifyf+1
  7647     109E  28C9               	goto	l1233
  7648     109F                     l4244:
  7649     109F  0A2A               	incf	___fpclassifyf@e,w
  7650     10A0  042B               	iorwf	___fpclassifyf@e+1,w
  7651     10A1  1D03               	btfss	3,2
  7652     10A2  28A4               	goto	u4871
  7653     10A3  28A5               	goto	u4870
  7654     10A4                     u4871:
  7655     10A4  28C5               	goto	l4250
  7656     10A5                     u4870:
  7657     10A5                     l4246:
  7658     10A5  082C               	movf	___fpclassifyf@u,w
  7659     10A6  00A4               	movwf	??___fpclassifyf
  7660     10A7  082D               	movf	___fpclassifyf@u+1,w
  7661     10A8  00A5               	movwf	??___fpclassifyf+1
  7662     10A9  082E               	movf	___fpclassifyf@u+2,w
  7663     10AA  00A6               	movwf	??___fpclassifyf+2
  7664     10AB  082F               	movf	___fpclassifyf@u+3,w
  7665     10AC  00A7               	movwf	??___fpclassifyf+3
  7666     10AD  3009               	movlw	9
  7667     10AE                     u4885:
  7668     10AE  35A4               	lslf	??___fpclassifyf,f
  7669     10AF  0DA5               	rlf	??___fpclassifyf+1,f
  7670     10B0  0DA6               	rlf	??___fpclassifyf+2,f
  7671     10B1  0DA7               	rlf	??___fpclassifyf+3,f
  7672     10B2                     u4880:
  7673     10B2  0B89               	decfsz	9,f
  7674     10B3  28AE               	goto	u4885
  7675     10B4  0827               	movf	??___fpclassifyf+3,w
  7676     10B5  0426               	iorwf	??___fpclassifyf+2,w
  7677     10B6  0425               	iorwf	??___fpclassifyf+1,w
  7678     10B7  0424               	iorwf	??___fpclassifyf,w
  7679     10B8  1903               	skipnz
  7680     10B9  28BB               	goto	u4891
  7681     10BA  28BD               	goto	u4890
  7682     10BB                     u4891:
  7683     10BB  3001               	movlw	1
  7684     10BC  28BE               	goto	u4900
  7685     10BD                     u4890:
  7686     10BD  3000               	movlw	0
  7687     10BE                     u4900:
  7688     10BE  00A8               	movwf	??___fpclassifyf+4
  7689     10BF  01A9               	clrf	??___fpclassifyf+5
  7690     10C0  0828               	movf	??___fpclassifyf+4,w
  7691     10C1  00A0               	movwf	?___fpclassifyf
  7692     10C2  0829               	movf	??___fpclassifyf+5,w
  7693     10C3  00A1               	movwf	?___fpclassifyf+1
  7694     10C4  28C9               	goto	l1233
  7695     10C5                     l4250:
  7696     10C5  3004               	movlw	4
  7697     10C6  00A0               	movwf	?___fpclassifyf
  7698     10C7  3000               	movlw	0
  7699     10C8  00A1               	movwf	?___fpclassifyf+1
  7700     10C9                     l1233:
  7701     10C9  0008               	return
  7702     10CA                     __end_of___fpclassifyf:
  7703                           
  7704                           	psect	text12
  7705     1EA0                     __ptext12:	
  7706 ;; *************** function ___fltol *****************
  7707 ;; Defined at:
  7708 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  f1              4    0[BANK0 ] int 
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;  exp1            1    9[BANK0 ] unsigned char 
  7713 ;;  sign1           1    8[BANK0 ] unsigned char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  4    0[BANK0 ] long 
  7716 ;; Registers used:
  7717 ;;		wreg, status,2, status,0
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7723 ;;      Params:         0       4       0       0       0       0       0       0
  7724 ;;      Locals:         0       2       0       0       0       0       0       0
  7725 ;;      Temps:          0       4       0       0       0       0       0       0
  7726 ;;      Totals:         0      10       0       0       0       0       0       0
  7727 ;;Total ram usage:       10 bytes
  7728 ;; Hardware stack levels used: 1
  7729 ;; Hardware stack levels required when called: 4
  7730 ;; This function calls:
  7731 ;;		Nothing
  7732 ;; This function is called by:
  7733 ;;		_efgtoa
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737     1EA0                     ___fltol:	
  7738                           ;psect for function ___fltol
  7739                           
  7740     1EA0                     l3888:	
  7741                           ;incstack = 0
  7742                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7743                           
  7744     1EA0  1003               	clrc
  7745     1EA1  0020               	movlb	0	; select bank0
  7746     1EA2  0D22               	rlf	___fltol@f1+2,w
  7747     1EA3  0D23               	rlf	___fltol@f1+3,w
  7748     1EA4  00A9               	movwf	___fltol@exp1
  7749     1EA5  0829               	movf	___fltol@exp1,w
  7750     1EA6  1D03               	btfss	3,2
  7751     1EA7  2EA9               	goto	u4151
  7752     1EA8  2EAA               	goto	u4150
  7753     1EA9                     u4151:
  7754     1EA9  2EB3               	goto	l3894
  7755     1EAA                     u4150:
  7756     1EAA                     l3890:
  7757     1EAA  3000               	movlw	0
  7758     1EAB  00A3               	movwf	?___fltol+3
  7759     1EAC  3000               	movlw	0
  7760     1EAD  00A2               	movwf	?___fltol+2
  7761     1EAE  3000               	movlw	0
  7762     1EAF  00A1               	movwf	?___fltol+1
  7763     1EB0  3000               	movlw	0
  7764     1EB1  00A0               	movwf	?___fltol
  7765     1EB2  2F10               	goto	l797
  7766     1EB3                     l3894:
  7767     1EB3  0820               	movf	___fltol@f1,w
  7768     1EB4  00A4               	movwf	??___fltol
  7769     1EB5  0821               	movf	___fltol@f1+1,w
  7770     1EB6  00A5               	movwf	??___fltol+1
  7771     1EB7  0822               	movf	___fltol@f1+2,w
  7772     1EB8  00A6               	movwf	??___fltol+2
  7773     1EB9  0823               	movf	___fltol@f1+3,w
  7774     1EBA  00A7               	movwf	??___fltol+3
  7775     1EBB  301F               	movlw	31
  7776     1EBC                     u4165:
  7777     1EBC  36A7               	lsrf	??___fltol+3,f
  7778     1EBD  0CA6               	rrf	??___fltol+2,f
  7779     1EBE  0CA5               	rrf	??___fltol+1,f
  7780     1EBF  0CA4               	rrf	??___fltol,f
  7781     1EC0                     u4160:
  7782     1EC0  0B89               	decfsz	9,f
  7783     1EC1  2EBC               	goto	u4165
  7784     1EC2  0824               	movf	??___fltol,w
  7785     1EC3  00A8               	movwf	___fltol@sign1
  7786     1EC4                     l3896:
  7787     1EC4  17A2               	bsf	___fltol@f1+2,7
  7788     1EC5                     l3898:
  7789     1EC5  30FF               	movlw	255
  7790     1EC6  05A0               	andwf	___fltol@f1,f
  7791     1EC7  30FF               	movlw	255
  7792     1EC8  05A1               	andwf	___fltol@f1+1,f
  7793     1EC9  30FF               	movlw	255
  7794     1ECA  05A2               	andwf	___fltol@f1+2,f
  7795     1ECB  3000               	movlw	0
  7796     1ECC  05A3               	andwf	___fltol@f1+3,f
  7797     1ECD                     l3900:
  7798     1ECD  3096               	movlw	150
  7799     1ECE  02A9               	subwf	___fltol@exp1,f
  7800     1ECF                     l3902:
  7801     1ECF  1FA9               	btfss	___fltol@exp1,7
  7802     1ED0  2ED2               	goto	u4171
  7803     1ED1  2ED3               	goto	u4170
  7804     1ED2                     u4171:
  7805     1ED2  2EEB               	goto	l3912
  7806     1ED3                     u4170:
  7807     1ED3                     l3904:
  7808     1ED3  0829               	movf	___fltol@exp1,w
  7809     1ED4  3A80               	xorlw	128
  7810     1ED5  3E97               	addlw	151
  7811     1ED6  1803               	skipnc
  7812     1ED7  2ED9               	goto	u4181
  7813     1ED8  2EDA               	goto	u4180
  7814     1ED9                     u4181:
  7815     1ED9  2EDB               	goto	l3910
  7816     1EDA                     u4180:
  7817     1EDA  2EAA               	goto	l3890
  7818     1EDB                     l3910:
  7819     1EDB  3001               	movlw	1
  7820     1EDC                     u4195:
  7821     1EDC  36A3               	lsrf	___fltol@f1+3,f
  7822     1EDD  0CA2               	rrf	___fltol@f1+2,f
  7823     1EDE  0CA1               	rrf	___fltol@f1+1,f
  7824     1EDF  0CA0               	rrf	___fltol@f1,f
  7825     1EE0  0B89               	decfsz	9,f
  7826     1EE1  2EDC               	goto	u4195
  7827     1EE2  3001               	movlw	1
  7828     1EE3  00A4               	movwf	??___fltol
  7829     1EE4  0824               	movf	??___fltol,w
  7830     1EE5  07A9               	addwf	___fltol@exp1,f
  7831     1EE6  1D03               	btfss	3,2
  7832     1EE7  2EE9               	goto	u4201
  7833     1EE8  2EEA               	goto	u4200
  7834     1EE9                     u4201:
  7835     1EE9  2EDB               	goto	l3910
  7836     1EEA                     u4200:
  7837     1EEA  2F00               	goto	l3920
  7838     1EEB                     l3912:
  7839     1EEB  3020               	movlw	32
  7840     1EEC  0229               	subwf	___fltol@exp1,w
  7841     1EED  1C03               	skipc
  7842     1EEE  2EF0               	goto	u4211
  7843     1EEF  2EF1               	goto	u4210
  7844     1EF0                     u4211:
  7845     1EF0  2EFB               	goto	l804
  7846     1EF1                     u4210:
  7847     1EF1  2EAA               	goto	l3890
  7848     1EF2                     l3918:
  7849     1EF2  3001               	movlw	1
  7850     1EF3                     u4225:
  7851     1EF3  35A0               	lslf	___fltol@f1,f
  7852     1EF4  0DA1               	rlf	___fltol@f1+1,f
  7853     1EF5  0DA2               	rlf	___fltol@f1+2,f
  7854     1EF6  0DA3               	rlf	___fltol@f1+3,f
  7855     1EF7  0B89               	decfsz	9,f
  7856     1EF8  2EF3               	goto	u4225
  7857     1EF9  3001               	movlw	1
  7858     1EFA  02A9               	subwf	___fltol@exp1,f
  7859     1EFB                     l804:
  7860     1EFB  0829               	movf	___fltol@exp1,w
  7861     1EFC  1D03               	btfss	3,2
  7862     1EFD  2EFF               	goto	u4231
  7863     1EFE  2F00               	goto	u4230
  7864     1EFF                     u4231:
  7865     1EFF  2EF2               	goto	l3918
  7866     1F00                     u4230:
  7867     1F00                     l3920:
  7868     1F00  0828               	movf	___fltol@sign1,w
  7869     1F01  1903               	btfsc	3,2
  7870     1F02  2F04               	goto	u4241
  7871     1F03  2F05               	goto	u4240
  7872     1F04                     u4241:
  7873     1F04  2F10               	goto	l807
  7874     1F05                     u4240:
  7875     1F05                     l3922:
  7876     1F05  09A0               	comf	___fltol@f1,f
  7877     1F06  09A1               	comf	___fltol@f1+1,f
  7878     1F07  09A2               	comf	___fltol@f1+2,f
  7879     1F08  09A3               	comf	___fltol@f1+3,f
  7880     1F09  0AA0               	incf	___fltol@f1,f
  7881     1F0A  1903               	skipnz
  7882     1F0B  0AA1               	incf	___fltol@f1+1,f
  7883     1F0C  1903               	skipnz
  7884     1F0D  0AA2               	incf	___fltol@f1+2,f
  7885     1F0E  1903               	skipnz
  7886     1F0F  0AA3               	incf	___fltol@f1+3,f
  7887     1F10                     l807:
  7888     1F10                     l797:
  7889     1F10  0008               	return
  7890     1F11                     __end_of___fltol:
  7891                           
  7892                           	psect	text13
  7893     1AEE                     __ptext13:	
  7894 ;; *************** function ___flsub *****************
  7895 ;; Defined at:
  7896 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;  a               4   35[BANK0 ] long 
  7899 ;;  b               4   39[BANK0 ] long 
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;		None
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  4   35[BANK0 ] long 
  7904 ;; Registers used:
  7905 ;;		wreg, status,2, status,0, pclath, cstack
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7911 ;;      Params:         0       8       0       0       0       0       0       0
  7912 ;;      Locals:         0       0       0       0       0       0       0       0
  7913 ;;      Temps:          0       0       0       0       0       0       0       0
  7914 ;;      Totals:         0       8       0       0       0       0       0       0
  7915 ;;Total ram usage:        8 bytes
  7916 ;; Hardware stack levels used: 1
  7917 ;; Hardware stack levels required when called: 5
  7918 ;; This function calls:
  7919 ;;		___fladd
  7920 ;; This function is called by:
  7921 ;;		_efgtoa
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925     1AEE                     ___flsub:	
  7926                           ;psect for function ___flsub
  7927                           
  7928     1AEE                     l3924:	
  7929                           ;incstack = 0
  7930                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7931                           
  7932     1AEE  3080               	movlw	128
  7933     1AEF  0020               	movlb	0	; select bank0
  7934     1AF0  06C6               	xorwf	___flsub@a+3,f
  7935     1AF1                     l3926:
  7936     1AF1  084A               	movf	___flsub@b+3,w
  7937     1AF2  00A3               	movwf	___fladd@b+3
  7938     1AF3  0849               	movf	___flsub@b+2,w
  7939     1AF4  00A2               	movwf	___fladd@b+2
  7940     1AF5  0848               	movf	___flsub@b+1,w
  7941     1AF6  00A1               	movwf	___fladd@b+1
  7942     1AF7  0847               	movf	___flsub@b,w
  7943     1AF8  00A0               	movwf	___fladd@b
  7944     1AF9  0846               	movf	___flsub@a+3,w
  7945     1AFA  00A7               	movwf	___fladd@a+3
  7946     1AFB  0845               	movf	___flsub@a+2,w
  7947     1AFC  00A6               	movwf	___fladd@a+2
  7948     1AFD  0844               	movf	___flsub@a+1,w
  7949     1AFE  00A5               	movwf	___fladd@a+1
  7950     1AFF  0843               	movf	___flsub@a,w
  7951     1B00  00A4               	movwf	___fladd@a
  7952     1B01  3184  24AD  319A   	fcall	___fladd
  7953     1B04  0020               	movlb	0	; select bank0
  7954     1B05  0823               	movf	?___fladd+3,w
  7955     1B06  00C6               	movwf	?___flsub+3
  7956     1B07  0822               	movf	?___fladd+2,w
  7957     1B08  00C5               	movwf	?___flsub+2
  7958     1B09  0821               	movf	?___fladd+1,w
  7959     1B0A  00C4               	movwf	?___flsub+1
  7960     1B0B  0820               	movf	?___fladd,w
  7961     1B0C  00C3               	movwf	?___flsub
  7962     1B0D                     l950:
  7963     1B0D  0008               	return
  7964     1B0E                     __end_of___flsub:
  7965                           
  7966                           	psect	text14
  7967     04AD                     __ptext14:	
  7968 ;; *************** function ___fladd *****************
  7969 ;; Defined at:
  7970 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;  b               4    0[BANK0 ] long 
  7973 ;;  a               4    4[BANK0 ] long 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;  grs             1   19[BANK0 ] unsigned char 
  7976 ;;  bexp            1   18[BANK0 ] unsigned char 
  7977 ;;  aexp            1   17[BANK0 ] unsigned char 
  7978 ;;  signs           1   16[BANK0 ] unsigned char 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  4    0[BANK0 ] unsigned char 
  7981 ;; Registers used:
  7982 ;;		wreg, status,2, status,0
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7988 ;;      Params:         0       8       0       0       0       0       0       0
  7989 ;;      Locals:         0       4       0       0       0       0       0       0
  7990 ;;      Temps:          0       8       0       0       0       0       0       0
  7991 ;;      Totals:         0      20       0       0       0       0       0       0
  7992 ;;Total ram usage:       20 bytes
  7993 ;; Hardware stack levels used: 1
  7994 ;; Hardware stack levels required when called: 4
  7995 ;; This function calls:
  7996 ;;		Nothing
  7997 ;; This function is called by:
  7998 ;;		___flsub
  7999 ;;		_efgtoa
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003     04AD                     ___fladd:	
  8004                           ;psect for function ___fladd
  8005                           
  8006     04AD                     l3536:	
  8007                           ;incstack = 0
  8008                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  8009                           
  8010     04AD  0020               	movlb	0	; select bank0
  8011     04AE  0823               	movf	___fladd@b+3,w
  8012     04AF  3980               	andlw	128
  8013     04B0  00B0               	movwf	___fladd@signs
  8014     04B1                     l3538:
  8015     04B1  3523               	lslf	___fladd@b+3,w
  8016     04B2  00B2               	movwf	___fladd@bexp
  8017     04B3                     l3540:
  8018     04B3  1FA2               	btfss	___fladd@b+2,7
  8019     04B4  2CB6               	goto	u3361
  8020     04B5  2CB7               	goto	u3360
  8021     04B6                     u3361:
  8022     04B6  2CB8               	goto	l3544
  8023     04B7                     u3360:
  8024     04B7                     l3542:
  8025     04B7  1432               	bsf	___fladd@bexp,0
  8026     04B8                     l3544:
  8027     04B8  0832               	movf	___fladd@bexp,w
  8028     04B9  1903               	btfsc	3,2
  8029     04BA  2CBC               	goto	u3371
  8030     04BB  2CBD               	goto	u3370
  8031     04BC                     u3371:
  8032     04BC  2CCD               	goto	l3554
  8033     04BD                     u3370:
  8034     04BD                     l3546:
  8035     04BD  0A32               	incf	___fladd@bexp,w
  8036     04BE  1D03               	btfss	3,2
  8037     04BF  2CC1               	goto	u3381
  8038     04C0  2CC2               	goto	u3380
  8039     04C1                     u3381:
  8040     04C1  2CCA               	goto	l3550
  8041     04C2                     u3380:
  8042     04C2                     l3548:
  8043     04C2  3000               	movlw	0
  8044     04C3  00A3               	movwf	___fladd@b+3
  8045     04C4  3000               	movlw	0
  8046     04C5  00A2               	movwf	___fladd@b+2
  8047     04C6  3000               	movlw	0
  8048     04C7  00A1               	movwf	___fladd@b+1
  8049     04C8  3000               	movlw	0
  8050     04C9  00A0               	movwf	___fladd@b
  8051     04CA                     l3550:
  8052     04CA  17A2               	bsf	___fladd@b+2,7
  8053     04CB                     l3552:
  8054     04CB  01A3               	clrf	___fladd@b+3
  8055     04CC  2CD5               	goto	l3556
  8056     04CD                     l3554:
  8057     04CD  3000               	movlw	0
  8058     04CE  00A3               	movwf	___fladd@b+3
  8059     04CF  3000               	movlw	0
  8060     04D0  00A2               	movwf	___fladd@b+2
  8061     04D1  3000               	movlw	0
  8062     04D2  00A1               	movwf	___fladd@b+1
  8063     04D3  3000               	movlw	0
  8064     04D4  00A0               	movwf	___fladd@b
  8065     04D5                     l3556:
  8066     04D5  0827               	movf	___fladd@a+3,w
  8067     04D6  3980               	andlw	128
  8068     04D7  00B1               	movwf	___fladd@aexp
  8069     04D8                     l3558:
  8070     04D8  0831               	movf	___fladd@aexp,w
  8071     04D9  0630               	xorwf	___fladd@signs,w
  8072     04DA  1903               	skipnz
  8073     04DB  2CDD               	goto	u3391
  8074     04DC  2CDE               	goto	u3390
  8075     04DD                     u3391:
  8076     04DD  2CDF               	goto	l3562
  8077     04DE                     u3390:
  8078     04DE                     l3560:
  8079     04DE  1730               	bsf	___fladd@signs,6
  8080     04DF                     l3562:
  8081     04DF  3527               	lslf	___fladd@a+3,w
  8082     04E0  00B1               	movwf	___fladd@aexp
  8083     04E1                     l3564:
  8084     04E1  1FA6               	btfss	___fladd@a+2,7
  8085     04E2  2CE4               	goto	u3401
  8086     04E3  2CE5               	goto	u3400
  8087     04E4                     u3401:
  8088     04E4  2CE6               	goto	l3568
  8089     04E5                     u3400:
  8090     04E5                     l3566:
  8091     04E5  1431               	bsf	___fladd@aexp,0
  8092     04E6                     l3568:
  8093     04E6  0831               	movf	___fladd@aexp,w
  8094     04E7  1903               	btfsc	3,2
  8095     04E8  2CEA               	goto	u3411
  8096     04E9  2CEB               	goto	u3410
  8097     04EA                     u3411:
  8098     04EA  2CFB               	goto	l3578
  8099     04EB                     u3410:
  8100     04EB                     l3570:
  8101     04EB  0A31               	incf	___fladd@aexp,w
  8102     04EC  1D03               	btfss	3,2
  8103     04ED  2CEF               	goto	u3421
  8104     04EE  2CF0               	goto	u3420
  8105     04EF                     u3421:
  8106     04EF  2CF8               	goto	l3574
  8107     04F0                     u3420:
  8108     04F0                     l3572:
  8109     04F0  3000               	movlw	0
  8110     04F1  00A7               	movwf	___fladd@a+3
  8111     04F2  3000               	movlw	0
  8112     04F3  00A6               	movwf	___fladd@a+2
  8113     04F4  3000               	movlw	0
  8114     04F5  00A5               	movwf	___fladd@a+1
  8115     04F6  3000               	movlw	0
  8116     04F7  00A4               	movwf	___fladd@a
  8117     04F8                     l3574:
  8118     04F8  17A6               	bsf	___fladd@a+2,7
  8119     04F9                     l3576:
  8120     04F9  01A7               	clrf	___fladd@a+3
  8121     04FA  2D03               	goto	l904
  8122     04FB                     l3578:
  8123     04FB  3000               	movlw	0
  8124     04FC  00A7               	movwf	___fladd@a+3
  8125     04FD  3000               	movlw	0
  8126     04FE  00A6               	movwf	___fladd@a+2
  8127     04FF  3000               	movlw	0
  8128     0500  00A5               	movwf	___fladd@a+1
  8129     0501  3000               	movlw	0
  8130     0502  00A4               	movwf	___fladd@a
  8131     0503                     l904:
  8132     0503  0832               	movf	___fladd@bexp,w
  8133     0504  0231               	subwf	___fladd@aexp,w
  8134     0505  1803               	skipnc
  8135     0506  2D08               	goto	u3431
  8136     0507  2D09               	goto	u3430
  8137     0508                     u3431:
  8138     0508  2D2F               	goto	l3614
  8139     0509                     u3430:
  8140     0509                     l3580:
  8141     0509  1F30               	btfss	___fladd@signs,6
  8142     050A  2D0C               	goto	u3441
  8143     050B  2D0D               	goto	u3440
  8144     050C                     u3441:
  8145     050C  2D11               	goto	l3584
  8146     050D                     u3440:
  8147     050D                     l3582:
  8148     050D  3080               	movlw	128
  8149     050E  00A8               	movwf	??___fladd
  8150     050F  0828               	movf	??___fladd,w
  8151     0510  06B0               	xorwf	___fladd@signs,f
  8152     0511                     l3584:
  8153     0511  0832               	movf	___fladd@bexp,w
  8154     0512  00B3               	movwf	___fladd@grs
  8155     0513                     l3586:
  8156     0513  0831               	movf	___fladd@aexp,w
  8157     0514  00B2               	movwf	___fladd@bexp
  8158     0515                     l3588:
  8159     0515  0833               	movf	___fladd@grs,w
  8160     0516  00B1               	movwf	___fladd@aexp
  8161     0517                     l3590:
  8162     0517  0820               	movf	___fladd@b,w
  8163     0518  00B3               	movwf	___fladd@grs
  8164     0519                     l3592:
  8165     0519  0824               	movf	___fladd@a,w
  8166     051A  00A0               	movwf	___fladd@b
  8167     051B                     l3594:
  8168     051B  0833               	movf	___fladd@grs,w
  8169     051C  00A4               	movwf	___fladd@a
  8170     051D                     l3596:
  8171     051D  0821               	movf	___fladd@b+1,w
  8172     051E  00B3               	movwf	___fladd@grs
  8173     051F                     l3598:
  8174     051F  0825               	movf	___fladd@a+1,w
  8175     0520  00A1               	movwf	___fladd@b+1
  8176     0521                     l3600:
  8177     0521  0833               	movf	___fladd@grs,w
  8178     0522  00A5               	movwf	___fladd@a+1
  8179     0523                     l3602:
  8180     0523  0822               	movf	___fladd@b+2,w
  8181     0524  00B3               	movwf	___fladd@grs
  8182     0525                     l3604:
  8183     0525  0826               	movf	___fladd@a+2,w
  8184     0526  00A2               	movwf	___fladd@b+2
  8185     0527                     l3606:
  8186     0527  0833               	movf	___fladd@grs,w
  8187     0528  00A6               	movwf	___fladd@a+2
  8188     0529                     l3608:
  8189     0529  0823               	movf	___fladd@b+3,w
  8190     052A  00B3               	movwf	___fladd@grs
  8191     052B                     l3610:
  8192     052B  0827               	movf	___fladd@a+3,w
  8193     052C  00A3               	movwf	___fladd@b+3
  8194     052D                     l3612:
  8195     052D  0833               	movf	___fladd@grs,w
  8196     052E  00A7               	movwf	___fladd@a+3
  8197     052F                     l3614:
  8198     052F  01B3               	clrf	___fladd@grs
  8199     0530                     l3616:
  8200     0530  0831               	movf	___fladd@aexp,w
  8201     0531  00A8               	movwf	??___fladd
  8202     0532  01A9               	clrf	??___fladd+1
  8203     0533  0829               	movf	??___fladd+1,w
  8204     0534  00AB               	movwf	??___fladd+3
  8205     0535  0832               	movf	___fladd@bexp,w
  8206     0536  0228               	subwf	??___fladd,w
  8207     0537  00AA               	movwf	??___fladd+2
  8208     0538  1C03               	skipc
  8209     0539  03AB               	decf	??___fladd+3,f
  8210     053A  082B               	movf	??___fladd+3,w
  8211     053B  3A80               	xorlw	128
  8212     053C  00AC               	movwf	??___fladd+4
  8213     053D  3080               	movlw	128
  8214     053E  022C               	subwf	??___fladd+4,w
  8215     053F  1D03               	skipz
  8216     0540  2D43               	goto	u3455
  8217     0541  301A               	movlw	26
  8218     0542  022A               	subwf	??___fladd+2,w
  8219     0543                     u3455:
  8220     0543  1C03               	skipc
  8221     0544  2D46               	goto	u3451
  8222     0545  2D47               	goto	u3450
  8223     0546                     u3451:
  8224     0546  2D79               	goto	l3632
  8225     0547                     u3450:
  8226     0547                     l3618:
  8227     0547  0020               	movlb	0	; select bank0
  8228     0548  0823               	movf	___fladd@b+3,w
  8229     0549  0422               	iorwf	___fladd@b+2,w
  8230     054A  0421               	iorwf	___fladd@b+1,w
  8231     054B  0420               	iorwf	___fladd@b,w
  8232     054C  1D03               	skipz
  8233     054D  2D4F               	goto	u3461
  8234     054E  2D51               	goto	u3460
  8235     054F                     u3461:
  8236     054F  3001               	movlw	1
  8237     0550  2D52               	goto	u3470
  8238     0551                     u3460:
  8239     0551  3000               	movlw	0
  8240     0552                     u3470:
  8241     0552  00B3               	movwf	___fladd@grs
  8242     0553  3000               	movlw	0
  8243     0554  00A3               	movwf	___fladd@b+3
  8244     0555  3000               	movlw	0
  8245     0556  00A2               	movwf	___fladd@b+2
  8246     0557  3000               	movlw	0
  8247     0558  00A1               	movwf	___fladd@b+1
  8248     0559  3000               	movlw	0
  8249     055A  00A0               	movwf	___fladd@b
  8250     055B  0831               	movf	___fladd@aexp,w
  8251     055C  00B2               	movwf	___fladd@bexp
  8252     055D  2D80               	goto	l908
  8253     055E                     l910:
  8254     055E  1C33               	btfss	___fladd@grs,0
  8255     055F  2D61               	goto	u3481
  8256     0560  2D62               	goto	u3480
  8257     0561                     u3481:
  8258     0561  2D66               	goto	l3622
  8259     0562                     u3480:
  8260     0562                     l3620:
  8261     0562  3633               	lsrf	___fladd@grs,w
  8262     0563  3801               	iorlw	1
  8263     0564  00B3               	movwf	___fladd@grs
  8264     0565  2D68               	goto	l3624
  8265     0566                     l3622:
  8266     0566  1003               	clrc
  8267     0567  0CB3               	rrf	___fladd@grs,f
  8268     0568                     l3624:
  8269     0568  1C20               	btfss	___fladd@b,0
  8270     0569  2D6B               	goto	u3491
  8271     056A  2D6C               	goto	u3490
  8272     056B                     u3491:
  8273     056B  2D6D               	goto	l3628
  8274     056C                     u3490:
  8275     056C                     l3626:
  8276     056C  17B3               	bsf	___fladd@grs,7
  8277     056D                     l3628:
  8278     056D  3001               	movlw	1
  8279     056E  00A8               	movwf	??___fladd
  8280     056F                     u3505:
  8281     056F  37A3               	asrf	___fladd@b+3,f
  8282     0570  0CA2               	rrf	___fladd@b+2,f
  8283     0571  0CA1               	rrf	___fladd@b+1,f
  8284     0572  0CA0               	rrf	___fladd@b,f
  8285     0573  0BA8               	decfsz	??___fladd& (0+127),f
  8286     0574  2D6F               	goto	u3505
  8287     0575                     l3630:
  8288     0575  3001               	movlw	1
  8289     0576  00A8               	movwf	??___fladd
  8290     0577  0828               	movf	??___fladd,w
  8291     0578  07B2               	addwf	___fladd@bexp,f
  8292     0579                     l3632:
  8293     0579  0020               	movlb	0	; select bank0
  8294     057A  0831               	movf	___fladd@aexp,w
  8295     057B  0232               	subwf	___fladd@bexp,w
  8296     057C  1C03               	skipc
  8297     057D  2D7F               	goto	u3511
  8298     057E  2D80               	goto	u3510
  8299     057F                     u3511:
  8300     057F  2D5E               	goto	l910
  8301     0580                     u3510:
  8302     0580                     l908:
  8303     0580  1B30               	btfsc	___fladd@signs,6
  8304     0581  2D83               	goto	u3521
  8305     0582  2D84               	goto	u3520
  8306     0583                     u3521:
  8307     0583  2DBA               	goto	l3658
  8308     0584                     u3520:
  8309     0584                     l3634:
  8310     0584  0832               	movf	___fladd@bexp,w
  8311     0585  1D03               	btfss	3,2
  8312     0586  2D88               	goto	u3531
  8313     0587  2D89               	goto	u3530
  8314     0588                     u3531:
  8315     0588  2D92               	goto	l3640
  8316     0589                     u3530:
  8317     0589                     l3636:
  8318     0589  3000               	movlw	0
  8319     058A  00A3               	movwf	?___fladd+3
  8320     058B  3000               	movlw	0
  8321     058C  00A2               	movwf	?___fladd+2
  8322     058D  3000               	movlw	0
  8323     058E  00A1               	movwf	?___fladd+1
  8324     058F  3000               	movlw	0
  8325     0590  00A0               	movwf	?___fladd
  8326     0591  2EB4               	goto	l917
  8327     0592                     l3640:
  8328     0592  0824               	movf	___fladd@a,w
  8329     0593  07A0               	addwf	___fladd@b,f
  8330     0594  0825               	movf	___fladd@a+1,w
  8331     0595  3DA1               	addwfc	___fladd@b+1,f
  8332     0596  0826               	movf	___fladd@a+2,w
  8333     0597  3DA2               	addwfc	___fladd@b+2,f
  8334     0598  0827               	movf	___fladd@a+3,w
  8335     0599  3DA3               	addwfc	___fladd@b+3,f
  8336     059A                     l3642:
  8337     059A  1C23               	btfss	___fladd@b+3,0
  8338     059B  2D9D               	goto	u3541
  8339     059C  2D9E               	goto	u3540
  8340     059D                     u3541:
  8341     059D  2E46               	goto	l3692
  8342     059E                     u3540:
  8343     059E                     l3644:
  8344     059E  1C33               	btfss	___fladd@grs,0
  8345     059F  2DA1               	goto	u3551
  8346     05A0  2DA2               	goto	u3550
  8347     05A1                     u3551:
  8348     05A1  2DA6               	goto	l3648
  8349     05A2                     u3550:
  8350     05A2                     l3646:
  8351     05A2  3633               	lsrf	___fladd@grs,w
  8352     05A3  3801               	iorlw	1
  8353     05A4  00B3               	movwf	___fladd@grs
  8354     05A5  2DA8               	goto	l3650
  8355     05A6                     l3648:
  8356     05A6  1003               	clrc
  8357     05A7  0CB3               	rrf	___fladd@grs,f
  8358     05A8                     l3650:
  8359     05A8  1C20               	btfss	___fladd@b,0
  8360     05A9  2DAB               	goto	u3561
  8361     05AA  2DAC               	goto	u3560
  8362     05AB                     u3561:
  8363     05AB  2DAD               	goto	l3654
  8364     05AC                     u3560:
  8365     05AC                     l3652:
  8366     05AC  17B3               	bsf	___fladd@grs,7
  8367     05AD                     l3654:
  8368     05AD  3001               	movlw	1
  8369     05AE  00A8               	movwf	??___fladd
  8370     05AF                     u3575:
  8371     05AF  37A3               	asrf	___fladd@b+3,f
  8372     05B0  0CA2               	rrf	___fladd@b+2,f
  8373     05B1  0CA1               	rrf	___fladd@b+1,f
  8374     05B2  0CA0               	rrf	___fladd@b,f
  8375     05B3  0BA8               	decfsz	??___fladd& (0+127),f
  8376     05B4  2DAF               	goto	u3575
  8377     05B5                     l3656:
  8378     05B5  3001               	movlw	1
  8379     05B6  00A8               	movwf	??___fladd
  8380     05B7  0828               	movf	??___fladd,w
  8381     05B8  07B2               	addwf	___fladd@bexp,f
  8382     05B9  2E46               	goto	l3692
  8383     05BA                     l3658:
  8384     05BA  0823               	movf	___fladd@b+3,w
  8385     05BB  3A80               	xorlw	128
  8386     05BC  00A8               	movwf	??___fladd
  8387     05BD  0827               	movf	___fladd@a+3,w
  8388     05BE  3A80               	xorlw	128
  8389     05BF  0228               	subwf	??___fladd,w
  8390     05C0  1D03               	skipz
  8391     05C1  2DCC               	goto	u3583
  8392     05C2  0826               	movf	___fladd@a+2,w
  8393     05C3  0222               	subwf	___fladd@b+2,w
  8394     05C4  1D03               	skipz
  8395     05C5  2DCC               	goto	u3583
  8396     05C6  0825               	movf	___fladd@a+1,w
  8397     05C7  0221               	subwf	___fladd@b+1,w
  8398     05C8  1D03               	skipz
  8399     05C9  2DCC               	goto	u3583
  8400     05CA  0824               	movf	___fladd@a,w
  8401     05CB  0220               	subwf	___fladd@b,w
  8402     05CC                     u3583:
  8403     05CC  1803               	skipnc
  8404     05CD  2DCF               	goto	u3581
  8405     05CE  2DD0               	goto	u3580
  8406     05CF                     u3581:
  8407     05CF  2E08               	goto	l3668
  8408     05D0                     u3580:
  8409     05D0                     l3660:
  8410     05D0  30FF               	movlw	255
  8411     05D1  00A8               	movwf	??___fladd
  8412     05D2  30FF               	movlw	255
  8413     05D3  00A9               	movwf	??___fladd+1
  8414     05D4  30FF               	movlw	255
  8415     05D5  00AA               	movwf	??___fladd+2
  8416     05D6  30FF               	movlw	255
  8417     05D7  00AB               	movwf	??___fladd+3
  8418     05D8  0820               	movf	___fladd@b,w
  8419     05D9  0224               	subwf	___fladd@a,w
  8420     05DA  00AC               	movwf	??___fladd+4
  8421     05DB  0821               	movf	___fladd@b+1,w
  8422     05DC  3B25               	subwfb	___fladd@a+1,w
  8423     05DD  00AD               	movwf	??___fladd+5
  8424     05DE  0822               	movf	___fladd@b+2,w
  8425     05DF  3B26               	subwfb	___fladd@a+2,w
  8426     05E0  00AE               	movwf	??___fladd+6
  8427     05E1  0823               	movf	___fladd@b+3,w
  8428     05E2  3B27               	subwfb	___fladd@a+3,w
  8429     05E3  00AF               	movwf	??___fladd+7
  8430     05E4  082C               	movf	??___fladd+4,w
  8431     05E5  07A8               	addwf	??___fladd,f
  8432     05E6  082D               	movf	??___fladd+5,w
  8433     05E7  3DA9               	addwfc	??___fladd+1,f
  8434     05E8  082E               	movf	??___fladd+6,w
  8435     05E9  3DAA               	addwfc	??___fladd+2,f
  8436     05EA  082F               	movf	??___fladd+7,w
  8437     05EB  3DAB               	addwfc	??___fladd+3,f
  8438     05EC  082B               	movf	??___fladd+3,w
  8439     05ED  00A3               	movwf	___fladd@b+3
  8440     05EE  082A               	movf	??___fladd+2,w
  8441     05EF  00A2               	movwf	___fladd@b+2
  8442     05F0  0829               	movf	??___fladd+1,w
  8443     05F1  00A1               	movwf	___fladd@b+1
  8444     05F2  0828               	movf	??___fladd,w
  8445     05F3  00A0               	movwf	___fladd@b
  8446     05F4                     l3662:
  8447     05F4  3080               	movlw	128
  8448     05F5  00A8               	movwf	??___fladd
  8449     05F6  0828               	movf	??___fladd,w
  8450     05F7  06B0               	xorwf	___fladd@signs,f
  8451     05F8  09B3               	comf	___fladd@grs,f
  8452     05F9  0AB3               	incf	___fladd@grs,f
  8453     05FA                     l3664:
  8454     05FA  0833               	movf	___fladd@grs,w
  8455     05FB  1D03               	btfss	3,2
  8456     05FC  2DFE               	goto	u3591
  8457     05FD  2DFF               	goto	u3590
  8458     05FE                     u3591:
  8459     05FE  2E10               	goto	l925
  8460     05FF                     u3590:
  8461     05FF                     l3666:
  8462     05FF  3001               	movlw	1
  8463     0600  07A0               	addwf	___fladd@b,f
  8464     0601  3000               	movlw	0
  8465     0602  3DA1               	addwfc	___fladd@b+1,f
  8466     0603  3000               	movlw	0
  8467     0604  3DA2               	addwfc	___fladd@b+2,f
  8468     0605  3000               	movlw	0
  8469     0606  3DA3               	addwfc	___fladd@b+3,f
  8470     0607  2E10               	goto	l925
  8471     0608                     l3668:
  8472     0608  0824               	movf	___fladd@a,w
  8473     0609  02A0               	subwf	___fladd@b,f
  8474     060A  0825               	movf	___fladd@a+1,w
  8475     060B  3BA1               	subwfb	___fladd@b+1,f
  8476     060C  0826               	movf	___fladd@a+2,w
  8477     060D  3BA2               	subwfb	___fladd@b+2,f
  8478     060E  0827               	movf	___fladd@a+3,w
  8479     060F  3BA3               	subwfb	___fladd@b+3,f
  8480     0610                     l925:
  8481     0610  0823               	movf	___fladd@b+3,w
  8482     0611  0422               	iorwf	___fladd@b+2,w
  8483     0612  0421               	iorwf	___fladd@b+1,w
  8484     0613  0420               	iorwf	___fladd@b,w
  8485     0614  1D03               	skipz
  8486     0615  2E17               	goto	u3601
  8487     0616  2E18               	goto	u3600
  8488     0617                     u3601:
  8489     0617  2E42               	goto	l3690
  8490     0618                     u3600:
  8491     0618                     l3670:
  8492     0618  0833               	movf	___fladd@grs,w
  8493     0619  1D03               	btfss	3,2
  8494     061A  2E1C               	goto	u3611
  8495     061B  2E1D               	goto	u3610
  8496     061C                     u3611:
  8497     061C  2E42               	goto	l3690
  8498     061D                     u3610:
  8499     061D                     l3672:
  8500     061D  3000               	movlw	0
  8501     061E  00A3               	movwf	?___fladd+3
  8502     061F  3000               	movlw	0
  8503     0620  00A2               	movwf	?___fladd+2
  8504     0621  3000               	movlw	0
  8505     0622  00A1               	movwf	?___fladd+1
  8506     0623  3000               	movlw	0
  8507     0624  00A0               	movwf	?___fladd
  8508     0625  2EB4               	goto	l917
  8509     0626                     l3676:
  8510     0626  3001               	movlw	1
  8511     0627                     u3625:
  8512     0627  35A0               	lslf	___fladd@b,f
  8513     0628  0DA1               	rlf	___fladd@b+1,f
  8514     0629  0DA2               	rlf	___fladd@b+2,f
  8515     062A  0DA3               	rlf	___fladd@b+3,f
  8516     062B  0B89               	decfsz	9,f
  8517     062C  2E27               	goto	u3625
  8518     062D                     l3678:
  8519     062D  1FB3               	btfss	___fladd@grs,7
  8520     062E  2E30               	goto	u3631
  8521     062F  2E31               	goto	u3630
  8522     0630                     u3631:
  8523     0630  2E32               	goto	l929
  8524     0631                     u3630:
  8525     0631                     l3680:
  8526     0631  1420               	bsf	___fladd@b,0
  8527     0632                     l929:
  8528     0632  1C33               	btfss	___fladd@grs,0
  8529     0633  2E35               	goto	u3641
  8530     0634  2E36               	goto	u3640
  8531     0635                     u3641:
  8532     0635  2E39               	goto	l3684
  8533     0636                     u3640:
  8534     0636                     l3682:
  8535     0636  1403               	setc
  8536     0637  0DB3               	rlf	___fladd@grs,f
  8537     0638  2E3B               	goto	l3686
  8538     0639                     l3684:
  8539     0639  1003               	clrc
  8540     063A  0DB3               	rlf	___fladd@grs,f
  8541     063B                     l3686:
  8542     063B  0832               	movf	___fladd@bexp,w
  8543     063C  1903               	btfsc	3,2
  8544     063D  2E3F               	goto	u3651
  8545     063E  2E40               	goto	u3650
  8546     063F                     u3651:
  8547     063F  2E42               	goto	l3690
  8548     0640                     u3650:
  8549     0640                     l3688:
  8550     0640  3001               	movlw	1
  8551     0641  02B2               	subwf	___fladd@bexp,f
  8552     0642                     l3690:
  8553     0642  1FA2               	btfss	___fladd@b+2,7
  8554     0643  2E45               	goto	u3661
  8555     0644  2E46               	goto	u3660
  8556     0645                     u3661:
  8557     0645  2E26               	goto	l3676
  8558     0646                     u3660:
  8559     0646                     l3692:
  8560     0646  01B1               	clrf	___fladd@aexp
  8561     0647                     l3694:
  8562     0647  1FB3               	btfss	___fladd@grs,7
  8563     0648  2E4A               	goto	u3671
  8564     0649  2E4B               	goto	u3670
  8565     064A                     u3671:
  8566     064A  2E59               	goto	l3702
  8567     064B                     u3670:
  8568     064B                     l3696:
  8569     064B  0833               	movf	___fladd@grs,w
  8570     064C  397F               	andlw	127
  8571     064D  1903               	btfsc	3,2
  8572     064E  2E50               	goto	u3681
  8573     064F  2E51               	goto	u3680
  8574     0650                     u3681:
  8575     0650  2E54               	goto	l935
  8576     0651                     u3680:
  8577     0651                     l3698:
  8578     0651  01B1               	clrf	___fladd@aexp
  8579     0652  0AB1               	incf	___fladd@aexp,f
  8580     0653  2E59               	goto	l3702
  8581     0654                     l935:
  8582     0654  1C20               	btfss	___fladd@b,0
  8583     0655  2E57               	goto	u3691
  8584     0656  2E58               	goto	u3690
  8585     0657                     u3691:
  8586     0657  2E59               	goto	l3702
  8587     0658                     u3690:
  8588     0658  2E51               	goto	l3698
  8589     0659                     l3702:
  8590     0659  0831               	movf	___fladd@aexp,w
  8591     065A  1903               	btfsc	3,2
  8592     065B  2E5D               	goto	u3701
  8593     065C  2E5E               	goto	u3700
  8594     065D                     u3701:
  8595     065D  2E8B               	goto	l938
  8596     065E                     u3700:
  8597     065E                     l3704:
  8598     065E  3001               	movlw	1
  8599     065F  07A0               	addwf	___fladd@b,f
  8600     0660  3000               	movlw	0
  8601     0661  3DA1               	addwfc	___fladd@b+1,f
  8602     0662  3000               	movlw	0
  8603     0663  3DA2               	addwfc	___fladd@b+2,f
  8604     0664  3000               	movlw	0
  8605     0665  3DA3               	addwfc	___fladd@b+3,f
  8606     0666                     l3706:
  8607     0666  1C23               	btfss	___fladd@b+3,0
  8608     0667  2E69               	goto	u3711
  8609     0668  2E6A               	goto	u3710
  8610     0669                     u3711:
  8611     0669  2E8B               	goto	l938
  8612     066A                     u3710:
  8613     066A                     l3708:
  8614     066A  0820               	movf	___fladd@b,w
  8615     066B  00A8               	movwf	??___fladd
  8616     066C  0821               	movf	___fladd@b+1,w
  8617     066D  00A9               	movwf	??___fladd+1
  8618     066E  0822               	movf	___fladd@b+2,w
  8619     066F  00AA               	movwf	??___fladd+2
  8620     0670  0823               	movf	___fladd@b+3,w
  8621     0671  00AB               	movwf	??___fladd+3
  8622     0672  3001               	movlw	1
  8623     0673  00AC               	movwf	??___fladd+4
  8624     0674                     u3725:
  8625     0674  37AB               	asrf	??___fladd+3,f
  8626     0675  0CAA               	rrf	??___fladd+2,f
  8627     0676  0CA9               	rrf	??___fladd+1,f
  8628     0677  0CA8               	rrf	??___fladd,f
  8629     0678                     u3720:
  8630     0678  0BAC               	decfsz	??___fladd+4,f
  8631     0679  2E74               	goto	u3725
  8632     067A  082B               	movf	??___fladd+3,w
  8633     067B  00A3               	movwf	___fladd@b+3
  8634     067C  082A               	movf	??___fladd+2,w
  8635     067D  00A2               	movwf	___fladd@b+2
  8636     067E  0829               	movf	??___fladd+1,w
  8637     067F  00A1               	movwf	___fladd@b+1
  8638     0680  0828               	movf	??___fladd,w
  8639     0681  00A0               	movwf	___fladd@b
  8640     0682  0A32               	incf	___fladd@bexp,w
  8641     0683  1903               	btfsc	3,2
  8642     0684  2E86               	goto	u3731
  8643     0685  2E87               	goto	u3730
  8644     0686                     u3731:
  8645     0686  2E8B               	goto	l938
  8646     0687                     u3730:
  8647     0687                     l3710:
  8648     0687  3001               	movlw	1
  8649     0688  00A8               	movwf	??___fladd
  8650     0689  0828               	movf	??___fladd,w
  8651     068A  07B2               	addwf	___fladd@bexp,f
  8652     068B                     l938:
  8653     068B  0A32               	incf	___fladd@bexp,w
  8654     068C  1903               	btfsc	3,2
  8655     068D  2E8F               	goto	u3741
  8656     068E  2E90               	goto	u3740
  8657     068F                     u3741:
  8658     068F  2E95               	goto	l3714
  8659     0690                     u3740:
  8660     0690                     l3712:
  8661     0690  0832               	movf	___fladd@bexp,w
  8662     0691  1D03               	btfss	3,2
  8663     0692  2E94               	goto	u3751
  8664     0693  2E95               	goto	u3750
  8665     0694                     u3751:
  8666     0694  2EA3               	goto	l3720
  8667     0695                     u3750:
  8668     0695                     l3714:
  8669     0695  3000               	movlw	0
  8670     0696  00A3               	movwf	___fladd@b+3
  8671     0697  3000               	movlw	0
  8672     0698  00A2               	movwf	___fladd@b+2
  8673     0699  3000               	movlw	0
  8674     069A  00A1               	movwf	___fladd@b+1
  8675     069B  3000               	movlw	0
  8676     069C  00A0               	movwf	___fladd@b
  8677     069D                     l3716:
  8678     069D  0832               	movf	___fladd@bexp,w
  8679     069E  1D03               	btfss	3,2
  8680     069F  2EA1               	goto	u3761
  8681     06A0  2EA2               	goto	u3760
  8682     06A1                     u3761:
  8683     06A1  2EA3               	goto	l3720
  8684     06A2                     u3760:
  8685     06A2                     l3718:
  8686     06A2  01B0               	clrf	___fladd@signs
  8687     06A3                     l3720:
  8688     06A3  1C32               	btfss	___fladd@bexp,0
  8689     06A4  2EA6               	goto	u3771
  8690     06A5  2EA7               	goto	u3770
  8691     06A6                     u3771:
  8692     06A6  2EA9               	goto	l3724
  8693     06A7                     u3770:
  8694     06A7                     l3722:
  8695     06A7  17A2               	bsf	___fladd@b+2,7
  8696     06A8  2EAD               	goto	l946
  8697     06A9                     l3724:
  8698     06A9  307F               	movlw	127
  8699     06AA  00A8               	movwf	??___fladd
  8700     06AB  0828               	movf	??___fladd,w
  8701     06AC  05A2               	andwf	___fladd@b+2,f
  8702     06AD                     l946:
  8703     06AD  3632               	lsrf	___fladd@bexp,w
  8704     06AE  00A3               	movwf	___fladd@b+3
  8705     06AF                     l3726:
  8706     06AF  1FB0               	btfss	___fladd@signs,7
  8707     06B0  2EB2               	goto	u3781
  8708     06B1  2EB3               	goto	u3780
  8709     06B2                     u3781:
  8710     06B2  2EB4               	goto	l947
  8711     06B3                     u3780:
  8712     06B3                     l3728:
  8713     06B3  17A3               	bsf	___fladd@b+3,7
  8714     06B4                     l947:
  8715     06B4                     l917:
  8716     06B4  0008               	return
  8717     06B5                     __end_of___fladd:
  8718                           
  8719                           	psect	text15
  8720     19D3                     __ptext15:	
  8721 ;; *************** function ___flneg *****************
  8722 ;; Defined at:
  8723 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;  f1              4    0[BANK0 ] unsigned char 
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;		None
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  4    0[BANK0 ] unsigned char 
  8730 ;; Registers used:
  8731 ;;		wreg
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8737 ;;      Params:         0       4       0       0       0       0       0       0
  8738 ;;      Locals:         0       0       0       0       0       0       0       0
  8739 ;;      Temps:          0       0       0       0       0       0       0       0
  8740 ;;      Totals:         0       4       0       0       0       0       0       0
  8741 ;;Total ram usage:        4 bytes
  8742 ;; Hardware stack levels used: 1
  8743 ;; Hardware stack levels required when called: 4
  8744 ;; This function calls:
  8745 ;;		Nothing
  8746 ;; This function is called by:
  8747 ;;		_efgtoa
  8748 ;; This function uses a non-reentrant model
  8749 ;;
  8750                           
  8751     19D3                     ___flneg:	
  8752                           ;psect for function ___flneg
  8753                           
  8754     19D3                     l3880:	
  8755                           ;incstack = 0
  8756                           ; Regs used in ___flneg: [wreg]
  8757                           
  8758     19D3  0020               	movlb	0	; select bank0
  8759     19D4  0823               	movf	___flneg@f1+3,w
  8760     19D5  0422               	iorwf	___flneg@f1+2,w
  8761     19D6  0421               	iorwf	___flneg@f1+1,w
  8762     19D7  0420               	iorwf	___flneg@f1,w
  8763     19D8  1903               	skipnz
  8764     19D9  29DB               	goto	u4141
  8765     19DA  29DC               	goto	u4140
  8766     19DB                     u4141:
  8767     19DB  29DE               	goto	l3884
  8768     19DC                     u4140:
  8769     19DC                     l3882:
  8770     19DC  3080               	movlw	128
  8771     19DD  06A3               	xorwf	___flneg@f1+3,f
  8772     19DE                     l3884:
  8773     19DE                     l793:
  8774     19DE  0008               	return
  8775     19DF                     __end_of___flneg:
  8776                           
  8777                           	psect	text16
  8778     0272                     __ptext16:	
  8779 ;; *************** function ___flmul *****************
  8780 ;; Defined at:
  8781 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  b               4    9[BANK0 ] unsigned char 
  8784 ;;  a               4   13[BANK0 ] unsigned char 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;  prod            4   29[BANK0 ] struct .
  8787 ;;  grs             4   23[BANK0 ] unsigned long 
  8788 ;;  temp            2   33[BANK0 ] struct .
  8789 ;;  bexp            1   28[BANK0 ] unsigned char 
  8790 ;;  aexp            1   27[BANK0 ] unsigned char 
  8791 ;;  sign            1   22[BANK0 ] unsigned char 
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  4    9[BANK0 ] unsigned char 
  8794 ;; Registers used:
  8795 ;;		wreg, status,2, status,0, pclath, cstack
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8801 ;;      Params:         0       8       0       0       0       0       0       0
  8802 ;;      Locals:         0      13       0       0       0       0       0       0
  8803 ;;      Temps:          0       5       0       0       0       0       0       0
  8804 ;;      Totals:         0      26       0       0       0       0       0       0
  8805 ;;Total ram usage:       26 bytes
  8806 ;; Hardware stack levels used: 1
  8807 ;; Hardware stack levels required when called: 5
  8808 ;; This function calls:
  8809 ;;		__Umul8_16
  8810 ;; This function is called by:
  8811 ;;		_efgtoa
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815     0272                     ___flmul:	
  8816                           ;psect for function ___flmul
  8817                           
  8818     0272                     l4070:	
  8819                           ;incstack = 0
  8820                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8821                           
  8822     0272  0020               	movlb	0	; select bank0
  8823     0273  082C               	movf	___flmul@b+3,w
  8824     0274  3980               	andlw	128
  8825     0275  00B6               	movwf	___flmul@sign
  8826     0276                     l4072:
  8827     0276  352C               	lslf	___flmul@b+3,w
  8828     0277  00BC               	movwf	___flmul@bexp
  8829     0278                     l4074:
  8830     0278  1FAB               	btfss	___flmul@b+2,7
  8831     0279  2A7B               	goto	u4541
  8832     027A  2A7C               	goto	u4540
  8833     027B                     u4541:
  8834     027B  2A7D               	goto	l4078
  8835     027C                     u4540:
  8836     027C                     l4076:
  8837     027C  143C               	bsf	___flmul@bexp,0
  8838     027D                     l4078:
  8839     027D  083C               	movf	___flmul@bexp,w
  8840     027E  1903               	btfsc	3,2
  8841     027F  2A81               	goto	u4551
  8842     0280  2A82               	goto	u4550
  8843     0281                     u4551:
  8844     0281  2A91               	goto	l4086
  8845     0282                     u4550:
  8846     0282                     l4080:
  8847     0282  0A3C               	incf	___flmul@bexp,w
  8848     0283  1D03               	btfss	3,2
  8849     0284  2A86               	goto	u4561
  8850     0285  2A87               	goto	u4560
  8851     0286                     u4561:
  8852     0286  2A8F               	goto	l4084
  8853     0287                     u4560:
  8854     0287                     l4082:
  8855     0287  3000               	movlw	0
  8856     0288  00AC               	movwf	___flmul@b+3
  8857     0289  3000               	movlw	0
  8858     028A  00AB               	movwf	___flmul@b+2
  8859     028B  3000               	movlw	0
  8860     028C  00AA               	movwf	___flmul@b+1
  8861     028D  3000               	movlw	0
  8862     028E  00A9               	movwf	___flmul@b
  8863     028F                     l4084:
  8864     028F  17AB               	bsf	___flmul@b+2,7
  8865     0290  2A99               	goto	l4088
  8866     0291                     l4086:
  8867     0291  3000               	movlw	0
  8868     0292  00AC               	movwf	___flmul@b+3
  8869     0293  3000               	movlw	0
  8870     0294  00AB               	movwf	___flmul@b+2
  8871     0295  3000               	movlw	0
  8872     0296  00AA               	movwf	___flmul@b+1
  8873     0297  3000               	movlw	0
  8874     0298  00A9               	movwf	___flmul@b
  8875     0299                     l4088:
  8876     0299  0830               	movf	___flmul@a+3,w
  8877     029A  3980               	andlw	128
  8878     029B  00B1               	movwf	??___flmul
  8879     029C  0831               	movf	??___flmul,w
  8880     029D  06B6               	xorwf	___flmul@sign,f
  8881     029E                     l4090:
  8882     029E  3530               	lslf	___flmul@a+3,w
  8883     029F  00BB               	movwf	___flmul@aexp
  8884     02A0                     l4092:
  8885     02A0  1FAF               	btfss	___flmul@a+2,7
  8886     02A1  2AA3               	goto	u4571
  8887     02A2  2AA4               	goto	u4570
  8888     02A3                     u4571:
  8889     02A3  2AA5               	goto	l4096
  8890     02A4                     u4570:
  8891     02A4                     l4094:
  8892     02A4  143B               	bsf	___flmul@aexp,0
  8893     02A5                     l4096:
  8894     02A5  083B               	movf	___flmul@aexp,w
  8895     02A6  1903               	btfsc	3,2
  8896     02A7  2AA9               	goto	u4581
  8897     02A8  2AAA               	goto	u4580
  8898     02A9                     u4581:
  8899     02A9  2AB9               	goto	l4104
  8900     02AA                     u4580:
  8901     02AA                     l4098:
  8902     02AA  0A3B               	incf	___flmul@aexp,w
  8903     02AB  1D03               	btfss	3,2
  8904     02AC  2AAE               	goto	u4591
  8905     02AD  2AAF               	goto	u4590
  8906     02AE                     u4591:
  8907     02AE  2AB7               	goto	l4102
  8908     02AF                     u4590:
  8909     02AF                     l4100:
  8910     02AF  3000               	movlw	0
  8911     02B0  00B0               	movwf	___flmul@a+3
  8912     02B1  3000               	movlw	0
  8913     02B2  00AF               	movwf	___flmul@a+2
  8914     02B3  3000               	movlw	0
  8915     02B4  00AE               	movwf	___flmul@a+1
  8916     02B5  3000               	movlw	0
  8917     02B6  00AD               	movwf	___flmul@a
  8918     02B7                     l4102:
  8919     02B7  17AF               	bsf	___flmul@a+2,7
  8920     02B8  2AC1               	goto	l4106
  8921     02B9                     l4104:
  8922     02B9  3000               	movlw	0
  8923     02BA  00B0               	movwf	___flmul@a+3
  8924     02BB  3000               	movlw	0
  8925     02BC  00AF               	movwf	___flmul@a+2
  8926     02BD  3000               	movlw	0
  8927     02BE  00AE               	movwf	___flmul@a+1
  8928     02BF  3000               	movlw	0
  8929     02C0  00AD               	movwf	___flmul@a
  8930     02C1                     l4106:
  8931     02C1  083B               	movf	___flmul@aexp,w
  8932     02C2  1903               	btfsc	3,2
  8933     02C3  2AC5               	goto	u4601
  8934     02C4  2AC6               	goto	u4600
  8935     02C5                     u4601:
  8936     02C5  2ACB               	goto	l4110
  8937     02C6                     u4600:
  8938     02C6                     l4108:
  8939     02C6  083C               	movf	___flmul@bexp,w
  8940     02C7  1D03               	btfss	3,2
  8941     02C8  2ACA               	goto	u4611
  8942     02C9  2ACB               	goto	u4610
  8943     02CA                     u4611:
  8944     02CA  2AD4               	goto	l4114
  8945     02CB                     u4610:
  8946     02CB                     l4110:
  8947     02CB  3000               	movlw	0
  8948     02CC  00AC               	movwf	?___flmul+3
  8949     02CD  3000               	movlw	0
  8950     02CE  00AB               	movwf	?___flmul+2
  8951     02CF  3000               	movlw	0
  8952     02D0  00AA               	movwf	?___flmul+1
  8953     02D1  3000               	movlw	0
  8954     02D2  00A9               	movwf	?___flmul
  8955     02D3  2CAC               	goto	l1000
  8956     02D4                     l4114:
  8957     02D4  0829               	movf	___flmul@b,w
  8958     02D5  00A0               	movwf	__Umul8_16@multiplicand
  8959     02D6  082F               	movf	___flmul@a+2,w
  8960     02D7  319B  2374  3182   	fcall	__Umul8_16
  8961     02DA  0020               	movlb	0	; select bank0
  8962     02DB  0821               	movf	?__Umul8_16+1,w
  8963     02DC  00C2               	movwf	___flmul@temp+1
  8964     02DD  0820               	movf	?__Umul8_16,w
  8965     02DE  00C1               	movwf	___flmul@temp
  8966     02DF                     l4116:
  8967     02DF  0841               	movf	___flmul@temp,w
  8968     02E0  00B1               	movwf	??___flmul
  8969     02E1  01B2               	clrf	??___flmul+1
  8970     02E2  01B3               	clrf	??___flmul+2
  8971     02E3  01B4               	clrf	??___flmul+3
  8972     02E4  0834               	movf	??___flmul+3,w
  8973     02E5  00BA               	movwf	___flmul@grs+3
  8974     02E6  0833               	movf	??___flmul+2,w
  8975     02E7  00B9               	movwf	___flmul@grs+2
  8976     02E8  0832               	movf	??___flmul+1,w
  8977     02E9  00B8               	movwf	___flmul@grs+1
  8978     02EA  0831               	movf	??___flmul,w
  8979     02EB  00B7               	movwf	___flmul@grs
  8980     02EC                     l4118:
  8981     02EC  0842               	movf	___flmul@temp+1,w
  8982     02ED  00B1               	movwf	??___flmul
  8983     02EE  01B2               	clrf	??___flmul+1
  8984     02EF  01B3               	clrf	??___flmul+2
  8985     02F0  01B4               	clrf	??___flmul+3
  8986     02F1  0834               	movf	??___flmul+3,w
  8987     02F2  00C0               	movwf	___flmul@prod+3
  8988     02F3  0833               	movf	??___flmul+2,w
  8989     02F4  00BF               	movwf	___flmul@prod+2
  8990     02F5  0832               	movf	??___flmul+1,w
  8991     02F6  00BE               	movwf	___flmul@prod+1
  8992     02F7  0831               	movf	??___flmul,w
  8993     02F8  00BD               	movwf	___flmul@prod
  8994     02F9  082A               	movf	___flmul@b+1,w
  8995     02FA  00A0               	movwf	__Umul8_16@multiplicand
  8996     02FB  082E               	movf	___flmul@a+1,w
  8997     02FC  319B  2374  3182   	fcall	__Umul8_16
  8998     02FF  0020               	movlb	0	; select bank0
  8999     0300  0821               	movf	?__Umul8_16+1,w
  9000     0301  00C2               	movwf	___flmul@temp+1
  9001     0302  0820               	movf	?__Umul8_16,w
  9002     0303  00C1               	movwf	___flmul@temp
  9003     0304                     l4120:
  9004     0304  0841               	movf	___flmul@temp,w
  9005     0305  00B1               	movwf	??___flmul
  9006     0306  01B2               	clrf	??___flmul+1
  9007     0307  01B3               	clrf	??___flmul+2
  9008     0308  01B4               	clrf	??___flmul+3
  9009     0309  0831               	movf	??___flmul,w
  9010     030A  07B7               	addwf	___flmul@grs,f
  9011     030B  0832               	movf	??___flmul+1,w
  9012     030C  3DB8               	addwfc	___flmul@grs+1,f
  9013     030D  0833               	movf	??___flmul+2,w
  9014     030E  3DB9               	addwfc	___flmul@grs+2,f
  9015     030F  0834               	movf	??___flmul+3,w
  9016     0310  3DBA               	addwfc	___flmul@grs+3,f
  9017     0311                     l4122:
  9018     0311  0842               	movf	___flmul@temp+1,w
  9019     0312  00B1               	movwf	??___flmul
  9020     0313  01B2               	clrf	??___flmul+1
  9021     0314  01B3               	clrf	??___flmul+2
  9022     0315  01B4               	clrf	??___flmul+3
  9023     0316  0831               	movf	??___flmul,w
  9024     0317  07BD               	addwf	___flmul@prod,f
  9025     0318  0832               	movf	??___flmul+1,w
  9026     0319  3DBE               	addwfc	___flmul@prod+1,f
  9027     031A  0833               	movf	??___flmul+2,w
  9028     031B  3DBF               	addwfc	___flmul@prod+2,f
  9029     031C  0834               	movf	??___flmul+3,w
  9030     031D  3DC0               	addwfc	___flmul@prod+3,f
  9031     031E  082B               	movf	___flmul@b+2,w
  9032     031F  00A0               	movwf	__Umul8_16@multiplicand
  9033     0320  082D               	movf	___flmul@a,w
  9034     0321  319B  2374  3182   	fcall	__Umul8_16
  9035     0324  0020               	movlb	0	; select bank0
  9036     0325  0821               	movf	?__Umul8_16+1,w
  9037     0326  00C2               	movwf	___flmul@temp+1
  9038     0327  0820               	movf	?__Umul8_16,w
  9039     0328  00C1               	movwf	___flmul@temp
  9040     0329                     l4124:
  9041     0329  0841               	movf	___flmul@temp,w
  9042     032A  00B1               	movwf	??___flmul
  9043     032B  01B2               	clrf	??___flmul+1
  9044     032C  01B3               	clrf	??___flmul+2
  9045     032D  01B4               	clrf	??___flmul+3
  9046     032E  0831               	movf	??___flmul,w
  9047     032F  07B7               	addwf	___flmul@grs,f
  9048     0330  0832               	movf	??___flmul+1,w
  9049     0331  3DB8               	addwfc	___flmul@grs+1,f
  9050     0332  0833               	movf	??___flmul+2,w
  9051     0333  3DB9               	addwfc	___flmul@grs+2,f
  9052     0334  0834               	movf	??___flmul+3,w
  9053     0335  3DBA               	addwfc	___flmul@grs+3,f
  9054     0336                     l4126:
  9055     0336  0842               	movf	___flmul@temp+1,w
  9056     0337  00B1               	movwf	??___flmul
  9057     0338  01B2               	clrf	??___flmul+1
  9058     0339  01B3               	clrf	??___flmul+2
  9059     033A  01B4               	clrf	??___flmul+3
  9060     033B  0831               	movf	??___flmul,w
  9061     033C  07BD               	addwf	___flmul@prod,f
  9062     033D  0832               	movf	??___flmul+1,w
  9063     033E  3DBE               	addwfc	___flmul@prod+1,f
  9064     033F  0833               	movf	??___flmul+2,w
  9065     0340  3DBF               	addwfc	___flmul@prod+2,f
  9066     0341  0834               	movf	??___flmul+3,w
  9067     0342  3DC0               	addwfc	___flmul@prod+3,f
  9068     0343                     l4128:
  9069     0343  3008               	movlw	8
  9070     0344                     u4625:
  9071     0344  35B7               	lslf	___flmul@grs,f
  9072     0345  0DB8               	rlf	___flmul@grs+1,f
  9073     0346  0DB9               	rlf	___flmul@grs+2,f
  9074     0347  0DBA               	rlf	___flmul@grs+3,f
  9075     0348  0B89               	decfsz	9,f
  9076     0349  2B44               	goto	u4625
  9077     034A                     l4130:
  9078     034A  082A               	movf	___flmul@b+1,w
  9079     034B  00A0               	movwf	__Umul8_16@multiplicand
  9080     034C  082D               	movf	___flmul@a,w
  9081     034D  319B  2374  3182   	fcall	__Umul8_16
  9082     0350  0020               	movlb	0	; select bank0
  9083     0351  0821               	movf	?__Umul8_16+1,w
  9084     0352  00C2               	movwf	___flmul@temp+1
  9085     0353  0820               	movf	?__Umul8_16,w
  9086     0354  00C1               	movwf	___flmul@temp
  9087     0355                     l4132:
  9088     0355  0841               	movf	___flmul@temp,w
  9089     0356  07B7               	addwf	___flmul@grs,f
  9090     0357  0842               	movf	___flmul@temp+1,w
  9091     0358  3DB8               	addwfc	___flmul@grs+1,f
  9092     0359  3000               	movlw	0
  9093     035A  3DB9               	addwfc	___flmul@grs+2,f
  9094     035B  3DBA               	addwfc	___flmul@grs+3,f
  9095     035C                     l4134:
  9096     035C  0829               	movf	___flmul@b,w
  9097     035D  00A0               	movwf	__Umul8_16@multiplicand
  9098     035E  082E               	movf	___flmul@a+1,w
  9099     035F  319B  2374  3182   	fcall	__Umul8_16
  9100     0362  0020               	movlb	0	; select bank0
  9101     0363  0821               	movf	?__Umul8_16+1,w
  9102     0364  00C2               	movwf	___flmul@temp+1
  9103     0365  0820               	movf	?__Umul8_16,w
  9104     0366  00C1               	movwf	___flmul@temp
  9105     0367                     l4136:
  9106     0367  0841               	movf	___flmul@temp,w
  9107     0368  07B7               	addwf	___flmul@grs,f
  9108     0369  0842               	movf	___flmul@temp+1,w
  9109     036A  3DB8               	addwfc	___flmul@grs+1,f
  9110     036B  3000               	movlw	0
  9111     036C  3DB9               	addwfc	___flmul@grs+2,f
  9112     036D  3DBA               	addwfc	___flmul@grs+3,f
  9113     036E                     l4138:
  9114     036E  3008               	movlw	8
  9115     036F                     u4635:
  9116     036F  35B7               	lslf	___flmul@grs,f
  9117     0370  0DB8               	rlf	___flmul@grs+1,f
  9118     0371  0DB9               	rlf	___flmul@grs+2,f
  9119     0372  0DBA               	rlf	___flmul@grs+3,f
  9120     0373  0B89               	decfsz	9,f
  9121     0374  2B6F               	goto	u4635
  9122     0375  0829               	movf	___flmul@b,w
  9123     0376  00A0               	movwf	__Umul8_16@multiplicand
  9124     0377  082D               	movf	___flmul@a,w
  9125     0378  319B  2374  3182   	fcall	__Umul8_16
  9126     037B  0020               	movlb	0	; select bank0
  9127     037C  0821               	movf	?__Umul8_16+1,w
  9128     037D  00C2               	movwf	___flmul@temp+1
  9129     037E  0820               	movf	?__Umul8_16,w
  9130     037F  00C1               	movwf	___flmul@temp
  9131     0380                     l4140:
  9132     0380  0841               	movf	___flmul@temp,w
  9133     0381  07B7               	addwf	___flmul@grs,f
  9134     0382  0842               	movf	___flmul@temp+1,w
  9135     0383  3DB8               	addwfc	___flmul@grs+1,f
  9136     0384  3000               	movlw	0
  9137     0385  3DB9               	addwfc	___flmul@grs+2,f
  9138     0386  3DBA               	addwfc	___flmul@grs+3,f
  9139     0387                     l4142:
  9140     0387  082A               	movf	___flmul@b+1,w
  9141     0388  00A0               	movwf	__Umul8_16@multiplicand
  9142     0389  082F               	movf	___flmul@a+2,w
  9143     038A  319B  2374  3182   	fcall	__Umul8_16
  9144     038D  0020               	movlb	0	; select bank0
  9145     038E  0821               	movf	?__Umul8_16+1,w
  9146     038F  00C2               	movwf	___flmul@temp+1
  9147     0390  0820               	movf	?__Umul8_16,w
  9148     0391  00C1               	movwf	___flmul@temp
  9149     0392  0841               	movf	___flmul@temp,w
  9150     0393  07BD               	addwf	___flmul@prod,f
  9151     0394  0842               	movf	___flmul@temp+1,w
  9152     0395  3DBE               	addwfc	___flmul@prod+1,f
  9153     0396  3000               	movlw	0
  9154     0397  3DBF               	addwfc	___flmul@prod+2,f
  9155     0398  3DC0               	addwfc	___flmul@prod+3,f
  9156     0399                     l4144:
  9157     0399  082B               	movf	___flmul@b+2,w
  9158     039A  00A0               	movwf	__Umul8_16@multiplicand
  9159     039B  082E               	movf	___flmul@a+1,w
  9160     039C  319B  2374  3182   	fcall	__Umul8_16
  9161     039F  0020               	movlb	0	; select bank0
  9162     03A0  0821               	movf	?__Umul8_16+1,w
  9163     03A1  00C2               	movwf	___flmul@temp+1
  9164     03A2  0820               	movf	?__Umul8_16,w
  9165     03A3  00C1               	movwf	___flmul@temp
  9166     03A4                     l4146:
  9167     03A4  0841               	movf	___flmul@temp,w
  9168     03A5  07BD               	addwf	___flmul@prod,f
  9169     03A6  0842               	movf	___flmul@temp+1,w
  9170     03A7  3DBE               	addwfc	___flmul@prod+1,f
  9171     03A8  3000               	movlw	0
  9172     03A9  3DBF               	addwfc	___flmul@prod+2,f
  9173     03AA  3DC0               	addwfc	___flmul@prod+3,f
  9174     03AB  082B               	movf	___flmul@b+2,w
  9175     03AC  00A0               	movwf	__Umul8_16@multiplicand
  9176     03AD  082F               	movf	___flmul@a+2,w
  9177     03AE  319B  2374  3182   	fcall	__Umul8_16
  9178     03B1  0020               	movlb	0	; select bank0
  9179     03B2  0821               	movf	?__Umul8_16+1,w
  9180     03B3  00C2               	movwf	___flmul@temp+1
  9181     03B4  0820               	movf	?__Umul8_16,w
  9182     03B5  00C1               	movwf	___flmul@temp
  9183     03B6                     l4148:
  9184     03B6  0841               	movf	___flmul@temp,w
  9185     03B7  00B1               	movwf	??___flmul
  9186     03B8  0842               	movf	___flmul@temp+1,w
  9187     03B9  00B2               	movwf	??___flmul+1
  9188     03BA  01B3               	clrf	??___flmul+2
  9189     03BB  01B4               	clrf	??___flmul+3
  9190     03BC  3008               	movlw	8
  9191     03BD                     u4645:
  9192     03BD  35B1               	lslf	??___flmul,f
  9193     03BE  0DB2               	rlf	??___flmul+1,f
  9194     03BF  0DB3               	rlf	??___flmul+2,f
  9195     03C0  0DB4               	rlf	??___flmul+3,f
  9196     03C1                     u4640:
  9197     03C1  0B89               	decfsz	9,f
  9198     03C2  2BBD               	goto	u4645
  9199     03C3  0831               	movf	??___flmul,w
  9200     03C4  07BD               	addwf	___flmul@prod,f
  9201     03C5  0832               	movf	??___flmul+1,w
  9202     03C6  3DBE               	addwfc	___flmul@prod+1,f
  9203     03C7  0833               	movf	??___flmul+2,w
  9204     03C8  3DBF               	addwfc	___flmul@prod+2,f
  9205     03C9  0834               	movf	??___flmul+3,w
  9206     03CA  3DC0               	addwfc	___flmul@prod+3,f
  9207     03CB                     l4150:
  9208     03CB  0837               	movf	___flmul@grs,w
  9209     03CC  00B1               	movwf	??___flmul
  9210     03CD  0838               	movf	___flmul@grs+1,w
  9211     03CE  00B2               	movwf	??___flmul+1
  9212     03CF  0839               	movf	___flmul@grs+2,w
  9213     03D0  00B3               	movwf	??___flmul+2
  9214     03D1  083A               	movf	___flmul@grs+3,w
  9215     03D2  00B4               	movwf	??___flmul+3
  9216     03D3  3018               	movlw	24
  9217     03D4                     u4655:
  9218     03D4  36B4               	lsrf	??___flmul+3,f
  9219     03D5  0CB3               	rrf	??___flmul+2,f
  9220     03D6  0CB2               	rrf	??___flmul+1,f
  9221     03D7  0CB1               	rrf	??___flmul,f
  9222     03D8                     u4650:
  9223     03D8  0B89               	decfsz	9,f
  9224     03D9  2BD4               	goto	u4655
  9225     03DA  0831               	movf	??___flmul,w
  9226     03DB  07BD               	addwf	___flmul@prod,f
  9227     03DC  0832               	movf	??___flmul+1,w
  9228     03DD  3DBE               	addwfc	___flmul@prod+1,f
  9229     03DE  0833               	movf	??___flmul+2,w
  9230     03DF  3DBF               	addwfc	___flmul@prod+2,f
  9231     03E0  0834               	movf	??___flmul+3,w
  9232     03E1  3DC0               	addwfc	___flmul@prod+3,f
  9233     03E2                     l4152:
  9234     03E2  3008               	movlw	8
  9235     03E3                     u4665:
  9236     03E3  35B7               	lslf	___flmul@grs,f
  9237     03E4  0DB8               	rlf	___flmul@grs+1,f
  9238     03E5  0DB9               	rlf	___flmul@grs+2,f
  9239     03E6  0DBA               	rlf	___flmul@grs+3,f
  9240     03E7  0B89               	decfsz	9,f
  9241     03E8  2BE3               	goto	u4665
  9242     03E9                     l4154:
  9243     03E9  083C               	movf	___flmul@bexp,w
  9244     03EA  073B               	addwf	___flmul@aexp,w
  9245     03EB  00B1               	movwf	??___flmul
  9246     03EC  01B2               	clrf	??___flmul+1
  9247     03ED  0DB2               	rlf	??___flmul+1,f
  9248     03EE  0831               	movf	??___flmul,w
  9249     03EF  3E82               	addlw	130
  9250     03F0  00C1               	movwf	___flmul@temp
  9251     03F1  30FF               	movlw	255
  9252     03F2  3D32               	addwfc	??___flmul+1,w
  9253     03F3  00C2               	movwf	___flmul@temp+1
  9254     03F4  2C0C               	goto	l4166
  9255     03F5                     l4156:
  9256     03F5  3001               	movlw	1
  9257     03F6                     u4675:
  9258     03F6  35BD               	lslf	___flmul@prod,f
  9259     03F7  0DBE               	rlf	___flmul@prod+1,f
  9260     03F8  0DBF               	rlf	___flmul@prod+2,f
  9261     03F9  0DC0               	rlf	___flmul@prod+3,f
  9262     03FA  0B89               	decfsz	9,f
  9263     03FB  2BF6               	goto	u4675
  9264     03FC                     l4158:
  9265     03FC  1FBA               	btfss	___flmul@grs+3,7
  9266     03FD  2BFF               	goto	u4681
  9267     03FE  2C00               	goto	u4680
  9268     03FF                     u4681:
  9269     03FF  2C01               	goto	l4162
  9270     0400                     u4680:
  9271     0400                     l4160:
  9272     0400  143D               	bsf	___flmul@prod,0
  9273     0401                     l4162:
  9274     0401  3001               	movlw	1
  9275     0402                     u4695:
  9276     0402  35B7               	lslf	___flmul@grs,f
  9277     0403  0DB8               	rlf	___flmul@grs+1,f
  9278     0404  0DB9               	rlf	___flmul@grs+2,f
  9279     0405  0DBA               	rlf	___flmul@grs+3,f
  9280     0406  0B89               	decfsz	9,f
  9281     0407  2C02               	goto	u4695
  9282     0408                     l4164:
  9283     0408  30FF               	movlw	255
  9284     0409  07C1               	addwf	___flmul@temp,f
  9285     040A  30FF               	movlw	255
  9286     040B  3DC2               	addwfc	___flmul@temp+1,f
  9287     040C                     l4166:
  9288     040C  1FBF               	btfss	___flmul@prod+2,7
  9289     040D  2C0F               	goto	u4701
  9290     040E  2C10               	goto	u4700
  9291     040F                     u4701:
  9292     040F  2BF5               	goto	l4156
  9293     0410                     u4700:
  9294     0410                     l4168:
  9295     0410  01BB               	clrf	___flmul@aexp
  9296     0411                     l4170:
  9297     0411  1FBA               	btfss	___flmul@grs+3,7
  9298     0412  2C14               	goto	u4711
  9299     0413  2C15               	goto	u4710
  9300     0414                     u4711:
  9301     0414  2C31               	goto	l4178
  9302     0415                     u4710:
  9303     0415                     l4172:
  9304     0415  30FF               	movlw	255
  9305     0416  0537               	andwf	___flmul@grs,w
  9306     0417  00B1               	movwf	??___flmul
  9307     0418  30FF               	movlw	255
  9308     0419  0538               	andwf	___flmul@grs+1,w
  9309     041A  00B2               	movwf	??___flmul+1
  9310     041B  30FF               	movlw	255
  9311     041C  0539               	andwf	___flmul@grs+2,w
  9312     041D  00B3               	movwf	??___flmul+2
  9313     041E  307F               	movlw	127
  9314     041F  053A               	andwf	___flmul@grs+3,w
  9315     0420  00B4               	movwf	??___flmul+3
  9316     0421  0834               	movf	??___flmul+3,w
  9317     0422  0433               	iorwf	??___flmul+2,w
  9318     0423  0432               	iorwf	??___flmul+1,w
  9319     0424  0431               	iorwf	??___flmul,w
  9320     0425  1903               	skipnz
  9321     0426  2C28               	goto	u4721
  9322     0427  2C29               	goto	u4720
  9323     0428                     u4721:
  9324     0428  2C2C               	goto	l1006
  9325     0429                     u4720:
  9326     0429                     l4174:
  9327     0429  01BB               	clrf	___flmul@aexp
  9328     042A  0ABB               	incf	___flmul@aexp,f
  9329     042B  2C31               	goto	l4178
  9330     042C                     l1006:
  9331     042C  1C3D               	btfss	___flmul@prod,0
  9332     042D  2C2F               	goto	u4731
  9333     042E  2C30               	goto	u4730
  9334     042F                     u4731:
  9335     042F  2C31               	goto	l4178
  9336     0430                     u4730:
  9337     0430  2C29               	goto	l4174
  9338     0431                     l4178:
  9339     0431  083B               	movf	___flmul@aexp,w
  9340     0432  1903               	btfsc	3,2
  9341     0433  2C35               	goto	u4741
  9342     0434  2C36               	goto	u4740
  9343     0435                     u4741:
  9344     0435  2C5E               	goto	l4188
  9345     0436                     u4740:
  9346     0436                     l4180:
  9347     0436  3001               	movlw	1
  9348     0437  07BD               	addwf	___flmul@prod,f
  9349     0438  3000               	movlw	0
  9350     0439  3DBE               	addwfc	___flmul@prod+1,f
  9351     043A  3000               	movlw	0
  9352     043B  3DBF               	addwfc	___flmul@prod+2,f
  9353     043C  3000               	movlw	0
  9354     043D  3DC0               	addwfc	___flmul@prod+3,f
  9355     043E                     l4182:
  9356     043E  1C40               	btfss	___flmul@prod+3,0
  9357     043F  2C41               	goto	u4751
  9358     0440  2C42               	goto	u4750
  9359     0441                     u4751:
  9360     0441  2C5E               	goto	l4188
  9361     0442                     u4750:
  9362     0442                     l4184:
  9363     0442  083D               	movf	___flmul@prod,w
  9364     0443  00B1               	movwf	??___flmul
  9365     0444  083E               	movf	___flmul@prod+1,w
  9366     0445  00B2               	movwf	??___flmul+1
  9367     0446  083F               	movf	___flmul@prod+2,w
  9368     0447  00B3               	movwf	??___flmul+2
  9369     0448  0840               	movf	___flmul@prod+3,w
  9370     0449  00B4               	movwf	??___flmul+3
  9371     044A  3001               	movlw	1
  9372     044B  00B5               	movwf	??___flmul+4
  9373     044C                     u4765:
  9374     044C  37B4               	asrf	??___flmul+3,f
  9375     044D  0CB3               	rrf	??___flmul+2,f
  9376     044E  0CB2               	rrf	??___flmul+1,f
  9377     044F  0CB1               	rrf	??___flmul,f
  9378     0450                     u4760:
  9379     0450  0BB5               	decfsz	??___flmul+4,f
  9380     0451  2C4C               	goto	u4765
  9381     0452  0834               	movf	??___flmul+3,w
  9382     0453  00C0               	movwf	___flmul@prod+3
  9383     0454  0833               	movf	??___flmul+2,w
  9384     0455  00BF               	movwf	___flmul@prod+2
  9385     0456  0832               	movf	??___flmul+1,w
  9386     0457  00BE               	movwf	___flmul@prod+1
  9387     0458  0831               	movf	??___flmul,w
  9388     0459  00BD               	movwf	___flmul@prod
  9389     045A                     l4186:
  9390     045A  3001               	movlw	1
  9391     045B  07C1               	addwf	___flmul@temp,f
  9392     045C  3000               	movlw	0
  9393     045D  3DC2               	addwfc	___flmul@temp+1,f
  9394     045E                     l4188:
  9395     045E  0842               	movf	___flmul@temp+1,w
  9396     045F  3A80               	xorlw	128
  9397     0460  00B1               	movwf	??___flmul
  9398     0461  3080               	movlw	128
  9399     0462  0231               	subwf	??___flmul,w
  9400     0463  1D03               	skipz
  9401     0464  2C67               	goto	u4775
  9402     0465  30FF               	movlw	255
  9403     0466  0241               	subwf	___flmul@temp,w
  9404     0467                     u4775:
  9405     0467  1C03               	skipc
  9406     0468  2C6A               	goto	u4771
  9407     0469  2C6B               	goto	u4770
  9408     046A                     u4771:
  9409     046A  2C75               	goto	l4192
  9410     046B                     u4770:
  9411     046B                     l4190:
  9412     046B  307F               	movlw	127
  9413     046C  0020               	movlb	0	; select bank0
  9414     046D  00C0               	movwf	___flmul@prod+3
  9415     046E  3080               	movlw	128
  9416     046F  00BF               	movwf	___flmul@prod+2
  9417     0470  3000               	movlw	0
  9418     0471  00BE               	movwf	___flmul@prod+1
  9419     0472  3000               	movlw	0
  9420     0473  00BD               	movwf	___flmul@prod
  9421     0474  2CA0               	goto	l1012
  9422     0475                     l4192:
  9423     0475  0020               	movlb	0	; select bank0
  9424     0476  0842               	movf	___flmul@temp+1,w
  9425     0477  3A80               	xorlw	128
  9426     0478  00B1               	movwf	??___flmul
  9427     0479  3080               	movlw	128
  9428     047A  0231               	subwf	??___flmul,w
  9429     047B  1D03               	skipz
  9430     047C  2C7F               	goto	u4785
  9431     047D  3001               	movlw	1
  9432     047E  0241               	subwf	___flmul@temp,w
  9433     047F                     u4785:
  9434     047F  1803               	skipnc
  9435     0480  2C82               	goto	u4781
  9436     0481  2C83               	goto	u4780
  9437     0482                     u4781:
  9438     0482  2C8E               	goto	l4198
  9439     0483                     u4780:
  9440     0483                     l4194:
  9441     0483  3000               	movlw	0
  9442     0484  0020               	movlb	0	; select bank0
  9443     0485  00C0               	movwf	___flmul@prod+3
  9444     0486  3000               	movlw	0
  9445     0487  00BF               	movwf	___flmul@prod+2
  9446     0488  3000               	movlw	0
  9447     0489  00BE               	movwf	___flmul@prod+1
  9448     048A  3000               	movlw	0
  9449     048B  00BD               	movwf	___flmul@prod
  9450     048C                     l4196:
  9451     048C  01B6               	clrf	___flmul@sign
  9452     048D  2CA0               	goto	l1012
  9453     048E                     l4198:
  9454     048E  0020               	movlb	0	; select bank0
  9455     048F  0841               	movf	___flmul@temp,w
  9456     0490  00BC               	movwf	___flmul@bexp
  9457     0491  30FF               	movlw	255
  9458     0492  05BD               	andwf	___flmul@prod,f
  9459     0493  30FF               	movlw	255
  9460     0494  05BE               	andwf	___flmul@prod+1,f
  9461     0495  307F               	movlw	127
  9462     0496  05BF               	andwf	___flmul@prod+2,f
  9463     0497  3000               	movlw	0
  9464     0498  05C0               	andwf	___flmul@prod+3,f
  9465     0499                     l4200:
  9466     0499  1C3C               	btfss	___flmul@bexp,0
  9467     049A  2C9C               	goto	u4791
  9468     049B  2C9D               	goto	u4790
  9469     049C                     u4791:
  9470     049C  2C9E               	goto	l4204
  9471     049D                     u4790:
  9472     049D                     l4202:
  9473     049D  17BF               	bsf	___flmul@prod+2,7
  9474     049E                     l4204:
  9475     049E  363C               	lsrf	___flmul@bexp,w
  9476     049F  00C0               	movwf	___flmul@prod+3
  9477     04A0                     l1012:
  9478     04A0  0836               	movf	___flmul@sign,w
  9479     04A1  00B1               	movwf	??___flmul
  9480     04A2  0831               	movf	??___flmul,w
  9481     04A3  04C0               	iorwf	___flmul@prod+3,f
  9482     04A4                     l4206:
  9483     04A4  0840               	movf	___flmul@prod+3,w
  9484     04A5  00AC               	movwf	?___flmul+3
  9485     04A6  083F               	movf	___flmul@prod+2,w
  9486     04A7  00AB               	movwf	?___flmul+2
  9487     04A8  083E               	movf	___flmul@prod+1,w
  9488     04A9  00AA               	movwf	?___flmul+1
  9489     04AA  083D               	movf	___flmul@prod,w
  9490     04AB  00A9               	movwf	?___flmul
  9491     04AC                     l1000:
  9492     04AC  0008               	return
  9493     04AD                     __end_of___flmul:
  9494                           
  9495                           	psect	text17
  9496     1B74                     __ptext17:	
  9497 ;; *************** function __Umul8_16 *****************
  9498 ;; Defined at:
  9499 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8_16.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;  multiplier      1    wreg     unsigned char 
  9502 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9505 ;;  word_mpld       2    6[BANK0 ] unsigned short 
  9506 ;;  product         2    4[BANK0 ] unsigned short 
  9507 ;; Return value:  Size  Location     Type
  9508 ;;                  2    0[BANK0 ] unsigned int 
  9509 ;; Registers used:
  9510 ;;		wreg, status,2, status,0
  9511 ;; Tracked objects:
  9512 ;;		On entry : 0/0
  9513 ;;		On exit  : 0/0
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9516 ;;      Params:         0       2       0       0       0       0       0       0
  9517 ;;      Locals:         0       5       0       0       0       0       0       0
  9518 ;;      Temps:          0       2       0       0       0       0       0       0
  9519 ;;      Totals:         0       9       0       0       0       0       0       0
  9520 ;;Total ram usage:        9 bytes
  9521 ;; Hardware stack levels used: 1
  9522 ;; Hardware stack levels required when called: 4
  9523 ;; This function calls:
  9524 ;;		Nothing
  9525 ;; This function is called by:
  9526 ;;		___flmul
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530     1B74                     __Umul8_16:	
  9531                           ;psect for function __Umul8_16
  9532                           
  9533                           
  9534                           ;incstack = 0
  9535                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9536                           ;__Umul8_16@multiplier stored from wreg
  9537     1B74  0020               	movlb	0	; select bank0
  9538     1B75  00A8               	movwf	__Umul8_16@multiplier
  9539     1B76                     l3730:
  9540     1B76  01A4               	clrf	__Umul8_16@product
  9541     1B77  01A5               	clrf	__Umul8_16@product+1
  9542     1B78                     l3732:
  9543     1B78  0820               	movf	__Umul8_16@multiplicand,w
  9544     1B79  00A2               	movwf	??__Umul8_16
  9545     1B7A  01A3               	clrf	??__Umul8_16+1
  9546     1B7B  0822               	movf	??__Umul8_16,w
  9547     1B7C  00A6               	movwf	__Umul8_16@word_mpld
  9548     1B7D  0823               	movf	??__Umul8_16+1,w
  9549     1B7E  00A7               	movwf	__Umul8_16@word_mpld+1
  9550     1B7F                     l3734:
  9551     1B7F  1C28               	btfss	__Umul8_16@multiplier,0
  9552     1B80  2B82               	goto	u3791
  9553     1B81  2B83               	goto	u3790
  9554     1B82                     u3791:
  9555     1B82  2B87               	goto	l1019
  9556     1B83                     u3790:
  9557     1B83                     l3736:
  9558     1B83  0826               	movf	__Umul8_16@word_mpld,w
  9559     1B84  07A4               	addwf	__Umul8_16@product,f
  9560     1B85  0827               	movf	__Umul8_16@word_mpld+1,w
  9561     1B86  3DA5               	addwfc	__Umul8_16@product+1,f
  9562     1B87                     l1019:
  9563     1B87  3001               	movlw	1
  9564     1B88                     u3805:
  9565     1B88  35A6               	lslf	__Umul8_16@word_mpld,f
  9566     1B89  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  9567     1B8A  0B89               	decfsz	9,f
  9568     1B8B  2B88               	goto	u3805
  9569     1B8C  1003               	clrc
  9570     1B8D  0CA8               	rrf	__Umul8_16@multiplier,f
  9571     1B8E                     l3738:
  9572     1B8E  0828               	movf	__Umul8_16@multiplier,w
  9573     1B8F  1D03               	btfss	3,2
  9574     1B90  2B92               	goto	u3811
  9575     1B91  2B93               	goto	u3810
  9576     1B92                     u3811:
  9577     1B92  2B7F               	goto	l3734
  9578     1B93                     u3810:
  9579     1B93                     l3740:
  9580     1B93  0825               	movf	__Umul8_16@product+1,w
  9581     1B94  00A1               	movwf	?__Umul8_16+1
  9582     1B95  0824               	movf	__Umul8_16@product,w
  9583     1B96  00A0               	movwf	?__Umul8_16
  9584     1B97                     l1021:
  9585     1B97  0008               	return
  9586     1B98                     __end_of__Umul8_16:
  9587                           
  9588                           	psect	text18
  9589     10CA                     __ptext18:	
  9590 ;; *************** function ___flge *****************
  9591 ;; Defined at:
  9592 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  9593 ;; Parameters:    Size  Location     Type
  9594 ;;  ff1             4   35[BANK0 ] unsigned int 
  9595 ;;  ff2             4   39[BANK0 ] unsigned int 
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;		None
  9598 ;; Return value:  Size  Location     Type
  9599 ;;		None               void
  9600 ;; Registers used:
  9601 ;;		wreg, status,2, status,0
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9607 ;;      Params:         0       8       0       0       0       0       0       0
  9608 ;;      Locals:         0       0       0       0       0       0       0       0
  9609 ;;      Temps:          0       4       0       0       0       0       0       0
  9610 ;;      Totals:         0      12       0       0       0       0       0       0
  9611 ;;Total ram usage:       12 bytes
  9612 ;; Hardware stack levels used: 1
  9613 ;; Hardware stack levels required when called: 4
  9614 ;; This function calls:
  9615 ;;		Nothing
  9616 ;; This function is called by:
  9617 ;;		_efgtoa
  9618 ;; This function uses a non-reentrant model
  9619 ;;
  9620                           
  9621     10CA                     ___flge:	
  9622                           ;psect for function ___flge
  9623                           
  9624     10CA                     l3860:	
  9625                           ;incstack = 0
  9626                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9627                           
  9628     10CA  3000               	movlw	0
  9629     10CB  0020               	movlb	0	; select bank0
  9630     10CC  0543               	andwf	___flge@ff1,w
  9631     10CD  00CB               	movwf	??___flge
  9632     10CE  3000               	movlw	0
  9633     10CF  0544               	andwf	___flge@ff1+1,w
  9634     10D0  00CC               	movwf	??___flge+1
  9635     10D1  3080               	movlw	128
  9636     10D2  0545               	andwf	___flge@ff1+2,w
  9637     10D3  00CD               	movwf	??___flge+2
  9638     10D4  307F               	movlw	127
  9639     10D5  0546               	andwf	___flge@ff1+3,w
  9640     10D6  00CE               	movwf	??___flge+3
  9641     10D7  084E               	movf	??___flge+3,w
  9642     10D8  044D               	iorwf	??___flge+2,w
  9643     10D9  044C               	iorwf	??___flge+1,w
  9644     10DA  044B               	iorwf	??___flge,w
  9645     10DB  1D03               	skipz
  9646     10DC  28DE               	goto	u4091
  9647     10DD  28DF               	goto	u4090
  9648     10DE                     u4091:
  9649     10DE  28E7               	goto	l781
  9650     10DF                     u4090:
  9651     10DF                     l3862:
  9652     10DF  3000               	movlw	0
  9653     10E0  00C6               	movwf	___flge@ff1+3
  9654     10E1  3000               	movlw	0
  9655     10E2  00C5               	movwf	___flge@ff1+2
  9656     10E3  3000               	movlw	0
  9657     10E4  00C4               	movwf	___flge@ff1+1
  9658     10E5  3000               	movlw	0
  9659     10E6  00C3               	movwf	___flge@ff1
  9660     10E7                     l781:
  9661     10E7  3000               	movlw	0
  9662     10E8  0547               	andwf	___flge@ff2,w
  9663     10E9  00CB               	movwf	??___flge
  9664     10EA  3000               	movlw	0
  9665     10EB  0548               	andwf	___flge@ff2+1,w
  9666     10EC  00CC               	movwf	??___flge+1
  9667     10ED  3080               	movlw	128
  9668     10EE  0549               	andwf	___flge@ff2+2,w
  9669     10EF  00CD               	movwf	??___flge+2
  9670     10F0  307F               	movlw	127
  9671     10F1  054A               	andwf	___flge@ff2+3,w
  9672     10F2  00CE               	movwf	??___flge+3
  9673     10F3  084E               	movf	??___flge+3,w
  9674     10F4  044D               	iorwf	??___flge+2,w
  9675     10F5  044C               	iorwf	??___flge+1,w
  9676     10F6  044B               	iorwf	??___flge,w
  9677     10F7  1D03               	skipz
  9678     10F8  28FA               	goto	u4101
  9679     10F9  28FB               	goto	u4100
  9680     10FA                     u4101:
  9681     10FA  2903               	goto	l3866
  9682     10FB                     u4100:
  9683     10FB                     l3864:
  9684     10FB  3000               	movlw	0
  9685     10FC  00CA               	movwf	___flge@ff2+3
  9686     10FD  3000               	movlw	0
  9687     10FE  00C9               	movwf	___flge@ff2+2
  9688     10FF  3000               	movlw	0
  9689     1100  00C8               	movwf	___flge@ff2+1
  9690     1101  3000               	movlw	0
  9691     1102  00C7               	movwf	___flge@ff2
  9692     1103                     l3866:
  9693     1103  1FC6               	btfss	___flge@ff1+3,7
  9694     1104  2906               	goto	u4111
  9695     1105  2907               	goto	u4110
  9696     1106                     u4111:
  9697     1106  291F               	goto	l3870
  9698     1107                     u4110:
  9699     1107                     l3868:
  9700     1107  3000               	movlw	0
  9701     1108  00CB               	movwf	??___flge
  9702     1109  3000               	movlw	0
  9703     110A  00CC               	movwf	??___flge+1
  9704     110B  3000               	movlw	0
  9705     110C  00CD               	movwf	??___flge+2
  9706     110D  3080               	movlw	128
  9707     110E  00CE               	movwf	??___flge+3
  9708     110F  0843               	movf	___flge@ff1,w
  9709     1110  02CB               	subwf	??___flge,f
  9710     1111  0844               	movf	___flge@ff1+1,w
  9711     1112  3BCC               	subwfb	??___flge+1,f
  9712     1113  0845               	movf	___flge@ff1+2,w
  9713     1114  3BCD               	subwfb	??___flge+2,f
  9714     1115  0846               	movf	___flge@ff1+3,w
  9715     1116  3BCE               	subwfb	??___flge+3,f
  9716     1117  084E               	movf	??___flge+3,w
  9717     1118  00C6               	movwf	___flge@ff1+3
  9718     1119  084D               	movf	??___flge+2,w
  9719     111A  00C5               	movwf	___flge@ff1+2
  9720     111B  084C               	movf	??___flge+1,w
  9721     111C  00C4               	movwf	___flge@ff1+1
  9722     111D  084B               	movf	??___flge,w
  9723     111E  00C3               	movwf	___flge@ff1
  9724     111F                     l3870:
  9725     111F  1FCA               	btfss	___flge@ff2+3,7
  9726     1120  2922               	goto	u4121
  9727     1121  2923               	goto	u4120
  9728     1122                     u4121:
  9729     1122  293B               	goto	l784
  9730     1123                     u4120:
  9731     1123                     l3872:
  9732     1123  3000               	movlw	0
  9733     1124  00CB               	movwf	??___flge
  9734     1125  3000               	movlw	0
  9735     1126  00CC               	movwf	??___flge+1
  9736     1127  3000               	movlw	0
  9737     1128  00CD               	movwf	??___flge+2
  9738     1129  3080               	movlw	128
  9739     112A  00CE               	movwf	??___flge+3
  9740     112B  0847               	movf	___flge@ff2,w
  9741     112C  02CB               	subwf	??___flge,f
  9742     112D  0848               	movf	___flge@ff2+1,w
  9743     112E  3BCC               	subwfb	??___flge+1,f
  9744     112F  0849               	movf	___flge@ff2+2,w
  9745     1130  3BCD               	subwfb	??___flge+2,f
  9746     1131  084A               	movf	___flge@ff2+3,w
  9747     1132  3BCE               	subwfb	??___flge+3,f
  9748     1133  084E               	movf	??___flge+3,w
  9749     1134  00CA               	movwf	___flge@ff2+3
  9750     1135  084D               	movf	??___flge+2,w
  9751     1136  00C9               	movwf	___flge@ff2+2
  9752     1137  084C               	movf	??___flge+1,w
  9753     1138  00C8               	movwf	___flge@ff2+1
  9754     1139  084B               	movf	??___flge,w
  9755     113A  00C7               	movwf	___flge@ff2
  9756     113B                     l784:
  9757     113B  3080               	movlw	128
  9758     113C  06C6               	xorwf	___flge@ff1+3,f
  9759     113D  3080               	movlw	128
  9760     113E  06CA               	xorwf	___flge@ff2+3,f
  9761     113F  084A               	movf	___flge@ff2+3,w
  9762     1140  0246               	subwf	___flge@ff1+3,w
  9763     1141  1D03               	skipz
  9764     1142  294D               	goto	u4135
  9765     1143  0849               	movf	___flge@ff2+2,w
  9766     1144  0245               	subwf	___flge@ff1+2,w
  9767     1145  1D03               	skipz
  9768     1146  294D               	goto	u4135
  9769     1147  0848               	movf	___flge@ff2+1,w
  9770     1148  0244               	subwf	___flge@ff1+1,w
  9771     1149  1D03               	skipz
  9772     114A  294D               	goto	u4135
  9773     114B  0847               	movf	___flge@ff2,w
  9774     114C  0243               	subwf	___flge@ff1,w
  9775     114D                     u4135:
  9776     114D  1803               	skipnc
  9777     114E  2950               	goto	u4131
  9778     114F  2951               	goto	u4130
  9779     1150                     u4131:
  9780     1150  2953               	goto	l3876
  9781     1151                     u4130:
  9782     1151                     l3874:
  9783     1151  1003               	clrc
  9784     1152  2954               	goto	l789
  9785     1153                     l3876:
  9786     1153  1403               	setc
  9787     1154                     l789:
  9788     1154  0008               	return
  9789     1155                     __end_of___flge:
  9790                           
  9791                           	psect	text19
  9792     1C92                     __ptext19:	
  9793 ;; *************** function ___fleq *****************
  9794 ;; Defined at:
  9795 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  9796 ;; Parameters:    Size  Location     Type
  9797 ;;  ff1             4    0[BANK0 ] unsigned int 
  9798 ;;  ff2             4    4[BANK0 ] unsigned int 
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;		None
  9801 ;; Return value:  Size  Location     Type
  9802 ;;		None               void
  9803 ;; Registers used:
  9804 ;;		wreg, status,2, status,0
  9805 ;; Tracked objects:
  9806 ;;		On entry : 0/0
  9807 ;;		On exit  : 0/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9810 ;;      Params:         0       8       0       0       0       0       0       0
  9811 ;;      Locals:         0       0       0       0       0       0       0       0
  9812 ;;      Temps:          0       4       0       0       0       0       0       0
  9813 ;;      Totals:         0      12       0       0       0       0       0       0
  9814 ;;Total ram usage:       12 bytes
  9815 ;; Hardware stack levels used: 1
  9816 ;; Hardware stack levels required when called: 4
  9817 ;; This function calls:
  9818 ;;		Nothing
  9819 ;; This function is called by:
  9820 ;;		_efgtoa
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824     1C92                     ___fleq:	
  9825                           ;psect for function ___fleq
  9826                           
  9827     1C92                     l3848:	
  9828                           ;incstack = 0
  9829                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9830                           
  9831     1C92  3000               	movlw	0
  9832     1C93  0020               	movlb	0	; select bank0
  9833     1C94  0520               	andwf	___fleq@ff1,w
  9834     1C95  00A8               	movwf	??___fleq
  9835     1C96  3000               	movlw	0
  9836     1C97  0521               	andwf	___fleq@ff1+1,w
  9837     1C98  00A9               	movwf	??___fleq+1
  9838     1C99  3080               	movlw	128
  9839     1C9A  0522               	andwf	___fleq@ff1+2,w
  9840     1C9B  00AA               	movwf	??___fleq+2
  9841     1C9C  307F               	movlw	127
  9842     1C9D  0523               	andwf	___fleq@ff1+3,w
  9843     1C9E  00AB               	movwf	??___fleq+3
  9844     1C9F  082B               	movf	??___fleq+3,w
  9845     1CA0  042A               	iorwf	??___fleq+2,w
  9846     1CA1  0429               	iorwf	??___fleq+1,w
  9847     1CA2  0428               	iorwf	??___fleq,w
  9848     1CA3  1D03               	skipz
  9849     1CA4  2CA6               	goto	u4061
  9850     1CA5  2CA7               	goto	u4060
  9851     1CA6                     u4061:
  9852     1CA6  2CAF               	goto	l772
  9853     1CA7                     u4060:
  9854     1CA7                     l3850:
  9855     1CA7  3000               	movlw	0
  9856     1CA8  00A3               	movwf	___fleq@ff1+3
  9857     1CA9  3000               	movlw	0
  9858     1CAA  00A2               	movwf	___fleq@ff1+2
  9859     1CAB  3000               	movlw	0
  9860     1CAC  00A1               	movwf	___fleq@ff1+1
  9861     1CAD  3000               	movlw	0
  9862     1CAE  00A0               	movwf	___fleq@ff1
  9863     1CAF                     l772:
  9864     1CAF  3000               	movlw	0
  9865     1CB0  0524               	andwf	___fleq@ff2,w
  9866     1CB1  00A8               	movwf	??___fleq
  9867     1CB2  3000               	movlw	0
  9868     1CB3  0525               	andwf	___fleq@ff2+1,w
  9869     1CB4  00A9               	movwf	??___fleq+1
  9870     1CB5  3080               	movlw	128
  9871     1CB6  0526               	andwf	___fleq@ff2+2,w
  9872     1CB7  00AA               	movwf	??___fleq+2
  9873     1CB8  307F               	movlw	127
  9874     1CB9  0527               	andwf	___fleq@ff2+3,w
  9875     1CBA  00AB               	movwf	??___fleq+3
  9876     1CBB  082B               	movf	??___fleq+3,w
  9877     1CBC  042A               	iorwf	??___fleq+2,w
  9878     1CBD  0429               	iorwf	??___fleq+1,w
  9879     1CBE  0428               	iorwf	??___fleq,w
  9880     1CBF  1D03               	skipz
  9881     1CC0  2CC2               	goto	u4071
  9882     1CC1  2CC3               	goto	u4070
  9883     1CC2                     u4071:
  9884     1CC2  2CCB               	goto	l773
  9885     1CC3                     u4070:
  9886     1CC3                     l3852:
  9887     1CC3  3000               	movlw	0
  9888     1CC4  00A7               	movwf	___fleq@ff2+3
  9889     1CC5  3000               	movlw	0
  9890     1CC6  00A6               	movwf	___fleq@ff2+2
  9891     1CC7  3000               	movlw	0
  9892     1CC8  00A5               	movwf	___fleq@ff2+1
  9893     1CC9  3000               	movlw	0
  9894     1CCA  00A4               	movwf	___fleq@ff2
  9895     1CCB                     l773:
  9896     1CCB  0827               	movf	___fleq@ff2+3,w
  9897     1CCC  0623               	xorwf	___fleq@ff1+3,w
  9898     1CCD  1D03               	skipz
  9899     1CCE  2CD9               	goto	u4085
  9900     1CCF  0826               	movf	___fleq@ff2+2,w
  9901     1CD0  0622               	xorwf	___fleq@ff1+2,w
  9902     1CD1  1D03               	skipz
  9903     1CD2  2CD9               	goto	u4085
  9904     1CD3  0825               	movf	___fleq@ff2+1,w
  9905     1CD4  0621               	xorwf	___fleq@ff1+1,w
  9906     1CD5  1D03               	skipz
  9907     1CD6  2CD9               	goto	u4085
  9908     1CD7  0824               	movf	___fleq@ff2,w
  9909     1CD8  0620               	xorwf	___fleq@ff1,w
  9910     1CD9                     u4085:
  9911     1CD9  1903               	skipnz
  9912     1CDA  2CDC               	goto	u4081
  9913     1CDB  2CDD               	goto	u4080
  9914     1CDC                     u4081:
  9915     1CDC  2CDF               	goto	l3856
  9916     1CDD                     u4080:
  9917     1CDD                     l3854:
  9918     1CDD  1003               	clrc
  9919     1CDE  2CE0               	goto	l778
  9920     1CDF                     l3856:
  9921     1CDF  1403               	setc
  9922     1CE0                     l778:
  9923     1CE0  0008               	return
  9924     1CE1                     __end_of___fleq:
  9925                           
  9926                           	psect	text20
  9927     147F                     __ptext20:	
  9928 ;; *************** function ___fldiv *****************
  9929 ;; Defined at:
  9930 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  9931 ;; Parameters:    Size  Location     Type
  9932 ;;  a               4   20[BANK0 ] unsigned int 
  9933 ;;  b               4   24[BANK0 ] unsigned int 
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;  grs             4   40[BANK0 ] unsigned long 
  9936 ;;  rem             4   33[BANK0 ] unsigned long 
  9937 ;;  new_exp         2   38[BANK0 ] short 
  9938 ;;  aexp            1   45[BANK0 ] unsigned char 
  9939 ;;  bexp            1   44[BANK0 ] unsigned char 
  9940 ;;  sign            1   37[BANK0 ] unsigned char 
  9941 ;; Return value:  Size  Location     Type
  9942 ;;                  4   20[BANK0 ] unsigned char 
  9943 ;; Registers used:
  9944 ;;		wreg, status,2, status,0
  9945 ;; Tracked objects:
  9946 ;;		On entry : 0/0
  9947 ;;		On exit  : 0/0
  9948 ;;		Unchanged: 0/0
  9949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9950 ;;      Params:         0       8       0       0       0       0       0       0
  9951 ;;      Locals:         0      13       0       0       0       0       0       0
  9952 ;;      Temps:          0       5       0       0       0       0       0       0
  9953 ;;      Totals:         0      26       0       0       0       0       0       0
  9954 ;;Total ram usage:       26 bytes
  9955 ;; Hardware stack levels used: 1
  9956 ;; Hardware stack levels required when called: 4
  9957 ;; This function calls:
  9958 ;;		Nothing
  9959 ;; This function is called by:
  9960 ;;		_main
  9961 ;;		_efgtoa
  9962 ;; This function uses a non-reentrant model
  9963 ;;
  9964                           
  9965     147F                     ___fldiv:	
  9966                           ;psect for function ___fldiv
  9967                           
  9968     147F                     l3930:	
  9969                           ;incstack = 0
  9970                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9971                           
  9972     147F  0020               	movlb	0	; select bank0
  9973     1480  083B               	movf	___fldiv@b+3,w
  9974     1481  3980               	andlw	128
  9975     1482  00C5               	movwf	___fldiv@sign
  9976     1483                     l3932:
  9977     1483  353B               	lslf	___fldiv@b+3,w
  9978     1484  00CC               	movwf	___fldiv@bexp
  9979     1485                     l3934:
  9980     1485  1FBA               	btfss	___fldiv@b+2,7
  9981     1486  2C88               	goto	u4251
  9982     1487  2C89               	goto	u4250
  9983     1488                     u4251:
  9984     1488  2C8A               	goto	l3938
  9985     1489                     u4250:
  9986     1489                     l3936:
  9987     1489  144C               	bsf	___fldiv@bexp,0
  9988     148A                     l3938:
  9989     148A  084C               	movf	___fldiv@bexp,w
  9990     148B  1903               	btfsc	3,2
  9991     148C  2C8E               	goto	u4261
  9992     148D  2C8F               	goto	u4260
  9993     148E                     u4261:
  9994     148E  2C9F               	goto	l3948
  9995     148F                     u4260:
  9996     148F                     l3940:
  9997     148F  0A4C               	incf	___fldiv@bexp,w
  9998     1490  1D03               	btfss	3,2
  9999     1491  2C93               	goto	u4271
 10000     1492  2C94               	goto	u4270
 10001     1493                     u4271:
 10002     1493  2C9C               	goto	l3944
 10003     1494                     u4270:
 10004     1494                     l3942:
 10005     1494  3000               	movlw	0
 10006     1495  00BB               	movwf	___fldiv@b+3
 10007     1496  3000               	movlw	0
 10008     1497  00BA               	movwf	___fldiv@b+2
 10009     1498  3000               	movlw	0
 10010     1499  00B9               	movwf	___fldiv@b+1
 10011     149A  3000               	movlw	0
 10012     149B  00B8               	movwf	___fldiv@b
 10013     149C                     l3944:
 10014     149C  17BA               	bsf	___fldiv@b+2,7
 10015     149D                     l3946:
 10016     149D  01BB               	clrf	___fldiv@b+3
 10017     149E  2CA7               	goto	l3950
 10018     149F                     l3948:
 10019     149F  3000               	movlw	0
 10020     14A0  00BB               	movwf	___fldiv@b+3
 10021     14A1  3000               	movlw	0
 10022     14A2  00BA               	movwf	___fldiv@b+2
 10023     14A3  3000               	movlw	0
 10024     14A4  00B9               	movwf	___fldiv@b+1
 10025     14A5  3000               	movlw	0
 10026     14A6  00B8               	movwf	___fldiv@b
 10027     14A7                     l3950:
 10028     14A7  0837               	movf	___fldiv@a+3,w
 10029     14A8  3980               	andlw	128
 10030     14A9  00BC               	movwf	??___fldiv
 10031     14AA  083C               	movf	??___fldiv,w
 10032     14AB  06C5               	xorwf	___fldiv@sign,f
 10033     14AC                     l3952:
 10034     14AC  3537               	lslf	___fldiv@a+3,w
 10035     14AD  00CD               	movwf	___fldiv@aexp
 10036     14AE                     l3954:
 10037     14AE  1FB6               	btfss	___fldiv@a+2,7
 10038     14AF  2CB1               	goto	u4281
 10039     14B0  2CB2               	goto	u4280
 10040     14B1                     u4281:
 10041     14B1  2CB3               	goto	l3958
 10042     14B2                     u4280:
 10043     14B2                     l3956:
 10044     14B2  144D               	bsf	___fldiv@aexp,0
 10045     14B3                     l3958:
 10046     14B3  084D               	movf	___fldiv@aexp,w
 10047     14B4  1903               	btfsc	3,2
 10048     14B5  2CB7               	goto	u4291
 10049     14B6  2CB8               	goto	u4290
 10050     14B7                     u4291:
 10051     14B7  2CC8               	goto	l3968
 10052     14B8                     u4290:
 10053     14B8                     l3960:
 10054     14B8  0A4D               	incf	___fldiv@aexp,w
 10055     14B9  1D03               	btfss	3,2
 10056     14BA  2CBC               	goto	u4301
 10057     14BB  2CBD               	goto	u4300
 10058     14BC                     u4301:
 10059     14BC  2CC5               	goto	l3964
 10060     14BD                     u4300:
 10061     14BD                     l3962:
 10062     14BD  3000               	movlw	0
 10063     14BE  00B7               	movwf	___fldiv@a+3
 10064     14BF  3000               	movlw	0
 10065     14C0  00B6               	movwf	___fldiv@a+2
 10066     14C1  3000               	movlw	0
 10067     14C2  00B5               	movwf	___fldiv@a+1
 10068     14C3  3000               	movlw	0
 10069     14C4  00B4               	movwf	___fldiv@a
 10070     14C5                     l3964:
 10071     14C5  17B6               	bsf	___fldiv@a+2,7
 10072     14C6                     l3966:
 10073     14C6  01B7               	clrf	___fldiv@a+3
 10074     14C7  2CD0               	goto	l960
 10075     14C8                     l3968:
 10076     14C8  3000               	movlw	0
 10077     14C9  00B7               	movwf	___fldiv@a+3
 10078     14CA  3000               	movlw	0
 10079     14CB  00B6               	movwf	___fldiv@a+2
 10080     14CC  3000               	movlw	0
 10081     14CD  00B5               	movwf	___fldiv@a+1
 10082     14CE  3000               	movlw	0
 10083     14CF  00B4               	movwf	___fldiv@a
 10084     14D0                     l960:
 10085     14D0  0837               	movf	___fldiv@a+3,w
 10086     14D1  0436               	iorwf	___fldiv@a+2,w
 10087     14D2  0435               	iorwf	___fldiv@a+1,w
 10088     14D3  0434               	iorwf	___fldiv@a,w
 10089     14D4  1D03               	skipz
 10090     14D5  2CD7               	goto	u4311
 10091     14D6  2CD8               	goto	u4310
 10092     14D7                     u4311:
 10093     14D7  2CF1               	goto	l3978
 10094     14D8                     u4310:
 10095     14D8                     l3970:
 10096     14D8  3000               	movlw	0
 10097     14D9  00BB               	movwf	___fldiv@b+3
 10098     14DA  3000               	movlw	0
 10099     14DB  00BA               	movwf	___fldiv@b+2
 10100     14DC  3000               	movlw	0
 10101     14DD  00B9               	movwf	___fldiv@b+1
 10102     14DE  3000               	movlw	0
 10103     14DF  00B8               	movwf	___fldiv@b
 10104     14E0  3080               	movlw	128
 10105     14E1  04BA               	iorwf	___fldiv@b+2,f
 10106     14E2  307F               	movlw	127
 10107     14E3  04BB               	iorwf	___fldiv@b+3,f
 10108     14E4                     l3972:
 10109     14E4  0845               	movf	___fldiv@sign,w
 10110     14E5  00BC               	movwf	??___fldiv
 10111     14E6  083C               	movf	??___fldiv,w
 10112     14E7  04BB               	iorwf	___fldiv@b+3,f
 10113     14E8                     l3974:
 10114     14E8  083B               	movf	___fldiv@b+3,w
 10115     14E9  00B7               	movwf	?___fldiv+3
 10116     14EA  083A               	movf	___fldiv@b+2,w
 10117     14EB  00B6               	movwf	?___fldiv+2
 10118     14EC  0839               	movf	___fldiv@b+1,w
 10119     14ED  00B5               	movwf	?___fldiv+1
 10120     14EE  0838               	movf	___fldiv@b,w
 10121     14EF  00B4               	movwf	?___fldiv
 10122     14F0  2E28               	goto	l962
 10123     14F1                     l3978:
 10124     14F1  084C               	movf	___fldiv@bexp,w
 10125     14F2  1D03               	btfss	3,2
 10126     14F3  2CF5               	goto	u4321
 10127     14F4  2CF6               	goto	u4320
 10128     14F5                     u4321:
 10129     14F5  2CFF               	goto	l3984
 10130     14F6                     u4320:
 10131     14F6                     l3980:
 10132     14F6  3000               	movlw	0
 10133     14F7  00B7               	movwf	?___fldiv+3
 10134     14F8  3000               	movlw	0
 10135     14F9  00B6               	movwf	?___fldiv+2
 10136     14FA  3000               	movlw	0
 10137     14FB  00B5               	movwf	?___fldiv+1
 10138     14FC  3000               	movlw	0
 10139     14FD  00B4               	movwf	?___fldiv
 10140     14FE  2E28               	goto	l962
 10141     14FF                     l3984:
 10142     14FF  084C               	movf	___fldiv@bexp,w
 10143     1500  00BC               	movwf	??___fldiv
 10144     1501  01BD               	clrf	??___fldiv+1
 10145     1502  083D               	movf	??___fldiv+1,w
 10146     1503  00BF               	movwf	??___fldiv+3
 10147     1504  084D               	movf	___fldiv@aexp,w
 10148     1505  023C               	subwf	??___fldiv,w
 10149     1506  00BE               	movwf	??___fldiv+2
 10150     1507  1C03               	skipc
 10151     1508  03BF               	decf	??___fldiv+3,f
 10152     1509  083E               	movf	??___fldiv+2,w
 10153     150A  3E7F               	addlw	127
 10154     150B  00C6               	movwf	___fldiv@new_exp
 10155     150C  3000               	movlw	0
 10156     150D  3D3F               	addwfc	??___fldiv+3,w
 10157     150E  00C7               	movwf	___fldiv@new_exp+1
 10158     150F                     l3986:
 10159     150F  083B               	movf	___fldiv@b+3,w
 10160     1510  00C4               	movwf	___fldiv@rem+3
 10161     1511  083A               	movf	___fldiv@b+2,w
 10162     1512  00C3               	movwf	___fldiv@rem+2
 10163     1513  0839               	movf	___fldiv@b+1,w
 10164     1514  00C2               	movwf	___fldiv@rem+1
 10165     1515  0838               	movf	___fldiv@b,w
 10166     1516  00C1               	movwf	___fldiv@rem
 10167     1517                     l3988:
 10168     1517  3000               	movlw	0
 10169     1518  00BB               	movwf	___fldiv@b+3
 10170     1519  3000               	movlw	0
 10171     151A  00BA               	movwf	___fldiv@b+2
 10172     151B  3000               	movlw	0
 10173     151C  00B9               	movwf	___fldiv@b+1
 10174     151D  3000               	movlw	0
 10175     151E  00B8               	movwf	___fldiv@b
 10176     151F                     l3990:
 10177     151F  3000               	movlw	0
 10178     1520  00CB               	movwf	___fldiv@grs+3
 10179     1521  3000               	movlw	0
 10180     1522  00CA               	movwf	___fldiv@grs+2
 10181     1523  3000               	movlw	0
 10182     1524  00C9               	movwf	___fldiv@grs+1
 10183     1525  3000               	movlw	0
 10184     1526  00C8               	movwf	___fldiv@grs
 10185     1527                     l3992:
 10186     1527  01CD               	clrf	___fldiv@aexp
 10187     1528  2D67               	goto	l4012
 10188     1529                     l3994:
 10189     1529  084D               	movf	___fldiv@aexp,w
 10190     152A  1903               	btfsc	3,2
 10191     152B  2D2D               	goto	u4331
 10192     152C  2D2E               	goto	u4330
 10193     152D                     u4331:
 10194     152D  2D48               	goto	l4004
 10195     152E                     u4330:
 10196     152E                     l3996:
 10197     152E  3001               	movlw	1
 10198     152F                     u4345:
 10199     152F  35C1               	lslf	___fldiv@rem,f
 10200     1530  0DC2               	rlf	___fldiv@rem+1,f
 10201     1531  0DC3               	rlf	___fldiv@rem+2,f
 10202     1532  0DC4               	rlf	___fldiv@rem+3,f
 10203     1533  0B89               	decfsz	9,f
 10204     1534  2D2F               	goto	u4345
 10205     1535  3001               	movlw	1
 10206     1536                     u4355:
 10207     1536  35B8               	lslf	___fldiv@b,f
 10208     1537  0DB9               	rlf	___fldiv@b+1,f
 10209     1538  0DBA               	rlf	___fldiv@b+2,f
 10210     1539  0DBB               	rlf	___fldiv@b+3,f
 10211     153A  0B89               	decfsz	9,f
 10212     153B  2D36               	goto	u4355
 10213     153C                     l3998:
 10214     153C  1FCB               	btfss	___fldiv@grs+3,7
 10215     153D  2D3F               	goto	u4361
 10216     153E  2D40               	goto	u4360
 10217     153F                     u4361:
 10218     153F  2D41               	goto	l4002
 10219     1540                     u4360:
 10220     1540                     l4000:
 10221     1540  1438               	bsf	___fldiv@b,0
 10222     1541                     l4002:
 10223     1541  3001               	movlw	1
 10224     1542                     u4375:
 10225     1542  35C8               	lslf	___fldiv@grs,f
 10226     1543  0DC9               	rlf	___fldiv@grs+1,f
 10227     1544  0DCA               	rlf	___fldiv@grs+2,f
 10228     1545  0DCB               	rlf	___fldiv@grs+3,f
 10229     1546  0B89               	decfsz	9,f
 10230     1547  2D42               	goto	u4375
 10231     1548                     l4004:
 10232     1548  0837               	movf	___fldiv@a+3,w
 10233     1549  0244               	subwf	___fldiv@rem+3,w
 10234     154A  1D03               	skipz
 10235     154B  2D56               	goto	u4385
 10236     154C  0836               	movf	___fldiv@a+2,w
 10237     154D  0243               	subwf	___fldiv@rem+2,w
 10238     154E  1D03               	skipz
 10239     154F  2D56               	goto	u4385
 10240     1550  0835               	movf	___fldiv@a+1,w
 10241     1551  0242               	subwf	___fldiv@rem+1,w
 10242     1552  1D03               	skipz
 10243     1553  2D56               	goto	u4385
 10244     1554  0834               	movf	___fldiv@a,w
 10245     1555  0241               	subwf	___fldiv@rem,w
 10246     1556                     u4385:
 10247     1556  1C03               	skipc
 10248     1557  2D59               	goto	u4381
 10249     1558  2D5A               	goto	u4380
 10250     1559                     u4381:
 10251     1559  2D63               	goto	l4010
 10252     155A                     u4380:
 10253     155A                     l4006:
 10254     155A  174B               	bsf	___fldiv@grs+3,6
 10255     155B                     l4008:
 10256     155B  0834               	movf	___fldiv@a,w
 10257     155C  02C1               	subwf	___fldiv@rem,f
 10258     155D  0835               	movf	___fldiv@a+1,w
 10259     155E  3BC2               	subwfb	___fldiv@rem+1,f
 10260     155F  0836               	movf	___fldiv@a+2,w
 10261     1560  3BC3               	subwfb	___fldiv@rem+2,f
 10262     1561  0837               	movf	___fldiv@a+3,w
 10263     1562  3BC4               	subwfb	___fldiv@rem+3,f
 10264     1563                     l4010:
 10265     1563  3001               	movlw	1
 10266     1564  00BC               	movwf	??___fldiv
 10267     1565  083C               	movf	??___fldiv,w
 10268     1566  07CD               	addwf	___fldiv@aexp,f
 10269     1567                     l4012:
 10270     1567  301A               	movlw	26
 10271     1568  024D               	subwf	___fldiv@aexp,w
 10272     1569  1C03               	skipc
 10273     156A  2D6C               	goto	u4391
 10274     156B  2D6D               	goto	u4390
 10275     156C                     u4391:
 10276     156C  2D29               	goto	l3994
 10277     156D                     u4390:
 10278     156D                     l4014:
 10279     156D  0844               	movf	___fldiv@rem+3,w
 10280     156E  0443               	iorwf	___fldiv@rem+2,w
 10281     156F  0442               	iorwf	___fldiv@rem+1,w
 10282     1570  0441               	iorwf	___fldiv@rem,w
 10283     1571  1903               	skipnz
 10284     1572  2D74               	goto	u4401
 10285     1573  2D75               	goto	u4400
 10286     1574                     u4401:
 10287     1574  2D8E               	goto	l4028
 10288     1575                     u4400:
 10289     1575                     l4016:
 10290     1575  1448               	bsf	___fldiv@grs,0
 10291     1576  2D8E               	goto	l4028
 10292     1577                     l4018:
 10293     1577  3001               	movlw	1
 10294     1578                     u4415:
 10295     1578  35B8               	lslf	___fldiv@b,f
 10296     1579  0DB9               	rlf	___fldiv@b+1,f
 10297     157A  0DBA               	rlf	___fldiv@b+2,f
 10298     157B  0DBB               	rlf	___fldiv@b+3,f
 10299     157C  0B89               	decfsz	9,f
 10300     157D  2D78               	goto	u4415
 10301     157E                     l4020:
 10302     157E  1FCB               	btfss	___fldiv@grs+3,7
 10303     157F  2D81               	goto	u4421
 10304     1580  2D82               	goto	u4420
 10305     1581                     u4421:
 10306     1581  2D83               	goto	l4024
 10307     1582                     u4420:
 10308     1582                     l4022:
 10309     1582  1438               	bsf	___fldiv@b,0
 10310     1583                     l4024:
 10311     1583  3001               	movlw	1
 10312     1584                     u4435:
 10313     1584  35C8               	lslf	___fldiv@grs,f
 10314     1585  0DC9               	rlf	___fldiv@grs+1,f
 10315     1586  0DCA               	rlf	___fldiv@grs+2,f
 10316     1587  0DCB               	rlf	___fldiv@grs+3,f
 10317     1588  0B89               	decfsz	9,f
 10318     1589  2D84               	goto	u4435
 10319     158A                     l4026:
 10320     158A  30FF               	movlw	255
 10321     158B  07C6               	addwf	___fldiv@new_exp,f
 10322     158C  30FF               	movlw	255
 10323     158D  3DC7               	addwfc	___fldiv@new_exp+1,f
 10324     158E                     l4028:
 10325     158E  1FBA               	btfss	___fldiv@b+2,7
 10326     158F  2D91               	goto	u4441
 10327     1590  2D92               	goto	u4440
 10328     1591                     u4441:
 10329     1591  2D77               	goto	l4018
 10330     1592                     u4440:
 10331     1592                     l4030:
 10332     1592  01CD               	clrf	___fldiv@aexp
 10333     1593                     l4032:
 10334     1593  1FCB               	btfss	___fldiv@grs+3,7
 10335     1594  2D96               	goto	u4451
 10336     1595  2D97               	goto	u4450
 10337     1596                     u4451:
 10338     1596  2DB3               	goto	l4040
 10339     1597                     u4450:
 10340     1597                     l4034:
 10341     1597  30FF               	movlw	255
 10342     1598  0548               	andwf	___fldiv@grs,w
 10343     1599  00BC               	movwf	??___fldiv
 10344     159A  30FF               	movlw	255
 10345     159B  0549               	andwf	___fldiv@grs+1,w
 10346     159C  00BD               	movwf	??___fldiv+1
 10347     159D  30FF               	movlw	255
 10348     159E  054A               	andwf	___fldiv@grs+2,w
 10349     159F  00BE               	movwf	??___fldiv+2
 10350     15A0  307F               	movlw	127
 10351     15A1  054B               	andwf	___fldiv@grs+3,w
 10352     15A2  00BF               	movwf	??___fldiv+3
 10353     15A3  083F               	movf	??___fldiv+3,w
 10354     15A4  043E               	iorwf	??___fldiv+2,w
 10355     15A5  043D               	iorwf	??___fldiv+1,w
 10356     15A6  043C               	iorwf	??___fldiv,w
 10357     15A7  1903               	skipnz
 10358     15A8  2DAA               	goto	u4461
 10359     15A9  2DAB               	goto	u4460
 10360     15AA                     u4461:
 10361     15AA  2DAE               	goto	l976
 10362     15AB                     u4460:
 10363     15AB                     l4036:
 10364     15AB  01CD               	clrf	___fldiv@aexp
 10365     15AC  0ACD               	incf	___fldiv@aexp,f
 10366     15AD  2DB3               	goto	l4040
 10367     15AE                     l976:
 10368     15AE  1C38               	btfss	___fldiv@b,0
 10369     15AF  2DB1               	goto	u4471
 10370     15B0  2DB2               	goto	u4470
 10371     15B1                     u4471:
 10372     15B1  2DB3               	goto	l4040
 10373     15B2                     u4470:
 10374     15B2  2DAB               	goto	l4036
 10375     15B3                     l4040:
 10376     15B3  084D               	movf	___fldiv@aexp,w
 10377     15B4  1903               	btfsc	3,2
 10378     15B5  2DB7               	goto	u4481
 10379     15B6  2DB8               	goto	u4480
 10380     15B7                     u4481:
 10381     15B7  2DE0               	goto	l4050
 10382     15B8                     u4480:
 10383     15B8                     l4042:
 10384     15B8  3001               	movlw	1
 10385     15B9  07B8               	addwf	___fldiv@b,f
 10386     15BA  3000               	movlw	0
 10387     15BB  3DB9               	addwfc	___fldiv@b+1,f
 10388     15BC  3000               	movlw	0
 10389     15BD  3DBA               	addwfc	___fldiv@b+2,f
 10390     15BE  3000               	movlw	0
 10391     15BF  3DBB               	addwfc	___fldiv@b+3,f
 10392     15C0                     l4044:
 10393     15C0  1C3B               	btfss	___fldiv@b+3,0
 10394     15C1  2DC3               	goto	u4491
 10395     15C2  2DC4               	goto	u4490
 10396     15C3                     u4491:
 10397     15C3  2DE0               	goto	l4050
 10398     15C4                     u4490:
 10399     15C4                     l4046:
 10400     15C4  0838               	movf	___fldiv@b,w
 10401     15C5  00BC               	movwf	??___fldiv
 10402     15C6  0839               	movf	___fldiv@b+1,w
 10403     15C7  00BD               	movwf	??___fldiv+1
 10404     15C8  083A               	movf	___fldiv@b+2,w
 10405     15C9  00BE               	movwf	??___fldiv+2
 10406     15CA  083B               	movf	___fldiv@b+3,w
 10407     15CB  00BF               	movwf	??___fldiv+3
 10408     15CC  3001               	movlw	1
 10409     15CD  00C0               	movwf	??___fldiv+4
 10410     15CE                     u4505:
 10411     15CE  37BF               	asrf	??___fldiv+3,f
 10412     15CF  0CBE               	rrf	??___fldiv+2,f
 10413     15D0  0CBD               	rrf	??___fldiv+1,f
 10414     15D1  0CBC               	rrf	??___fldiv,f
 10415     15D2                     u4500:
 10416     15D2  0BC0               	decfsz	??___fldiv+4,f
 10417     15D3  2DCE               	goto	u4505
 10418     15D4  083F               	movf	??___fldiv+3,w
 10419     15D5  00BB               	movwf	___fldiv@b+3
 10420     15D6  083E               	movf	??___fldiv+2,w
 10421     15D7  00BA               	movwf	___fldiv@b+2
 10422     15D8  083D               	movf	??___fldiv+1,w
 10423     15D9  00B9               	movwf	___fldiv@b+1
 10424     15DA  083C               	movf	??___fldiv,w
 10425     15DB  00B8               	movwf	___fldiv@b
 10426     15DC                     l4048:
 10427     15DC  3001               	movlw	1
 10428     15DD  07C6               	addwf	___fldiv@new_exp,f
 10429     15DE  3000               	movlw	0
 10430     15DF  3DC7               	addwfc	___fldiv@new_exp+1,f
 10431     15E0                     l4050:
 10432     15E0  0847               	movf	___fldiv@new_exp+1,w
 10433     15E1  3A80               	xorlw	128
 10434     15E2  00BC               	movwf	??___fldiv
 10435     15E3  3080               	movlw	128
 10436     15E4  023C               	subwf	??___fldiv,w
 10437     15E5  1D03               	skipz
 10438     15E6  2DE9               	goto	u4515
 10439     15E7  30FF               	movlw	255
 10440     15E8  0246               	subwf	___fldiv@new_exp,w
 10441     15E9                     u4515:
 10442     15E9  1C03               	skipc
 10443     15EA  2DEC               	goto	u4511
 10444     15EB  2DED               	goto	u4510
 10445     15EC                     u4511:
 10446     15EC  2DFA               	goto	l981
 10447     15ED                     u4510:
 10448     15ED                     l4052:
 10449     15ED  30FF               	movlw	255
 10450     15EE  0020               	movlb	0	; select bank0
 10451     15EF  00C6               	movwf	___fldiv@new_exp
 10452     15F0  3000               	movlw	0
 10453     15F1  00C7               	movwf	___fldiv@new_exp+1
 10454     15F2  3000               	movlw	0
 10455     15F3  00BB               	movwf	___fldiv@b+3
 10456     15F4  3000               	movlw	0
 10457     15F5  00BA               	movwf	___fldiv@b+2
 10458     15F6  3000               	movlw	0
 10459     15F7  00B9               	movwf	___fldiv@b+1
 10460     15F8  3000               	movlw	0
 10461     15F9  00B8               	movwf	___fldiv@b
 10462     15FA                     l981:
 10463     15FA  0020               	movlb	0	; select bank0
 10464     15FB  0847               	movf	___fldiv@new_exp+1,w
 10465     15FC  3A80               	xorlw	128
 10466     15FD  00BC               	movwf	??___fldiv
 10467     15FE  3080               	movlw	128
 10468     15FF  023C               	subwf	??___fldiv,w
 10469     1600  1D03               	skipz
 10470     1601  2E04               	goto	u4525
 10471     1602  3001               	movlw	1
 10472     1603  0246               	subwf	___fldiv@new_exp,w
 10473     1604                     u4525:
 10474     1604  1803               	skipnc
 10475     1605  2E07               	goto	u4521
 10476     1606  2E08               	goto	u4520
 10477     1607                     u4521:
 10478     1607  2E14               	goto	l982
 10479     1608                     u4520:
 10480     1608                     l4054:
 10481     1608  0020               	movlb	0	; select bank0
 10482     1609  01C6               	clrf	___fldiv@new_exp
 10483     160A  01C7               	clrf	___fldiv@new_exp+1
 10484     160B                     l4056:
 10485     160B  3000               	movlw	0
 10486     160C  00BB               	movwf	___fldiv@b+3
 10487     160D  3000               	movlw	0
 10488     160E  00BA               	movwf	___fldiv@b+2
 10489     160F  3000               	movlw	0
 10490     1610  00B9               	movwf	___fldiv@b+1
 10491     1611  3000               	movlw	0
 10492     1612  00B8               	movwf	___fldiv@b
 10493     1613                     l4058:
 10494     1613  01C5               	clrf	___fldiv@sign
 10495     1614                     l982:
 10496     1614  0020               	movlb	0	; select bank0
 10497     1615  0846               	movf	___fldiv@new_exp,w
 10498     1616  00CC               	movwf	___fldiv@bexp
 10499     1617                     l4060:
 10500     1617  1C4C               	btfss	___fldiv@bexp,0
 10501     1618  2E1A               	goto	u4531
 10502     1619  2E1B               	goto	u4530
 10503     161A                     u4531:
 10504     161A  2E1D               	goto	l4064
 10505     161B                     u4530:
 10506     161B                     l4062:
 10507     161B  17BA               	bsf	___fldiv@b+2,7
 10508     161C  2E21               	goto	l984
 10509     161D                     l4064:
 10510     161D  307F               	movlw	127
 10511     161E  00BC               	movwf	??___fldiv
 10512     161F  083C               	movf	??___fldiv,w
 10513     1620  05BA               	andwf	___fldiv@b+2,f
 10514     1621                     l984:
 10515     1621  364C               	lsrf	___fldiv@bexp,w
 10516     1622  00BB               	movwf	___fldiv@b+3
 10517     1623  0845               	movf	___fldiv@sign,w
 10518     1624  00BC               	movwf	??___fldiv
 10519     1625  083C               	movf	??___fldiv,w
 10520     1626  04BB               	iorwf	___fldiv@b+3,f
 10521     1627  2CE8               	goto	l3974
 10522     1628                     l962:
 10523     1628  0008               	return
 10524     1629                     __end_of___fldiv:
 10525                           
 10526                           	psect	text21
 10527     1200                     __ptext21:	
 10528 ;; *************** function _dtoa *****************
 10529 ;; Defined at:
 10530 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;  fp              1    wreg     PTR struct _IO_FILE
 10533 ;;		 -> sprintf@f(11), 
 10534 ;;  d               2   22[BANK0 ] int 
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 10537 ;;		 -> sprintf@f(11), 
 10538 ;;  i               2   33[BANK0 ] int 
 10539 ;;  w               2   30[BANK0 ] int 
 10540 ;;  p               2   28[BANK0 ] int 
 10541 ;;  s               1   32[BANK0 ] unsigned char 
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  1    wreg      void 
 10544 ;; Registers used:
 10545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10551 ;;      Params:         0       2       0       0       0       0       0       0
 10552 ;;      Locals:         0      10       0       0       0       0       0       0
 10553 ;;      Temps:          0       1       0       0       0       0       0       0
 10554 ;;      Totals:         0      13       0       0       0       0       0       0
 10555 ;;Total ram usage:       13 bytes
 10556 ;; Hardware stack levels used: 1
 10557 ;; Hardware stack levels required when called: 8
 10558 ;; This function calls:
 10559 ;;		___awdiv
 10560 ;;		___awmod
 10561 ;;		_abs
 10562 ;;		_pad
 10563 ;; This function is called by:
 10564 ;;		_vfpfcnvrt
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568     1200                     _dtoa:	
 10569                           ;psect for function _dtoa
 10570                           
 10571                           
 10572                           ;incstack = 0
 10573                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10574                           ;dtoa@fp stored from wreg
 10575     1200  0020               	movlb	0	; select bank0
 10576     1201  00BB               	movwf	dtoa@fp
 10577     1202                     l4320:
 10578                           
 10579                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 10580     1202  1BB7               	btfsc	dtoa@d+1,7
 10581     1203  2A05               	goto	u5091
 10582     1204  2A07               	goto	u5090
 10583     1205                     u5091:
 10584     1205  3001               	movlw	1
 10585     1206  2A08               	goto	u5100
 10586     1207                     u5090:
 10587     1207  3000               	movlw	0
 10588     1208                     u5100:
 10589     1208  00C0               	movwf	dtoa@s
 10590     1209                     l4322:
 10591                           
 10592                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
 10593     1209  0021               	movlb	1	; select bank1
 10594     120A  1BEE               	btfsc	(_prec+1)^(0+128),7
 10595     120B  2A0D               	goto	u5111
 10596     120C  2A0E               	goto	u5110
 10597     120D                     u5111:
 10598     120D  2A14               	goto	l4326
 10599     120E                     u5110:
 10600     120E                     l4324:
 10601                           
 10602                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
 10603     120E  30FD               	movlw	253
 10604     120F  0020               	movlb	0	; select bank0
 10605     1210  00B8               	movwf	??_dtoa
 10606     1211  0838               	movf	??_dtoa,w
 10607     1212  0022               	movlb	2	; select bank2
 10608     1213  05B0               	andwf	_flags^(0+256),f
 10609     1214                     l4326:
 10610                           
 10611                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 10612     1214  0021               	movlb	1	; select bank1
 10613     1215  1FEE               	btfss	(_prec+1)^(0+128),7
 10614     1216  2A18               	goto	u5121
 10615     1217  2A19               	goto	u5120
 10616     1218                     u5121:
 10617     1218  2A1F               	goto	l4330
 10618     1219                     u5120:
 10619     1219                     l4328:
 10620     1219  3001               	movlw	1
 10621     121A  0020               	movlb	0	; select bank0
 10622     121B  00BC               	movwf	dtoa@p
 10623     121C  3000               	movlw	0
 10624     121D  00BD               	movwf	dtoa@p+1
 10625     121E  2A26               	goto	l1106
 10626     121F                     l4330:
 10627     121F  086E               	movf	(_prec+1)^(0+128),w
 10628     1220  0020               	movlb	0	; select bank0
 10629     1221  00BD               	movwf	dtoa@p+1
 10630     1222  0021               	movlb	1	; select bank1
 10631     1223  086D               	movf	_prec^(0+128),w
 10632     1224  0020               	movlb	0	; select bank0
 10633     1225  00BC               	movwf	dtoa@p
 10634     1226                     l1106:
 10635                           
 10636                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 10637     1226  0022               	movlb	2	; select bank2
 10638     1227  082D               	movf	(_width+1)^(0+256),w
 10639     1228  0020               	movlb	0	; select bank0
 10640     1229  00BF               	movwf	dtoa@w+1
 10641     122A  0022               	movlb	2	; select bank2
 10642     122B  082C               	movf	_width^(0+256),w
 10643     122C  0020               	movlb	0	; select bank0
 10644     122D  00BE               	movwf	dtoa@w
 10645     122E                     l4332:
 10646                           
 10647                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
 10648     122E  0840               	movf	dtoa@s,w
 10649     122F  1903               	btfsc	3,2
 10650     1230  2A32               	goto	u5131
 10651     1231  2A33               	goto	u5130
 10652     1232                     u5131:
 10653     1232  2A47               	goto	l1107
 10654     1233                     u5130:
 10655     1233                     l4334:
 10656                           
 10657                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
 10658     1233  30FF               	movlw	255
 10659     1234  07BE               	addwf	dtoa@w,f
 10660     1235  30FF               	movlw	255
 10661     1236  3DBF               	addwfc	dtoa@w+1,f
 10662     1237                     l4336:
 10663                           
 10664                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 10665     1237  0840               	movf	dtoa@s,w
 10666     1238  1D03               	btfss	3,2
 10667     1239  2A3B               	goto	u5141
 10668     123A  2A3C               	goto	u5140
 10669     123B                     u5141:
 10670     123B  2A41               	goto	l4340
 10671     123C                     u5140:
 10672     123C                     l4338:
 10673     123C  302B               	movlw	43
 10674     123D  00B9               	movwf	_dtoa$1417
 10675     123E  3000               	movlw	0
 10676     123F  00BA               	movwf	_dtoa$1417+1
 10677     1240  2A45               	goto	l1111
 10678     1241                     l4340:
 10679     1241  302D               	movlw	45
 10680     1242  00B9               	movwf	_dtoa$1417
 10681     1243  3000               	movlw	0
 10682     1244  00BA               	movwf	_dtoa$1417+1
 10683     1245                     l1111:
 10684     1245  0839               	movf	_dtoa$1417,w
 10685     1246  00C0               	movwf	dtoa@s
 10686     1247                     l1107:	
 10687                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 543:     }
 10688                           
 10689                           
 10690                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 10691     1247  304F               	movlw	79
 10692     1248  00C1               	movwf	dtoa@i
 10693     1249  3000               	movlw	0
 10694     124A  00C2               	movwf	dtoa@i+1
 10695     124B                     l4342:
 10696                           
 10697                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 10698     124B  0024               	movlb	4	; select bank4
 10699     124C  01EF               	clrf	(_dbuf^(0+512)+79)
 10700                           
 10701                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 10702     124D  2A87               	goto	l4354
 10703     124E                     l4344:
 10704                           
 10705                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
 10706     124E  30FF               	movlw	255
 10707     124F  0020               	movlb	0	; select bank0
 10708     1250  07C1               	addwf	dtoa@i,f
 10709     1251  30FF               	movlw	255
 10710     1252  3DC2               	addwfc	dtoa@i+1,f
 10711     1253                     l4346:
 10712                           
 10713                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 10714     1253  0841               	movf	dtoa@i,w
 10715     1254  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10716     1255  0086               	movwf	6
 10717     1256  3002               	movlw	2	; select bank4/5
 10718     1257  0087               	movwf	7
 10719     1258  300A               	movlw	10
 10720     1259  00A0               	movwf	___awmod@divisor
 10721     125A  3000               	movlw	0
 10722     125B  00A1               	movwf	___awmod@divisor+1
 10723     125C  0837               	movf	dtoa@d+1,w
 10724     125D  00A3               	movwf	___awmod@dividend+1
 10725     125E  0836               	movf	dtoa@d,w
 10726     125F  00A2               	movwf	___awmod@dividend
 10727     1260  319D  2532  3192   	fcall	___awmod
 10728     1263  0020               	movlb	0	; select bank0
 10729     1264  0821               	movf	?___awmod+1,w
 10730     1265  00A8               	movwf	abs@a+1
 10731     1266  0820               	movf	?___awmod,w
 10732     1267  00A7               	movwf	abs@a
 10733     1268  3199  21EC  3192   	fcall	_abs
 10734     126B  0020               	movlb	0	; select bank0
 10735     126C  0827               	movf	?_abs,w
 10736     126D  3E30               	addlw	48
 10737     126E  0081               	movwf	1
 10738     126F                     l4348:
 10739                           
 10740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 567:         --p;
 10741     126F  30FF               	movlw	255
 10742     1270  07BC               	addwf	dtoa@p,f
 10743     1271  30FF               	movlw	255
 10744     1272  3DBD               	addwfc	dtoa@p+1,f
 10745     1273                     l4350:
 10746                           
 10747                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
 10748     1273  30FF               	movlw	255
 10749     1274  07BE               	addwf	dtoa@w,f
 10750     1275  30FF               	movlw	255
 10751     1276  3DBF               	addwfc	dtoa@w+1,f
 10752     1277                     l4352:
 10753                           
 10754                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 10755     1277  300A               	movlw	10
 10756     1278  00A0               	movwf	___awdiv@divisor
 10757     1279  3000               	movlw	0
 10758     127A  00A1               	movwf	___awdiv@divisor+1
 10759     127B  0837               	movf	dtoa@d+1,w
 10760     127C  00A3               	movwf	___awdiv@dividend+1
 10761     127D  0836               	movf	dtoa@d,w
 10762     127E  00A2               	movwf	___awdiv@dividend
 10763     127F  319D  25DF  3192   	fcall	___awdiv
 10764     1282  0020               	movlb	0	; select bank0
 10765     1283  0821               	movf	?___awdiv+1,w
 10766     1284  00B7               	movwf	dtoa@d+1
 10767     1285  0820               	movf	?___awdiv,w
 10768     1286  00B6               	movwf	dtoa@d
 10769     1287                     l4354:
 10770                           
 10771                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 10772     1287  0020               	movlb	0	; select bank0
 10773     1288  0842               	movf	dtoa@i+1,w
 10774     1289  3A80               	xorlw	128
 10775     128A  00B8               	movwf	??_dtoa
 10776     128B  3080               	movlw	128
 10777     128C  0238               	subwf	??_dtoa,w
 10778     128D  1D03               	skipz
 10779     128E  2A91               	goto	u5155
 10780     128F  3001               	movlw	1
 10781     1290  0241               	subwf	dtoa@i,w
 10782     1291                     u5155:
 10783     1291  1C03               	skipc
 10784     1292  2A94               	goto	u5151
 10785     1293  2A95               	goto	u5150
 10786     1294                     u5151:
 10787     1294  2ABC               	goto	l4364
 10788     1295                     u5150:
 10789     1295                     l4356:
 10790     1295  0020               	movlb	0	; select bank0
 10791     1296  0836               	movf	dtoa@d,w
 10792     1297  0437               	iorwf	dtoa@d+1,w
 10793     1298  1D03               	btfss	3,2
 10794     1299  2A9B               	goto	u5161
 10795     129A  2A9C               	goto	u5160
 10796     129B                     u5161:
 10797     129B  2A4E               	goto	l4344
 10798     129C                     u5160:
 10799     129C                     l4358:
 10800     129C  083D               	movf	dtoa@p+1,w
 10801     129D  3A80               	xorlw	128
 10802     129E  00B8               	movwf	??_dtoa
 10803     129F  3080               	movlw	128
 10804     12A0  0238               	subwf	??_dtoa,w
 10805     12A1  1D03               	skipz
 10806     12A2  2AA5               	goto	u5175
 10807     12A3  3001               	movlw	1
 10808     12A4  023C               	subwf	dtoa@p,w
 10809     12A5                     u5175:
 10810     12A5  1803               	skipnc
 10811     12A6  2AA8               	goto	u5171
 10812     12A7  2AA9               	goto	u5170
 10813     12A8                     u5171:
 10814     12A8  2A4E               	goto	l4344
 10815     12A9                     u5170:
 10816     12A9                     l4360:
 10817     12A9  0020               	movlb	0	; select bank0
 10818     12AA  083F               	movf	dtoa@w+1,w
 10819     12AB  3A80               	xorlw	128
 10820     12AC  00B8               	movwf	??_dtoa
 10821     12AD  3080               	movlw	128
 10822     12AE  0238               	subwf	??_dtoa,w
 10823     12AF  1D03               	skipz
 10824     12B0  2AB3               	goto	u5185
 10825     12B1  3001               	movlw	1
 10826     12B2  023E               	subwf	dtoa@w,w
 10827     12B3                     u5185:
 10828     12B3  1C03               	skipc
 10829     12B4  2AB6               	goto	u5181
 10830     12B5  2AB7               	goto	u5180
 10831     12B6                     u5181:
 10832     12B6  2ABC               	goto	l4364
 10833     12B7                     u5180:
 10834     12B7                     l4362:
 10835     12B7  0022               	movlb	2	; select bank2
 10836     12B8  18B0               	btfsc	_flags^(0+256),1
 10837     12B9  2ABB               	goto	u5191
 10838     12BA  2ABC               	goto	u5190
 10839     12BB                     u5191:
 10840     12BB  2A4E               	goto	l4344
 10841     12BC                     u5190:
 10842     12BC                     l4364:
 10843                           
 10844                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 10845     12BC  0020               	movlb	0	; select bank0
 10846     12BD  0840               	movf	dtoa@s,w
 10847     12BE  1903               	btfsc	3,2
 10848     12BF  2AC1               	goto	u5201
 10849     12C0  2AC2               	goto	u5200
 10850     12C1                     u5201:
 10851     12C1  2ACD               	goto	l4370
 10852     12C2                     u5200:
 10853     12C2                     l4366:
 10854                           
 10855                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
 10856     12C2  30FF               	movlw	255
 10857     12C3  07C1               	addwf	dtoa@i,f
 10858     12C4  30FF               	movlw	255
 10859     12C5  3DC2               	addwfc	dtoa@i+1,f
 10860     12C6                     l4368:
 10861                           
 10862                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 10863     12C6  0841               	movf	dtoa@i,w
 10864     12C7  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10865     12C8  0086               	movwf	6
 10866     12C9  3002               	movlw	2	; select bank4/5
 10867     12CA  0087               	movwf	7
 10868     12CB  0840               	movf	dtoa@s,w
 10869     12CC  0081               	movwf	1
 10870     12CD                     l4370:
 10871                           
 10872                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 10873     12CD  0841               	movf	dtoa@i,w
 10874     12CE  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10875     12CF  00AF               	movwf	pad@buf
 10876     12D0  083F               	movf	dtoa@w+1,w
 10877     12D1  00B1               	movwf	pad@p+1
 10878     12D2  083E               	movf	dtoa@w,w
 10879     12D3  00B0               	movwf	pad@p
 10880     12D4  083B               	movf	dtoa@fp,w
 10881     12D5  3190  201B  3192   	fcall	_pad
 10882     12D8                     l1120:
 10883     12D8  0008               	return
 10884     12D9                     __end_of_dtoa:
 10885                           
 10886                           	psect	text22
 10887     101B                     __ptext22:	
 10888 ;; *************** function _pad *****************
 10889 ;; Defined at:
 10890 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 10891 ;; Parameters:    Size  Location     Type
 10892 ;;  fp              1    wreg     PTR struct _IO_FILE
 10893 ;;		 -> sprintf@f(11), 
 10894 ;;  buf             1   15[BANK0 ] PTR unsigned char 
 10895 ;;		 -> dbuf(80), 
 10896 ;;  p               2   16[BANK0 ] int 
 10897 ;; Auto vars:     Size  Location     Type
 10898 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
 10899 ;;		 -> sprintf@f(11), 
 10900 ;;  i               2   19[BANK0 ] int 
 10901 ;; Return value:  Size  Location     Type
 10902 ;;                  1    wreg      void 
 10903 ;; Registers used:
 10904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10905 ;; Tracked objects:
 10906 ;;		On entry : 0/0
 10907 ;;		On exit  : 0/0
 10908 ;;		Unchanged: 0/0
 10909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10910 ;;      Params:         0       3       0       0       0       0       0       0
 10911 ;;      Locals:         0       3       0       0       0       0       0       0
 10912 ;;      Temps:          0       1       0       0       0       0       0       0
 10913 ;;      Totals:         0       7       0       0       0       0       0       0
 10914 ;;Total ram usage:        7 bytes
 10915 ;; Hardware stack levels used: 1
 10916 ;; Hardware stack levels required when called: 7
 10917 ;; This function calls:
 10918 ;;		_fputc
 10919 ;;		_fputs
 10920 ;; This function is called by:
 10921 ;;		_dtoa
 10922 ;;		_efgtoa
 10923 ;; This function uses a non-reentrant model
 10924 ;;
 10925                           
 10926     101B                     _pad:	
 10927                           ;psect for function _pad
 10928                           
 10929                           
 10930                           ;incstack = 0
 10931                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10932                           ;pad@fp stored from wreg
 10933     101B  0020               	movlb	0	; select bank0
 10934     101C  00B5               	movwf	pad@fp
 10935     101D                     l4210:
 10936                           
 10937                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 10938     101D  1FB1               	btfss	pad@p+1,7
 10939     101E  2820               	goto	u4801
 10940     101F  2821               	goto	u4800
 10941     1020                     u4801:
 10942     1020  2823               	goto	l1095
 10943     1021                     u4800:
 10944     1021                     l4212:
 10945                           
 10946                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 10947     1021  01B0               	clrf	pad@p
 10948     1022  01B1               	clrf	pad@p+1
 10949     1023                     l1095:	
 10950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 207:  }
 10951                           
 10952                           
 10953                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 10954     1023  01B3               	clrf	pad@i
 10955     1024  01B4               	clrf	pad@i+1
 10956                           
 10957                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 10958     1025  2835               	goto	l4218
 10959     1026                     l4214:
 10960                           
 10961                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 10962     1026  3020               	movlw	32
 10963     1027  0020               	movlb	0	; select bank0
 10964     1028  00A0               	movwf	fputc@c
 10965     1029  3000               	movlw	0
 10966     102A  00A1               	movwf	fputc@c+1
 10967     102B  0835               	movf	pad@fp,w
 10968     102C  00A2               	movwf	fputc@fp
 10969     102D  319D  2586  3190   	fcall	_fputc
 10970     1030                     l4216:
 10971                           
 10972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
 10973     1030  3001               	movlw	1
 10974     1031  0020               	movlb	0	; select bank0
 10975     1032  07B3               	addwf	pad@i,f
 10976     1033  3000               	movlw	0
 10977     1034  3DB4               	addwfc	pad@i+1,f
 10978     1035                     l4218:
 10979                           
 10980                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 10981     1035  0834               	movf	pad@i+1,w
 10982     1036  3A80               	xorlw	128
 10983     1037  00B2               	movwf	??_pad
 10984     1038  0831               	movf	pad@p+1,w
 10985     1039  3A80               	xorlw	128
 10986     103A  0232               	subwf	??_pad,w
 10987     103B  1D03               	skipz
 10988     103C  283F               	goto	u4815
 10989     103D  0830               	movf	pad@p,w
 10990     103E  0233               	subwf	pad@i,w
 10991     103F                     u4815:
 10992     103F  1C03               	skipc
 10993     1040  2842               	goto	u4811
 10994     1041  2843               	goto	u4810
 10995     1042                     u4811:
 10996     1042  2826               	goto	l4214
 10997     1043                     u4810:
 10998     1043                     l4220:
 10999                           
 11000                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 11001     1043  0020               	movlb	0	; select bank0
 11002     1044  0835               	movf	pad@fp,w
 11003     1045  00A8               	movwf	fputs@fp
 11004     1046  082F               	movf	pad@buf,w
 11005     1047  319B  2398  3190   	fcall	_fputs
 11006     104A                     l1099:
 11007     104A  0008               	return
 11008     104B                     __end_of_pad:
 11009                           
 11010                           	psect	text23
 11011     1B98                     __ptext23:	
 11012 ;; *************** function _fputs *****************
 11013 ;; Defined at:
 11014 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;  s               1    wreg     PTR const unsigned char 
 11017 ;;		 -> dbuf(80), 
 11018 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
 11019 ;;		 -> sprintf@f(11), 
 11020 ;; Auto vars:     Size  Location     Type
 11021 ;;  s               1   14[BANK0 ] PTR const unsigned char 
 11022 ;;		 -> dbuf(80), 
 11023 ;;  i               2   12[BANK0 ] int 
 11024 ;;  c               1   11[BANK0 ] unsigned char 
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  2    8[BANK0 ] int 
 11027 ;; Registers used:
 11028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11034 ;;      Params:         0       1       0       0       0       0       0       0
 11035 ;;      Locals:         0       4       0       0       0       0       0       0
 11036 ;;      Temps:          0       2       0       0       0       0       0       0
 11037 ;;      Totals:         0       7       0       0       0       0       0       0
 11038 ;;Total ram usage:        7 bytes
 11039 ;; Hardware stack levels used: 1
 11040 ;; Hardware stack levels required when called: 6
 11041 ;; This function calls:
 11042 ;;		_fputc
 11043 ;; This function is called by:
 11044 ;;		_pad
 11045 ;; This function uses a non-reentrant model
 11046 ;;
 11047                           
 11048     1B98                     _fputs:	
 11049                           ;psect for function _fputs
 11050                           
 11051                           
 11052                           ;incstack = 0
 11053                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11054                           ;fputs@s stored from wreg
 11055     1B98  0020               	movlb	0	; select bank0
 11056     1B99  00AE               	movwf	fputs@s
 11057     1B9A                     l3744:
 11058     1B9A  01AC               	clrf	fputs@i
 11059     1B9B  01AD               	clrf	fputs@i+1
 11060     1B9C  2BAE               	goto	l3750
 11061     1B9D                     l3746:
 11062     1B9D  082B               	movf	fputs@c,w
 11063     1B9E  00A9               	movwf	??_fputs
 11064     1B9F  01AA               	clrf	??_fputs+1
 11065     1BA0  0829               	movf	??_fputs,w
 11066     1BA1  00A0               	movwf	fputc@c
 11067     1BA2  082A               	movf	??_fputs+1,w
 11068     1BA3  00A1               	movwf	fputc@c+1
 11069     1BA4  0828               	movf	fputs@fp,w
 11070     1BA5  00A2               	movwf	fputc@fp
 11071     1BA6  319D  2586  319B   	fcall	_fputc
 11072     1BA9                     l3748:
 11073     1BA9  3001               	movlw	1
 11074     1BAA  0020               	movlb	0	; select bank0
 11075     1BAB  07AC               	addwf	fputs@i,f
 11076     1BAC  3000               	movlw	0
 11077     1BAD  3DAD               	addwfc	fputs@i+1,f
 11078     1BAE                     l3750:
 11079     1BAE  082C               	movf	fputs@i,w
 11080     1BAF  072E               	addwf	fputs@s,w
 11081     1BB0  00A9               	movwf	??_fputs
 11082     1BB1  0829               	movf	??_fputs,w
 11083     1BB2  0086               	movwf	6
 11084     1BB3  3002               	movlw	2	; select bank4/5
 11085     1BB4  0087               	movwf	7
 11086     1BB5  0801               	movf	1,w
 11087     1BB6  00AB               	movwf	fputs@c
 11088     1BB7  082B               	movf	fputs@c,w
 11089     1BB8  1D03               	btfss	3,2
 11090     1BB9  2BBB               	goto	u3821
 11091     1BBA  2BBC               	goto	u3820
 11092     1BBB                     u3821:
 11093     1BBB  2B9D               	goto	l3746
 11094     1BBC                     u3820:
 11095     1BBC                     l1287:
 11096     1BBC  0008               	return
 11097     1BBD                     __end_of_fputs:
 11098                           
 11099                           	psect	text24
 11100     1D86                     __ptext24:	
 11101 ;; *************** function _fputc *****************
 11102 ;; Defined at:
 11103 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;  c               2    0[BANK0 ] int 
 11106 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
 11107 ;;		 -> sprintf@f(11), 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;		None
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  2    0[BANK0 ] int 
 11112 ;; Registers used:
 11113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11119 ;;      Params:         0       3       0       0       0       0       0       0
 11120 ;;      Locals:         0       0       0       0       0       0       0       0
 11121 ;;      Temps:          0       5       0       0       0       0       0       0
 11122 ;;      Totals:         0       8       0       0       0       0       0       0
 11123 ;;Total ram usage:        8 bytes
 11124 ;; Hardware stack levels used: 1
 11125 ;; Hardware stack levels required when called: 5
 11126 ;; This function calls:
 11127 ;;		_putch
 11128 ;; This function is called by:
 11129 ;;		_pad
 11130 ;;		_vfpfcnvrt
 11131 ;;		_fputs
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135     1D86                     _fputc:	
 11136                           ;psect for function _fputc
 11137                           
 11138     1D86                     l3520:	
 11139                           ;incstack = 0
 11140                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11141                           
 11142     1D86  0020               	movlb	0	; select bank0
 11143     1D87  0822               	movf	fputc@fp,w
 11144     1D88  1903               	btfsc	3,2
 11145     1D89  2D8B               	goto	u3321
 11146     1D8A  2D8C               	goto	u3320
 11147     1D8B                     u3321:
 11148     1D8B  2D91               	goto	l3524
 11149     1D8C                     u3320:
 11150     1D8C                     l3522:
 11151     1D8C  0822               	movf	fputc@fp,w
 11152     1D8D  1D03               	btfss	3,2
 11153     1D8E  2D90               	goto	u3331
 11154     1D8F  2D91               	goto	u3330
 11155     1D90                     u3331:
 11156     1D90  2D96               	goto	l3526
 11157     1D91                     u3330:
 11158     1D91                     l3524:
 11159     1D91  0820               	movf	fputc@c,w
 11160     1D92  3180  2003  319D   	fcall	_putch
 11161     1D95  2DDE               	goto	l1279
 11162     1D96                     l3526:
 11163     1D96  0822               	movf	fputc@fp,w
 11164     1D97  3E09               	addlw	9
 11165     1D98  0086               	movwf	6
 11166     1D99  3001               	movlw	1	; select bank2/3
 11167     1D9A  0087               	movwf	7
 11168     1D9B  0016               	moviw fsr1++
 11169     1D9C  0401               	iorwf	1,w
 11170     1D9D  1903               	btfsc	3,2
 11171     1D9E  2DA0               	goto	u3341
 11172     1D9F  2DA1               	goto	u3340
 11173     1DA0                     u3341:
 11174     1DA0  2DC1               	goto	l3530
 11175     1DA1                     u3340:
 11176     1DA1                     l3528:
 11177     1DA1  0822               	movf	fputc@fp,w
 11178     1DA2  3E09               	addlw	9
 11179     1DA3  0086               	movwf	6
 11180     1DA4  3001               	movlw	1	; select bank2/3
 11181     1DA5  0087               	movwf	7
 11182     1DA6  3F40               	moviw [0]fsr1
 11183     1DA7  00A3               	movwf	??_fputc
 11184     1DA8  3F41               	moviw [1]fsr1
 11185     1DA9  00A4               	movwf	??_fputc+1
 11186     1DAA  0822               	movf	fputc@fp,w
 11187     1DAB  3E02               	addlw	2
 11188     1DAC  0086               	movwf	6
 11189     1DAD  3001               	movlw	1	; select bank2/3
 11190     1DAE  0087               	movwf	7
 11191     1DAF  3F40               	moviw [0]fsr1
 11192     1DB0  00A5               	movwf	??_fputc+2
 11193     1DB1  3F41               	moviw [1]fsr1
 11194     1DB2  00A6               	movwf	??_fputc+3
 11195     1DB3  0826               	movf	??_fputc+3,w
 11196     1DB4  3A80               	xorlw	128
 11197     1DB5  00A7               	movwf	??_fputc+4
 11198     1DB6  0824               	movf	??_fputc+1,w
 11199     1DB7  3A80               	xorlw	128
 11200     1DB8  0227               	subwf	??_fputc+4,w
 11201     1DB9  1D03               	skipz
 11202     1DBA  2DBD               	goto	u3355
 11203     1DBB  0823               	movf	??_fputc,w
 11204     1DBC  0225               	subwf	??_fputc+2,w
 11205     1DBD                     u3355:
 11206     1DBD  1803               	skipnc
 11207     1DBE  2DC0               	goto	u3351
 11208     1DBF  2DC1               	goto	u3350
 11209     1DC0                     u3351:
 11210     1DC0  2DDE               	goto	l1279
 11211     1DC1                     u3350:
 11212     1DC1                     l3530:
 11213     1DC1  0020               	movlb	0	; select bank0
 11214     1DC2  0822               	movf	fputc@fp,w
 11215     1DC3  0086               	movwf	6
 11216     1DC4  3001               	movlw	1	; select bank2/3
 11217     1DC5  0087               	movwf	7
 11218     1DC6  0822               	movf	fputc@fp,w
 11219     1DC7  3E02               	addlw	2
 11220     1DC8  0084               	movwf	4
 11221     1DC9  3001               	movlw	1	; select bank2/3
 11222     1DCA  0085               	movwf	5
 11223     1DCB  0800               	movf	0,w
 11224     1DCC  0701               	addwf	1,w
 11225     1DCD  00A3               	movwf	??_fputc
 11226     1DCE  0823               	movf	??_fputc,w
 11227     1DCF  0086               	movwf	6
 11228     1DD0  3001               	movlw	1	; select bank2/3
 11229     1DD1  0087               	movwf	7
 11230     1DD2  0820               	movf	fputc@c,w
 11231     1DD3  0081               	movwf	1
 11232     1DD4                     l3532:
 11233     1DD4  0822               	movf	fputc@fp,w
 11234     1DD5  3E02               	addlw	2
 11235     1DD6  0086               	movwf	6
 11236     1DD7  3001               	movlw	1	; select bank2/3
 11237     1DD8  0087               	movwf	7
 11238     1DD9  3001               	movlw	1
 11239     1DDA  0781               	addwf	1,f
 11240     1DDB  3141               	addfsr 1,1
 11241     1DDC  1803               	skipnc
 11242     1DDD  0A81               	incf	1,f
 11243     1DDE                     l1279:
 11244     1DDE  0008               	return
 11245     1DDF                     __end_of_fputc:
 11246                           
 11247                           	psect	text25
 11248     0003                     __ptext25:	
 11249 ;; *************** function _putch *****************
 11250 ;; Defined at:
 11251 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
 11252 ;; Parameters:    Size  Location     Type
 11253 ;;  c               1    wreg     unsigned char 
 11254 ;; Auto vars:     Size  Location     Type
 11255 ;;  c               1    0[COMMON] unsigned char 
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  1    wreg      void 
 11258 ;; Registers used:
 11259 ;;		wreg
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11265 ;;      Params:         0       0       0       0       0       0       0       0
 11266 ;;      Locals:         0       0       0       0       0       0       0       0
 11267 ;;      Temps:          0       0       0       0       0       0       0       0
 11268 ;;      Totals:         0       0       0       0       0       0       0       0
 11269 ;;Total ram usage:        0 bytes
 11270 ;; Hardware stack levels used: 1
 11271 ;; Hardware stack levels required when called: 4
 11272 ;; This function calls:
 11273 ;;		Nothing
 11274 ;; This function is called by:
 11275 ;;		_fputc
 11276 ;; This function uses a non-reentrant model
 11277 ;;
 11278                           
 11279     0003                     _putch:	
 11280                           ;psect for function _putch
 11281                           
 11282     0003                     l1290:	
 11283                           ;incstack = 0
 11284                           ; Regs used in _putch: [wreg]
 11285                           
 11286     0003  0008               	return
 11287     0004                     __end_of_putch:
 11288                           
 11289                           	psect	text26
 11290     19EC                     __ptext26:	
 11291 ;; *************** function _abs *****************
 11292 ;; Defined at:
 11293 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
 11294 ;; Parameters:    Size  Location     Type
 11295 ;;  a               2    7[BANK0 ] int 
 11296 ;; Auto vars:     Size  Location     Type
 11297 ;;		None
 11298 ;; Return value:  Size  Location     Type
 11299 ;;                  2    7[BANK0 ] int 
 11300 ;; Registers used:
 11301 ;;		wreg, status,2, status,0
 11302 ;; Tracked objects:
 11303 ;;		On entry : 0/0
 11304 ;;		On exit  : 0/0
 11305 ;;		Unchanged: 0/0
 11306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11307 ;;      Params:         0       2       0       0       0       0       0       0
 11308 ;;      Locals:         0       0       0       0       0       0       0       0
 11309 ;;      Temps:          0       2       0       0       0       0       0       0
 11310 ;;      Totals:         0       4       0       0       0       0       0       0
 11311 ;;Total ram usage:        4 bytes
 11312 ;; Hardware stack levels used: 1
 11313 ;; Hardware stack levels required when called: 4
 11314 ;; This function calls:
 11315 ;;		Nothing
 11316 ;; This function is called by:
 11317 ;;		_dtoa
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321     19EC                     _abs:	
 11322                           ;psect for function _abs
 11323                           
 11324     19EC                     l4222:	
 11325                           ;incstack = 0
 11326                           ; Regs used in _abs: [wreg+status,2+status,0]
 11327                           
 11328     19EC  0020               	movlb	0	; select bank0
 11329     19ED  1BA8               	btfsc	abs@a+1,7
 11330     19EE  29F0               	goto	u4821
 11331     19EF  29F1               	goto	u4820
 11332     19F0                     u4821:
 11333     19F0  29F2               	goto	l4226
 11334     19F1                     u4820:
 11335     19F1                     l4224:
 11336     19F1  29FD               	goto	l1241
 11337     19F2                     l4226:
 11338     19F2  0927               	comf	abs@a,w
 11339     19F3  00A9               	movwf	??_abs
 11340     19F4  0928               	comf	abs@a+1,w
 11341     19F5  00AA               	movwf	??_abs+1
 11342     19F6  0AA9               	incf	??_abs,f
 11343     19F7  1903               	skipnz
 11344     19F8  0AAA               	incf	??_abs+1,f
 11345     19F9  0829               	movf	??_abs,w
 11346     19FA  00A7               	movwf	?_abs
 11347     19FB  082A               	movf	??_abs+1,w
 11348     19FC  00A8               	movwf	?_abs+1
 11349     19FD                     l1241:
 11350     19FD  0008               	return
 11351     19FE                     __end_of_abs:
 11352                           
 11353                           	psect	text27
 11354     1D32                     __ptext27:	
 11355 ;; *************** function ___awmod *****************
 11356 ;; Defined at:
 11357 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;  divisor         2    0[BANK0 ] int 
 11360 ;;  dividend        2    2[BANK0 ] int 
 11361 ;; Auto vars:     Size  Location     Type
 11362 ;;  sign            1    6[BANK0 ] unsigned char 
 11363 ;;  counter         1    5[BANK0 ] unsigned char 
 11364 ;; Return value:  Size  Location     Type
 11365 ;;                  2    0[BANK0 ] int 
 11366 ;; Registers used:
 11367 ;;		wreg, status,2, status,0
 11368 ;; Tracked objects:
 11369 ;;		On entry : 0/0
 11370 ;;		On exit  : 0/0
 11371 ;;		Unchanged: 0/0
 11372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11373 ;;      Params:         0       4       0       0       0       0       0       0
 11374 ;;      Locals:         0       2       0       0       0       0       0       0
 11375 ;;      Temps:          0       1       0       0       0       0       0       0
 11376 ;;      Totals:         0       7       0       0       0       0       0       0
 11377 ;;Total ram usage:        7 bytes
 11378 ;; Hardware stack levels used: 1
 11379 ;; Hardware stack levels required when called: 4
 11380 ;; This function calls:
 11381 ;;		Nothing
 11382 ;; This function is called by:
 11383 ;;		_dtoa
 11384 ;; This function uses a non-reentrant model
 11385 ;;
 11386                           
 11387     1D32                     ___awmod:	
 11388                           ;psect for function ___awmod
 11389                           
 11390     1D32                     l3810:	
 11391                           ;incstack = 0
 11392                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11393                           
 11394     1D32  0020               	movlb	0	; select bank0
 11395     1D33  01A6               	clrf	___awmod@sign
 11396     1D34                     l3812:
 11397     1D34  1FA3               	btfss	___awmod@dividend+1,7
 11398     1D35  2D37               	goto	u3971
 11399     1D36  2D38               	goto	u3970
 11400     1D37                     u3971:
 11401     1D37  2D3F               	goto	l3818
 11402     1D38                     u3970:
 11403     1D38                     l3814:
 11404     1D38  09A2               	comf	___awmod@dividend,f
 11405     1D39  09A3               	comf	___awmod@dividend+1,f
 11406     1D3A  0AA2               	incf	___awmod@dividend,f
 11407     1D3B  1903               	skipnz
 11408     1D3C  0AA3               	incf	___awmod@dividend+1,f
 11409     1D3D                     l3816:
 11410     1D3D  01A6               	clrf	___awmod@sign
 11411     1D3E  0AA6               	incf	___awmod@sign,f
 11412     1D3F                     l3818:
 11413     1D3F  1FA1               	btfss	___awmod@divisor+1,7
 11414     1D40  2D42               	goto	u3981
 11415     1D41  2D43               	goto	u3980
 11416     1D42                     u3981:
 11417     1D42  2D48               	goto	l3822
 11418     1D43                     u3980:
 11419     1D43                     l3820:
 11420     1D43  09A0               	comf	___awmod@divisor,f
 11421     1D44  09A1               	comf	___awmod@divisor+1,f
 11422     1D45  0AA0               	incf	___awmod@divisor,f
 11423     1D46  1903               	skipnz
 11424     1D47  0AA1               	incf	___awmod@divisor+1,f
 11425     1D48                     l3822:
 11426     1D48  0820               	movf	___awmod@divisor,w
 11427     1D49  0421               	iorwf	___awmod@divisor+1,w
 11428     1D4A  1903               	btfsc	3,2
 11429     1D4B  2D4D               	goto	u3991
 11430     1D4C  2D4E               	goto	u3990
 11431     1D4D                     u3991:
 11432     1D4D  2D77               	goto	l3840
 11433     1D4E                     u3990:
 11434     1D4E                     l3824:
 11435     1D4E  01A5               	clrf	___awmod@counter
 11436     1D4F  0AA5               	incf	___awmod@counter,f
 11437     1D50  2D5A               	goto	l3830
 11438     1D51                     l3826:
 11439     1D51  3001               	movlw	1
 11440     1D52                     u4005:
 11441     1D52  35A0               	lslf	___awmod@divisor,f
 11442     1D53  0DA1               	rlf	___awmod@divisor+1,f
 11443     1D54  0B89               	decfsz	9,f
 11444     1D55  2D52               	goto	u4005
 11445     1D56                     l3828:
 11446     1D56  3001               	movlw	1
 11447     1D57  00A4               	movwf	??___awmod
 11448     1D58  0824               	movf	??___awmod,w
 11449     1D59  07A5               	addwf	___awmod@counter,f
 11450     1D5A                     l3830:
 11451     1D5A  1FA1               	btfss	___awmod@divisor+1,7
 11452     1D5B  2D5D               	goto	u4011
 11453     1D5C  2D5E               	goto	u4010
 11454     1D5D                     u4011:
 11455     1D5D  2D51               	goto	l3826
 11456     1D5E                     u4010:
 11457     1D5E                     l3832:
 11458     1D5E  0821               	movf	___awmod@divisor+1,w
 11459     1D5F  0223               	subwf	___awmod@dividend+1,w
 11460     1D60  1D03               	skipz
 11461     1D61  2D64               	goto	u4025
 11462     1D62  0820               	movf	___awmod@divisor,w
 11463     1D63  0222               	subwf	___awmod@dividend,w
 11464     1D64                     u4025:
 11465     1D64  1C03               	skipc
 11466     1D65  2D67               	goto	u4021
 11467     1D66  2D68               	goto	u4020
 11468     1D67                     u4021:
 11469     1D67  2D6C               	goto	l3836
 11470     1D68                     u4020:
 11471     1D68                     l3834:
 11472     1D68  0820               	movf	___awmod@divisor,w
 11473     1D69  02A2               	subwf	___awmod@dividend,f
 11474     1D6A  0821               	movf	___awmod@divisor+1,w
 11475     1D6B  3BA3               	subwfb	___awmod@dividend+1,f
 11476     1D6C                     l3836:
 11477     1D6C  3001               	movlw	1
 11478     1D6D                     u4035:
 11479     1D6D  36A1               	lsrf	___awmod@divisor+1,f
 11480     1D6E  0CA0               	rrf	___awmod@divisor,f
 11481     1D6F  0B89               	decfsz	9,f
 11482     1D70  2D6D               	goto	u4035
 11483     1D71                     l3838:
 11484     1D71  3001               	movlw	1
 11485     1D72  02A5               	subwf	___awmod@counter,f
 11486     1D73  1D03               	btfss	3,2
 11487     1D74  2D76               	goto	u4041
 11488     1D75  2D77               	goto	u4040
 11489     1D76                     u4041:
 11490     1D76  2D5E               	goto	l3832
 11491     1D77                     u4040:
 11492     1D77                     l3840:
 11493     1D77  0826               	movf	___awmod@sign,w
 11494     1D78  1903               	btfsc	3,2
 11495     1D79  2D7B               	goto	u4051
 11496     1D7A  2D7C               	goto	u4050
 11497     1D7B                     u4051:
 11498     1D7B  2D81               	goto	l3844
 11499     1D7C                     u4050:
 11500     1D7C                     l3842:
 11501     1D7C  09A2               	comf	___awmod@dividend,f
 11502     1D7D  09A3               	comf	___awmod@dividend+1,f
 11503     1D7E  0AA2               	incf	___awmod@dividend,f
 11504     1D7F  1903               	skipnz
 11505     1D80  0AA3               	incf	___awmod@dividend+1,f
 11506     1D81                     l3844:
 11507     1D81  0823               	movf	___awmod@dividend+1,w
 11508     1D82  00A1               	movwf	?___awmod+1
 11509     1D83  0822               	movf	___awmod@dividend,w
 11510     1D84  00A0               	movwf	?___awmod
 11511     1D85                     l769:
 11512     1D85  0008               	return
 11513     1D86                     __end_of___awmod:
 11514                           
 11515                           	psect	text28
 11516     1DDF                     __ptext28:	
 11517 ;; *************** function ___awdiv *****************
 11518 ;; Defined at:
 11519 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 11520 ;; Parameters:    Size  Location     Type
 11521 ;;  divisor         2    0[BANK0 ] int 
 11522 ;;  dividend        2    2[BANK0 ] int 
 11523 ;; Auto vars:     Size  Location     Type
 11524 ;;  quotient        2    7[BANK0 ] int 
 11525 ;;  sign            1    6[BANK0 ] unsigned char 
 11526 ;;  counter         1    5[BANK0 ] unsigned char 
 11527 ;; Return value:  Size  Location     Type
 11528 ;;                  2    0[BANK0 ] int 
 11529 ;; Registers used:
 11530 ;;		wreg, status,2, status,0
 11531 ;; Tracked objects:
 11532 ;;		On entry : 0/0
 11533 ;;		On exit  : 0/0
 11534 ;;		Unchanged: 0/0
 11535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11536 ;;      Params:         0       4       0       0       0       0       0       0
 11537 ;;      Locals:         0       4       0       0       0       0       0       0
 11538 ;;      Temps:          0       1       0       0       0       0       0       0
 11539 ;;      Totals:         0       9       0       0       0       0       0       0
 11540 ;;Total ram usage:        9 bytes
 11541 ;; Hardware stack levels used: 1
 11542 ;; Hardware stack levels required when called: 4
 11543 ;; This function calls:
 11544 ;;		Nothing
 11545 ;; This function is called by:
 11546 ;;		_dtoa
 11547 ;; This function uses a non-reentrant model
 11548 ;;
 11549                           
 11550     1DDF                     ___awdiv:	
 11551                           ;psect for function ___awdiv
 11552                           
 11553     1DDF                     l3766:	
 11554                           ;incstack = 0
 11555                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11556                           
 11557     1DDF  0020               	movlb	0	; select bank0
 11558     1DE0  01A6               	clrf	___awdiv@sign
 11559     1DE1                     l3768:
 11560     1DE1  1FA1               	btfss	___awdiv@divisor+1,7
 11561     1DE2  2DE4               	goto	u3871
 11562     1DE3  2DE5               	goto	u3870
 11563     1DE4                     u3871:
 11564     1DE4  2DEC               	goto	l3774
 11565     1DE5                     u3870:
 11566     1DE5                     l3770:
 11567     1DE5  09A0               	comf	___awdiv@divisor,f
 11568     1DE6  09A1               	comf	___awdiv@divisor+1,f
 11569     1DE7  0AA0               	incf	___awdiv@divisor,f
 11570     1DE8  1903               	skipnz
 11571     1DE9  0AA1               	incf	___awdiv@divisor+1,f
 11572     1DEA                     l3772:
 11573     1DEA  01A6               	clrf	___awdiv@sign
 11574     1DEB  0AA6               	incf	___awdiv@sign,f
 11575     1DEC                     l3774:
 11576     1DEC  1FA3               	btfss	___awdiv@dividend+1,7
 11577     1DED  2DEF               	goto	u3881
 11578     1DEE  2DF0               	goto	u3880
 11579     1DEF                     u3881:
 11580     1DEF  2DF9               	goto	l3780
 11581     1DF0                     u3880:
 11582     1DF0                     l3776:
 11583     1DF0  09A2               	comf	___awdiv@dividend,f
 11584     1DF1  09A3               	comf	___awdiv@dividend+1,f
 11585     1DF2  0AA2               	incf	___awdiv@dividend,f
 11586     1DF3  1903               	skipnz
 11587     1DF4  0AA3               	incf	___awdiv@dividend+1,f
 11588     1DF5                     l3778:
 11589     1DF5  3001               	movlw	1
 11590     1DF6  00A4               	movwf	??___awdiv
 11591     1DF7  0824               	movf	??___awdiv,w
 11592     1DF8  06A6               	xorwf	___awdiv@sign,f
 11593     1DF9                     l3780:
 11594     1DF9  01A7               	clrf	___awdiv@quotient
 11595     1DFA  01A8               	clrf	___awdiv@quotient+1
 11596     1DFB                     l3782:
 11597     1DFB  0820               	movf	___awdiv@divisor,w
 11598     1DFC  0421               	iorwf	___awdiv@divisor+1,w
 11599     1DFD  1903               	btfsc	3,2
 11600     1DFE  2E00               	goto	u3891
 11601     1DFF  2E01               	goto	u3890
 11602     1E00                     u3891:
 11603     1E00  2E30               	goto	l3802
 11604     1E01                     u3890:
 11605     1E01                     l3784:
 11606     1E01  01A5               	clrf	___awdiv@counter
 11607     1E02  0AA5               	incf	___awdiv@counter,f
 11608     1E03  2E0D               	goto	l3790
 11609     1E04                     l3786:
 11610     1E04  3001               	movlw	1
 11611     1E05                     u3905:
 11612     1E05  35A0               	lslf	___awdiv@divisor,f
 11613     1E06  0DA1               	rlf	___awdiv@divisor+1,f
 11614     1E07  0B89               	decfsz	9,f
 11615     1E08  2E05               	goto	u3905
 11616     1E09                     l3788:
 11617     1E09  3001               	movlw	1
 11618     1E0A  00A4               	movwf	??___awdiv
 11619     1E0B  0824               	movf	??___awdiv,w
 11620     1E0C  07A5               	addwf	___awdiv@counter,f
 11621     1E0D                     l3790:
 11622     1E0D  1FA1               	btfss	___awdiv@divisor+1,7
 11623     1E0E  2E10               	goto	u3911
 11624     1E0F  2E11               	goto	u3910
 11625     1E10                     u3911:
 11626     1E10  2E04               	goto	l3786
 11627     1E11                     u3910:
 11628     1E11                     l3792:
 11629     1E11  3001               	movlw	1
 11630     1E12                     u3925:
 11631     1E12  35A7               	lslf	___awdiv@quotient,f
 11632     1E13  0DA8               	rlf	___awdiv@quotient+1,f
 11633     1E14  0B89               	decfsz	9,f
 11634     1E15  2E12               	goto	u3925
 11635     1E16  0821               	movf	___awdiv@divisor+1,w
 11636     1E17  0223               	subwf	___awdiv@dividend+1,w
 11637     1E18  1D03               	skipz
 11638     1E19  2E1C               	goto	u3935
 11639     1E1A  0820               	movf	___awdiv@divisor,w
 11640     1E1B  0222               	subwf	___awdiv@dividend,w
 11641     1E1C                     u3935:
 11642     1E1C  1C03               	skipc
 11643     1E1D  2E1F               	goto	u3931
 11644     1E1E  2E20               	goto	u3930
 11645     1E1F                     u3931:
 11646     1E1F  2E25               	goto	l3798
 11647     1E20                     u3930:
 11648     1E20                     l3794:
 11649     1E20  0820               	movf	___awdiv@divisor,w
 11650     1E21  02A2               	subwf	___awdiv@dividend,f
 11651     1E22  0821               	movf	___awdiv@divisor+1,w
 11652     1E23  3BA3               	subwfb	___awdiv@dividend+1,f
 11653     1E24                     l3796:
 11654     1E24  1427               	bsf	___awdiv@quotient,0
 11655     1E25                     l3798:
 11656     1E25  3001               	movlw	1
 11657     1E26                     u3945:
 11658     1E26  36A1               	lsrf	___awdiv@divisor+1,f
 11659     1E27  0CA0               	rrf	___awdiv@divisor,f
 11660     1E28  0B89               	decfsz	9,f
 11661     1E29  2E26               	goto	u3945
 11662     1E2A                     l3800:
 11663     1E2A  3001               	movlw	1
 11664     1E2B  02A5               	subwf	___awdiv@counter,f
 11665     1E2C  1D03               	btfss	3,2
 11666     1E2D  2E2F               	goto	u3951
 11667     1E2E  2E30               	goto	u3950
 11668     1E2F                     u3951:
 11669     1E2F  2E11               	goto	l3792
 11670     1E30                     u3950:
 11671     1E30                     l3802:
 11672     1E30  0826               	movf	___awdiv@sign,w
 11673     1E31  1903               	btfsc	3,2
 11674     1E32  2E34               	goto	u3961
 11675     1E33  2E35               	goto	u3960
 11676     1E34                     u3961:
 11677     1E34  2E3A               	goto	l3806
 11678     1E35                     u3960:
 11679     1E35                     l3804:
 11680     1E35  09A7               	comf	___awdiv@quotient,f
 11681     1E36  09A8               	comf	___awdiv@quotient+1,f
 11682     1E37  0AA7               	incf	___awdiv@quotient,f
 11683     1E38  1903               	skipnz
 11684     1E39  0AA8               	incf	___awdiv@quotient+1,f
 11685     1E3A                     l3806:
 11686     1E3A  0828               	movf	___awdiv@quotient+1,w
 11687     1E3B  00A1               	movwf	?___awdiv+1
 11688     1E3C  0827               	movf	___awdiv@quotient,w
 11689     1E3D  00A0               	movwf	?___awdiv
 11690     1E3E                     l756:
 11691     1E3E  0008               	return
 11692     1E3F                     __end_of___awdiv:
 11693                           
 11694                           	psect	text29
 11695     1155                     __ptext29:	
 11696 ;; *************** function ___xxtofl *****************
 11697 ;; Defined at:
 11698 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;  sign            1    wreg     unsigned char 
 11701 ;;  val             4    6[BANK0 ] long 
 11702 ;; Auto vars:     Size  Location     Type
 11703 ;;  sign            1   14[BANK0 ] unsigned char 
 11704 ;;  arg             4   16[BANK0 ] unsigned long 
 11705 ;;  exp             1   15[BANK0 ] unsigned char 
 11706 ;; Return value:  Size  Location     Type
 11707 ;;                  4    6[BANK0 ] unsigned char 
 11708 ;; Registers used:
 11709 ;;		wreg, status,2, status,0
 11710 ;; Tracked objects:
 11711 ;;		On entry : 0/0
 11712 ;;		On exit  : 0/0
 11713 ;;		Unchanged: 0/0
 11714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11715 ;;      Params:         0       4       0       0       0       0       0       0
 11716 ;;      Locals:         0       6       0       0       0       0       0       0
 11717 ;;      Temps:          0       4       0       0       0       0       0       0
 11718 ;;      Totals:         0      14       0       0       0       0       0       0
 11719 ;;Total ram usage:       14 bytes
 11720 ;; Hardware stack levels used: 1
 11721 ;; Hardware stack levels required when called: 4
 11722 ;; This function calls:
 11723 ;;		Nothing
 11724 ;; This function is called by:
 11725 ;;		_main
 11726 ;; This function uses a non-reentrant model
 11727 ;;
 11728                           
 11729     1155                     ___xxtofl:	
 11730                           ;psect for function ___xxtofl
 11731                           
 11732                           
 11733                           ;incstack = 0
 11734                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11735                           ;___xxtofl@sign stored from wreg
 11736     1155  0020               	movlb	0	; select bank0
 11737     1156  00AE               	movwf	___xxtofl@sign
 11738     1157                     l5014:
 11739     1157  082E               	movf	___xxtofl@sign,w
 11740     1158  1903               	btfsc	3,2
 11741     1159  295B               	goto	u6091
 11742     115A  295C               	goto	u6090
 11743     115B                     u6091:
 11744     115B  2970               	goto	l5020
 11745     115C                     u6090:
 11746     115C                     l5016:
 11747     115C  1FA9               	btfss	___xxtofl@val+3,7
 11748     115D  295F               	goto	u6101
 11749     115E  2960               	goto	u6100
 11750     115F                     u6101:
 11751     115F  2970               	goto	l5020
 11752     1160                     u6100:
 11753     1160                     l5018:
 11754     1160  0926               	comf	___xxtofl@val,w
 11755     1161  00B0               	movwf	___xxtofl@arg
 11756     1162  0927               	comf	___xxtofl@val+1,w
 11757     1163  00B1               	movwf	___xxtofl@arg+1
 11758     1164  0928               	comf	___xxtofl@val+2,w
 11759     1165  00B2               	movwf	___xxtofl@arg+2
 11760     1166  0929               	comf	___xxtofl@val+3,w
 11761     1167  00B3               	movwf	___xxtofl@arg+3
 11762     1168  0AB0               	incf	___xxtofl@arg,f
 11763     1169  1903               	skipnz
 11764     116A  0AB1               	incf	___xxtofl@arg+1,f
 11765     116B  1903               	skipnz
 11766     116C  0AB2               	incf	___xxtofl@arg+2,f
 11767     116D  1903               	skipnz
 11768     116E  0AB3               	incf	___xxtofl@arg+3,f
 11769     116F  2978               	goto	l1044
 11770     1170                     l5020:
 11771     1170  0829               	movf	___xxtofl@val+3,w
 11772     1171  00B3               	movwf	___xxtofl@arg+3
 11773     1172  0828               	movf	___xxtofl@val+2,w
 11774     1173  00B2               	movwf	___xxtofl@arg+2
 11775     1174  0827               	movf	___xxtofl@val+1,w
 11776     1175  00B1               	movwf	___xxtofl@arg+1
 11777     1176  0826               	movf	___xxtofl@val,w
 11778     1177  00B0               	movwf	___xxtofl@arg
 11779     1178                     l1044:
 11780     1178  0829               	movf	___xxtofl@val+3,w
 11781     1179  0428               	iorwf	___xxtofl@val+2,w
 11782     117A  0427               	iorwf	___xxtofl@val+1,w
 11783     117B  0426               	iorwf	___xxtofl@val,w
 11784     117C  1D03               	skipz
 11785     117D  297F               	goto	u6111
 11786     117E  2980               	goto	u6110
 11787     117F                     u6111:
 11788     117F  2989               	goto	l5026
 11789     1180                     u6110:
 11790     1180                     l5022:
 11791     1180  3000               	movlw	0
 11792     1181  00A9               	movwf	?___xxtofl+3
 11793     1182  3000               	movlw	0
 11794     1183  00A8               	movwf	?___xxtofl+2
 11795     1184  3000               	movlw	0
 11796     1185  00A7               	movwf	?___xxtofl+1
 11797     1186  3000               	movlw	0
 11798     1187  00A6               	movwf	?___xxtofl
 11799     1188  29FF               	goto	l1046
 11800     1189                     l5026:
 11801     1189  3096               	movlw	150
 11802     118A  00AF               	movwf	___xxtofl@exp
 11803     118B  2997               	goto	l5030
 11804     118C                     l5028:
 11805     118C  3001               	movlw	1
 11806     118D  00AA               	movwf	??___xxtofl
 11807     118E  082A               	movf	??___xxtofl,w
 11808     118F  07AF               	addwf	___xxtofl@exp,f
 11809     1190  3001               	movlw	1
 11810     1191                     u6125:
 11811     1191  36B3               	lsrf	___xxtofl@arg+3,f
 11812     1192  0CB2               	rrf	___xxtofl@arg+2,f
 11813     1193  0CB1               	rrf	___xxtofl@arg+1,f
 11814     1194  0CB0               	rrf	___xxtofl@arg,f
 11815     1195  0B89               	decfsz	9,f
 11816     1196  2991               	goto	u6125
 11817     1197                     l5030:
 11818     1197  30FE               	movlw	254
 11819     1198  0533               	andwf	___xxtofl@arg+3,w
 11820     1199  1D03               	btfss	3,2
 11821     119A  299C               	goto	u6131
 11822     119B  299D               	goto	u6130
 11823     119C                     u6131:
 11824     119C  298C               	goto	l5028
 11825     119D                     u6130:
 11826     119D  29B1               	goto	l1050
 11827     119E                     l5032:
 11828     119E  3001               	movlw	1
 11829     119F  00AA               	movwf	??___xxtofl
 11830     11A0  082A               	movf	??___xxtofl,w
 11831     11A1  07AF               	addwf	___xxtofl@exp,f
 11832     11A2                     l5034:
 11833     11A2  3001               	movlw	1
 11834     11A3  07B0               	addwf	___xxtofl@arg,f
 11835     11A4  3000               	movlw	0
 11836     11A5  3DB1               	addwfc	___xxtofl@arg+1,f
 11837     11A6  3000               	movlw	0
 11838     11A7  3DB2               	addwfc	___xxtofl@arg+2,f
 11839     11A8  3000               	movlw	0
 11840     11A9  3DB3               	addwfc	___xxtofl@arg+3,f
 11841     11AA                     l5036:
 11842     11AA  3001               	movlw	1
 11843     11AB                     u6145:
 11844     11AB  36B3               	lsrf	___xxtofl@arg+3,f
 11845     11AC  0CB2               	rrf	___xxtofl@arg+2,f
 11846     11AD  0CB1               	rrf	___xxtofl@arg+1,f
 11847     11AE  0CB0               	rrf	___xxtofl@arg,f
 11848     11AF  0B89               	decfsz	9,f
 11849     11B0  29AB               	goto	u6145
 11850     11B1                     l1050:
 11851     11B1  30FF               	movlw	255
 11852     11B2  0533               	andwf	___xxtofl@arg+3,w
 11853     11B3  1D03               	btfss	3,2
 11854     11B4  29B6               	goto	u6151
 11855     11B5  29B7               	goto	u6150
 11856     11B6                     u6151:
 11857     11B6  299E               	goto	l5032
 11858     11B7                     u6150:
 11859     11B7  29C1               	goto	l5040
 11860     11B8                     l5038:
 11861     11B8  3001               	movlw	1
 11862     11B9  02AF               	subwf	___xxtofl@exp,f
 11863     11BA  3001               	movlw	1
 11864     11BB                     u6165:
 11865     11BB  35B0               	lslf	___xxtofl@arg,f
 11866     11BC  0DB1               	rlf	___xxtofl@arg+1,f
 11867     11BD  0DB2               	rlf	___xxtofl@arg+2,f
 11868     11BE  0DB3               	rlf	___xxtofl@arg+3,f
 11869     11BF  0B89               	decfsz	9,f
 11870     11C0  29BB               	goto	u6165
 11871     11C1                     l5040:
 11872     11C1  1BB2               	btfsc	___xxtofl@arg+2,7
 11873     11C2  29C4               	goto	u6171
 11874     11C3  29C5               	goto	u6170
 11875     11C4                     u6171:
 11876     11C4  29CB               	goto	l1057
 11877     11C5                     u6170:
 11878     11C5                     l5042:
 11879     11C5  3002               	movlw	2
 11880     11C6  022F               	subwf	___xxtofl@exp,w
 11881     11C7  1803               	skipnc
 11882     11C8  29CA               	goto	u6181
 11883     11C9  29CB               	goto	u6180
 11884     11CA                     u6181:
 11885     11CA  29B8               	goto	l5038
 11886     11CB                     u6180:
 11887     11CB                     l1057:
 11888     11CB  182F               	btfsc	___xxtofl@exp,0
 11889     11CC  29CE               	goto	u6191
 11890     11CD  29CF               	goto	u6190
 11891     11CE                     u6191:
 11892     11CE  29D7               	goto	l1058
 11893     11CF                     u6190:
 11894     11CF                     l5044:
 11895     11CF  30FF               	movlw	255
 11896     11D0  05B0               	andwf	___xxtofl@arg,f
 11897     11D1  30FF               	movlw	255
 11898     11D2  05B1               	andwf	___xxtofl@arg+1,f
 11899     11D3  307F               	movlw	127
 11900     11D4  05B2               	andwf	___xxtofl@arg+2,f
 11901     11D5  30FF               	movlw	255
 11902     11D6  05B3               	andwf	___xxtofl@arg+3,f
 11903     11D7                     l1058:
 11904     11D7  1003               	clrc
 11905     11D8  0CAF               	rrf	___xxtofl@exp,f
 11906     11D9                     l5046:
 11907     11D9  082F               	movf	___xxtofl@exp,w
 11908     11DA  00AA               	movwf	??___xxtofl
 11909     11DB  01AB               	clrf	??___xxtofl+1
 11910     11DC  01AC               	clrf	??___xxtofl+2
 11911     11DD  01AD               	clrf	??___xxtofl+3
 11912     11DE  3018               	movlw	24
 11913     11DF                     u6205:
 11914     11DF  35AA               	lslf	??___xxtofl,f
 11915     11E0  0DAB               	rlf	??___xxtofl+1,f
 11916     11E1  0DAC               	rlf	??___xxtofl+2,f
 11917     11E2  0DAD               	rlf	??___xxtofl+3,f
 11918     11E3                     u6200:
 11919     11E3  0B89               	decfsz	9,f
 11920     11E4  29DF               	goto	u6205
 11921     11E5  082A               	movf	??___xxtofl,w
 11922     11E6  04B0               	iorwf	___xxtofl@arg,f
 11923     11E7  082B               	movf	??___xxtofl+1,w
 11924     11E8  04B1               	iorwf	___xxtofl@arg+1,f
 11925     11E9  082C               	movf	??___xxtofl+2,w
 11926     11EA  04B2               	iorwf	___xxtofl@arg+2,f
 11927     11EB  082D               	movf	??___xxtofl+3,w
 11928     11EC  04B3               	iorwf	___xxtofl@arg+3,f
 11929     11ED                     l5048:
 11930     11ED  082E               	movf	___xxtofl@sign,w
 11931     11EE  1903               	btfsc	3,2
 11932     11EF  29F1               	goto	u6211
 11933     11F0  29F2               	goto	u6210
 11934     11F1                     u6211:
 11935     11F1  29F7               	goto	l5054
 11936     11F2                     u6210:
 11937     11F2                     l5050:
 11938     11F2  1FA9               	btfss	___xxtofl@val+3,7
 11939     11F3  29F5               	goto	u6221
 11940     11F4  29F6               	goto	u6220
 11941     11F5                     u6221:
 11942     11F5  29F7               	goto	l5054
 11943     11F6                     u6220:
 11944     11F6                     l5052:
 11945     11F6  17B3               	bsf	___xxtofl@arg+3,7
 11946     11F7                     l5054:
 11947     11F7  0833               	movf	___xxtofl@arg+3,w
 11948     11F8  00A9               	movwf	?___xxtofl+3
 11949     11F9  0832               	movf	___xxtofl@arg+2,w
 11950     11FA  00A8               	movwf	?___xxtofl+2
 11951     11FB  0831               	movf	___xxtofl@arg+1,w
 11952     11FC  00A7               	movwf	?___xxtofl+1
 11953     11FD  0830               	movf	___xxtofl@arg,w
 11954     11FE  00A6               	movwf	?___xxtofl
 11955     11FF                     l1046:
 11956     11FF  0008               	return
 11957     1200                     __end_of___xxtofl:
 11958                           
 11959                           	psect	text30
 11960     1AAF                     __ptext30:	
 11961 ;; *************** function _Lcd_Write_String *****************
 11962 ;; Defined at:
 11963 ;;		line 104 in file "lcd.c"
 11964 ;; Parameters:    Size  Location     Type
 11965 ;;  a               2    5[BANK0 ] PTR const unsigned char 
 11966 ;;		 -> STR_18(15), STR_17(11), STR_16(6), STR_15(14), 
 11967 ;;		 -> STR_14(15), STR_13(12), STR_12(13), STR_11(9), 
 11968 ;;		 -> STR_10(7), STR_9(9), STR_8(7), STR_7(15), 
 11969 ;;		 -> STR_6(16), STR_5(17), STR_4(2), buffer(20), 
 11970 ;;		 -> STR_1(15), 
 11971 ;; Auto vars:     Size  Location     Type
 11972 ;;  i               2    8[BANK0 ] int 
 11973 ;; Return value:  Size  Location     Type
 11974 ;;                  1    wreg      void 
 11975 ;; Registers used:
 11976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11977 ;; Tracked objects:
 11978 ;;		On entry : 0/0
 11979 ;;		On exit  : 0/0
 11980 ;;		Unchanged: 0/0
 11981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11982 ;;      Params:         0       2       0       0       0       0       0       0
 11983 ;;      Locals:         0       2       0       0       0       0       0       0
 11984 ;;      Temps:          0       1       0       0       0       0       0       0
 11985 ;;      Totals:         0       5       0       0       0       0       0       0
 11986 ;;Total ram usage:        5 bytes
 11987 ;; Hardware stack levels used: 1
 11988 ;; Hardware stack levels required when called: 6
 11989 ;; This function calls:
 11990 ;;		_Lcd_Write_Char
 11991 ;; This function is called by:
 11992 ;;		_main
 11993 ;; This function uses a non-reentrant model
 11994 ;;
 11995                           
 11996     1AAF                     _Lcd_Write_String:	
 11997                           ;psect for function _Lcd_Write_String
 11998                           
 11999     1AAF                     l4876:	
 12000                           ;incstack = 0
 12001                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12002                           
 12003                           
 12004                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
 12005     1AAF  0020               	movlb	0	; select bank0
 12006     1AB0  01A8               	clrf	Lcd_Write_String@i
 12007     1AB1  01A9               	clrf	Lcd_Write_String@i+1
 12008     1AB2  2AC2               	goto	l4882
 12009     1AB3                     l4878:
 12010                           
 12011                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
 12012     1AB3  0825               	movf	Lcd_Write_String@a,w
 12013     1AB4  0728               	addwf	Lcd_Write_String@i,w
 12014     1AB5  0084               	movwf	4
 12015     1AB6  0826               	movf	Lcd_Write_String@a+1,w
 12016     1AB7  3D29               	addwfc	Lcd_Write_String@i+1,w
 12017     1AB8  0085               	movwf	5
 12018     1AB9  0800               	movf	0,w	;code access
 12019     1ABA  319C  2437  319A   	fcall	_Lcd_Write_Char
 12020     1ABD                     l4880:
 12021     1ABD  3001               	movlw	1
 12022     1ABE  0020               	movlb	0	; select bank0
 12023     1ABF  07A8               	addwf	Lcd_Write_String@i,f
 12024     1AC0  3000               	movlw	0
 12025     1AC1  3DA9               	addwfc	Lcd_Write_String@i+1,f
 12026     1AC2                     l4882:
 12027     1AC2  0825               	movf	Lcd_Write_String@a,w
 12028     1AC3  0728               	addwf	Lcd_Write_String@i,w
 12029     1AC4  0084               	movwf	4
 12030     1AC5  0826               	movf	Lcd_Write_String@a+1,w
 12031     1AC6  3D29               	addwfc	Lcd_Write_String@i+1,w
 12032     1AC7  0085               	movwf	5
 12033     1AC8  0012               	moviw fsr0++
 12034     1AC9  1D03               	btfss	3,2
 12035     1ACA  2ACC               	goto	u5801
 12036     1ACB  2ACD               	goto	u5800
 12037     1ACC                     u5801:
 12038     1ACC  2AB3               	goto	l4878
 12039     1ACD                     u5800:
 12040     1ACD                     l417:
 12041     1ACD  0008               	return
 12042     1ACE                     __end_of_Lcd_Write_String:
 12043                           
 12044                           	psect	text31
 12045     1C37                     __ptext31:	
 12046 ;; *************** function _Lcd_Write_Char *****************
 12047 ;; Defined at:
 12048 ;;		line 88 in file "lcd.c"
 12049 ;; Parameters:    Size  Location     Type
 12050 ;;  a               1    wreg     unsigned char 
 12051 ;; Auto vars:     Size  Location     Type
 12052 ;;  a               1    4[BANK0 ] unsigned char 
 12053 ;;  y               1    3[BANK0 ] unsigned char 
 12054 ;;  temp            1    2[BANK0 ] unsigned char 
 12055 ;; Return value:  Size  Location     Type
 12056 ;;                  1    wreg      void 
 12057 ;; Registers used:
 12058 ;;		wreg, status,2, status,0, pclath, cstack
 12059 ;; Tracked objects:
 12060 ;;		On entry : 0/0
 12061 ;;		On exit  : 0/0
 12062 ;;		Unchanged: 0/0
 12063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12064 ;;      Params:         0       0       0       0       0       0       0       0
 12065 ;;      Locals:         0       3       0       0       0       0       0       0
 12066 ;;      Temps:          0       1       0       0       0       0       0       0
 12067 ;;      Totals:         0       4       0       0       0       0       0       0
 12068 ;;Total ram usage:        4 bytes
 12069 ;; Hardware stack levels used: 1
 12070 ;; Hardware stack levels required when called: 5
 12071 ;; This function calls:
 12072 ;;		_Lcd_Port
 12073 ;; This function is called by:
 12074 ;;		_Lcd_Write_String
 12075 ;; This function uses a non-reentrant model
 12076 ;;
 12077                           
 12078     1C37                     _Lcd_Write_Char:	
 12079                           ;psect for function _Lcd_Write_Char
 12080                           
 12081                           
 12082                           ;incstack = 0
 12083                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12084                           ;Lcd_Write_Char@a stored from wreg
 12085     1C37  0020               	movlb	0	; select bank0
 12086     1C38  00A4               	movwf	Lcd_Write_Char@a
 12087     1C39                     l4732:
 12088                           
 12089                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
 12090     1C39  0824               	movf	Lcd_Write_Char@a,w
 12091     1C3A  390F               	andlw	15
 12092     1C3B  00A2               	movwf	Lcd_Write_Char@temp
 12093                           
 12094                           ;lcd.c: 92:     y = a&0xF0;
 12095     1C3C  0824               	movf	Lcd_Write_Char@a,w
 12096     1C3D  39F0               	andlw	240
 12097     1C3E  00A3               	movwf	Lcd_Write_Char@y
 12098     1C3F                     l4734:
 12099                           
 12100                           ;lcd.c: 93:     LATCbits.LATC1 = 1;
 12101     1C3F  0022               	movlb	2	; select bank2
 12102     1C40  148E               	bsf	14,1	;volatile
 12103     1C41                     l4736:
 12104                           
 12105                           ;lcd.c: 94:     Lcd_Port(y>>4);
 12106     1C41  0020               	movlb	0	; select bank0
 12107     1C42  0823               	movf	Lcd_Write_Char@y,w
 12108     1C43  00A1               	movwf	??_Lcd_Write_Char
 12109     1C44  3004               	movlw	4
 12110     1C45                     u5685:
 12111     1C45  36A1               	lsrf	??_Lcd_Write_Char,f
 12112     1C46  0B89               	decfsz	9,f
 12113     1C47  2C45               	goto	u5685
 12114     1C48  0821               	movf	??_Lcd_Write_Char,w
 12115     1C49  319C  240D  319C   	fcall	_Lcd_Port
 12116     1C4C                     l4738:
 12117                           
 12118                           ;lcd.c: 95:     LATCbits.LATC0 = 1;
 12119     1C4C  0022               	movlb	2	; select bank2
 12120     1C4D  140E               	bsf	14,0	;volatile
 12121     1C4E                     l4740:
 12122                           
 12123                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 12124     1C4E  300D               	movlw	13
 12125     1C4F                     u6647:
 12126     1C4F  0B89               	decfsz	9,f
 12127     1C50  2C4F               	goto	u6647
 12128     1C51  0000               	nop
 12129     1C52                     l4742:
 12130                           
 12131                           ;lcd.c: 97:     LATCbits.LATC0 = 0;
 12132     1C52  0022               	movlb	2	; select bank2
 12133     1C53  100E               	bcf	14,0	;volatile
 12134     1C54                     l4744:
 12135                           
 12136                           ;lcd.c: 98:     Lcd_Port(temp);
 12137     1C54  0020               	movlb	0	; select bank0
 12138     1C55  0822               	movf	Lcd_Write_Char@temp,w
 12139     1C56  319C  240D  319C   	fcall	_Lcd_Port
 12140     1C59                     l4746:
 12141                           
 12142                           ;lcd.c: 99:     LATCbits.LATC0 = 1;
 12143     1C59  0022               	movlb	2	; select bank2
 12144     1C5A  140E               	bsf	14,0	;volatile
 12145     1C5B                     l4748:
 12146                           
 12147                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 12148     1C5B  300D               	movlw	13
 12149     1C5C                     u6657:
 12150     1C5C  0B89               	decfsz	9,f
 12151     1C5D  2C5C               	goto	u6657
 12152     1C5E  0000               	nop
 12153     1C5F                     l4750:
 12154                           
 12155                           ;lcd.c: 101:     LATCbits.LATC0 = 0;
 12156     1C5F  0022               	movlb	2	; select bank2
 12157     1C60  100E               	bcf	14,0	;volatile
 12158     1C61                     l411:
 12159     1C61  0008               	return
 12160     1C62                     __end_of_Lcd_Write_Char:
 12161                           
 12162                           	psect	text32
 12163     1F86                     __ptext32:	
 12164 ;; *************** function _Lcd_Set_Cursor *****************
 12165 ;; Defined at:
 12166 ;;		line 26 in file "lcd.c"
 12167 ;; Parameters:    Size  Location     Type
 12168 ;;  a               1    wreg     unsigned char 
 12169 ;;  b               1    3[BANK0 ] unsigned char 
 12170 ;; Auto vars:     Size  Location     Type
 12171 ;;  a               1    5[BANK0 ] unsigned char 
 12172 ;;  temp            1    8[BANK0 ] unsigned char 
 12173 ;;  y               1    7[BANK0 ] unsigned char 
 12174 ;;  z               1    6[BANK0 ] unsigned char 
 12175 ;; Return value:  Size  Location     Type
 12176 ;;                  1    wreg      void 
 12177 ;; Registers used:
 12178 ;;		wreg, status,2, status,0, pclath, cstack
 12179 ;; Tracked objects:
 12180 ;;		On entry : 0/0
 12181 ;;		On exit  : 0/0
 12182 ;;		Unchanged: 0/0
 12183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12184 ;;      Params:         0       1       0       0       0       0       0       0
 12185 ;;      Locals:         0       4       0       0       0       0       0       0
 12186 ;;      Temps:          0       1       0       0       0       0       0       0
 12187 ;;      Totals:         0       6       0       0       0       0       0       0
 12188 ;;Total ram usage:        6 bytes
 12189 ;; Hardware stack levels used: 1
 12190 ;; Hardware stack levels required when called: 6
 12191 ;; This function calls:
 12192 ;;		_Lcd_Cmd
 12193 ;; This function is called by:
 12194 ;;		_main
 12195 ;; This function uses a non-reentrant model
 12196 ;;
 12197                           
 12198     1F86                     _Lcd_Set_Cursor:	
 12199                           ;psect for function _Lcd_Set_Cursor
 12200                           
 12201                           
 12202                           ;incstack = 0
 12203                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 12204                           ;Lcd_Set_Cursor@a stored from wreg
 12205     1F86  0020               	movlb	0	; select bank0
 12206     1F87  00A5               	movwf	Lcd_Set_Cursor@a
 12207     1F88                     l4836:
 12208                           
 12209                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
 12210     1F88  0325               	decf	Lcd_Set_Cursor@a,w
 12211     1F89  1D03               	btfss	3,2
 12212     1F8A  2F8C               	goto	u5721
 12213     1F8B  2F8D               	goto	u5720
 12214     1F8C                     u5721:
 12215     1F8C  2FA5               	goto	l4846
 12216     1F8D                     u5720:
 12217     1F8D                     l4838:
 12218                           
 12219                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
 12220     1F8D  0823               	movf	Lcd_Set_Cursor@b,w
 12221     1F8E  3E7F               	addlw	127
 12222     1F8F  00A8               	movwf	Lcd_Set_Cursor@temp
 12223                           
 12224                           ;lcd.c: 32:         z = temp>>4;
 12225     1F90  0828               	movf	Lcd_Set_Cursor@temp,w
 12226     1F91  00A4               	movwf	??_Lcd_Set_Cursor
 12227     1F92  3004               	movlw	4
 12228     1F93                     u5735:
 12229     1F93  36A4               	lsrf	??_Lcd_Set_Cursor,f
 12230     1F94  0B89               	decfsz	9,f
 12231     1F95  2F93               	goto	u5735
 12232     1F96  0824               	movf	??_Lcd_Set_Cursor,w
 12233     1F97  00A6               	movwf	Lcd_Set_Cursor@z
 12234     1F98                     l4840:
 12235                           
 12236                           ;lcd.c: 33:         y = temp & 0x0F;
 12237     1F98  0828               	movf	Lcd_Set_Cursor@temp,w
 12238     1F99  390F               	andlw	15
 12239     1F9A  00A7               	movwf	Lcd_Set_Cursor@y
 12240     1F9B                     l4842:
 12241                           
 12242                           ;lcd.c: 34:         Lcd_Cmd(z);
 12243     1F9B  0826               	movf	Lcd_Set_Cursor@z,w
 12244     1F9C  319A  2228  319F   	fcall	_Lcd_Cmd
 12245     1F9F                     l4844:
 12246                           
 12247                           ;lcd.c: 35:         Lcd_Cmd(y);
 12248     1F9F  0020               	movlb	0	; select bank0
 12249     1FA0  0827               	movf	Lcd_Set_Cursor@y,w
 12250     1FA1  319A  2228  319F   	fcall	_Lcd_Cmd
 12251                           
 12252                           ;lcd.c: 36:     }
 12253     1FA4  2FFF               	goto	l405
 12254     1FA5                     l4846:
 12255     1FA5  3002               	movlw	2
 12256     1FA6  0625               	xorwf	Lcd_Set_Cursor@a,w
 12257     1FA7  1D03               	btfss	3,2
 12258     1FA8  2FAA               	goto	u5741
 12259     1FA9  2FAB               	goto	u5740
 12260     1FAA                     u5741:
 12261     1FAA  2FC3               	goto	l4856
 12262     1FAB                     u5740:
 12263     1FAB                     l4848:
 12264                           
 12265                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
 12266     1FAB  0823               	movf	Lcd_Set_Cursor@b,w
 12267     1FAC  3EBF               	addlw	191
 12268     1FAD  00A8               	movwf	Lcd_Set_Cursor@temp
 12269                           
 12270                           ;lcd.c: 40:         z = temp>>4;
 12271     1FAE  0828               	movf	Lcd_Set_Cursor@temp,w
 12272     1FAF  00A4               	movwf	??_Lcd_Set_Cursor
 12273     1FB0  3004               	movlw	4
 12274     1FB1                     u5755:
 12275     1FB1  36A4               	lsrf	??_Lcd_Set_Cursor,f
 12276     1FB2  0B89               	decfsz	9,f
 12277     1FB3  2FB1               	goto	u5755
 12278     1FB4  0824               	movf	??_Lcd_Set_Cursor,w
 12279     1FB5  00A6               	movwf	Lcd_Set_Cursor@z
 12280     1FB6                     l4850:
 12281                           
 12282                           ;lcd.c: 41:         y = temp & 0x0F;
 12283     1FB6  0828               	movf	Lcd_Set_Cursor@temp,w
 12284     1FB7  390F               	andlw	15
 12285     1FB8  00A7               	movwf	Lcd_Set_Cursor@y
 12286     1FB9                     l4852:
 12287                           
 12288                           ;lcd.c: 42:         Lcd_Cmd(z);
 12289     1FB9  0826               	movf	Lcd_Set_Cursor@z,w
 12290     1FBA  319A  2228  319F   	fcall	_Lcd_Cmd
 12291     1FBD                     l4854:
 12292                           
 12293                           ;lcd.c: 43:         Lcd_Cmd(y);
 12294     1FBD  0020               	movlb	0	; select bank0
 12295     1FBE  0827               	movf	Lcd_Set_Cursor@y,w
 12296     1FBF  319A  2228  319F   	fcall	_Lcd_Cmd
 12297                           
 12298                           ;lcd.c: 44:     }
 12299     1FC2  2FFF               	goto	l405
 12300     1FC3                     l4856:
 12301     1FC3  3003               	movlw	3
 12302     1FC4  0625               	xorwf	Lcd_Set_Cursor@a,w
 12303     1FC5  1D03               	btfss	3,2
 12304     1FC6  2FC8               	goto	u5761
 12305     1FC7  2FC9               	goto	u5760
 12306     1FC8                     u5761:
 12307     1FC8  2FE1               	goto	l4866
 12308     1FC9                     u5760:
 12309     1FC9                     l4858:
 12310                           
 12311                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
 12312     1FC9  0823               	movf	Lcd_Set_Cursor@b,w
 12313     1FCA  3E93               	addlw	147
 12314     1FCB  00A8               	movwf	Lcd_Set_Cursor@temp
 12315                           
 12316                           ;lcd.c: 48:         z = temp>>4;
 12317     1FCC  0828               	movf	Lcd_Set_Cursor@temp,w
 12318     1FCD  00A4               	movwf	??_Lcd_Set_Cursor
 12319     1FCE  3004               	movlw	4
 12320     1FCF                     u5775:
 12321     1FCF  36A4               	lsrf	??_Lcd_Set_Cursor,f
 12322     1FD0  0B89               	decfsz	9,f
 12323     1FD1  2FCF               	goto	u5775
 12324     1FD2  0824               	movf	??_Lcd_Set_Cursor,w
 12325     1FD3  00A6               	movwf	Lcd_Set_Cursor@z
 12326     1FD4                     l4860:
 12327                           
 12328                           ;lcd.c: 49:         y = temp & 0x0F;
 12329     1FD4  0828               	movf	Lcd_Set_Cursor@temp,w
 12330     1FD5  390F               	andlw	15
 12331     1FD6  00A7               	movwf	Lcd_Set_Cursor@y
 12332     1FD7                     l4862:
 12333                           
 12334                           ;lcd.c: 50:         Lcd_Cmd(z);
 12335     1FD7  0826               	movf	Lcd_Set_Cursor@z,w
 12336     1FD8  319A  2228  319F   	fcall	_Lcd_Cmd
 12337     1FDB                     l4864:
 12338                           
 12339                           ;lcd.c: 51:         Lcd_Cmd(y);
 12340     1FDB  0020               	movlb	0	; select bank0
 12341     1FDC  0827               	movf	Lcd_Set_Cursor@y,w
 12342     1FDD  319A  2228  319F   	fcall	_Lcd_Cmd
 12343                           
 12344                           ;lcd.c: 52:     }
 12345     1FE0  2FFF               	goto	l405
 12346     1FE1                     l4866:
 12347     1FE1  3004               	movlw	4
 12348     1FE2  0625               	xorwf	Lcd_Set_Cursor@a,w
 12349     1FE3  1D03               	btfss	3,2
 12350     1FE4  2FE6               	goto	u5781
 12351     1FE5  2FE7               	goto	u5780
 12352     1FE6                     u5781:
 12353     1FE6  2FFF               	goto	l401
 12354     1FE7                     u5780:
 12355     1FE7                     l4868:
 12356                           
 12357                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
 12358     1FE7  0823               	movf	Lcd_Set_Cursor@b,w
 12359     1FE8  3ED3               	addlw	211
 12360     1FE9  00A8               	movwf	Lcd_Set_Cursor@temp
 12361                           
 12362                           ;lcd.c: 56:         z = temp>>4;
 12363     1FEA  0828               	movf	Lcd_Set_Cursor@temp,w
 12364     1FEB  00A4               	movwf	??_Lcd_Set_Cursor
 12365     1FEC  3004               	movlw	4
 12366     1FED                     u5795:
 12367     1FED  36A4               	lsrf	??_Lcd_Set_Cursor,f
 12368     1FEE  0B89               	decfsz	9,f
 12369     1FEF  2FED               	goto	u5795
 12370     1FF0  0824               	movf	??_Lcd_Set_Cursor,w
 12371     1FF1  00A6               	movwf	Lcd_Set_Cursor@z
 12372     1FF2                     l4870:
 12373                           
 12374                           ;lcd.c: 57:         y = temp & 0x0F;
 12375     1FF2  0828               	movf	Lcd_Set_Cursor@temp,w
 12376     1FF3  390F               	andlw	15
 12377     1FF4  00A7               	movwf	Lcd_Set_Cursor@y
 12378     1FF5                     l4872:
 12379                           
 12380                           ;lcd.c: 58:         Lcd_Cmd(z);
 12381     1FF5  0826               	movf	Lcd_Set_Cursor@z,w
 12382     1FF6  319A  2228  319F   	fcall	_Lcd_Cmd
 12383     1FF9                     l4874:
 12384                           
 12385                           ;lcd.c: 59:         Lcd_Cmd(y);
 12386     1FF9  0020               	movlb	0	; select bank0
 12387     1FFA  0827               	movf	Lcd_Set_Cursor@y,w
 12388     1FFB  319A  2228  319F   	fcall	_Lcd_Cmd
 12389     1FFE  2FFF               	goto	l405
 12390     1FFF                     l401:
 12391     1FFF                     l405:
 12392     1FFF  0008               	return
 12393     2000                     __end_of_Lcd_Set_Cursor:
 12394                           
 12395                           	psect	text33
 12396     1CE1                     __ptext33:	
 12397 ;; *************** function _Lcd_Init *****************
 12398 ;; Defined at:
 12399 ;;		line 63 in file "lcd.c"
 12400 ;; Parameters:    Size  Location     Type
 12401 ;;		None
 12402 ;; Auto vars:     Size  Location     Type
 12403 ;;		None
 12404 ;; Return value:  Size  Location     Type
 12405 ;;                  1    wreg      void 
 12406 ;; Registers used:
 12407 ;;		wreg, status,2, status,0, pclath, cstack
 12408 ;; Tracked objects:
 12409 ;;		On entry : 0/0
 12410 ;;		On exit  : 0/0
 12411 ;;		Unchanged: 0/0
 12412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12413 ;;      Params:         0       0       0       0       0       0       0       0
 12414 ;;      Locals:         0       0       0       0       0       0       0       0
 12415 ;;      Temps:          0       1       0       0       0       0       0       0
 12416 ;;      Totals:         0       1       0       0       0       0       0       0
 12417 ;;Total ram usage:        1 bytes
 12418 ;; Hardware stack levels used: 1
 12419 ;; Hardware stack levels required when called: 7
 12420 ;; This function calls:
 12421 ;;		_Lcd_Clear
 12422 ;;		_Lcd_Cmd
 12423 ;;		_Lcd_Port
 12424 ;; This function is called by:
 12425 ;;		_main
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429     1CE1                     _Lcd_Init:	
 12430                           ;psect for function _Lcd_Init
 12431                           
 12432     1CE1                     l4824:	
 12433                           ;incstack = 0
 12434                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 12435                           
 12436                           
 12437                           ;lcd.c: 65:  TRISCbits.TRISC1 = 0;
 12438     1CE1  0021               	movlb	1	; select bank1
 12439     1CE2  108E               	bcf	14,1	;volatile
 12440                           
 12441                           ;lcd.c: 66:  TRISCbits.TRISC0 = 0;
 12442     1CE3  100E               	bcf	14,0	;volatile
 12443                           
 12444                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
 12445     1CE4  120F               	bcf	15,4	;volatile
 12446                           
 12447                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
 12448     1CE5  128F               	bcf	15,5	;volatile
 12449                           
 12450                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
 12451     1CE6  130F               	bcf	15,6	;volatile
 12452                           
 12453                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
 12454     1CE7  138F               	bcf	15,7	;volatile
 12455     1CE8                     l4826:
 12456                           
 12457                           ;lcd.c: 71:     Lcd_Port(0x00);
 12458     1CE8  3000               	movlw	0
 12459     1CE9  319C  240D  319C   	fcall	_Lcd_Port
 12460     1CEC                     l4828:
 12461                           
 12462                           ;lcd.c: 72:     _delay((unsigned long)((20)*(4000000/4000.0)));
 12463     1CEC  301A               	movlw	26
 12464     1CED  0020               	movlb	0	; select bank0
 12465     1CEE  00A3               	movwf	??_Lcd_Init
 12466     1CEF  30F8               	movlw	248
 12467     1CF0                     u6667:
 12468     1CF0  0B89               	decfsz	9,f
 12469     1CF1  2CF0               	goto	u6667
 12470     1CF2  0BA3               	decfsz	??_Lcd_Init,f
 12471     1CF3  2CF0               	goto	u6667
 12472     1CF4  0000               	nop
 12473     1CF5                     l4830:
 12474                           
 12475                           ;lcd.c: 73:     Lcd_Cmd(0x03);
 12476     1CF5  3003               	movlw	3
 12477     1CF6  319A  2228  319C   	fcall	_Lcd_Cmd
 12478                           
 12479                           ;lcd.c: 74:     _delay((unsigned long)((5)*(4000000/4000.0)));
 12480     1CF9  3007               	movlw	7
 12481     1CFA  0020               	movlb	0	; select bank0
 12482     1CFB  00A3               	movwf	??_Lcd_Init
 12483     1CFC  307D               	movlw	125
 12484     1CFD                     u6677:
 12485     1CFD  0B89               	decfsz	9,f
 12486     1CFE  2CFD               	goto	u6677
 12487     1CFF  0BA3               	decfsz	??_Lcd_Init,f
 12488     1D00  2CFD               	goto	u6677
 12489     1D01                     l4832:
 12490                           
 12491                           ;lcd.c: 75:     Lcd_Cmd(0x03);
 12492     1D01  3003               	movlw	3
 12493     1D02  319A  2228  319C   	fcall	_Lcd_Cmd
 12494     1D05                     l4834:
 12495                           
 12496                           ;lcd.c: 76:     _delay((unsigned long)((11)*(4000000/4000.0)));
 12497     1D05  300F               	movlw	15
 12498     1D06  0020               	movlb	0	; select bank0
 12499     1D07  00A3               	movwf	??_Lcd_Init
 12500     1D08  3047               	movlw	71
 12501     1D09                     u6687:
 12502     1D09  0B89               	decfsz	9,f
 12503     1D0A  2D09               	goto	u6687
 12504     1D0B  0BA3               	decfsz	??_Lcd_Init,f
 12505     1D0C  2D09               	goto	u6687
 12506     1D0D  3200               	nop2
 12507                           
 12508                           ;lcd.c: 77:     Lcd_Cmd(0x03);
 12509     1D0E  3003               	movlw	3
 12510     1D0F  319A  2228  319C   	fcall	_Lcd_Cmd
 12511                           
 12512                           ;lcd.c: 78:     Lcd_Cmd(0x02);
 12513     1D12  3002               	movlw	2
 12514     1D13  319A  2228  319C   	fcall	_Lcd_Cmd
 12515                           
 12516                           ;lcd.c: 79:     Lcd_Cmd(0x02);
 12517     1D16  3002               	movlw	2
 12518     1D17  319A  2228  319C   	fcall	_Lcd_Cmd
 12519                           
 12520                           ;lcd.c: 80:     Lcd_Cmd(0x08);
 12521     1D1A  3008               	movlw	8
 12522     1D1B  319A  2228  319C   	fcall	_Lcd_Cmd
 12523                           
 12524                           ;lcd.c: 81:     Lcd_Cmd(0x00);
 12525     1D1E  3000               	movlw	0
 12526     1D1F  319A  2228  319C   	fcall	_Lcd_Cmd
 12527                           
 12528                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
 12529     1D22  300C               	movlw	12
 12530     1D23  319A  2228  319C   	fcall	_Lcd_Cmd
 12531                           
 12532                           ;lcd.c: 83:     Lcd_Cmd(0x00);
 12533     1D26  3000               	movlw	0
 12534     1D27  319A  2228  319C   	fcall	_Lcd_Cmd
 12535                           
 12536                           ;lcd.c: 84:     Lcd_Cmd(0x06);
 12537     1D2A  3006               	movlw	6
 12538     1D2B  319A  2228  319C   	fcall	_Lcd_Cmd
 12539                           
 12540                           ;lcd.c: 85:     Lcd_Clear();
 12541     1D2E  3199  21CA  319C   	fcall	_Lcd_Clear
 12542     1D31                     l408:
 12543     1D31  0008               	return
 12544     1D32                     __end_of_Lcd_Init:
 12545                           
 12546                           	psect	text34
 12547     19CA                     __ptext34:	
 12548 ;; *************** function _Lcd_Clear *****************
 12549 ;; Defined at:
 12550 ;;		line 20 in file "lcd.c"
 12551 ;; Parameters:    Size  Location     Type
 12552 ;;		None
 12553 ;; Auto vars:     Size  Location     Type
 12554 ;;		None
 12555 ;; Return value:  Size  Location     Type
 12556 ;;                  1    wreg      void 
 12557 ;; Registers used:
 12558 ;;		wreg, status,2, status,0, pclath, cstack
 12559 ;; Tracked objects:
 12560 ;;		On entry : 0/0
 12561 ;;		On exit  : 0/0
 12562 ;;		Unchanged: 0/0
 12563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12564 ;;      Params:         0       0       0       0       0       0       0       0
 12565 ;;      Locals:         0       0       0       0       0       0       0       0
 12566 ;;      Temps:          0       0       0       0       0       0       0       0
 12567 ;;      Totals:         0       0       0       0       0       0       0       0
 12568 ;;Total ram usage:        0 bytes
 12569 ;; Hardware stack levels used: 1
 12570 ;; Hardware stack levels required when called: 6
 12571 ;; This function calls:
 12572 ;;		_Lcd_Cmd
 12573 ;; This function is called by:
 12574 ;;		_main
 12575 ;;		_Lcd_Init
 12576 ;; This function uses a non-reentrant model
 12577 ;;
 12578                           
 12579     19CA                     _Lcd_Clear:	
 12580                           ;psect for function _Lcd_Clear
 12581                           
 12582     19CA                     l4730:	
 12583                           ;incstack = 0
 12584                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 12585                           
 12586                           
 12587                           ;lcd.c: 22:     Lcd_Cmd(0);
 12588     19CA  3000               	movlw	0
 12589     19CB  319A  2228  3199   	fcall	_Lcd_Cmd
 12590                           
 12591                           ;lcd.c: 23:     Lcd_Cmd(1);
 12592     19CE  3001               	movlw	1
 12593     19CF  319A  2228  3199   	fcall	_Lcd_Cmd
 12594     19D2                     l395:
 12595     19D2  0008               	return
 12596     19D3                     __end_of_Lcd_Clear:
 12597                           
 12598                           	psect	text35
 12599     1A28                     __ptext35:	
 12600 ;; *************** function _Lcd_Cmd *****************
 12601 ;; Defined at:
 12602 ;;		line 11 in file "lcd.c"
 12603 ;; Parameters:    Size  Location     Type
 12604 ;;  a               1    wreg     unsigned char 
 12605 ;; Auto vars:     Size  Location     Type
 12606 ;;  a               1    2[BANK0 ] unsigned char 
 12607 ;; Return value:  Size  Location     Type
 12608 ;;                  1    wreg      void 
 12609 ;; Registers used:
 12610 ;;		wreg, status,2, status,0, pclath, cstack
 12611 ;; Tracked objects:
 12612 ;;		On entry : 0/0
 12613 ;;		On exit  : 0/0
 12614 ;;		Unchanged: 0/0
 12615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12616 ;;      Params:         0       0       0       0       0       0       0       0
 12617 ;;      Locals:         0       1       0       0       0       0       0       0
 12618 ;;      Temps:          0       1       0       0       0       0       0       0
 12619 ;;      Totals:         0       2       0       0       0       0       0       0
 12620 ;;Total ram usage:        2 bytes
 12621 ;; Hardware stack levels used: 1
 12622 ;; Hardware stack levels required when called: 5
 12623 ;; This function calls:
 12624 ;;		_Lcd_Port
 12625 ;; This function is called by:
 12626 ;;		_Lcd_Clear
 12627 ;;		_Lcd_Set_Cursor
 12628 ;;		_Lcd_Init
 12629 ;;		_Lcd_Shift_Right
 12630 ;;		_Lcd_Shift_Left
 12631 ;;		_Lcd_Blink
 12632 ;;		_Lcd_NoBlink
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636     1A28                     _Lcd_Cmd:	
 12637                           ;psect for function _Lcd_Cmd
 12638                           
 12639                           
 12640                           ;incstack = 0
 12641                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12642                           ;Lcd_Cmd@a stored from wreg
 12643     1A28  0020               	movlb	0	; select bank0
 12644     1A29  00A2               	movwf	Lcd_Cmd@a
 12645     1A2A                     l4606:
 12646                           
 12647                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATCbits.LATC1 = 0;
 12648     1A2A  0022               	movlb	2	; select bank2
 12649     1A2B  108E               	bcf	14,1	;volatile
 12650     1A2C                     l4608:
 12651                           
 12652                           ;lcd.c: 14:     Lcd_Port(a);
 12653     1A2C  0020               	movlb	0	; select bank0
 12654     1A2D  0822               	movf	Lcd_Cmd@a,w
 12655     1A2E  319C  240D  319A   	fcall	_Lcd_Port
 12656     1A31                     l4610:
 12657                           
 12658                           ;lcd.c: 15:     LATCbits.LATC0 = 1;
 12659     1A31  0022               	movlb	2	; select bank2
 12660     1A32  140E               	bsf	14,0	;volatile
 12661     1A33                     l4612:
 12662                           
 12663                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
 12664     1A33  3006               	movlw	6
 12665     1A34  0020               	movlb	0	; select bank0
 12666     1A35  00A1               	movwf	??_Lcd_Cmd
 12667     1A36  3030               	movlw	48
 12668     1A37                     u6697:
 12669     1A37  0B89               	decfsz	9,f
 12670     1A38  2A37               	goto	u6697
 12671     1A39  0BA1               	decfsz	??_Lcd_Cmd,f
 12672     1A3A  2A37               	goto	u6697
 12673     1A3B  0000               	nop
 12674     1A3C                     l4614:
 12675                           
 12676                           ;lcd.c: 17:     LATCbits.LATC0 = 0;
 12677     1A3C  0022               	movlb	2	; select bank2
 12678     1A3D  100E               	bcf	14,0	;volatile
 12679     1A3E                     l392:
 12680     1A3E  0008               	return
 12681     1A3F                     __end_of_Lcd_Cmd:
 12682                           
 12683                           	psect	text36
 12684     1C0D                     __ptext36:	
 12685 ;; *************** function _Lcd_Port *****************
 12686 ;; Defined at:
 12687 ;;		line 3 in file "lcd.c"
 12688 ;; Parameters:    Size  Location     Type
 12689 ;;  a               1    wreg     unsigned char 
 12690 ;; Auto vars:     Size  Location     Type
 12691 ;;  a               1    0[BANK0 ] unsigned char 
 12692 ;; Return value:  Size  Location     Type
 12693 ;;                  1    wreg      void 
 12694 ;; Registers used:
 12695 ;;		wreg
 12696 ;; Tracked objects:
 12697 ;;		On entry : 0/0
 12698 ;;		On exit  : 0/0
 12699 ;;		Unchanged: 0/0
 12700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12701 ;;      Params:         0       0       0       0       0       0       0       0
 12702 ;;      Locals:         0       1       0       0       0       0       0       0
 12703 ;;      Temps:          0       0       0       0       0       0       0       0
 12704 ;;      Totals:         0       1       0       0       0       0       0       0
 12705 ;;Total ram usage:        1 bytes
 12706 ;; Hardware stack levels used: 1
 12707 ;; Hardware stack levels required when called: 4
 12708 ;; This function calls:
 12709 ;;		Nothing
 12710 ;; This function is called by:
 12711 ;;		_Lcd_Cmd
 12712 ;;		_Lcd_Init
 12713 ;;		_Lcd_Write_Char
 12714 ;; This function uses a non-reentrant model
 12715 ;;
 12716                           
 12717     1C0D                     _Lcd_Port:	
 12718                           ;psect for function _Lcd_Port
 12719                           
 12720                           
 12721                           ;incstack = 0
 12722                           ; Regs used in _Lcd_Port: [wreg]
 12723                           ;Lcd_Port@a stored from wreg
 12724     1C0D  0020               	movlb	0	; select bank0
 12725     1C0E  00A0               	movwf	Lcd_Port@a
 12726     1C0F                     l4304:
 12727                           
 12728                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LATD4 = 1
      +                          ) : (LATDbits.LATD4 = 0);
 12729     1C0F  1C20               	btfss	Lcd_Port@a,0
 12730     1C10  2C12               	goto	u5051
 12731     1C11  2C13               	goto	u5050
 12732     1C12                     u5051:
 12733     1C12  2C16               	goto	l374
 12734     1C13                     u5050:
 12735     1C13                     l4306:
 12736     1C13  0022               	movlb	2	; select bank2
 12737     1C14  160F               	bsf	15,4	;volatile
 12738     1C15  2C18               	goto	l4308
 12739     1C16                     l374:
 12740     1C16  0022               	movlb	2	; select bank2
 12741     1C17  120F               	bcf	15,4	;volatile
 12742     1C18                     l4308:
 12743                           
 12744                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LATD5 = 1) : (LATDbits.LATD5 = 0);
 12745     1C18  0020               	movlb	0	; select bank0
 12746     1C19  1CA0               	btfss	Lcd_Port@a,1
 12747     1C1A  2C1C               	goto	u5061
 12748     1C1B  2C1D               	goto	u5060
 12749     1C1C                     u5061:
 12750     1C1C  2C20               	goto	l378
 12751     1C1D                     u5060:
 12752     1C1D                     l4310:
 12753     1C1D  0022               	movlb	2	; select bank2
 12754     1C1E  168F               	bsf	15,5	;volatile
 12755     1C1F  2C22               	goto	l4312
 12756     1C20                     l378:
 12757     1C20  0022               	movlb	2	; select bank2
 12758     1C21  128F               	bcf	15,5	;volatile
 12759     1C22                     l4312:
 12760                           
 12761                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LATD6 = 1) : (LATDbits.LATD6 = 0);
 12762     1C22  0020               	movlb	0	; select bank0
 12763     1C23  1D20               	btfss	Lcd_Port@a,2
 12764     1C24  2C26               	goto	u5071
 12765     1C25  2C27               	goto	u5070
 12766     1C26                     u5071:
 12767     1C26  2C2A               	goto	l382
 12768     1C27                     u5070:
 12769     1C27                     l4314:
 12770     1C27  0022               	movlb	2	; select bank2
 12771     1C28  170F               	bsf	15,6	;volatile
 12772     1C29  2C2C               	goto	l4316
 12773     1C2A                     l382:
 12774     1C2A  0022               	movlb	2	; select bank2
 12775     1C2B  130F               	bcf	15,6	;volatile
 12776     1C2C                     l4316:
 12777                           
 12778                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LATD7 = 1) : (LATDbits.LATD7 = 0);
 12779     1C2C  0020               	movlb	0	; select bank0
 12780     1C2D  1DA0               	btfss	Lcd_Port@a,3
 12781     1C2E  2C30               	goto	u5081
 12782     1C2F  2C31               	goto	u5080
 12783     1C30                     u5081:
 12784     1C30  2C34               	goto	l386
 12785     1C31                     u5080:
 12786     1C31                     l4318:
 12787     1C31  0022               	movlb	2	; select bank2
 12788     1C32  178F               	bsf	15,7	;volatile
 12789     1C33  2C36               	goto	l389
 12790     1C34                     l386:
 12791     1C34  0022               	movlb	2	; select bank2
 12792     1C35  138F               	bcf	15,7	;volatile
 12793     1C36                     l389:
 12794     1C36  0008               	return
 12795     1C37                     __end_of_Lcd_Port:
 12796                           
 12797                           	psect	text37
 12798     0802                     __ptext37:	
 12799 ;; *************** function _ADC_StartConversion *****************
 12800 ;; Defined at:
 12801 ;;		line 93 in file "mcc_generated_files/adc.c"
 12802 ;; Parameters:    Size  Location     Type
 12803 ;;		None
 12804 ;; Auto vars:     Size  Location     Type
 12805 ;;		None
 12806 ;; Return value:  Size  Location     Type
 12807 ;;                  1    wreg      void 
 12808 ;; Registers used:
 12809 ;;		None
 12810 ;; Tracked objects:
 12811 ;;		On entry : 0/0
 12812 ;;		On exit  : 0/0
 12813 ;;		Unchanged: 0/0
 12814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12815 ;;      Params:         0       0       0       0       0       0       0       0
 12816 ;;      Locals:         0       0       0       0       0       0       0       0
 12817 ;;      Temps:          0       0       0       0       0       0       0       0
 12818 ;;      Totals:         0       0       0       0       0       0       0       0
 12819 ;;Total ram usage:        0 bytes
 12820 ;; Hardware stack levels used: 1
 12821 ;; Hardware stack levels required when called: 4
 12822 ;; This function calls:
 12823 ;;		Nothing
 12824 ;; This function is called by:
 12825 ;;		_main
 12826 ;; This function uses a non-reentrant model
 12827 ;;
 12828                           
 12829     0802                     _ADC_StartConversion:	
 12830                           ;psect for function _ADC_StartConversion
 12831                           
 12832     0802                     l4814:	
 12833                           ;incstack = 0
 12834                           ; Regs used in _ADC_StartConversion: []
 12835                           
 12836                           
 12837                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
 12838     0802  0021               	movlb	1	; select bank1
 12839     0803  149D               	bsf	29,1	;volatile
 12840     0804                     l23:
 12841     0804  0008               	return
 12842     0805                     __end_of_ADC_StartConversion:
 12843                           
 12844                           	psect	text38
 12845     07F9                     __ptext38:	
 12846 ;; *************** function _ADC_IsConversionDone *****************
 12847 ;; Defined at:
 12848 ;;		line 100 in file "mcc_generated_files/adc.c"
 12849 ;; Parameters:    Size  Location     Type
 12850 ;;		None
 12851 ;; Auto vars:     Size  Location     Type
 12852 ;;		None
 12853 ;; Return value:  Size  Location     Type
 12854 ;;                  1    wreg      _Bool 
 12855 ;; Registers used:
 12856 ;;		wreg, status,0
 12857 ;; Tracked objects:
 12858 ;;		On entry : 0/0
 12859 ;;		On exit  : 0/0
 12860 ;;		Unchanged: 0/0
 12861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12862 ;;      Params:         0       0       0       0       0       0       0       0
 12863 ;;      Locals:         0       0       0       0       0       0       0       0
 12864 ;;      Temps:          0       0       0       0       0       0       0       0
 12865 ;;      Totals:         0       0       0       0       0       0       0       0
 12866 ;;Total ram usage:        0 bytes
 12867 ;; Hardware stack levels used: 1
 12868 ;; Hardware stack levels required when called: 4
 12869 ;; This function calls:
 12870 ;;		Nothing
 12871 ;; This function is called by:
 12872 ;;		_main
 12873 ;; This function uses a non-reentrant model
 12874 ;;
 12875                           
 12876     07F9                     _ADC_IsConversionDone:	
 12877                           ;psect for function _ADC_IsConversionDone
 12878                           
 12879     07F9                     l4816:	
 12880                           ;incstack = 0
 12881                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
 12882                           
 12883                           
 12884                           ;mcc_generated_files/adc.c: 103:    return ((_Bool)(!ADCON0bits.GO_nDONE));
 12885     07F9  1003               	clrc
 12886     07FA  0021               	movlb	1	; select bank1
 12887     07FB  1C9D               	btfss	29,1	;volatile
 12888     07FC  1403               	setc
 12889     07FD  3000               	movlw	0
 12890     07FE  3D09               	addwfc	9,w
 12891     07FF                     l26:
 12892     07FF  0008               	return
 12893     0800                     __end_of_ADC_IsConversionDone:
 12894                           
 12895                           	psect	text39
 12896     19A7                     __ptext39:	
 12897 ;; *************** function _ADC_Initialize *****************
 12898 ;; Defined at:
 12899 ;;		line 67 in file "mcc_generated_files/adc.c"
 12900 ;; Parameters:    Size  Location     Type
 12901 ;;		None
 12902 ;; Auto vars:     Size  Location     Type
 12903 ;;		None
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  1    wreg      void 
 12906 ;; Registers used:
 12907 ;;		wreg, status,2
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12913 ;;      Params:         0       0       0       0       0       0       0       0
 12914 ;;      Locals:         0       0       0       0       0       0       0       0
 12915 ;;      Temps:          0       0       0       0       0       0       0       0
 12916 ;;      Totals:         0       0       0       0       0       0       0       0
 12917 ;;Total ram usage:        0 bytes
 12918 ;; Hardware stack levels used: 1
 12919 ;; Hardware stack levels required when called: 4
 12920 ;; This function calls:
 12921 ;;		Nothing
 12922 ;; This function is called by:
 12923 ;;		_main
 12924 ;;		_SYSTEM_Initialize
 12925 ;; This function uses a non-reentrant model
 12926 ;;
 12927                           
 12928     19A7                     _ADC_Initialize:	
 12929                           ;psect for function _ADC_Initialize
 12930                           
 12931     19A7                     l4808:	
 12932                           ;incstack = 0
 12933                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12934                           
 12935                           
 12936                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xC0;
 12937     19A7  30C0               	movlw	192
 12938     19A8  0021               	movlb	1	; select bank1
 12939     19A9  009E               	movwf	30	;volatile
 12940     19AA                     l4810:
 12941                           
 12942                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
 12943     19AA  019B               	clrf	27	;volatile
 12944     19AB                     l4812:
 12945                           
 12946                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
 12947     19AB  019C               	clrf	28	;volatile
 12948                           
 12949                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
 12950     19AC  3001               	movlw	1
 12951     19AD  009D               	movwf	29	;volatile
 12952     19AE                     l17:
 12953     19AE  0008               	return
 12954     19AF                     __end_of_ADC_Initialize:
 12955                           
 12956                           	psect	text40
 12957     19C1                     __ptext40:	
 12958 ;; *************** function _ADC_GetConversionResult *****************
 12959 ;; Defined at:
 12960 ;;		line 106 in file "mcc_generated_files/adc.c"
 12961 ;; Parameters:    Size  Location     Type
 12962 ;;		None
 12963 ;; Auto vars:     Size  Location     Type
 12964 ;;		None
 12965 ;; Return value:  Size  Location     Type
 12966 ;;                  2    0[BANK0 ] unsigned short 
 12967 ;; Registers used:
 12968 ;;		wreg
 12969 ;; Tracked objects:
 12970 ;;		On entry : 0/0
 12971 ;;		On exit  : 0/0
 12972 ;;		Unchanged: 0/0
 12973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12974 ;;      Params:         0       2       0       0       0       0       0       0
 12975 ;;      Locals:         0       0       0       0       0       0       0       0
 12976 ;;      Temps:          0       0       0       0       0       0       0       0
 12977 ;;      Totals:         0       2       0       0       0       0       0       0
 12978 ;;Total ram usage:        2 bytes
 12979 ;; Hardware stack levels used: 1
 12980 ;; Hardware stack levels required when called: 4
 12981 ;; This function calls:
 12982 ;;		Nothing
 12983 ;; This function is called by:
 12984 ;;		_main
 12985 ;; This function uses a non-reentrant model
 12986 ;;
 12987                           
 12988     19C1                     _ADC_GetConversionResult:	
 12989                           ;psect for function _ADC_GetConversionResult
 12990                           
 12991     19C1                     l4820:	
 12992                           ;incstack = 0
 12993                           ; Regs used in _ADC_GetConversionResult: [wreg]
 12994                           
 12995                           
 12996                           ;mcc_generated_files/adc.c: 109:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12997     19C1  0021               	movlb	1	; select bank1
 12998     19C2  081C               	movf	28,w	;volatile
 12999     19C3  0020               	movlb	0	; select bank0
 13000     19C4  00A1               	movwf	?_ADC_GetConversionResult+1
 13001     19C5  0021               	movlb	1	; select bank1
 13002     19C6  081B               	movf	27,w	;volatile
 13003     19C7  0020               	movlb	0	; select bank0
 13004     19C8  00A0               	movwf	?_ADC_GetConversionResult
 13005     19C9                     l29:
 13006     19C9  0008               	return
 13007     19CA                     __end_of_ADC_GetConversionResult:
 13008                           
 13009                           	psect	intentry
 13010     0004                     __pintentry:	
 13011 ;; *************** function _IOC *****************
 13012 ;; Defined at:
 13013 ;;		line 160 in file "main.c"
 13014 ;; Parameters:    Size  Location     Type
 13015 ;;		None
 13016 ;; Auto vars:     Size  Location     Type
 13017 ;;		None
 13018 ;; Return value:  Size  Location     Type
 13019 ;;                  1    wreg      void 
 13020 ;; Registers used:
 13021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13022 ;; Tracked objects:
 13023 ;;		On entry : 0/0
 13024 ;;		On exit  : 0/0
 13025 ;;		Unchanged: 0/0
 13026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13027 ;;      Params:         0       0       0       0       0       0       0       0
 13028 ;;      Locals:         0       0       0       0       0       0       0       0
 13029 ;;      Temps:          2       0       0       0       0       0       0       0
 13030 ;;      Totals:         2       0       0       0       0       0       0       0
 13031 ;;Total ram usage:        2 bytes
 13032 ;; Hardware stack levels used: 1
 13033 ;; Hardware stack levels required when called: 3
 13034 ;; This function calls:
 13035 ;;		_Escribir_Clave
 13036 ;;		_Keypad_Get_Char
 13037 ;;		_Keypad_Init
 13038 ;;		_Leer_Clave
 13039 ;;		_strcmp
 13040 ;;		i1_Lcd_Clear
 13041 ;;		i1_Lcd_Set_Cursor
 13042 ;;		i1_Lcd_Write_Char
 13043 ;;		i1_Lcd_Write_String
 13044 ;; This function is called by:
 13045 ;;		Interrupt level 1
 13046 ;; This function uses a non-reentrant model
 13047 ;;
 13048                           
 13049     0004                     _IOC:
 13050                           
 13051                           ;incstack = 0
 13052     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13053                           
 13054                           ; Regs used in _IOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13055     0005  3180               	pagesel	$
 13056     0006                     i1l5236:
 13057                           
 13058                           ;main.c: 161:     Keypad_Init();
 13059     0006  3199  21AF  3180   	fcall	_Keypad_Init
 13060     0009                     i1l5238:
 13061                           
 13062                           ;main.c: 162:     Lcd_Clear();
 13063     0009  3199  21B8  3180   	fcall	i1_Lcd_Clear
 13064     000C                     i1l5240:
 13065                           
 13066                           ;main.c: 163:     LATAbits.LATA3 = 0;
 13067     000C  0022               	movlb	2	; select bank2
 13068     000D  118C               	bcf	12,3	;volatile
 13069                           
 13070                           ;main.c: 164:     _delay((unsigned long)((500)*(4000000/4000.0)));
 13071     000E  3003               	movlw	3
 13072     000F  00FB               	movwf	??_IOC+1
 13073     0010  308A               	movlw	138
 13074     0011  00FA               	movwf	??_IOC
 13075     0012  3056               	movlw	86
 13076     0013                     u670_27:
 13077     0013  0B89               	decfsz	9,f
 13078     0014  2813               	goto	u670_27
 13079     0015  0BFA               	decfsz	??_IOC,f
 13080     0016  2813               	goto	u670_27
 13081     0017  0BFB               	decfsz	??_IOC+1,f
 13082     0018  2813               	goto	u670_27
 13083                           
 13084                           ;main.c: 166:     while(IOCBF != 0) {
 13085     0019  2A36               	goto	i1l5450
 13086     001A                     i1l5242:
 13087                           
 13088                           ;main.c: 169:                 Lcd_Set_Cursor(1,1);
 13089     001A  01F3               	clrf	i1Lcd_Set_Cursor@b
 13090     001B  0AF3               	incf	i1Lcd_Set_Cursor@b,f
 13091     001C  3001               	movlw	1
 13092     001D  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13093     0020                     i1l5244:
 13094                           
 13095                           ;main.c: 170:                 Lcd_Write_String("1:INGRESAR CLAVE");
 13096     0020  3000               	movlw	low (STR_5| (0+32768))
 13097     0021  00F5               	movwf	i1Lcd_Write_String@a
 13098     0022  3098               	movlw	high (STR_5| (0+32768))
 13099     0023  00F6               	movwf	i1Lcd_Write_String@a+1
 13100     0024  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13101     0027                     i1l5246:
 13102                           
 13103                           ;main.c: 171:                 Lcd_Set_Cursor(2,1);
 13104     0027  01F3               	clrf	i1Lcd_Set_Cursor@b
 13105     0028  0AF3               	incf	i1Lcd_Set_Cursor@b,f
 13106     0029  3002               	movlw	2
 13107     002A  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13108                           
 13109                           ;main.c: 172:                 Lcd_Write_String("2:CAMBIAR CLAVE");
 13110     002D  3011               	movlw	low (STR_6| (0+32768))
 13111     002E  00F5               	movwf	i1Lcd_Write_String@a
 13112     002F  3098               	movlw	high (STR_6| (0+32768))
 13113     0030  00F6               	movwf	i1Lcd_Write_String@a+1
 13114     0031  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13115     0034                     i1l5248:
 13116                           
 13117                           ;main.c: 174:                 tecla = Keypad_Get_Char();
 13118     0034  3186  26B5  3180   	fcall	_Keypad_Get_Char
 13119     0037  00FD               	movwf	_tecla
 13120     0038                     i1l5250:
 13121                           
 13122                           ;main.c: 175:                 if(tecla != 0) {
 13123     0038  087D               	movf	_tecla,w
 13124     0039  1903               	btfsc	3,2
 13125     003A  283C               	goto	u651_21
 13126     003B  283D               	goto	u651_20
 13127     003C                     u651_21:
 13128     003C  2A36               	goto	i1l5450
 13129     003D                     u651_20:
 13130     003D  2849               	goto	i1l5260
 13131     003E                     i1l266:	
 13132                           ;main.c: 177:                         case '1':
 13133                           
 13134                           
 13135                           ;main.c: 178:                             estado = 1;
 13136     003E  0022               	movlb	2	; select bank2
 13137     003F  01B3               	clrf	_estado^(0+256)
 13138     0040  0AB3               	incf	_estado^(0+256),f
 13139                           
 13140                           ;main.c: 179:                             break;
 13141     0041  2859               	goto	i1l5262
 13142     0042                     i1l5254:
 13143                           
 13144                           ;main.c: 181:                             estado = 2;
 13145     0042  3002               	movlw	2
 13146     0043  0022               	movlb	2	; select bank2
 13147     0044  00B3               	movwf	_estado^(0+256)
 13148                           
 13149                           ;main.c: 182:                             break;
 13150     0045  2859               	goto	i1l5262
 13151     0046                     i1l5256:
 13152                           
 13153                           ;main.c: 184:                             estado = 0;
 13154     0046  0022               	movlb	2	; select bank2
 13155     0047  01B3               	clrf	_estado^(0+256)
 13156                           
 13157                           ;main.c: 185:                             break;
 13158     0048  2859               	goto	i1l5262
 13159     0049                     i1l5260:
 13160     0049  087D               	movf	_tecla,w
 13161     004A  00FA               	movwf	??_IOC
 13162     004B  01FB               	clrf	??_IOC+1
 13163                           
 13164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13165                           ; Switch size 1, requested type "simple"
 13166                           ; Number of cases is 1, Range of values is 0 to 0
 13167                           ; switch strategies available:
 13168                           ; Name         Instructions Cycles
 13169                           ; simple_byte            4     3 (average)
 13170                           ; direct_byte            8     6 (fixed)
 13171                           ; jumptable            260     6 (fixed)
 13172                           ;	Chosen strategy is simple_byte
 13173     004C  087B               	movf	??_IOC+1,w
 13174     004D  3A00               	xorlw	0	; case 0
 13175     004E  1903               	skipnz
 13176     004F  2851               	goto	i1l5662
 13177     0050  2846               	goto	i1l5256
 13178     0051                     i1l5662:
 13179                           
 13180                           ; Switch size 1, requested type "simple"
 13181                           ; Number of cases is 2, Range of values is 49 to 50
 13182                           ; switch strategies available:
 13183                           ; Name         Instructions Cycles
 13184                           ; simple_byte            7     4 (average)
 13185                           ; direct_byte           13     9 (fixed)
 13186                           ; jumptable            263     9 (fixed)
 13187                           ;	Chosen strategy is simple_byte
 13188     0051  087A               	movf	??_IOC,w
 13189     0052  3A31               	xorlw	49	; case 49
 13190     0053  1903               	skipnz
 13191     0054  283E               	goto	i1l266
 13192     0055  3A03               	xorlw	3	; case 50
 13193     0056  1903               	skipnz
 13194     0057  2842               	goto	i1l5254
 13195     0058  2846               	goto	i1l5256
 13196     0059                     i1l5262:
 13197                           
 13198                           ;main.c: 187:                     Lcd_Clear();
 13199     0059  3199  21B8  3180   	fcall	i1_Lcd_Clear
 13200     005C  2A36               	goto	i1l5450
 13201     005D                     i1l5264:
 13202                           
 13203                           ;main.c: 191:                 Lcd_Set_Cursor(1,2);
 13204     005D  3002               	movlw	2
 13205     005E  00F3               	movwf	i1Lcd_Set_Cursor@b
 13206     005F  3001               	movlw	1
 13207     0060  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13208     0063                     i1l5266:
 13209                           
 13210                           ;main.c: 192:                 Lcd_Write_String("INGRESAR CLAVE");
 13211     0063  3002               	movlw	low ((STR_5+2)| (0+32768))
 13212     0064  00F5               	movwf	i1Lcd_Write_String@a
 13213     0065  3098               	movlw	high ((STR_5+2)| (0+32768))
 13214     0066  00F6               	movwf	i1Lcd_Write_String@a+1
 13215     0067  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13216                           
 13217                           ;main.c: 194:                 while(cont_key < 4)
 13218     006A  288A               	goto	i1l5280
 13219     006B                     i1l5268:
 13220                           
 13221                           ;main.c: 195:                 {;main.c: 196:                     tecla = Keypad_Get_Char
      +                          ();
 13222     006B  3186  26B5  3180   	fcall	_Keypad_Get_Char
 13223     006E  00FD               	movwf	_tecla
 13224     006F                     i1l5270:
 13225                           
 13226                           ;main.c: 197:                     if(tecla != 0)
 13227     006F  087D               	movf	_tecla,w
 13228     0070  1903               	btfsc	3,2
 13229     0071  2873               	goto	u652_21
 13230     0072  2874               	goto	u652_20
 13231     0073                     u652_21:
 13232     0073  288A               	goto	i1l5280
 13233     0074                     u652_20:
 13234     0074                     i1l5272:
 13235                           
 13236                           ;main.c: 198:                     {;main.c: 199:                         clave[cont_key]
      +                           = tecla;
 13237     0074  087C               	movf	_cont_key,w
 13238     0075  3E39               	addlw	(low (_clave| (0+256)))& (0+255)
 13239     0076  0086               	movwf	6
 13240     0077  3001               	movlw	1	; select bank2/3
 13241     0078  0087               	movwf	7
 13242     0079  087D               	movf	_tecla,w
 13243     007A  0081               	movwf	1
 13244     007B                     i1l5274:
 13245                           
 13246                           ;main.c: 200:                         Lcd_Set_Cursor(2,7+cont_key);
 13247     007B  087C               	movf	_cont_key,w
 13248     007C  3E07               	addlw	7
 13249     007D  00F3               	movwf	i1Lcd_Set_Cursor@b
 13250     007E  3002               	movlw	2
 13251     007F  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13252     0082                     i1l5276:
 13253                           
 13254                           ;main.c: 201:                         Lcd_Write_Char('*');
 13255     0082  302A               	movlw	42
 13256     0083  319B  23BD  3180   	fcall	i1_Lcd_Write_Char
 13257     0086                     i1l5278:
 13258                           
 13259                           ;main.c: 202:                         cont_key++;
 13260     0086  3001               	movlw	1
 13261     0087  00FA               	movwf	??_IOC
 13262     0088  087A               	movf	??_IOC,w
 13263     0089  07FC               	addwf	_cont_key,f
 13264     008A                     i1l5280:
 13265                           
 13266                           ;main.c: 194:                 while(cont_key < 4)
 13267     008A  3004               	movlw	4
 13268     008B  027C               	subwf	_cont_key,w
 13269     008C  1C03               	skipc
 13270     008D  288F               	goto	u653_21
 13271     008E  2890               	goto	u653_20
 13272     008F                     u653_21:
 13273     008F  286B               	goto	i1l5268
 13274     0090                     u653_20:
 13275     0090                     i1l5282:
 13276                           
 13277                           ;main.c: 209:                 WPUB = 0b11111110;
 13278     0090  30FE               	movlw	254
 13279     0091  0024               	movlb	4	; select bank4
 13280     0092  008D               	movwf	13	;volatile
 13281                           
 13282                           ;main.c: 210:                 _delay((unsigned long)((200)*(4000000/4000.0)));
 13283     0093  3002               	movlw	2
 13284     0094  00FB               	movwf	??_IOC+1
 13285     0095  3004               	movlw	4
 13286     0096  00FA               	movwf	??_IOC
 13287     0097  30BA               	movlw	186
 13288     0098                     u671_27:
 13289     0098  0B89               	decfsz	9,f
 13290     0099  2898               	goto	u671_27
 13291     009A  0BFA               	decfsz	??_IOC,f
 13292     009B  2898               	goto	u671_27
 13293     009C  0BFB               	decfsz	??_IOC+1,f
 13294     009D  2898               	goto	u671_27
 13295     009E  3200               	nop2
 13296     009F                     i1l5284:
 13297                           
 13298                           ;main.c: 211:                 Lcd_Clear();
 13299     009F  3199  21B8  3180   	fcall	i1_Lcd_Clear
 13300     00A2                     i1l5286:
 13301                           
 13302                           ;main.c: 212:                 Leer_Clave(clave_enter);
 13303     00A2  3034               	movlw	(low (_clave_enter| (0+256)))& (0+255)
 13304     00A3  319A  223F  3180   	fcall	_Leer_Clave
 13305     00A6                     i1l5288:
 13306                           
 13307                           ;main.c: 213:                 LATAbits.LATA3 = 1;
 13308     00A6  0022               	movlb	2	; select bank2
 13309     00A7  158C               	bsf	12,3	;volatile
 13310     00A8                     i1l5290:
 13311                           
 13312                           ;main.c: 215:                 if(!strcmp(clave, clave_enter))
 13313     00A8  3034               	movlw	(low (_clave_enter| (0+256)))& (0+255)
 13314     00A9  00F0               	movwf	strcmp@r
 13315     00AA  3039               	movlw	(low (_clave| (0+256)))& (0+255)
 13316     00AB  319C  2462  3180   	fcall	_strcmp
 13317     00AE  0870               	movf	?_strcmp,w
 13318     00AF  0471               	iorwf	?_strcmp+1,w
 13319     00B0  1D03               	btfss	3,2
 13320     00B1  28B3               	goto	u654_21
 13321     00B2  28B4               	goto	u654_20
 13322     00B3                     u654_21:
 13323     00B3  28DD               	goto	i1l5304
 13324     00B4                     u654_20:
 13325     00B4                     i1l5292:
 13326                           
 13327                           ;main.c: 216:                 {;main.c: 217:                     Lcd_Set_Cursor(1,6);
 13328     00B4  3006               	movlw	6
 13329     00B5  00F3               	movwf	i1Lcd_Set_Cursor@b
 13330     00B6  3001               	movlw	1
 13331     00B7  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13332     00BA                     i1l5294:
 13333                           
 13334                           ;main.c: 218:                     Lcd_Write_String("ACCESO");
 13335     00BA  3099               	movlw	low (STR_8| (0+32768))
 13336     00BB  00F5               	movwf	i1Lcd_Write_String@a
 13337     00BC  3098               	movlw	high (STR_8| (0+32768))
 13338     00BD  00F6               	movwf	i1Lcd_Write_String@a+1
 13339     00BE  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13340     00C1                     i1l5296:
 13341                           
 13342                           ;main.c: 219:                     Lcd_Set_Cursor(2,5);
 13343     00C1  3005               	movlw	5
 13344     00C2  00F3               	movwf	i1Lcd_Set_Cursor@b
 13345     00C3  3002               	movlw	2
 13346     00C4  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13347                           
 13348                           ;main.c: 220:                     Lcd_Write_String("APROBADO");
 13349     00C7  3080               	movlw	low (STR_9| (0+32768))
 13350     00C8  00F5               	movwf	i1Lcd_Write_String@a
 13351     00C9  3098               	movlw	high (STR_9| (0+32768))
 13352     00CA  00F6               	movwf	i1Lcd_Write_String@a+1
 13353     00CB  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13354     00CE                     i1l5298:
 13355                           
 13356                           ;main.c: 221:                     LATAbits.LATA2 = 0;
 13357     00CE  0022               	movlb	2	; select bank2
 13358     00CF  110C               	bcf	12,2	;volatile
 13359     00D0                     i1l5300:
 13360                           
 13361                           ;main.c: 222:                     LATCbits.LATC5 = 0;
 13362     00D0  128E               	bcf	14,5	;volatile
 13363     00D1                     i1l5302:
 13364                           
 13365                           ;main.c: 223:                     _delay((unsigned long)((10000)*(4000000/4000.0)));
 13366     00D1  3033               	movlw	51
 13367     00D2  00FB               	movwf	??_IOC+1
 13368     00D3  30BB               	movlw	187
 13369     00D4  00FA               	movwf	??_IOC
 13370     00D5  30E0               	movlw	224
 13371     00D6                     u672_27:
 13372     00D6  0B89               	decfsz	9,f
 13373     00D7  28D6               	goto	u672_27
 13374     00D8  0BFA               	decfsz	??_IOC,f
 13375     00D9  28D6               	goto	u672_27
 13376     00DA  0BFB               	decfsz	??_IOC+1,f
 13377     00DB  28D6               	goto	u672_27
 13378                           
 13379                           ;main.c: 224:                 }
 13380     00DC  2907               	goto	i1l5318
 13381     00DD                     i1l5304:
 13382                           
 13383                           ;main.c: 226:                 {;main.c: 227:                     Lcd_Set_Cursor(1,6);
 13384     00DD  3006               	movlw	6
 13385     00DE  00F3               	movwf	i1Lcd_Set_Cursor@b
 13386     00DF  3001               	movlw	1
 13387     00E0  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13388     00E3                     i1l5306:
 13389                           
 13390                           ;main.c: 228:                     Lcd_Write_String("ACCESO");
 13391     00E3  3099               	movlw	low (STR_8| (0+32768))
 13392     00E4  00F5               	movwf	i1Lcd_Write_String@a
 13393     00E5  3098               	movlw	high (STR_8| (0+32768))
 13394     00E6  00F6               	movwf	i1Lcd_Write_String@a+1
 13395     00E7  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13396     00EA                     i1l5308:
 13397                           
 13398                           ;main.c: 229:                     Lcd_Set_Cursor(2,5);
 13399     00EA  3005               	movlw	5
 13400     00EB  00F3               	movwf	i1Lcd_Set_Cursor@b
 13401     00EC  3002               	movlw	2
 13402     00ED  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13403                           
 13404                           ;main.c: 230:                     Lcd_Write_String("DENEGADO");
 13405     00F0  3089               	movlw	low (STR_11| (0+32768))
 13406     00F1  00F5               	movwf	i1Lcd_Write_String@a
 13407     00F2  3098               	movlw	high (STR_11| (0+32768))
 13408     00F3  00F6               	movwf	i1Lcd_Write_String@a+1
 13409     00F4  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13410     00F7                     i1l5310:
 13411                           
 13412                           ;main.c: 231:                     LATAbits.LATA1 = 0;
 13413     00F7  0022               	movlb	2	; select bank2
 13414     00F8  108C               	bcf	12,1	;volatile
 13415     00F9                     i1l5312:
 13416                           
 13417                           ;main.c: 232:                     LATCbits.LATC2 = 1;
 13418     00F9  150E               	bsf	14,2	;volatile
 13419     00FA                     i1l5314:
 13420                           
 13421                           ;main.c: 233:                     LATCbits.LATC5 = 1;
 13422     00FA  168E               	bsf	14,5	;volatile
 13423     00FB                     i1l5316:
 13424                           
 13425                           ;main.c: 234:                     _delay((unsigned long)((5000)*(4000000/4000.0)));
 13426     00FB  301A               	movlw	26
 13427     00FC  00FB               	movwf	??_IOC+1
 13428     00FD  305E               	movlw	94
 13429     00FE  00FA               	movwf	??_IOC
 13430     00FF  306E               	movlw	110
 13431     0100                     u673_27:
 13432     0100  0B89               	decfsz	9,f
 13433     0101  2900               	goto	u673_27
 13434     0102  0BFA               	decfsz	??_IOC,f
 13435     0103  2900               	goto	u673_27
 13436     0104  0BFB               	decfsz	??_IOC+1,f
 13437     0105  2900               	goto	u673_27
 13438     0106  3200               	nop2
 13439     0107                     i1l5318:
 13440                           
 13441                           ;main.c: 236:                 cont_key = 0;
 13442     0107  01FC               	clrf	_cont_key
 13443     0108                     i1l5320:
 13444                           
 13445                           ;main.c: 237:                 estado = 0;
 13446     0108  0022               	movlb	2	; select bank2
 13447     0109  01B3               	clrf	_estado^(0+256)
 13448     010A                     i1l5322:
 13449                           
 13450                           ;main.c: 238:                 Lcd_Clear();
 13451     010A  3199  21B8  3180   	fcall	i1_Lcd_Clear
 13452     010D                     i1l5324:
 13453                           
 13454                           ;main.c: 239:                 LATAbits.LATA2 = 1;
 13455     010D  0022               	movlb	2	; select bank2
 13456     010E  150C               	bsf	12,2	;volatile
 13457     010F                     i1l5326:
 13458                           
 13459                           ;main.c: 240:                 LATAbits.LATA1 = 1;
 13460     010F  148C               	bsf	12,1	;volatile
 13461     0110                     i1l5328:
 13462                           
 13463                           ;main.c: 241:                 LATCbits.LATC2 = 0;
 13464     0110  110E               	bcf	14,2	;volatile
 13465     0111                     i1l5330:
 13466                           
 13467                           ;main.c: 242:                 LATCbits.LATC5 = 1;
 13468     0111  168E               	bsf	14,5	;volatile
 13469     0112                     i1l5332:
 13470                           
 13471                           ;main.c: 245:                 LATBbits.LATB1 = 0;
 13472     0112  108D               	bcf	13,1	;volatile
 13473     0113                     i1l5334:
 13474                           
 13475                           ;main.c: 246:                 LATBbits.LATB2 = 0;
 13476     0113  110D               	bcf	13,2	;volatile
 13477     0114                     i1l5336:
 13478                           
 13479                           ;main.c: 247:                 LATBbits.LATB3 = 0;
 13480     0114  118D               	bcf	13,3	;volatile
 13481     0115                     i1l5338:
 13482                           
 13483                           ;main.c: 250:                 WPUB = 0b00001110;
 13484     0115  300E               	movlw	14
 13485     0116  0024               	movlb	4	; select bank4
 13486     0117  008D               	movwf	13	;volatile
 13487     0118                     i1l5340:
 13488                           
 13489                           ;main.c: 252:                 IOCBF = 0;
 13490     0118  0027               	movlb	7	; select bank7
 13491     0119  0196               	clrf	22	;volatile
 13492                           
 13493                           ;main.c: 253:                 break;
 13494     011A  2A36               	goto	i1l5450
 13495     011B                     i1l5342:
 13496                           
 13497                           ;main.c: 255:                 Lcd_Set_Cursor(1,3);
 13498     011B  3003               	movlw	3
 13499     011C  00F3               	movwf	i1Lcd_Set_Cursor@b
 13500     011D  3001               	movlw	1
 13501     011E  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13502     0121                     i1l5344:
 13503                           
 13504                           ;main.c: 256:                 Lcd_Write_String("CLAVE ACTUAL");
 13505     0121  305C               	movlw	low (STR_12| (0+32768))
 13506     0122  00F5               	movwf	i1Lcd_Write_String@a
 13507     0123  3098               	movlw	high (STR_12| (0+32768))
 13508     0124  00F6               	movwf	i1Lcd_Write_String@a+1
 13509     0125  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13510                           
 13511                           ;main.c: 258:                 while(cont_key < 4)
 13512     0128  2948               	goto	i1l5358
 13513     0129                     i1l5346:
 13514                           
 13515                           ;main.c: 259:                 {;main.c: 260:                     tecla = Keypad_Get_Char
      +                          ();
 13516     0129  3186  26B5  3180   	fcall	_Keypad_Get_Char
 13517     012C  00FD               	movwf	_tecla
 13518     012D                     i1l5348:
 13519                           
 13520                           ;main.c: 261:                     if(tecla != 0)
 13521     012D  087D               	movf	_tecla,w
 13522     012E  1903               	btfsc	3,2
 13523     012F  2931               	goto	u655_21
 13524     0130  2932               	goto	u655_20
 13525     0131                     u655_21:
 13526     0131  2948               	goto	i1l5358
 13527     0132                     u655_20:
 13528     0132                     i1l5350:
 13529                           
 13530                           ;main.c: 262:                     {;main.c: 263:                         clave[cont_key]
      +                           = tecla;
 13531     0132  087C               	movf	_cont_key,w
 13532     0133  3E39               	addlw	(low (_clave| (0+256)))& (0+255)
 13533     0134  0086               	movwf	6
 13534     0135  3001               	movlw	1	; select bank2/3
 13535     0136  0087               	movwf	7
 13536     0137  087D               	movf	_tecla,w
 13537     0138  0081               	movwf	1
 13538     0139                     i1l5352:
 13539                           
 13540                           ;main.c: 264:                         Lcd_Set_Cursor(2,7+cont_key);
 13541     0139  087C               	movf	_cont_key,w
 13542     013A  3E07               	addlw	7
 13543     013B  00F3               	movwf	i1Lcd_Set_Cursor@b
 13544     013C  3002               	movlw	2
 13545     013D  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13546     0140                     i1l5354:
 13547                           
 13548                           ;main.c: 265:                         Lcd_Write_Char('*');
 13549     0140  302A               	movlw	42
 13550     0141  319B  23BD  3180   	fcall	i1_Lcd_Write_Char
 13551     0144                     i1l5356:
 13552                           
 13553                           ;main.c: 266:                         cont_key++;
 13554     0144  3001               	movlw	1
 13555     0145  00FA               	movwf	??_IOC
 13556     0146  087A               	movf	??_IOC,w
 13557     0147  07FC               	addwf	_cont_key,f
 13558     0148                     i1l5358:
 13559                           
 13560                           ;main.c: 258:                 while(cont_key < 4)
 13561     0148  3004               	movlw	4
 13562     0149  027C               	subwf	_cont_key,w
 13563     014A  1C03               	skipc
 13564     014B  294D               	goto	u656_21
 13565     014C  294E               	goto	u656_20
 13566     014D                     u656_21:
 13567     014D  2929               	goto	i1l5346
 13568     014E                     u656_20:
 13569     014E                     i1l5360:
 13570                           
 13571                           ;main.c: 269:                 WPUB = 0b11111110;
 13572     014E  30FE               	movlw	254
 13573     014F  0024               	movlb	4	; select bank4
 13574     0150  008D               	movwf	13	;volatile
 13575                           
 13576                           ;main.c: 270:                 _delay((unsigned long)((200)*(4000000/4000.0)));
 13577     0151  3002               	movlw	2
 13578     0152  00FB               	movwf	??_IOC+1
 13579     0153  3004               	movlw	4
 13580     0154  00FA               	movwf	??_IOC
 13581     0155  30BA               	movlw	186
 13582     0156                     u674_27:
 13583     0156  0B89               	decfsz	9,f
 13584     0157  2956               	goto	u674_27
 13585     0158  0BFA               	decfsz	??_IOC,f
 13586     0159  2956               	goto	u674_27
 13587     015A  0BFB               	decfsz	??_IOC+1,f
 13588     015B  2956               	goto	u674_27
 13589     015C  3200               	nop2
 13590     015D                     i1l5362:
 13591                           
 13592                           ;main.c: 271:                 Lcd_Clear();
 13593     015D  3199  21B8  3180   	fcall	i1_Lcd_Clear
 13594     0160                     i1l5364:
 13595                           
 13596                           ;main.c: 272:                 Leer_Clave(clave_enter);
 13597     0160  3034               	movlw	(low (_clave_enter| (0+256)))& (0+255)
 13598     0161  319A  223F  3180   	fcall	_Leer_Clave
 13599     0164                     i1l5366:
 13600                           
 13601                           ;main.c: 274:                 if(!strcmp(clave, clave_enter))
 13602     0164  3034               	movlw	(low (_clave_enter| (0+256)))& (0+255)
 13603     0165  00F0               	movwf	strcmp@r
 13604     0166  3039               	movlw	(low (_clave| (0+256)))& (0+255)
 13605     0167  319C  2462  3180   	fcall	_strcmp
 13606     016A  0870               	movf	?_strcmp,w
 13607     016B  0471               	iorwf	?_strcmp+1,w
 13608     016C  1D03               	btfss	3,2
 13609     016D  296F               	goto	u657_21
 13610     016E  2970               	goto	u657_20
 13611     016F                     u657_21:
 13612     016F  29E7               	goto	i1l5410
 13613     0170                     u657_20:
 13614     0170                     i1l5368:
 13615                           
 13616                           ;main.c: 275:                 {;main.c: 276:                     Lcd_Set_Cursor(1,3);
 13617     0170  3003               	movlw	3
 13618     0171  00F3               	movwf	i1Lcd_Set_Cursor@b
 13619     0172  3001               	movlw	1
 13620     0173  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13621     0176                     i1l5370:
 13622                           
 13623                           ;main.c: 277:                     Lcd_Write_String("CLAVE NUEVA");
 13624     0176  3069               	movlw	low (STR_13| (0+32768))
 13625     0177  00F5               	movwf	i1Lcd_Write_String@a
 13626     0178  3098               	movlw	high (STR_13| (0+32768))
 13627     0179  00F6               	movwf	i1Lcd_Write_String@a+1
 13628     017A  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13629     017D                     i1l5372:
 13630                           
 13631                           ;main.c: 278:                     cont_key = 0;
 13632     017D  01FC               	clrf	_cont_key
 13633     017E                     i1l5374:
 13634                           
 13635                           ;main.c: 280:                     WPUB = 0b00001110;
 13636     017E  300E               	movlw	14
 13637     017F  0024               	movlb	4	; select bank4
 13638     0180  008D               	movwf	13	;volatile
 13639                           
 13640                           ;main.c: 282:                     while(cont_key < 4) {
 13641     0181  29A1               	goto	i1l5388
 13642     0182                     i1l5376:
 13643                           
 13644                           ;main.c: 283:                         tecla = Keypad_Get_Char();
 13645     0182  3186  26B5  3180   	fcall	_Keypad_Get_Char
 13646     0185  00FD               	movwf	_tecla
 13647     0186                     i1l5378:
 13648                           
 13649                           ;main.c: 284:                         if (tecla != 0) {
 13650     0186  087D               	movf	_tecla,w
 13651     0187  1903               	btfsc	3,2
 13652     0188  298A               	goto	u658_21
 13653     0189  298B               	goto	u658_20
 13654     018A                     u658_21:
 13655     018A  29A1               	goto	i1l5388
 13656     018B                     u658_20:
 13657     018B                     i1l5380:
 13658                           
 13659                           ;main.c: 285:                             clave[cont_key] = tecla;
 13660     018B  087C               	movf	_cont_key,w
 13661     018C  3E39               	addlw	(low (_clave| (0+256)))& (0+255)
 13662     018D  0086               	movwf	6
 13663     018E  3001               	movlw	1	; select bank2/3
 13664     018F  0087               	movwf	7
 13665     0190  087D               	movf	_tecla,w
 13666     0191  0081               	movwf	1
 13667     0192                     i1l5382:
 13668                           
 13669                           ;main.c: 286:                             Lcd_Set_Cursor(2,7+cont_key);
 13670     0192  087C               	movf	_cont_key,w
 13671     0193  3E07               	addlw	7
 13672     0194  00F3               	movwf	i1Lcd_Set_Cursor@b
 13673     0195  3002               	movlw	2
 13674     0196  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13675     0199                     i1l5384:
 13676                           
 13677                           ;main.c: 287:                             Lcd_Write_Char('*');
 13678     0199  302A               	movlw	42
 13679     019A  319B  23BD  3180   	fcall	i1_Lcd_Write_Char
 13680     019D                     i1l5386:
 13681                           
 13682                           ;main.c: 288:                             cont_key++;
 13683     019D  3001               	movlw	1
 13684     019E  00FA               	movwf	??_IOC
 13685     019F  087A               	movf	??_IOC,w
 13686     01A0  07FC               	addwf	_cont_key,f
 13687     01A1                     i1l5388:
 13688                           
 13689                           ;main.c: 282:                     while(cont_key < 4) {
 13690     01A1  3004               	movlw	4
 13691     01A2  027C               	subwf	_cont_key,w
 13692     01A3  1C03               	skipc
 13693     01A4  29A6               	goto	u659_21
 13694     01A5  29A7               	goto	u659_20
 13695     01A6                     u659_21:
 13696     01A6  2982               	goto	i1l5376
 13697     01A7                     u659_20:
 13698     01A7                     i1l5390:
 13699                           
 13700                           ;main.c: 291:                     WPUB = 0b11111110;
 13701     01A7  30FE               	movlw	254
 13702     01A8  0024               	movlb	4	; select bank4
 13703     01A9  008D               	movwf	13	;volatile
 13704                           
 13705                           ;main.c: 292:                     _delay((unsigned long)((200)*(4000000/4000.0)));
 13706     01AA  3002               	movlw	2
 13707     01AB  00FB               	movwf	??_IOC+1
 13708     01AC  3004               	movlw	4
 13709     01AD  00FA               	movwf	??_IOC
 13710     01AE  30BA               	movlw	186
 13711     01AF                     u675_27:
 13712     01AF  0B89               	decfsz	9,f
 13713     01B0  29AF               	goto	u675_27
 13714     01B1  0BFA               	decfsz	??_IOC,f
 13715     01B2  29AF               	goto	u675_27
 13716     01B3  0BFB               	decfsz	??_IOC+1,f
 13717     01B4  29AF               	goto	u675_27
 13718     01B5  3200               	nop2
 13719     01B6                     i1l5392:
 13720                           
 13721                           ;main.c: 293:                     Lcd_Clear();
 13722     01B6  3199  21B8  3180   	fcall	i1_Lcd_Clear
 13723     01B9                     i1l5394:
 13724                           
 13725                           ;main.c: 294:                     Escribir_Clave(clave);
 13726     01B9  3039               	movlw	(low (_clave| (0+256)))& (0+255)
 13727     01BA  3190  2001  3180   	fcall	_Escribir_Clave
 13728     01BD                     i1l5396:
 13729                           
 13730                           ;main.c: 296:                     Lcd_Set_Cursor(1,2);
 13731     01BD  3002               	movlw	2
 13732     01BE  00F3               	movwf	i1Lcd_Set_Cursor@b
 13733     01BF  3001               	movlw	1
 13734     01C0  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13735     01C3                     i1l5398:
 13736                           
 13737                           ;main.c: 297:                     Lcd_Write_String("CLAVE CAMBIADA");
 13738     01C3  3030               	movlw	low (STR_14| (0+32768))
 13739     01C4  00F5               	movwf	i1Lcd_Write_String@a
 13740     01C5  3098               	movlw	high (STR_14| (0+32768))
 13741     01C6  00F6               	movwf	i1Lcd_Write_String@a+1
 13742     01C7  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13743     01CA                     i1l5400:
 13744                           
 13745                           ;main.c: 298:                     Lcd_Set_Cursor(2,2);
 13746     01CA  3002               	movlw	2
 13747     01CB  00F3               	movwf	i1Lcd_Set_Cursor@b
 13748     01CC  3002               	movlw	2
 13749     01CD  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13750     01D0                     i1l5402:
 13751                           
 13752                           ;main.c: 299:                     Lcd_Write_String("CORRECTAMENTE");
 13753     01D0  304E               	movlw	low (STR_15| (0+32768))
 13754     01D1  00F5               	movwf	i1Lcd_Write_String@a
 13755     01D2  3098               	movlw	high (STR_15| (0+32768))
 13756     01D3  00F6               	movwf	i1Lcd_Write_String@a+1
 13757     01D4  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13758     01D7                     i1l5404:
 13759                           
 13760                           ;main.c: 300:                     LATAbits.LATA3 = 1;
 13761     01D7  0022               	movlb	2	; select bank2
 13762     01D8  158C               	bsf	12,3	;volatile
 13763     01D9                     i1l5406:
 13764                           
 13765                           ;main.c: 301:                     LATAbits.LATA2 = 0;
 13766     01D9  110C               	bcf	12,2	;volatile
 13767     01DA                     i1l5408:
 13768                           
 13769                           ;main.c: 302:                     _delay((unsigned long)((4000)*(4000000/4000.0)));
 13770     01DA  3015               	movlw	21
 13771     01DB  00FB               	movwf	??_IOC+1
 13772     01DC  304B               	movlw	75
 13773     01DD  00FA               	movwf	??_IOC
 13774     01DE  30BE               	movlw	190
 13775     01DF                     u676_27:
 13776     01DF  0B89               	decfsz	9,f
 13777     01E0  29DF               	goto	u676_27
 13778     01E1  0BFA               	decfsz	??_IOC,f
 13779     01E2  29DF               	goto	u676_27
 13780     01E3  0BFB               	decfsz	??_IOC+1,f
 13781     01E4  29DF               	goto	u676_27
 13782     01E5  3200               	nop2
 13783                           
 13784                           ;main.c: 303:                 } else {
 13785     01E6  2A10               	goto	i1l5424
 13786     01E7                     i1l5410:
 13787                           
 13788                           ;main.c: 304:                     Lcd_Set_Cursor(1,6);
 13789     01E7  3006               	movlw	6
 13790     01E8  00F3               	movwf	i1Lcd_Set_Cursor@b
 13791     01E9  3001               	movlw	1
 13792     01EA  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13793     01ED                     i1l5412:
 13794                           
 13795                           ;main.c: 305:                     Lcd_Write_String("CLAVE");
 13796     01ED  301B               	movlw	low ((STR_6+10)| (0+32768))
 13797     01EE  00F5               	movwf	i1Lcd_Write_String@a
 13798     01EF  3098               	movlw	high ((STR_6+10)| (0+32768))
 13799     01F0  00F6               	movwf	i1Lcd_Write_String@a+1
 13800     01F1  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13801     01F4                     i1l5414:
 13802                           
 13803                           ;main.c: 306:                     Lcd_Set_Cursor(2,4);
 13804     01F4  3004               	movlw	4
 13805     01F5  00F3               	movwf	i1Lcd_Set_Cursor@b
 13806     01F6  3002               	movlw	2
 13807     01F7  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13808                           
 13809                           ;main.c: 307:                     Lcd_Write_String("INCORRECTA");
 13810     01FA  3075               	movlw	low (STR_17| (0+32768))
 13811     01FB  00F5               	movwf	i1Lcd_Write_String@a
 13812     01FC  3098               	movlw	high (STR_17| (0+32768))
 13813     01FD  00F6               	movwf	i1Lcd_Write_String@a+1
 13814     01FE  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13815     0201                     i1l5416:
 13816                           
 13817                           ;main.c: 308:                     LATAbits.LATA3 = 1;
 13818     0201  0022               	movlb	2	; select bank2
 13819     0202  158C               	bsf	12,3	;volatile
 13820     0203                     i1l5418:
 13821                           
 13822                           ;main.c: 309:                     LATCbits.LATC2 = 1;
 13823     0203  150E               	bsf	14,2	;volatile
 13824     0204                     i1l5420:
 13825                           
 13826                           ;main.c: 310:                     LATAbits.LATA1 = 0;
 13827     0204  108C               	bcf	12,1	;volatile
 13828     0205                     i1l5422:
 13829                           
 13830                           ;main.c: 311:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
 13831     0205  3010               	movlw	16
 13832     0206  00FB               	movwf	??_IOC+1
 13833     0207  3039               	movlw	57
 13834     0208  00FA               	movwf	??_IOC
 13835     0209  300E               	movlw	14
 13836     020A                     u677_27:
 13837     020A  0B89               	decfsz	9,f
 13838     020B  2A0A               	goto	u677_27
 13839     020C  0BFA               	decfsz	??_IOC,f
 13840     020D  2A0A               	goto	u677_27
 13841     020E  0BFB               	decfsz	??_IOC+1,f
 13842     020F  2A0A               	goto	u677_27
 13843     0210                     i1l5424:
 13844                           
 13845                           ;main.c: 313:                 cont_key = 0;
 13846     0210  01FC               	clrf	_cont_key
 13847     0211                     i1l5426:
 13848                           
 13849                           ;main.c: 314:                 estado = 0;
 13850     0211  0022               	movlb	2	; select bank2
 13851     0212  01B3               	clrf	_estado^(0+256)
 13852     0213                     i1l5428:
 13853                           
 13854                           ;main.c: 315:                 Lcd_Clear();
 13855     0213  3199  21B8  3180   	fcall	i1_Lcd_Clear
 13856     0216                     i1l5430:
 13857                           
 13858                           ;main.c: 317:                 LATBbits.LATB1 = 0;
 13859     0216  0022               	movlb	2	; select bank2
 13860     0217  108D               	bcf	13,1	;volatile
 13861     0218                     i1l5432:
 13862                           
 13863                           ;main.c: 318:                 LATBbits.LATB2 = 0;
 13864     0218  110D               	bcf	13,2	;volatile
 13865     0219                     i1l5434:
 13866                           
 13867                           ;main.c: 319:                 LATBbits.LATB3 = 0;
 13868     0219  118D               	bcf	13,3	;volatile
 13869     021A                     i1l5436:
 13870                           
 13871                           ;main.c: 321:                 WPUB = 0b00001110;
 13872     021A  300E               	movlw	14
 13873     021B  0024               	movlb	4	; select bank4
 13874     021C  008D               	movwf	13	;volatile
 13875     021D                     i1l5438:
 13876                           
 13877                           ;main.c: 322:                 LATAbits.LATA1 = 1;
 13878     021D  0022               	movlb	2	; select bank2
 13879     021E  148C               	bsf	12,1	;volatile
 13880     021F                     i1l5440:
 13881                           
 13882                           ;main.c: 323:                 LATAbits.LATA2 = 1;
 13883     021F  150C               	bsf	12,2	;volatile
 13884     0220                     i1l5442:
 13885                           
 13886                           ;main.c: 324:                 LATCbits.LATC2 = 0;
 13887     0220  110E               	bcf	14,2	;volatile
 13888     0221  2918               	goto	i1l5340
 13889     0222                     i1l5448:
 13890     0222  0022               	movlb	2	; select bank2
 13891     0223  0833               	movf	_estado^(0+256),w
 13892     0224  00FA               	movwf	??_IOC
 13893     0225  01FB               	clrf	??_IOC+1
 13894                           
 13895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13896                           ; Switch size 1, requested type "simple"
 13897                           ; Number of cases is 1, Range of values is 0 to 0
 13898                           ; switch strategies available:
 13899                           ; Name         Instructions Cycles
 13900                           ; simple_byte            4     3 (average)
 13901                           ; direct_byte            8     6 (fixed)
 13902                           ; jumptable            260     6 (fixed)
 13903                           ;	Chosen strategy is simple_byte
 13904     0226  087B               	movf	??_IOC+1,w
 13905     0227  3A00               	xorlw	0	; case 0
 13906     0228  1903               	skipnz
 13907     0229  2A2B               	goto	i1l5664
 13908     022A  2A36               	goto	i1l5450
 13909     022B                     i1l5664:
 13910                           
 13911                           ; Switch size 1, requested type "simple"
 13912                           ; Number of cases is 3, Range of values is 0 to 2
 13913                           ; switch strategies available:
 13914                           ; Name         Instructions Cycles
 13915                           ; simple_byte           10     6 (average)
 13916                           ; direct_byte           12     6 (fixed)
 13917                           ; jumptable            260     6 (fixed)
 13918                           ;	Chosen strategy is simple_byte
 13919     022B  087A               	movf	??_IOC,w
 13920     022C  3A00               	xorlw	0	; case 0
 13921     022D  1903               	skipnz
 13922     022E  281A               	goto	i1l5242
 13923     022F  3A01               	xorlw	1	; case 1
 13924     0230  1903               	skipnz
 13925     0231  285D               	goto	i1l5264
 13926     0232  3A03               	xorlw	3	; case 2
 13927     0233  1903               	skipnz
 13928     0234  291B               	goto	i1l5342
 13929     0235  2A36               	goto	i1l5450
 13930     0236                     i1l5450:
 13931                           
 13932                           ;main.c: 166:     while(IOCBF != 0) {
 13933     0236  0027               	movlb	7	; select bank7
 13934     0237  0816               	movf	22,w	;volatile
 13935     0238  1D03               	btfss	3,2
 13936     0239  2A3B               	goto	u660_21
 13937     023A  2A3C               	goto	u660_20
 13938     023B                     u660_21:
 13939     023B  2A22               	goto	i1l5448
 13940     023C                     u660_20:
 13941     023C                     i1l289:
 13942                           
 13943                           ;main.c: 330:     LATAbits.LATA3 = 1;
 13944     023C  0022               	movlb	2	; select bank2
 13945     023D  158C               	bsf	12,3	;volatile
 13946     023E                     i1l5452:
 13947                           
 13948                           ;main.c: 332:     Lcd_Set_Cursor(1,2);
 13949     023E  3002               	movlw	2
 13950     023F  00F3               	movwf	i1Lcd_Set_Cursor@b
 13951     0240  3001               	movlw	1
 13952     0241  319F  2711  3180   	fcall	i1_Lcd_Set_Cursor
 13953     0244                     i1l5454:
 13954                           
 13955                           ;main.c: 333:     Lcd_Write_String("ControlTech CA");
 13956     0244  3021               	movlw	low (STR_1| (0+32768))
 13957     0245  00F5               	movwf	i1Lcd_Write_String@a
 13958     0246  3098               	movlw	high (STR_1| (0+32768))
 13959     0247  00F6               	movwf	i1Lcd_Write_String@a+1
 13960     0248  319A  2274  3180   	fcall	i1_Lcd_Write_String
 13961     024B                     i1l5456:
 13962                           
 13963                           ;main.c: 334:     INTCONbits.IOCIF = 0;
 13964     024B  100B               	bcf	11,0	;volatile
 13965     024C                     i1l290:
 13966     024C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13967     024D  0009               	retfie
 13968     024E                     __end_of_IOC:
 13969                           
 13970                           	psect	text42
 13971     1A74                     __ptext42:	
 13972 ;; *************** function i1_Lcd_Write_String *****************
 13973 ;; Defined at:
 13974 ;;		line 104 in file "lcd.c"
 13975 ;; Parameters:    Size  Location     Type
 13976 ;;  a               2    5[COMMON] PTR const unsigned char 
 13977 ;;		 -> STR_18(15), STR_17(11), STR_16(6), STR_15(14), 
 13978 ;;		 -> STR_14(15), STR_13(12), STR_12(13), STR_11(9), 
 13979 ;;		 -> STR_10(7), STR_9(9), STR_8(7), STR_7(15), 
 13980 ;;		 -> STR_6(16), STR_5(17), STR_4(2), buffer(20), 
 13981 ;;		 -> STR_1(15), 
 13982 ;; Auto vars:     Size  Location     Type
 13983 ;;  i               2    8[COMMON] int 
 13984 ;; Return value:  Size  Location     Type
 13985 ;;                  1    wreg      void 
 13986 ;; Registers used:
 13987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13988 ;; Tracked objects:
 13989 ;;		On entry : 0/0
 13990 ;;		On exit  : 0/0
 13991 ;;		Unchanged: 0/0
 13992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13993 ;;      Params:         2       0       0       0       0       0       0       0
 13994 ;;      Locals:         2       0       0       0       0       0       0       0
 13995 ;;      Temps:          1       0       0       0       0       0       0       0
 13996 ;;      Totals:         5       0       0       0       0       0       0       0
 13997 ;;Total ram usage:        5 bytes
 13998 ;; Hardware stack levels used: 1
 13999 ;; Hardware stack levels required when called: 2
 14000 ;; This function calls:
 14001 ;;		i1_Lcd_Write_Char
 14002 ;; This function is called by:
 14003 ;;		_IOC
 14004 ;; This function uses a non-reentrant model
 14005 ;;
 14006                           
 14007     1A74                     i1_Lcd_Write_String:	
 14008                           ;psect for function i1_Lcd_Write_String
 14009                           
 14010     1A74                     i1l5100:	
 14011                           ;incstack = 0
 14012                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14013                           
 14014                           
 14015                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
 14016     1A74  01F8               	clrf	i1Lcd_Write_String@i
 14017     1A75  01F9               	clrf	i1Lcd_Write_String@i+1
 14018     1A76  2A85               	goto	i1l5106
 14019     1A77                     i1l5102:
 14020                           
 14021                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
 14022     1A77  0875               	movf	i1Lcd_Write_String@a,w
 14023     1A78  0778               	addwf	i1Lcd_Write_String@i,w
 14024     1A79  0084               	movwf	4
 14025     1A7A  0876               	movf	i1Lcd_Write_String@a+1,w
 14026     1A7B  3D79               	addwfc	i1Lcd_Write_String@i+1,w
 14027     1A7C  0085               	movwf	5
 14028     1A7D  0800               	movf	0,w	;code access
 14029     1A7E  319B  23BD  319A   	fcall	i1_Lcd_Write_Char
 14030     1A81                     i1l5104:
 14031     1A81  3001               	movlw	1
 14032     1A82  07F8               	addwf	i1Lcd_Write_String@i,f
 14033     1A83  3000               	movlw	0
 14034     1A84  3DF9               	addwfc	i1Lcd_Write_String@i+1,f
 14035     1A85                     i1l5106:
 14036     1A85  0875               	movf	i1Lcd_Write_String@a,w
 14037     1A86  0778               	addwf	i1Lcd_Write_String@i,w
 14038     1A87  0084               	movwf	4
 14039     1A88  0876               	movf	i1Lcd_Write_String@a+1,w
 14040     1A89  3D79               	addwfc	i1Lcd_Write_String@i+1,w
 14041     1A8A  0085               	movwf	5
 14042     1A8B  0012               	moviw fsr0++
 14043     1A8C  1D03               	btfss	3,2
 14044     1A8D  2A8F               	goto	u631_21
 14045     1A8E  2A90               	goto	u631_20
 14046     1A8F                     u631_21:
 14047     1A8F  2A77               	goto	i1l5102
 14048     1A90                     u631_20:
 14049     1A90                     i1l417:
 14050     1A90  0008               	return
 14051     1A91                     __end_ofi1_Lcd_Write_String:
 14052                           
 14053                           	psect	text43
 14054     1BBD                     __ptext43:	
 14055 ;; *************** function i1_Lcd_Write_Char *****************
 14056 ;; Defined at:
 14057 ;;		line 88 in file "lcd.c"
 14058 ;; Parameters:    Size  Location     Type
 14059 ;;  a               1    wreg     unsigned char 
 14060 ;; Auto vars:     Size  Location     Type
 14061 ;;  a               1    4[COMMON] unsigned char 
 14062 ;;  y               1    3[COMMON] unsigned char 
 14063 ;;  temp            1    2[COMMON] unsigned char 
 14064 ;; Return value:  Size  Location     Type
 14065 ;;                  1    wreg      void 
 14066 ;; Registers used:
 14067 ;;		wreg, status,2, status,0, pclath, cstack
 14068 ;; Tracked objects:
 14069 ;;		On entry : 0/0
 14070 ;;		On exit  : 0/0
 14071 ;;		Unchanged: 0/0
 14072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14073 ;;      Params:         0       0       0       0       0       0       0       0
 14074 ;;      Locals:         3       0       0       0       0       0       0       0
 14075 ;;      Temps:          1       0       0       0       0       0       0       0
 14076 ;;      Totals:         4       0       0       0       0       0       0       0
 14077 ;;Total ram usage:        4 bytes
 14078 ;; Hardware stack levels used: 1
 14079 ;; Hardware stack levels required when called: 1
 14080 ;; This function calls:
 14081 ;;		i1_Lcd_Port
 14082 ;; This function is called by:
 14083 ;;		_IOC
 14084 ;;		i1_Lcd_Write_String
 14085 ;; This function uses a non-reentrant model
 14086 ;;
 14087                           
 14088     1BBD                     i1_Lcd_Write_Char:	
 14089                           ;psect for function i1_Lcd_Write_Char
 14090                           
 14091                           
 14092                           ;incstack = 0
 14093                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 14094                           ;i1Lcd_Write_Char@a stored from wreg
 14095     1BBD  00F4               	movwf	i1Lcd_Write_Char@a
 14096     1BBE                     i1l4788:
 14097                           
 14098                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
 14099     1BBE  0874               	movf	i1Lcd_Write_Char@a,w
 14100     1BBF  390F               	andlw	15
 14101     1BC0  00F2               	movwf	i1Lcd_Write_Char@temp
 14102                           
 14103                           ;lcd.c: 92:     y = a&0xF0;
 14104     1BC1  0874               	movf	i1Lcd_Write_Char@a,w
 14105     1BC2  39F0               	andlw	240
 14106     1BC3  00F3               	movwf	i1Lcd_Write_Char@y
 14107     1BC4                     i1l4790:
 14108                           
 14109                           ;lcd.c: 93:     LATCbits.LATC1 = 1;
 14110     1BC4  0022               	movlb	2	; select bank2
 14111     1BC5  148E               	bsf	14,1	;volatile
 14112     1BC6                     i1l4792:
 14113                           
 14114                           ;lcd.c: 94:     Lcd_Port(y>>4);
 14115     1BC6  0873               	movf	i1Lcd_Write_Char@y,w
 14116     1BC7  00F1               	movwf	??i1_Lcd_Write_Char
 14117     1BC8  3004               	movlw	4
 14118     1BC9                     u571_25:
 14119     1BC9  36F1               	lsrf	??i1_Lcd_Write_Char,f
 14120     1BCA  0B89               	decfsz	9,f
 14121     1BCB  2BC9               	goto	u571_25
 14122     1BCC  0871               	movf	??i1_Lcd_Write_Char,w
 14123     1BCD  319A  22CE  319B   	fcall	i1_Lcd_Port
 14124     1BD0                     i1l4794:
 14125                           
 14126                           ;lcd.c: 95:     LATCbits.LATC0 = 1;
 14127     1BD0  0022               	movlb	2	; select bank2
 14128     1BD1  140E               	bsf	14,0	;volatile
 14129     1BD2                     i1l4796:
 14130                           
 14131                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 14132     1BD2  300D               	movlw	13
 14133     1BD3                     u678_27:
 14134     1BD3  0B89               	decfsz	9,f
 14135     1BD4  2BD3               	goto	u678_27
 14136     1BD5  0000               	nop
 14137     1BD6                     i1l4798:
 14138                           
 14139                           ;lcd.c: 97:     LATCbits.LATC0 = 0;
 14140     1BD6  0022               	movlb	2	; select bank2
 14141     1BD7  100E               	bcf	14,0	;volatile
 14142     1BD8                     i1l4800:
 14143                           
 14144                           ;lcd.c: 98:     Lcd_Port(temp);
 14145     1BD8  0872               	movf	i1Lcd_Write_Char@temp,w
 14146     1BD9  319A  22CE  319B   	fcall	i1_Lcd_Port
 14147     1BDC                     i1l4802:
 14148                           
 14149                           ;lcd.c: 99:     LATCbits.LATC0 = 1;
 14150     1BDC  0022               	movlb	2	; select bank2
 14151     1BDD  140E               	bsf	14,0	;volatile
 14152     1BDE                     i1l4804:
 14153                           
 14154                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 14155     1BDE  300D               	movlw	13
 14156     1BDF                     u679_27:
 14157     1BDF  0B89               	decfsz	9,f
 14158     1BE0  2BDF               	goto	u679_27
 14159     1BE1  0000               	nop
 14160     1BE2                     i1l4806:
 14161                           
 14162                           ;lcd.c: 101:     LATCbits.LATC0 = 0;
 14163     1BE2  0022               	movlb	2	; select bank2
 14164     1BE3  100E               	bcf	14,0	;volatile
 14165     1BE4                     i1l411:
 14166     1BE4  0008               	return
 14167     1BE5                     __end_ofi1_Lcd_Write_Char:
 14168                           
 14169                           	psect	text44
 14170     1F11                     __ptext44:	
 14171 ;; *************** function i1_Lcd_Set_Cursor *****************
 14172 ;; Defined at:
 14173 ;;		line 26 in file "lcd.c"
 14174 ;; Parameters:    Size  Location     Type
 14175 ;;  a               1    wreg     unsigned char 
 14176 ;;  b               1    3[COMMON] unsigned char 
 14177 ;; Auto vars:     Size  Location     Type
 14178 ;;  a               1    5[COMMON] unsigned char 
 14179 ;;  temp            1    8[COMMON] unsigned char 
 14180 ;;  y               1    7[COMMON] unsigned char 
 14181 ;;  z               1    6[COMMON] unsigned char 
 14182 ;; Return value:  Size  Location     Type
 14183 ;;                  1    wreg      void 
 14184 ;; Registers used:
 14185 ;;		wreg, status,2, status,0, pclath, cstack
 14186 ;; Tracked objects:
 14187 ;;		On entry : 0/0
 14188 ;;		On exit  : 0/0
 14189 ;;		Unchanged: 0/0
 14190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14191 ;;      Params:         1       0       0       0       0       0       0       0
 14192 ;;      Locals:         4       0       0       0       0       0       0       0
 14193 ;;      Temps:          1       0       0       0       0       0       0       0
 14194 ;;      Totals:         6       0       0       0       0       0       0       0
 14195 ;;Total ram usage:        6 bytes
 14196 ;; Hardware stack levels used: 1
 14197 ;; Hardware stack levels required when called: 2
 14198 ;; This function calls:
 14199 ;;		i1_Lcd_Cmd
 14200 ;; This function is called by:
 14201 ;;		_IOC
 14202 ;; This function uses a non-reentrant model
 14203 ;;
 14204                           
 14205     1F11                     i1_Lcd_Set_Cursor:	
 14206                           ;psect for function i1_Lcd_Set_Cursor
 14207                           
 14208                           
 14209                           ;incstack = 0
 14210                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 14211                           ;i1Lcd_Set_Cursor@a stored from wreg
 14212     1F11  00F5               	movwf	i1Lcd_Set_Cursor@a
 14213     1F12                     i1l5060:
 14214                           
 14215                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
 14216     1F12  0375               	decf	i1Lcd_Set_Cursor@a,w
 14217     1F13  1D03               	btfss	3,2
 14218     1F14  2F16               	goto	u623_21
 14219     1F15  2F17               	goto	u623_20
 14220     1F16                     u623_21:
 14221     1F16  2F2E               	goto	i1l5070
 14222     1F17                     u623_20:
 14223     1F17                     i1l5062:
 14224                           
 14225                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
 14226     1F17  0873               	movf	i1Lcd_Set_Cursor@b,w
 14227     1F18  3E7F               	addlw	127
 14228     1F19  00F8               	movwf	i1Lcd_Set_Cursor@temp
 14229                           
 14230                           ;lcd.c: 32:         z = temp>>4;
 14231     1F1A  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14232     1F1B  00F4               	movwf	??i1_Lcd_Set_Cursor
 14233     1F1C  3004               	movlw	4
 14234     1F1D                     u624_25:
 14235     1F1D  36F4               	lsrf	??i1_Lcd_Set_Cursor,f
 14236     1F1E  0B89               	decfsz	9,f
 14237     1F1F  2F1D               	goto	u624_25
 14238     1F20  0874               	movf	??i1_Lcd_Set_Cursor,w
 14239     1F21  00F6               	movwf	i1Lcd_Set_Cursor@z
 14240     1F22                     i1l5064:
 14241                           
 14242                           ;lcd.c: 33:         y = temp & 0x0F;
 14243     1F22  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14244     1F23  390F               	andlw	15
 14245     1F24  00F7               	movwf	i1Lcd_Set_Cursor@y
 14246     1F25                     i1l5066:
 14247                           
 14248                           ;lcd.c: 34:         Lcd_Cmd(z);
 14249     1F25  0876               	movf	i1Lcd_Set_Cursor@z,w
 14250     1F26  3199  21FE  319F   	fcall	i1_Lcd_Cmd
 14251     1F29                     i1l5068:
 14252                           
 14253                           ;lcd.c: 35:         Lcd_Cmd(y);
 14254     1F29  0877               	movf	i1Lcd_Set_Cursor@y,w
 14255     1F2A  3199  21FE  319F   	fcall	i1_Lcd_Cmd
 14256                           
 14257                           ;lcd.c: 36:     }
 14258     1F2D  2F85               	goto	i1l405
 14259     1F2E                     i1l5070:
 14260     1F2E  3002               	movlw	2
 14261     1F2F  0675               	xorwf	i1Lcd_Set_Cursor@a,w
 14262     1F30  1D03               	btfss	3,2
 14263     1F31  2F33               	goto	u625_21
 14264     1F32  2F34               	goto	u625_20
 14265     1F33                     u625_21:
 14266     1F33  2F4B               	goto	i1l5080
 14267     1F34                     u625_20:
 14268     1F34                     i1l5072:
 14269                           
 14270                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
 14271     1F34  0873               	movf	i1Lcd_Set_Cursor@b,w
 14272     1F35  3EBF               	addlw	191
 14273     1F36  00F8               	movwf	i1Lcd_Set_Cursor@temp
 14274                           
 14275                           ;lcd.c: 40:         z = temp>>4;
 14276     1F37  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14277     1F38  00F4               	movwf	??i1_Lcd_Set_Cursor
 14278     1F39  3004               	movlw	4
 14279     1F3A                     u626_25:
 14280     1F3A  36F4               	lsrf	??i1_Lcd_Set_Cursor,f
 14281     1F3B  0B89               	decfsz	9,f
 14282     1F3C  2F3A               	goto	u626_25
 14283     1F3D  0874               	movf	??i1_Lcd_Set_Cursor,w
 14284     1F3E  00F6               	movwf	i1Lcd_Set_Cursor@z
 14285     1F3F                     i1l5074:
 14286                           
 14287                           ;lcd.c: 41:         y = temp & 0x0F;
 14288     1F3F  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14289     1F40  390F               	andlw	15
 14290     1F41  00F7               	movwf	i1Lcd_Set_Cursor@y
 14291     1F42                     i1l5076:
 14292                           
 14293                           ;lcd.c: 42:         Lcd_Cmd(z);
 14294     1F42  0876               	movf	i1Lcd_Set_Cursor@z,w
 14295     1F43  3199  21FE  319F   	fcall	i1_Lcd_Cmd
 14296     1F46                     i1l5078:
 14297                           
 14298                           ;lcd.c: 43:         Lcd_Cmd(y);
 14299     1F46  0877               	movf	i1Lcd_Set_Cursor@y,w
 14300     1F47  3199  21FE  319F   	fcall	i1_Lcd_Cmd
 14301                           
 14302                           ;lcd.c: 44:     }
 14303     1F4A  2F85               	goto	i1l405
 14304     1F4B                     i1l5080:
 14305     1F4B  3003               	movlw	3
 14306     1F4C  0675               	xorwf	i1Lcd_Set_Cursor@a,w
 14307     1F4D  1D03               	btfss	3,2
 14308     1F4E  2F50               	goto	u627_21
 14309     1F4F  2F51               	goto	u627_20
 14310     1F50                     u627_21:
 14311     1F50  2F68               	goto	i1l5090
 14312     1F51                     u627_20:
 14313     1F51                     i1l5082:
 14314                           
 14315                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
 14316     1F51  0873               	movf	i1Lcd_Set_Cursor@b,w
 14317     1F52  3E93               	addlw	147
 14318     1F53  00F8               	movwf	i1Lcd_Set_Cursor@temp
 14319                           
 14320                           ;lcd.c: 48:         z = temp>>4;
 14321     1F54  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14322     1F55  00F4               	movwf	??i1_Lcd_Set_Cursor
 14323     1F56  3004               	movlw	4
 14324     1F57                     u628_25:
 14325     1F57  36F4               	lsrf	??i1_Lcd_Set_Cursor,f
 14326     1F58  0B89               	decfsz	9,f
 14327     1F59  2F57               	goto	u628_25
 14328     1F5A  0874               	movf	??i1_Lcd_Set_Cursor,w
 14329     1F5B  00F6               	movwf	i1Lcd_Set_Cursor@z
 14330     1F5C                     i1l5084:
 14331                           
 14332                           ;lcd.c: 49:         y = temp & 0x0F;
 14333     1F5C  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14334     1F5D  390F               	andlw	15
 14335     1F5E  00F7               	movwf	i1Lcd_Set_Cursor@y
 14336     1F5F                     i1l5086:
 14337                           
 14338                           ;lcd.c: 50:         Lcd_Cmd(z);
 14339     1F5F  0876               	movf	i1Lcd_Set_Cursor@z,w
 14340     1F60  3199  21FE  319F   	fcall	i1_Lcd_Cmd
 14341     1F63                     i1l5088:
 14342                           
 14343                           ;lcd.c: 51:         Lcd_Cmd(y);
 14344     1F63  0877               	movf	i1Lcd_Set_Cursor@y,w
 14345     1F64  3199  21FE  319F   	fcall	i1_Lcd_Cmd
 14346                           
 14347                           ;lcd.c: 52:     }
 14348     1F67  2F85               	goto	i1l405
 14349     1F68                     i1l5090:
 14350     1F68  3004               	movlw	4
 14351     1F69  0675               	xorwf	i1Lcd_Set_Cursor@a,w
 14352     1F6A  1D03               	btfss	3,2
 14353     1F6B  2F6D               	goto	u629_21
 14354     1F6C  2F6E               	goto	u629_20
 14355     1F6D                     u629_21:
 14356     1F6D  2F85               	goto	i1l401
 14357     1F6E                     u629_20:
 14358     1F6E                     i1l5092:
 14359                           
 14360                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
 14361     1F6E  0873               	movf	i1Lcd_Set_Cursor@b,w
 14362     1F6F  3ED3               	addlw	211
 14363     1F70  00F8               	movwf	i1Lcd_Set_Cursor@temp
 14364                           
 14365                           ;lcd.c: 56:         z = temp>>4;
 14366     1F71  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14367     1F72  00F4               	movwf	??i1_Lcd_Set_Cursor
 14368     1F73  3004               	movlw	4
 14369     1F74                     u630_25:
 14370     1F74  36F4               	lsrf	??i1_Lcd_Set_Cursor,f
 14371     1F75  0B89               	decfsz	9,f
 14372     1F76  2F74               	goto	u630_25
 14373     1F77  0874               	movf	??i1_Lcd_Set_Cursor,w
 14374     1F78  00F6               	movwf	i1Lcd_Set_Cursor@z
 14375     1F79                     i1l5094:
 14376                           
 14377                           ;lcd.c: 57:         y = temp & 0x0F;
 14378     1F79  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14379     1F7A  390F               	andlw	15
 14380     1F7B  00F7               	movwf	i1Lcd_Set_Cursor@y
 14381     1F7C                     i1l5096:
 14382                           
 14383                           ;lcd.c: 58:         Lcd_Cmd(z);
 14384     1F7C  0876               	movf	i1Lcd_Set_Cursor@z,w
 14385     1F7D  3199  21FE  319F   	fcall	i1_Lcd_Cmd
 14386     1F80                     i1l5098:
 14387                           
 14388                           ;lcd.c: 59:         Lcd_Cmd(y);
 14389     1F80  0877               	movf	i1Lcd_Set_Cursor@y,w
 14390     1F81  3199  21FE  319F   	fcall	i1_Lcd_Cmd
 14391     1F84  2F85               	goto	i1l405
 14392     1F85                     i1l401:
 14393     1F85                     i1l405:
 14394     1F85  0008               	return
 14395     1F86                     __end_ofi1_Lcd_Set_Cursor:
 14396                           
 14397                           	psect	text45
 14398     19B8                     __ptext45:	
 14399 ;; *************** function i1_Lcd_Clear *****************
 14400 ;; Defined at:
 14401 ;;		line 20 in file "lcd.c"
 14402 ;; Parameters:    Size  Location     Type
 14403 ;;		None
 14404 ;; Auto vars:     Size  Location     Type
 14405 ;;		None
 14406 ;; Return value:  Size  Location     Type
 14407 ;;                  1    wreg      void 
 14408 ;; Registers used:
 14409 ;;		wreg, status,2, status,0, pclath, cstack
 14410 ;; Tracked objects:
 14411 ;;		On entry : 0/0
 14412 ;;		On exit  : 0/0
 14413 ;;		Unchanged: 0/0
 14414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14415 ;;      Params:         0       0       0       0       0       0       0       0
 14416 ;;      Locals:         0       0       0       0       0       0       0       0
 14417 ;;      Temps:          0       0       0       0       0       0       0       0
 14418 ;;      Totals:         0       0       0       0       0       0       0       0
 14419 ;;Total ram usage:        0 bytes
 14420 ;; Hardware stack levels used: 1
 14421 ;; Hardware stack levels required when called: 2
 14422 ;; This function calls:
 14423 ;;		i1_Lcd_Cmd
 14424 ;; This function is called by:
 14425 ;;		_IOC
 14426 ;; This function uses a non-reentrant model
 14427 ;;
 14428                           
 14429     19B8                     i1_Lcd_Clear:	
 14430                           ;psect for function i1_Lcd_Clear
 14431                           
 14432     19B8                     i1l5058:	
 14433                           ;incstack = 0
 14434                           ; Regs used in i1_Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 14435                           
 14436                           
 14437                           ;lcd.c: 22:     Lcd_Cmd(0);
 14438     19B8  3000               	movlw	0
 14439     19B9  3199  21FE  3199   	fcall	i1_Lcd_Cmd
 14440                           
 14441                           ;lcd.c: 23:     Lcd_Cmd(1);
 14442     19BC  3001               	movlw	1
 14443     19BD  3199  21FE  3199   	fcall	i1_Lcd_Cmd
 14444     19C0                     i1l395:
 14445     19C0  0008               	return
 14446     19C1                     __end_ofi1_Lcd_Clear:
 14447                           
 14448                           	psect	text46
 14449     19FE                     __ptext46:	
 14450 ;; *************** function i1_Lcd_Cmd *****************
 14451 ;; Defined at:
 14452 ;;		line 11 in file "lcd.c"
 14453 ;; Parameters:    Size  Location     Type
 14454 ;;  a               1    wreg     unsigned char 
 14455 ;; Auto vars:     Size  Location     Type
 14456 ;;  a               1    2[COMMON] unsigned char 
 14457 ;; Return value:  Size  Location     Type
 14458 ;;                  1    wreg      void 
 14459 ;; Registers used:
 14460 ;;		wreg, status,2, status,0, pclath, cstack
 14461 ;; Tracked objects:
 14462 ;;		On entry : 0/0
 14463 ;;		On exit  : 0/0
 14464 ;;		Unchanged: 0/0
 14465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14466 ;;      Params:         0       0       0       0       0       0       0       0
 14467 ;;      Locals:         1       0       0       0       0       0       0       0
 14468 ;;      Temps:          1       0       0       0       0       0       0       0
 14469 ;;      Totals:         2       0       0       0       0       0       0       0
 14470 ;;Total ram usage:        2 bytes
 14471 ;; Hardware stack levels used: 1
 14472 ;; Hardware stack levels required when called: 1
 14473 ;; This function calls:
 14474 ;;		i1_Lcd_Port
 14475 ;; This function is called by:
 14476 ;;		i1_Lcd_Clear
 14477 ;;		i1_Lcd_Set_Cursor
 14478 ;; This function uses a non-reentrant model
 14479 ;;
 14480                           
 14481     19FE                     i1_Lcd_Cmd:	
 14482                           ;psect for function i1_Lcd_Cmd
 14483                           
 14484                           
 14485                           ;incstack = 0
 14486                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 14487                           ;i1Lcd_Cmd@a stored from wreg
 14488     19FE  00F2               	movwf	i1Lcd_Cmd@a
 14489     19FF                     i1l4778:
 14490                           
 14491                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATCbits.LATC1 = 0;
 14492     19FF  0022               	movlb	2	; select bank2
 14493     1A00  108E               	bcf	14,1	;volatile
 14494     1A01                     i1l4780:
 14495                           
 14496                           ;lcd.c: 14:     Lcd_Port(a);
 14497     1A01  0872               	movf	i1Lcd_Cmd@a,w
 14498     1A02  319A  22CE  3199   	fcall	i1_Lcd_Port
 14499     1A05                     i1l4782:
 14500                           
 14501                           ;lcd.c: 15:     LATCbits.LATC0 = 1;
 14502     1A05  0022               	movlb	2	; select bank2
 14503     1A06  140E               	bsf	14,0	;volatile
 14504     1A07                     i1l4784:
 14505                           
 14506                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
 14507     1A07  3006               	movlw	6
 14508     1A08  00F1               	movwf	??i1_Lcd_Cmd
 14509     1A09  3030               	movlw	48
 14510     1A0A                     u680_27:
 14511     1A0A  0B89               	decfsz	9,f
 14512     1A0B  2A0A               	goto	u680_27
 14513     1A0C  0BF1               	decfsz	??i1_Lcd_Cmd,f
 14514     1A0D  2A0A               	goto	u680_27
 14515     1A0E  3200               	nop2
 14516     1A0F                     i1l4786:
 14517                           
 14518                           ;lcd.c: 17:     LATCbits.LATC0 = 0;
 14519     1A0F  0022               	movlb	2	; select bank2
 14520     1A10  100E               	bcf	14,0	;volatile
 14521     1A11                     i1l392:
 14522     1A11  0008               	return
 14523     1A12                     __end_ofi1_Lcd_Cmd:
 14524                           
 14525                           	psect	text47
 14526     1ACE                     __ptext47:	
 14527 ;; *************** function i1_Lcd_Port *****************
 14528 ;; Defined at:
 14529 ;;		line 3 in file "lcd.c"
 14530 ;; Parameters:    Size  Location     Type
 14531 ;;  a               1    wreg     unsigned char 
 14532 ;; Auto vars:     Size  Location     Type
 14533 ;;  a               1    0[COMMON] unsigned char 
 14534 ;; Return value:  Size  Location     Type
 14535 ;;                  1    wreg      void 
 14536 ;; Registers used:
 14537 ;;		wreg
 14538 ;; Tracked objects:
 14539 ;;		On entry : 0/0
 14540 ;;		On exit  : 0/0
 14541 ;;		Unchanged: 0/0
 14542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14543 ;;      Params:         0       0       0       0       0       0       0       0
 14544 ;;      Locals:         1       0       0       0       0       0       0       0
 14545 ;;      Temps:          0       0       0       0       0       0       0       0
 14546 ;;      Totals:         1       0       0       0       0       0       0       0
 14547 ;;Total ram usage:        1 bytes
 14548 ;; Hardware stack levels used: 1
 14549 ;; This function calls:
 14550 ;;		Nothing
 14551 ;; This function is called by:
 14552 ;;		i1_Lcd_Cmd
 14553 ;;		i1_Lcd_Write_Char
 14554 ;; This function uses a non-reentrant model
 14555 ;;
 14556                           
 14557     1ACE                     i1_Lcd_Port:	
 14558                           ;psect for function i1_Lcd_Port
 14559                           
 14560                           
 14561                           ;incstack = 0
 14562                           ; Regs used in i1_Lcd_Port: [wreg]
 14563                           ;i1Lcd_Port@a stored from wreg
 14564     1ACE  00F0               	movwf	i1Lcd_Port@a
 14565     1ACF                     i1l4714:
 14566                           
 14567                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LATD4 = 1
      +                          ) : (LATDbits.LATD4 = 0);
 14568     1ACF  1C70               	btfss	i1Lcd_Port@a,0
 14569     1AD0  2AD2               	goto	u564_21
 14570     1AD1  2AD3               	goto	u564_20
 14571     1AD2                     u564_21:
 14572     1AD2  2AD6               	goto	i1l374
 14573     1AD3                     u564_20:
 14574     1AD3                     i1l4716:
 14575     1AD3  0022               	movlb	2	; select bank2
 14576     1AD4  160F               	bsf	15,4	;volatile
 14577     1AD5  2AD8               	goto	i1l4718
 14578     1AD6                     i1l374:
 14579     1AD6  0022               	movlb	2	; select bank2
 14580     1AD7  120F               	bcf	15,4	;volatile
 14581     1AD8                     i1l4718:
 14582                           
 14583                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LATD5 = 1) : (LATDbits.LATD5 = 0);
 14584     1AD8  1CF0               	btfss	i1Lcd_Port@a,1
 14585     1AD9  2ADB               	goto	u565_21
 14586     1ADA  2ADC               	goto	u565_20
 14587     1ADB                     u565_21:
 14588     1ADB  2ADE               	goto	i1l378
 14589     1ADC                     u565_20:
 14590     1ADC                     i1l4720:
 14591     1ADC  168F               	bsf	15,5	;volatile
 14592     1ADD  2ADF               	goto	i1l4722
 14593     1ADE                     i1l378:
 14594     1ADE  128F               	bcf	15,5	;volatile
 14595     1ADF                     i1l4722:
 14596                           
 14597                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LATD6 = 1) : (LATDbits.LATD6 = 0);
 14598     1ADF  1D70               	btfss	i1Lcd_Port@a,2
 14599     1AE0  2AE2               	goto	u566_21
 14600     1AE1  2AE3               	goto	u566_20
 14601     1AE2                     u566_21:
 14602     1AE2  2AE5               	goto	i1l382
 14603     1AE3                     u566_20:
 14604     1AE3                     i1l4724:
 14605     1AE3  170F               	bsf	15,6	;volatile
 14606     1AE4  2AE6               	goto	i1l4726
 14607     1AE5                     i1l382:
 14608     1AE5  130F               	bcf	15,6	;volatile
 14609     1AE6                     i1l4726:
 14610                           
 14611                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LATD7 = 1) : (LATDbits.LATD7 = 0);
 14612     1AE6  1DF0               	btfss	i1Lcd_Port@a,3
 14613     1AE7  2AE9               	goto	u567_21
 14614     1AE8  2AEA               	goto	u567_20
 14615     1AE9                     u567_21:
 14616     1AE9  2AEC               	goto	i1l386
 14617     1AEA                     u567_20:
 14618     1AEA                     i1l4728:
 14619     1AEA  178F               	bsf	15,7	;volatile
 14620     1AEB  2AED               	goto	i1l389
 14621     1AEC                     i1l386:
 14622     1AEC  138F               	bcf	15,7	;volatile
 14623     1AED                     i1l389:
 14624     1AED  0008               	return
 14625     1AEE                     __end_ofi1_Lcd_Port:
 14626                           
 14627                           	psect	text48
 14628     1C62                     __ptext48:	
 14629 ;; *************** function _strcmp *****************
 14630 ;; Defined at:
 14631 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcmp.c"
 14632 ;; Parameters:    Size  Location     Type
 14633 ;;  l               1    wreg     PTR const unsigned char 
 14634 ;;		 -> clave(5), 
 14635 ;;  r               1    0[COMMON] PTR const unsigned char 
 14636 ;;		 -> clave_enter(5), 
 14637 ;; Auto vars:     Size  Location     Type
 14638 ;;  l               1    3[COMMON] PTR const unsigned char 
 14639 ;;		 -> clave(5), 
 14640 ;; Return value:  Size  Location     Type
 14641 ;;                  2    0[COMMON] int 
 14642 ;; Registers used:
 14643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14644 ;; Tracked objects:
 14645 ;;		On entry : 0/0
 14646 ;;		On exit  : 0/0
 14647 ;;		Unchanged: 0/0
 14648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14649 ;;      Params:         2       0       0       0       0       0       0       0
 14650 ;;      Locals:         1       0       0       0       0       0       0       0
 14651 ;;      Temps:          1       0       0       0       0       0       0       0
 14652 ;;      Totals:         4       0       0       0       0       0       0       0
 14653 ;;Total ram usage:        4 bytes
 14654 ;; Hardware stack levels used: 1
 14655 ;; This function calls:
 14656 ;;		Nothing
 14657 ;; This function is called by:
 14658 ;;		_IOC
 14659 ;; This function uses a non-reentrant model
 14660 ;;
 14661                           
 14662     1C62                     _strcmp:	
 14663                           ;psect for function _strcmp
 14664                           
 14665                           
 14666                           ;incstack = 0
 14667                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0]
 14668                           ;strcmp@l stored from wreg
 14669     1C62  00F3               	movwf	strcmp@l
 14670     1C63                     i1l4988:
 14671     1C63  2C6C               	goto	i1l4994
 14672     1C64                     i1l4990:
 14673     1C64  3001               	movlw	1
 14674     1C65  00F2               	movwf	??_strcmp
 14675     1C66  0872               	movf	??_strcmp,w
 14676     1C67  07F3               	addwf	strcmp@l,f
 14677     1C68                     i1l4992:
 14678     1C68  3001               	movlw	1
 14679     1C69  00F2               	movwf	??_strcmp
 14680     1C6A  0872               	movf	??_strcmp,w
 14681     1C6B  07F0               	addwf	strcmp@r,f
 14682     1C6C                     i1l4994:
 14683     1C6C  0870               	movf	strcmp@r,w
 14684     1C6D  0086               	movwf	6
 14685     1C6E  3001               	movlw	1	; select bank2/3
 14686     1C6F  0087               	movwf	7
 14687     1C70  0873               	movf	strcmp@l,w
 14688     1C71  0084               	movwf	4
 14689     1C72  3001               	movlw	1	; select bank2/3
 14690     1C73  0085               	movwf	5
 14691     1C74  0800               	movf	0,w
 14692     1C75  0601               	xorwf	1,w
 14693     1C76  1D03               	skipz
 14694     1C77  2C79               	goto	u606_21
 14695     1C78  2C7A               	goto	u606_20
 14696     1C79                     u606_21:
 14697     1C79  2C83               	goto	i1l4998
 14698     1C7A                     u606_20:
 14699     1C7A                     i1l4996:
 14700     1C7A  0873               	movf	strcmp@l,w
 14701     1C7B  0086               	movwf	6
 14702     1C7C  3001               	movlw	1	; select bank2/3
 14703     1C7D  0087               	movwf	7
 14704     1C7E  0801               	movf	1,w
 14705     1C7F  1D03               	btfss	3,2
 14706     1C80  2C82               	goto	u607_21
 14707     1C81  2C83               	goto	u607_20
 14708     1C82                     u607_21:
 14709     1C82  2C64               	goto	i1l4990
 14710     1C83                     u607_20:
 14711     1C83                     i1l4998:
 14712     1C83  0873               	movf	strcmp@l,w
 14713     1C84  0086               	movwf	6
 14714     1C85  3001               	movlw	1	; select bank2/3
 14715     1C86  0087               	movwf	7
 14716     1C87  0870               	movf	strcmp@r,w
 14717     1C88  0084               	movwf	4
 14718     1C89  3001               	movlw	1	; select bank2/3
 14719     1C8A  0085               	movwf	5
 14720     1C8B  0800               	movf	0,w
 14721     1C8C  0201               	subwf	1,w
 14722     1C8D  00F0               	movwf	?_strcmp
 14723     1C8E  01F1               	clrf	?_strcmp+1
 14724     1C8F  1C03               	skipc
 14725     1C90  03F1               	decf	?_strcmp+1,f
 14726     1C91                     i1l1298:
 14727     1C91  0008               	return
 14728     1C92                     __end_of_strcmp:
 14729                           
 14730                           	psect	text49
 14731     1A3F                     __ptext49:	
 14732 ;; *************** function _Leer_Clave *****************
 14733 ;; Defined at:
 14734 ;;		line 346 in file "main.c"
 14735 ;; Parameters:    Size  Location     Type
 14736 ;;  str             1    wreg     PTR unsigned char 
 14737 ;;		 -> clave_enter(5), 
 14738 ;; Auto vars:     Size  Location     Type
 14739 ;;  str             1    4[COMMON] PTR unsigned char 
 14740 ;;		 -> clave_enter(5), 
 14741 ;;  pos             1    5[COMMON] unsigned char 
 14742 ;; Return value:  Size  Location     Type
 14743 ;;                  1    wreg      void 
 14744 ;; Registers used:
 14745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14746 ;; Tracked objects:
 14747 ;;		On entry : 0/0
 14748 ;;		On exit  : 0/0
 14749 ;;		Unchanged: 0/0
 14750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14751 ;;      Params:         0       0       0       0       0       0       0       0
 14752 ;;      Locals:         2       0       0       0       0       0       0       0
 14753 ;;      Temps:          1       0       0       0       0       0       0       0
 14754 ;;      Totals:         3       0       0       0       0       0       0       0
 14755 ;;Total ram usage:        3 bytes
 14756 ;; Hardware stack levels used: 1
 14757 ;; Hardware stack levels required when called: 1
 14758 ;; This function calls:
 14759 ;;		_EEPROM_Read
 14760 ;; This function is called by:
 14761 ;;		_IOC
 14762 ;; This function uses a non-reentrant model
 14763 ;;
 14764                           
 14765     1A3F                     _Leer_Clave:	
 14766                           ;psect for function _Leer_Clave
 14767                           
 14768                           
 14769                           ;incstack = 0
 14770                           ; Regs used in _Leer_Clave: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14771                           ;Leer_Clave@str stored from wreg
 14772     1A3F  00F4               	movwf	Leer_Clave@str
 14773     1A40                     i1l4976:
 14774                           
 14775                           ;main.c: 346: void Leer_Clave(char* str);main.c: 347: {;main.c: 348:     for(uint8_t pos
      +                          =0; pos<4; pos++)
 14776     1A40  01F5               	clrf	Leer_Clave@pos
 14777     1A41                     i1l4982:
 14778                           
 14779                           ;main.c: 349:     {;main.c: 350:         str[pos] = (char)EEPROM_Read(pos);
 14780     1A41  0875               	movf	Leer_Clave@pos,w
 14781     1A42  0774               	addwf	Leer_Clave@str,w
 14782     1A43  00F3               	movwf	??_Leer_Clave
 14783     1A44  0873               	movf	??_Leer_Clave,w
 14784     1A45  0086               	movwf	6
 14785     1A46  3001               	movlw	1	; select bank2/3
 14786     1A47  0087               	movwf	7
 14787     1A48  0875               	movf	Leer_Clave@pos,w
 14788     1A49  3199  21DF  319A   	fcall	_EEPROM_Read
 14789     1A4C  0081               	movwf	1
 14790     1A4D                     i1l4984:
 14791                           
 14792                           ;main.c: 351:     }
 14793     1A4D  3001               	movlw	1
 14794     1A4E  00F3               	movwf	??_Leer_Clave
 14795     1A4F  0873               	movf	??_Leer_Clave,w
 14796     1A50  07F5               	addwf	Leer_Clave@pos,f
 14797     1A51                     i1l4986:
 14798     1A51  3004               	movlw	4
 14799     1A52  0275               	subwf	Leer_Clave@pos,w
 14800     1A53  1C03               	skipc
 14801     1A54  2A56               	goto	u605_21
 14802     1A55  2A57               	goto	u605_20
 14803     1A56                     u605_21:
 14804     1A56  2A41               	goto	i1l4982
 14805     1A57                     u605_20:
 14806     1A57                     i1l300:
 14807     1A57  0008               	return
 14808     1A58                     __end_of_Leer_Clave:
 14809                           
 14810                           	psect	text50
 14811     19DF                     __ptext50:	
 14812 ;; *************** function _EEPROM_Read *****************
 14813 ;; Defined at:
 14814 ;;		line 19 in file "eeprom.c"
 14815 ;; Parameters:    Size  Location     Type
 14816 ;;  dir             1    wreg     unsigned char 
 14817 ;; Auto vars:     Size  Location     Type
 14818 ;;  dir             1    2[COMMON] unsigned char 
 14819 ;; Return value:  Size  Location     Type
 14820 ;;                  1    wreg      unsigned char 
 14821 ;; Registers used:
 14822 ;;		wreg
 14823 ;; Tracked objects:
 14824 ;;		On entry : 0/0
 14825 ;;		On exit  : 0/0
 14826 ;;		Unchanged: 0/0
 14827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14828 ;;      Params:         0       0       0       0       0       0       0       0
 14829 ;;      Locals:         1       0       0       0       0       0       0       0
 14830 ;;      Temps:          2       0       0       0       0       0       0       0
 14831 ;;      Totals:         3       0       0       0       0       0       0       0
 14832 ;;Total ram usage:        3 bytes
 14833 ;; Hardware stack levels used: 1
 14834 ;; This function calls:
 14835 ;;		Nothing
 14836 ;; This function is called by:
 14837 ;;		_Leer_Clave
 14838 ;; This function uses a non-reentrant model
 14839 ;;
 14840                           
 14841     19DF                     _EEPROM_Read:	
 14842                           ;psect for function _EEPROM_Read
 14843                           
 14844                           
 14845                           ;incstack = 0
 14846                           ; Regs used in _EEPROM_Read: [wreg]
 14847                           ;EEPROM_Read@dir stored from wreg
 14848     19DF  00F2               	movwf	EEPROM_Read@dir
 14849     19E0                     i1l4760:
 14850                           
 14851                           ;eeprom.c: 19: uint8_t EEPROM_Read(uint8_t dir);eeprom.c: 20: {;eeprom.c: 21:     EEADR 
      +                          = dir;
 14852     19E0  0872               	movf	EEPROM_Read@dir,w
 14853     19E1  00F0               	movwf	??_EEPROM_Read
 14854     19E2  01F1               	clrf	??_EEPROM_Read+1
 14855     19E3  0870               	movf	??_EEPROM_Read,w
 14856     19E4  0023               	movlb	3	; select bank3
 14857     19E5  0091               	movwf	17	;volatile
 14858     19E6  0871               	movf	??_EEPROM_Read+1,w
 14859     19E7  0092               	movwf	18	;volatile
 14860     19E8                     i1l4762:
 14861                           
 14862                           ;eeprom.c: 22:     EECON1bits.EEPGD = 0;
 14863     19E8  1395               	bcf	21,7	;volsfr
 14864     19E9                     i1l4764:
 14865                           
 14866                           ;eeprom.c: 23:     EECON1bits.RD = 1;
 14867     19E9  1415               	bsf	21,0	;volsfr
 14868                           
 14869                           ;eeprom.c: 24:     return EEDAT;
 14870     19EA  0813               	movf	19,w	;volatile
 14871     19EB                     i1l448:
 14872     19EB  0008               	return
 14873     19EC                     __end_of_EEPROM_Read:
 14874                           
 14875                           	psect	text51
 14876     19AF                     __ptext51:	
 14877 ;; *************** function _Keypad_Init *****************
 14878 ;; Defined at:
 14879 ;;		line 3 in file "kbd4x3.c"
 14880 ;; Parameters:    Size  Location     Type
 14881 ;;		None
 14882 ;; Auto vars:     Size  Location     Type
 14883 ;;		None
 14884 ;; Return value:  Size  Location     Type
 14885 ;;                  1    wreg      void 
 14886 ;; Registers used:
 14887 ;;		None
 14888 ;; Tracked objects:
 14889 ;;		On entry : 0/0
 14890 ;;		On exit  : 0/0
 14891 ;;		Unchanged: 0/0
 14892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14893 ;;      Params:         0       0       0       0       0       0       0       0
 14894 ;;      Locals:         0       0       0       0       0       0       0       0
 14895 ;;      Temps:          0       0       0       0       0       0       0       0
 14896 ;;      Totals:         0       0       0       0       0       0       0       0
 14897 ;;Total ram usage:        0 bytes
 14898 ;; Hardware stack levels used: 1
 14899 ;; This function calls:
 14900 ;;		Nothing
 14901 ;; This function is called by:
 14902 ;;		_IOC
 14903 ;; This function uses a non-reentrant model
 14904 ;;
 14905                           
 14906     19AF                     _Keypad_Init:	
 14907                           ;psect for function _Keypad_Init
 14908                           
 14909     19AF                     i1l4896:	
 14910                           ;incstack = 0
 14911                           ; Regs used in _Keypad_Init: []
 14912                           
 14913                           
 14914                           ;kbd4x3.c: 5:     TRISBbits.TRISB4 = 1;
 14915     19AF  0021               	movlb	1	; select bank1
 14916     19B0  160D               	bsf	13,4	;volatile
 14917                           
 14918                           ;kbd4x3.c: 6:     TRISBbits.TRISB5 = 1;
 14919     19B1  168D               	bsf	13,5	;volatile
 14920                           
 14921                           ;kbd4x3.c: 7:     TRISBbits.TRISB6 = 1;
 14922     19B2  170D               	bsf	13,6	;volatile
 14923                           
 14924                           ;kbd4x3.c: 8:     TRISBbits.TRISB7 = 1;
 14925     19B3  178D               	bsf	13,7	;volatile
 14926                           
 14927                           ;kbd4x3.c: 9:     TRISBbits.TRISB1 = 0;
 14928     19B4  108D               	bcf	13,1	;volatile
 14929                           
 14930                           ;kbd4x3.c: 10:     TRISBbits.TRISB2 = 0;
 14931     19B5  110D               	bcf	13,2	;volatile
 14932                           
 14933                           ;kbd4x3.c: 11:     TRISBbits.TRISB3 = 0;
 14934     19B6  118D               	bcf	13,3	;volatile
 14935     19B7                     i1l309:
 14936     19B7  0008               	return
 14937     19B8                     __end_of_Keypad_Init:
 14938                           
 14939                           	psect	text52
 14940     06B5                     __ptext52:	
 14941 ;; *************** function _Keypad_Get_Char *****************
 14942 ;; Defined at:
 14943 ;;		line 14 in file "kbd4x3.c"
 14944 ;; Parameters:    Size  Location     Type
 14945 ;;		None
 14946 ;; Auto vars:     Size  Location     Type
 14947 ;;		None
 14948 ;; Return value:  Size  Location     Type
 14949 ;;                  1    wreg      unsigned char 
 14950 ;; Registers used:
 14951 ;;		wreg
 14952 ;; Tracked objects:
 14953 ;;		On entry : 0/0
 14954 ;;		On exit  : 0/0
 14955 ;;		Unchanged: 0/0
 14956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14957 ;;      Params:         0       0       0       0       0       0       0       0
 14958 ;;      Locals:         0       0       0       0       0       0       0       0
 14959 ;;      Temps:          1       0       0       0       0       0       0       0
 14960 ;;      Totals:         1       0       0       0       0       0       0       0
 14961 ;;Total ram usage:        1 bytes
 14962 ;; Hardware stack levels used: 1
 14963 ;; This function calls:
 14964 ;;		Nothing
 14965 ;; This function is called by:
 14966 ;;		_IOC
 14967 ;; This function uses a non-reentrant model
 14968 ;;
 14969                           
 14970     06B5                     _Keypad_Get_Char:	
 14971                           ;psect for function _Keypad_Get_Char
 14972                           
 14973     06B5                     i1l4898:	
 14974                           ;incstack = 0
 14975                           ; Regs used in _Keypad_Get_Char: [wreg]
 14976                           
 14977                           
 14978                           ;kbd4x3.c: 16:     PORTBbits.RB1 = 1;
 14979     06B5  0020               	movlb	0	; select bank0
 14980     06B6  148D               	bsf	13,1	;volatile
 14981                           
 14982                           ;kbd4x3.c: 17:     PORTBbits.RB2 = 0;
 14983     06B7  110D               	bcf	13,2	;volatile
 14984                           
 14985                           ;kbd4x3.c: 18:     PORTBbits.RB3 = 0;
 14986     06B8  118D               	bcf	13,3	;volatile
 14987                           
 14988                           ;kbd4x3.c: 19:     if(PORTBbits.RB4 == 1){
 14989     06B9  1E0D               	btfss	13,4	;volatile
 14990     06BA  2EBC               	goto	u581_21
 14991     06BB  2EBD               	goto	u581_20
 14992     06BC                     u581_21:
 14993     06BC  2ED3               	goto	i1l312
 14994     06BD                     u581_20:
 14995     06BD                     i1l4900:
 14996                           
 14997                           ;kbd4x3.c: 20:         _delay((unsigned long)((2)*(4000000/4000.0)));
 14998     06BD  3003               	movlw	3
 14999     06BE  00F0               	movwf	??_Keypad_Get_Char
 15000     06BF  3098               	movlw	152
 15001     06C0                     u681_27:
 15002     06C0  0B89               	decfsz	9,f
 15003     06C1  2EC0               	goto	u681_27
 15004     06C2  0BF0               	decfsz	??_Keypad_Get_Char,f
 15005     06C3  2EC0               	goto	u681_27
 15006     06C4                     i1l313:	
 15007                           ;kbd4x3.c: 21:         while(PORTBbits.RB4 == 1);
 15008                           
 15009     06C4  0020               	movlb	0	; select bank0
 15010     06C5  1A0D               	btfsc	13,4	;volatile
 15011     06C6  2EC8               	goto	u582_21
 15012     06C7  2EC9               	goto	u582_20
 15013     06C8                     u582_21:
 15014     06C8  2EC4               	goto	i1l313
 15015     06C9                     u582_20:
 15016     06C9                     i1l4902:
 15017                           
 15018                           ;kbd4x3.c: 22:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15019     06C9  3007               	movlw	7
 15020     06CA  00F0               	movwf	??_Keypad_Get_Char
 15021     06CB  307D               	movlw	125
 15022     06CC                     u682_27:
 15023     06CC  0B89               	decfsz	9,f
 15024     06CD  2ECC               	goto	u682_27
 15025     06CE  0BF0               	decfsz	??_Keypad_Get_Char,f
 15026     06CF  2ECC               	goto	u682_27
 15027     06D0  0000               	nop
 15028                           
 15029                           ;kbd4x3.c: 23:         return '1';
 15030     06D1  3031               	movlw	49
 15031     06D2  2FF8               	goto	i1l316
 15032     06D3                     i1l312:	
 15033                           ;kbd4x3.c: 24:     }
 15034                           
 15035                           
 15036                           ;kbd4x3.c: 25:     if(PORTBbits.RB5 == 1){
 15037     06D3  1E8D               	btfss	13,5	;volatile
 15038     06D4  2ED6               	goto	u583_21
 15039     06D5  2ED7               	goto	u583_20
 15040     06D6                     u583_21:
 15041     06D6  2EED               	goto	i1l317
 15042     06D7                     u583_20:
 15043     06D7                     i1l4906:
 15044                           
 15045                           ;kbd4x3.c: 26:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15046     06D7  3003               	movlw	3
 15047     06D8  00F0               	movwf	??_Keypad_Get_Char
 15048     06D9  3098               	movlw	152
 15049     06DA                     u683_27:
 15050     06DA  0B89               	decfsz	9,f
 15051     06DB  2EDA               	goto	u683_27
 15052     06DC  0BF0               	decfsz	??_Keypad_Get_Char,f
 15053     06DD  2EDA               	goto	u683_27
 15054     06DE                     i1l318:	
 15055                           ;kbd4x3.c: 27:         while(PORTBbits.RB5 == 1);
 15056                           
 15057     06DE  0020               	movlb	0	; select bank0
 15058     06DF  1A8D               	btfsc	13,5	;volatile
 15059     06E0  2EE2               	goto	u584_21
 15060     06E1  2EE3               	goto	u584_20
 15061     06E2                     u584_21:
 15062     06E2  2EDE               	goto	i1l318
 15063     06E3                     u584_20:
 15064     06E3                     i1l4908:
 15065                           
 15066                           ;kbd4x3.c: 28:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15067     06E3  3007               	movlw	7
 15068     06E4  00F0               	movwf	??_Keypad_Get_Char
 15069     06E5  307D               	movlw	125
 15070     06E6                     u684_27:
 15071     06E6  0B89               	decfsz	9,f
 15072     06E7  2EE6               	goto	u684_27
 15073     06E8  0BF0               	decfsz	??_Keypad_Get_Char,f
 15074     06E9  2EE6               	goto	u684_27
 15075     06EA  0000               	nop
 15076                           
 15077                           ;kbd4x3.c: 29:         return '4';
 15078     06EB  3034               	movlw	52
 15079     06EC  2FF8               	goto	i1l316
 15080     06ED                     i1l317:	
 15081                           ;kbd4x3.c: 30:     }
 15082                           
 15083                           
 15084                           ;kbd4x3.c: 31:     if(PORTBbits.RB6 == 1){
 15085     06ED  1F0D               	btfss	13,6	;volatile
 15086     06EE  2EF0               	goto	u585_21
 15087     06EF  2EF1               	goto	u585_20
 15088     06F0                     u585_21:
 15089     06F0  2F07               	goto	i1l321
 15090     06F1                     u585_20:
 15091     06F1                     i1l4912:
 15092                           
 15093                           ;kbd4x3.c: 32:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15094     06F1  3003               	movlw	3
 15095     06F2  00F0               	movwf	??_Keypad_Get_Char
 15096     06F3  3098               	movlw	152
 15097     06F4                     u685_27:
 15098     06F4  0B89               	decfsz	9,f
 15099     06F5  2EF4               	goto	u685_27
 15100     06F6  0BF0               	decfsz	??_Keypad_Get_Char,f
 15101     06F7  2EF4               	goto	u685_27
 15102     06F8                     i1l322:	
 15103                           ;kbd4x3.c: 33:         while(PORTBbits.RB6 == 1);
 15104                           
 15105     06F8  0020               	movlb	0	; select bank0
 15106     06F9  1B0D               	btfsc	13,6	;volatile
 15107     06FA  2EFC               	goto	u586_21
 15108     06FB  2EFD               	goto	u586_20
 15109     06FC                     u586_21:
 15110     06FC  2EF8               	goto	i1l322
 15111     06FD                     u586_20:
 15112     06FD                     i1l4914:
 15113                           
 15114                           ;kbd4x3.c: 34:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15115     06FD  3007               	movlw	7
 15116     06FE  00F0               	movwf	??_Keypad_Get_Char
 15117     06FF  307D               	movlw	125
 15118     0700                     u686_27:
 15119     0700  0B89               	decfsz	9,f
 15120     0701  2F00               	goto	u686_27
 15121     0702  0BF0               	decfsz	??_Keypad_Get_Char,f
 15122     0703  2F00               	goto	u686_27
 15123     0704  0000               	nop
 15124                           
 15125                           ;kbd4x3.c: 35:         return '7';
 15126     0705  3037               	movlw	55
 15127     0706  2FF8               	goto	i1l316
 15128     0707                     i1l321:	
 15129                           ;kbd4x3.c: 36:     }
 15130                           
 15131                           
 15132                           ;kbd4x3.c: 37:     if(PORTBbits.RB7 == 1){
 15133     0707  1F8D               	btfss	13,7	;volatile
 15134     0708  2F0A               	goto	u587_21
 15135     0709  2F0B               	goto	u587_20
 15136     070A                     u587_21:
 15137     070A  2F21               	goto	i1l325
 15138     070B                     u587_20:
 15139     070B                     i1l4918:
 15140                           
 15141                           ;kbd4x3.c: 38:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15142     070B  3003               	movlw	3
 15143     070C  00F0               	movwf	??_Keypad_Get_Char
 15144     070D  3098               	movlw	152
 15145     070E                     u687_27:
 15146     070E  0B89               	decfsz	9,f
 15147     070F  2F0E               	goto	u687_27
 15148     0710  0BF0               	decfsz	??_Keypad_Get_Char,f
 15149     0711  2F0E               	goto	u687_27
 15150     0712                     i1l326:	
 15151                           ;kbd4x3.c: 39:         while(PORTBbits.RB7 == 1);
 15152                           
 15153     0712  0020               	movlb	0	; select bank0
 15154     0713  1B8D               	btfsc	13,7	;volatile
 15155     0714  2F16               	goto	u588_21
 15156     0715  2F17               	goto	u588_20
 15157     0716                     u588_21:
 15158     0716  2F12               	goto	i1l326
 15159     0717                     u588_20:
 15160     0717                     i1l4920:
 15161                           
 15162                           ;kbd4x3.c: 40:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15163     0717  3007               	movlw	7
 15164     0718  00F0               	movwf	??_Keypad_Get_Char
 15165     0719  307D               	movlw	125
 15166     071A                     u688_27:
 15167     071A  0B89               	decfsz	9,f
 15168     071B  2F1A               	goto	u688_27
 15169     071C  0BF0               	decfsz	??_Keypad_Get_Char,f
 15170     071D  2F1A               	goto	u688_27
 15171     071E  0000               	nop
 15172                           
 15173                           ;kbd4x3.c: 41:         return '*';
 15174     071F  302A               	movlw	42
 15175     0720  2FF8               	goto	i1l316
 15176     0721                     i1l325:	
 15177                           ;kbd4x3.c: 42:     }
 15178                           
 15179                           
 15180                           ;kbd4x3.c: 44:     PORTBbits.RB1 = 0;
 15181     0721  108D               	bcf	13,1	;volatile
 15182                           
 15183                           ;kbd4x3.c: 45:     PORTBbits.RB2 = 1;
 15184     0722  150D               	bsf	13,2	;volatile
 15185                           
 15186                           ;kbd4x3.c: 46:     PORTBbits.RB3 = 0;
 15187     0723  118D               	bcf	13,3	;volatile
 15188                           
 15189                           ;kbd4x3.c: 47:     if(PORTBbits.RB4 == 1){
 15190     0724  1E0D               	btfss	13,4	;volatile
 15191     0725  2F27               	goto	u589_21
 15192     0726  2F28               	goto	u589_20
 15193     0727                     u589_21:
 15194     0727  2F3E               	goto	i1l329
 15195     0728                     u589_20:
 15196     0728                     i1l4924:
 15197                           
 15198                           ;kbd4x3.c: 48:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15199     0728  3003               	movlw	3
 15200     0729  00F0               	movwf	??_Keypad_Get_Char
 15201     072A  3098               	movlw	152
 15202     072B                     u689_27:
 15203     072B  0B89               	decfsz	9,f
 15204     072C  2F2B               	goto	u689_27
 15205     072D  0BF0               	decfsz	??_Keypad_Get_Char,f
 15206     072E  2F2B               	goto	u689_27
 15207     072F                     i1l330:	
 15208                           ;kbd4x3.c: 49:         while(PORTBbits.RB4 == 1);
 15209                           
 15210     072F  0020               	movlb	0	; select bank0
 15211     0730  1A0D               	btfsc	13,4	;volatile
 15212     0731  2F33               	goto	u590_21
 15213     0732  2F34               	goto	u590_20
 15214     0733                     u590_21:
 15215     0733  2F2F               	goto	i1l330
 15216     0734                     u590_20:
 15217     0734                     i1l4926:
 15218                           
 15219                           ;kbd4x3.c: 50:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15220     0734  3007               	movlw	7
 15221     0735  00F0               	movwf	??_Keypad_Get_Char
 15222     0736  307D               	movlw	125
 15223     0737                     u690_27:
 15224     0737  0B89               	decfsz	9,f
 15225     0738  2F37               	goto	u690_27
 15226     0739  0BF0               	decfsz	??_Keypad_Get_Char,f
 15227     073A  2F37               	goto	u690_27
 15228     073B  0000               	nop
 15229                           
 15230                           ;kbd4x3.c: 51:         return '2';
 15231     073C  3032               	movlw	50
 15232     073D  2FF8               	goto	i1l316
 15233     073E                     i1l329:	
 15234                           ;kbd4x3.c: 52:     }
 15235                           
 15236                           
 15237                           ;kbd4x3.c: 53:     if(PORTBbits.RB5 == 1){
 15238     073E  1E8D               	btfss	13,5	;volatile
 15239     073F  2F41               	goto	u591_21
 15240     0740  2F42               	goto	u591_20
 15241     0741                     u591_21:
 15242     0741  2F58               	goto	i1l333
 15243     0742                     u591_20:
 15244     0742                     i1l4930:
 15245                           
 15246                           ;kbd4x3.c: 54:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15247     0742  3003               	movlw	3
 15248     0743  00F0               	movwf	??_Keypad_Get_Char
 15249     0744  3098               	movlw	152
 15250     0745                     u691_27:
 15251     0745  0B89               	decfsz	9,f
 15252     0746  2F45               	goto	u691_27
 15253     0747  0BF0               	decfsz	??_Keypad_Get_Char,f
 15254     0748  2F45               	goto	u691_27
 15255     0749                     i1l334:	
 15256                           ;kbd4x3.c: 55:         while(PORTBbits.RB5 == 1);
 15257                           
 15258     0749  0020               	movlb	0	; select bank0
 15259     074A  1A8D               	btfsc	13,5	;volatile
 15260     074B  2F4D               	goto	u592_21
 15261     074C  2F4E               	goto	u592_20
 15262     074D                     u592_21:
 15263     074D  2F49               	goto	i1l334
 15264     074E                     u592_20:
 15265     074E                     i1l4932:
 15266                           
 15267                           ;kbd4x3.c: 56:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15268     074E  3007               	movlw	7
 15269     074F  00F0               	movwf	??_Keypad_Get_Char
 15270     0750  307D               	movlw	125
 15271     0751                     u692_27:
 15272     0751  0B89               	decfsz	9,f
 15273     0752  2F51               	goto	u692_27
 15274     0753  0BF0               	decfsz	??_Keypad_Get_Char,f
 15275     0754  2F51               	goto	u692_27
 15276     0755  0000               	nop
 15277                           
 15278                           ;kbd4x3.c: 57:         return '5';
 15279     0756  3035               	movlw	53
 15280     0757  2FF8               	goto	i1l316
 15281     0758                     i1l333:	
 15282                           ;kbd4x3.c: 58:     }
 15283                           
 15284                           
 15285                           ;kbd4x3.c: 59:     if(PORTBbits.RB6 == 1){
 15286     0758  1F0D               	btfss	13,6	;volatile
 15287     0759  2F5B               	goto	u593_21
 15288     075A  2F5C               	goto	u593_20
 15289     075B                     u593_21:
 15290     075B  2F72               	goto	i1l337
 15291     075C                     u593_20:
 15292     075C                     i1l4936:
 15293                           
 15294                           ;kbd4x3.c: 60:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15295     075C  3003               	movlw	3
 15296     075D  00F0               	movwf	??_Keypad_Get_Char
 15297     075E  3098               	movlw	152
 15298     075F                     u693_27:
 15299     075F  0B89               	decfsz	9,f
 15300     0760  2F5F               	goto	u693_27
 15301     0761  0BF0               	decfsz	??_Keypad_Get_Char,f
 15302     0762  2F5F               	goto	u693_27
 15303     0763                     i1l338:	
 15304                           ;kbd4x3.c: 61:         while(PORTBbits.RB6 == 1);
 15305                           
 15306     0763  0020               	movlb	0	; select bank0
 15307     0764  1B0D               	btfsc	13,6	;volatile
 15308     0765  2F67               	goto	u594_21
 15309     0766  2F68               	goto	u594_20
 15310     0767                     u594_21:
 15311     0767  2F63               	goto	i1l338
 15312     0768                     u594_20:
 15313     0768                     i1l4938:
 15314                           
 15315                           ;kbd4x3.c: 62:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15316     0768  3007               	movlw	7
 15317     0769  00F0               	movwf	??_Keypad_Get_Char
 15318     076A  307D               	movlw	125
 15319     076B                     u694_27:
 15320     076B  0B89               	decfsz	9,f
 15321     076C  2F6B               	goto	u694_27
 15322     076D  0BF0               	decfsz	??_Keypad_Get_Char,f
 15323     076E  2F6B               	goto	u694_27
 15324     076F  0000               	nop
 15325                           
 15326                           ;kbd4x3.c: 63:         return '8';
 15327     0770  3038               	movlw	56
 15328     0771  2FF8               	goto	i1l316
 15329     0772                     i1l337:	
 15330                           ;kbd4x3.c: 64:     }
 15331                           
 15332                           
 15333                           ;kbd4x3.c: 65:     if(PORTBbits.RB7 == 1){
 15334     0772  1F8D               	btfss	13,7	;volatile
 15335     0773  2F75               	goto	u595_21
 15336     0774  2F76               	goto	u595_20
 15337     0775                     u595_21:
 15338     0775  2F8C               	goto	i1l341
 15339     0776                     u595_20:
 15340     0776                     i1l4942:
 15341                           
 15342                           ;kbd4x3.c: 66:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15343     0776  3003               	movlw	3
 15344     0777  00F0               	movwf	??_Keypad_Get_Char
 15345     0778  3098               	movlw	152
 15346     0779                     u695_27:
 15347     0779  0B89               	decfsz	9,f
 15348     077A  2F79               	goto	u695_27
 15349     077B  0BF0               	decfsz	??_Keypad_Get_Char,f
 15350     077C  2F79               	goto	u695_27
 15351     077D                     i1l342:	
 15352                           ;kbd4x3.c: 67:         while(PORTBbits.RB7 == 1);
 15353                           
 15354     077D  0020               	movlb	0	; select bank0
 15355     077E  1B8D               	btfsc	13,7	;volatile
 15356     077F  2F81               	goto	u596_21
 15357     0780  2F82               	goto	u596_20
 15358     0781                     u596_21:
 15359     0781  2F7D               	goto	i1l342
 15360     0782                     u596_20:
 15361     0782                     i1l4944:
 15362                           
 15363                           ;kbd4x3.c: 68:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15364     0782  3007               	movlw	7
 15365     0783  00F0               	movwf	??_Keypad_Get_Char
 15366     0784  307D               	movlw	125
 15367     0785                     u696_27:
 15368     0785  0B89               	decfsz	9,f
 15369     0786  2F85               	goto	u696_27
 15370     0787  0BF0               	decfsz	??_Keypad_Get_Char,f
 15371     0788  2F85               	goto	u696_27
 15372     0789  0000               	nop
 15373                           
 15374                           ;kbd4x3.c: 69:         return '0';
 15375     078A  3030               	movlw	48
 15376     078B  2FF8               	goto	i1l316
 15377     078C                     i1l341:	
 15378                           ;kbd4x3.c: 70:     }
 15379                           
 15380                           
 15381                           ;kbd4x3.c: 72:     PORTBbits.RB1 = 0;
 15382     078C  108D               	bcf	13,1	;volatile
 15383                           
 15384                           ;kbd4x3.c: 73:     PORTBbits.RB2 = 0;
 15385     078D  110D               	bcf	13,2	;volatile
 15386                           
 15387                           ;kbd4x3.c: 74:     PORTBbits.RB3 = 1;
 15388     078E  158D               	bsf	13,3	;volatile
 15389                           
 15390                           ;kbd4x3.c: 75:     if(PORTBbits.RB4 == 1){
 15391     078F  1E0D               	btfss	13,4	;volatile
 15392     0790  2F92               	goto	u597_21
 15393     0791  2F93               	goto	u597_20
 15394     0792                     u597_21:
 15395     0792  2FA9               	goto	i1l345
 15396     0793                     u597_20:
 15397     0793                     i1l4948:
 15398                           
 15399                           ;kbd4x3.c: 76:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15400     0793  3003               	movlw	3
 15401     0794  00F0               	movwf	??_Keypad_Get_Char
 15402     0795  3098               	movlw	152
 15403     0796                     u697_27:
 15404     0796  0B89               	decfsz	9,f
 15405     0797  2F96               	goto	u697_27
 15406     0798  0BF0               	decfsz	??_Keypad_Get_Char,f
 15407     0799  2F96               	goto	u697_27
 15408     079A                     i1l346:	
 15409                           ;kbd4x3.c: 77:         while(PORTBbits.RB4 == 1);
 15410                           
 15411     079A  0020               	movlb	0	; select bank0
 15412     079B  1A0D               	btfsc	13,4	;volatile
 15413     079C  2F9E               	goto	u598_21
 15414     079D  2F9F               	goto	u598_20
 15415     079E                     u598_21:
 15416     079E  2F9A               	goto	i1l346
 15417     079F                     u598_20:
 15418     079F                     i1l4950:
 15419                           
 15420                           ;kbd4x3.c: 78:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15421     079F  3007               	movlw	7
 15422     07A0  00F0               	movwf	??_Keypad_Get_Char
 15423     07A1  307D               	movlw	125
 15424     07A2                     u698_27:
 15425     07A2  0B89               	decfsz	9,f
 15426     07A3  2FA2               	goto	u698_27
 15427     07A4  0BF0               	decfsz	??_Keypad_Get_Char,f
 15428     07A5  2FA2               	goto	u698_27
 15429     07A6  0000               	nop
 15430                           
 15431                           ;kbd4x3.c: 79:         return '3';
 15432     07A7  3033               	movlw	51
 15433     07A8  2FF8               	goto	i1l316
 15434     07A9                     i1l345:	
 15435                           ;kbd4x3.c: 80:     }
 15436                           
 15437                           
 15438                           ;kbd4x3.c: 81:     if(PORTBbits.RB5 == 1){
 15439     07A9  1E8D               	btfss	13,5	;volatile
 15440     07AA  2FAC               	goto	u599_21
 15441     07AB  2FAD               	goto	u599_20
 15442     07AC                     u599_21:
 15443     07AC  2FC3               	goto	i1l349
 15444     07AD                     u599_20:
 15445     07AD                     i1l4954:
 15446                           
 15447                           ;kbd4x3.c: 82:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15448     07AD  3003               	movlw	3
 15449     07AE  00F0               	movwf	??_Keypad_Get_Char
 15450     07AF  3098               	movlw	152
 15451     07B0                     u699_27:
 15452     07B0  0B89               	decfsz	9,f
 15453     07B1  2FB0               	goto	u699_27
 15454     07B2  0BF0               	decfsz	??_Keypad_Get_Char,f
 15455     07B3  2FB0               	goto	u699_27
 15456     07B4                     i1l350:	
 15457                           ;kbd4x3.c: 83:         while(PORTBbits.RB5 == 1);
 15458                           
 15459     07B4  0020               	movlb	0	; select bank0
 15460     07B5  1A8D               	btfsc	13,5	;volatile
 15461     07B6  2FB8               	goto	u600_21
 15462     07B7  2FB9               	goto	u600_20
 15463     07B8                     u600_21:
 15464     07B8  2FB4               	goto	i1l350
 15465     07B9                     u600_20:
 15466     07B9                     i1l4956:
 15467                           
 15468                           ;kbd4x3.c: 84:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15469     07B9  3007               	movlw	7
 15470     07BA  00F0               	movwf	??_Keypad_Get_Char
 15471     07BB  307D               	movlw	125
 15472     07BC                     u700_27:
 15473     07BC  0B89               	decfsz	9,f
 15474     07BD  2FBC               	goto	u700_27
 15475     07BE  0BF0               	decfsz	??_Keypad_Get_Char,f
 15476     07BF  2FBC               	goto	u700_27
 15477     07C0  0000               	nop
 15478                           
 15479                           ;kbd4x3.c: 85:         return '6';
 15480     07C1  3036               	movlw	54
 15481     07C2  2FF8               	goto	i1l316
 15482     07C3                     i1l349:	
 15483                           ;kbd4x3.c: 86:     }
 15484                           
 15485                           
 15486                           ;kbd4x3.c: 87:     if(PORTBbits.RB6 == 1){
 15487     07C3  1F0D               	btfss	13,6	;volatile
 15488     07C4  2FC6               	goto	u601_21
 15489     07C5  2FC7               	goto	u601_20
 15490     07C6                     u601_21:
 15491     07C6  2FDD               	goto	i1l353
 15492     07C7                     u601_20:
 15493     07C7                     i1l4960:
 15494                           
 15495                           ;kbd4x3.c: 88:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15496     07C7  3003               	movlw	3
 15497     07C8  00F0               	movwf	??_Keypad_Get_Char
 15498     07C9  3098               	movlw	152
 15499     07CA                     u701_27:
 15500     07CA  0B89               	decfsz	9,f
 15501     07CB  2FCA               	goto	u701_27
 15502     07CC  0BF0               	decfsz	??_Keypad_Get_Char,f
 15503     07CD  2FCA               	goto	u701_27
 15504     07CE                     i1l354:	
 15505                           ;kbd4x3.c: 89:         while(PORTBbits.RB6 == 1);
 15506                           
 15507     07CE  0020               	movlb	0	; select bank0
 15508     07CF  1B0D               	btfsc	13,6	;volatile
 15509     07D0  2FD2               	goto	u602_21
 15510     07D1  2FD3               	goto	u602_20
 15511     07D2                     u602_21:
 15512     07D2  2FCE               	goto	i1l354
 15513     07D3                     u602_20:
 15514     07D3                     i1l4962:
 15515                           
 15516                           ;kbd4x3.c: 90:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15517     07D3  3007               	movlw	7
 15518     07D4  00F0               	movwf	??_Keypad_Get_Char
 15519     07D5  307D               	movlw	125
 15520     07D6                     u702_27:
 15521     07D6  0B89               	decfsz	9,f
 15522     07D7  2FD6               	goto	u702_27
 15523     07D8  0BF0               	decfsz	??_Keypad_Get_Char,f
 15524     07D9  2FD6               	goto	u702_27
 15525     07DA  0000               	nop
 15526                           
 15527                           ;kbd4x3.c: 91:         return '9';
 15528     07DB  3039               	movlw	57
 15529     07DC  2FF8               	goto	i1l316
 15530     07DD                     i1l353:	
 15531                           ;kbd4x3.c: 92:     }
 15532                           
 15533                           
 15534                           ;kbd4x3.c: 93:     if(PORTBbits.RB7 == 1){
 15535     07DD  1F8D               	btfss	13,7	;volatile
 15536     07DE  2FE0               	goto	u603_21
 15537     07DF  2FE1               	goto	u603_20
 15538     07E0                     u603_21:
 15539     07E0  2FF7               	goto	i1l4972
 15540     07E1                     u603_20:
 15541     07E1                     i1l4966:
 15542                           
 15543                           ;kbd4x3.c: 94:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15544     07E1  3003               	movlw	3
 15545     07E2  00F0               	movwf	??_Keypad_Get_Char
 15546     07E3  3098               	movlw	152
 15547     07E4                     u703_27:
 15548     07E4  0B89               	decfsz	9,f
 15549     07E5  2FE4               	goto	u703_27
 15550     07E6  0BF0               	decfsz	??_Keypad_Get_Char,f
 15551     07E7  2FE4               	goto	u703_27
 15552     07E8                     i1l358:	
 15553                           ;kbd4x3.c: 95:         while(PORTBbits.RB7 == 1);
 15554                           
 15555     07E8  0020               	movlb	0	; select bank0
 15556     07E9  1B8D               	btfsc	13,7	;volatile
 15557     07EA  2FEC               	goto	u604_21
 15558     07EB  2FED               	goto	u604_20
 15559     07EC                     u604_21:
 15560     07EC  2FE8               	goto	i1l358
 15561     07ED                     u604_20:
 15562     07ED                     i1l4968:
 15563                           
 15564                           ;kbd4x3.c: 96:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15565     07ED  3007               	movlw	7
 15566     07EE  00F0               	movwf	??_Keypad_Get_Char
 15567     07EF  307D               	movlw	125
 15568     07F0                     u704_27:
 15569     07F0  0B89               	decfsz	9,f
 15570     07F1  2FF0               	goto	u704_27
 15571     07F2  0BF0               	decfsz	??_Keypad_Get_Char,f
 15572     07F3  2FF0               	goto	u704_27
 15573     07F4  0000               	nop
 15574                           
 15575                           ;kbd4x3.c: 97:         return '#';
 15576     07F5  3023               	movlw	35
 15577     07F6  2FF8               	goto	i1l316
 15578     07F7                     i1l4972:
 15579                           
 15580                           ;kbd4x3.c: 99:     return 0;
 15581     07F7  3000               	movlw	0
 15582     07F8                     i1l316:
 15583     07F8  0008               	return
 15584     07F9                     __end_of_Keypad_Get_Char:
 15585                           
 15586                           	psect	text53
 15587     1001                     __ptext53:	
 15588 ;; *************** function _Escribir_Clave *****************
 15589 ;; Defined at:
 15590 ;;		line 338 in file "main.c"
 15591 ;; Parameters:    Size  Location     Type
 15592 ;;  str             1    wreg     PTR unsigned char 
 15593 ;;		 -> clave(5), 
 15594 ;; Auto vars:     Size  Location     Type
 15595 ;;  str             1    5[COMMON] PTR unsigned char 
 15596 ;;		 -> clave(5), 
 15597 ;;  pos             1    6[COMMON] unsigned char 
 15598 ;; Return value:  Size  Location     Type
 15599 ;;                  1    wreg      void 
 15600 ;; Registers used:
 15601 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15602 ;; Tracked objects:
 15603 ;;		On entry : 0/0
 15604 ;;		On exit  : 0/0
 15605 ;;		Unchanged: 0/0
 15606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15607 ;;      Params:         0       0       0       0       0       0       0       0
 15608 ;;      Locals:         2       0       0       0       0       0       0       0
 15609 ;;      Temps:          1       0       0       0       0       0       0       0
 15610 ;;      Totals:         3       0       0       0       0       0       0       0
 15611 ;;Total ram usage:        3 bytes
 15612 ;; Hardware stack levels used: 1
 15613 ;; Hardware stack levels required when called: 1
 15614 ;; This function calls:
 15615 ;;		_EEPROM_Write
 15616 ;; This function is called by:
 15617 ;;		_IOC
 15618 ;; This function uses a non-reentrant model
 15619 ;;
 15620                           
 15621     1001                     _Escribir_Clave:	
 15622                           ;psect for function _Escribir_Clave
 15623                           
 15624                           
 15625                           ;incstack = 0
 15626                           ; Regs used in _Escribir_Clave: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15627                           ;Escribir_Clave@str stored from wreg
 15628     1001  00F5               	movwf	Escribir_Clave@str
 15629     1002                     i1l5002:
 15630                           
 15631                           ;main.c: 338: void Escribir_Clave(char* str);main.c: 339: {;main.c: 340:     for(uint8_t
      +                           pos=0; pos<4; pos++)
 15632     1002  01F6               	clrf	Escribir_Clave@pos
 15633     1003                     i1l5008:
 15634                           
 15635                           ;main.c: 341:     {;main.c: 342:         EEPROM_Write(pos, str[pos]);
 15636     1003  0876               	movf	Escribir_Clave@pos,w
 15637     1004  0775               	addwf	Escribir_Clave@str,w
 15638     1005  00F4               	movwf	??_Escribir_Clave
 15639     1006  0874               	movf	??_Escribir_Clave,w
 15640     1007  0086               	movwf	6
 15641     1008  3001               	movlw	1	; select bank2/3
 15642     1009  0087               	movwf	7
 15643     100A  0801               	movf	1,w
 15644     100B  00F0               	movwf	EEPROM_Write@data
 15645     100C  0876               	movf	Escribir_Clave@pos,w
 15646     100D  319A  2291  3190   	fcall	_EEPROM_Write
 15647     1010                     i1l5010:
 15648                           
 15649                           ;main.c: 343:     }
 15650     1010  3001               	movlw	1
 15651     1011  00F4               	movwf	??_Escribir_Clave
 15652     1012  0874               	movf	??_Escribir_Clave,w
 15653     1013  07F6               	addwf	Escribir_Clave@pos,f
 15654     1014                     i1l5012:
 15655     1014  3004               	movlw	4
 15656     1015  0276               	subwf	Escribir_Clave@pos,w
 15657     1016  1C03               	skipc
 15658     1017  2819               	goto	u608_21
 15659     1018  281A               	goto	u608_20
 15660     1019                     u608_21:
 15661     1019  2803               	goto	i1l5008
 15662     101A                     u608_20:
 15663     101A                     i1l295:
 15664     101A  0008               	return
 15665     101B                     __end_of_Escribir_Clave:
 15666                           
 15667                           	psect	text54
 15668     1A91                     __ptext54:	
 15669 ;; *************** function _EEPROM_Write *****************
 15670 ;; Defined at:
 15671 ;;		line 6 in file "eeprom.c"
 15672 ;; Parameters:    Size  Location     Type
 15673 ;;  dir             1    wreg     unsigned char 
 15674 ;;  data            1    0[COMMON] unsigned char 
 15675 ;; Auto vars:     Size  Location     Type
 15676 ;;  dir             1    3[COMMON] unsigned char 
 15677 ;; Return value:  Size  Location     Type
 15678 ;;                  1    wreg      void 
 15679 ;; Registers used:
 15680 ;;		wreg
 15681 ;; Tracked objects:
 15682 ;;		On entry : 0/0
 15683 ;;		On exit  : 0/0
 15684 ;;		Unchanged: 0/0
 15685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15686 ;;      Params:         1       0       0       0       0       0       0       0
 15687 ;;      Locals:         1       0       0       0       0       0       0       0
 15688 ;;      Temps:          2       0       0       0       0       0       0       0
 15689 ;;      Totals:         4       0       0       0       0       0       0       0
 15690 ;;Total ram usage:        4 bytes
 15691 ;; Hardware stack levels used: 1
 15692 ;; This function calls:
 15693 ;;		Nothing
 15694 ;; This function is called by:
 15695 ;;		_Escribir_Clave
 15696 ;;		_EEPROM_Clear
 15697 ;; This function uses a non-reentrant model
 15698 ;;
 15699                           
 15700     1A91                     _EEPROM_Write:	
 15701                           ;psect for function _EEPROM_Write
 15702                           
 15703                           
 15704                           ;incstack = 0
 15705                           ; Regs used in _EEPROM_Write: [wreg]
 15706                           ;EEPROM_Write@dir stored from wreg
 15707     1A91  00F3               	movwf	EEPROM_Write@dir
 15708     1A92                     i1l4752:
 15709                           
 15710                           ;eeprom.c: 6: void EEPROM_Write(uint8_t dir, uint8_t data);eeprom.c: 7: {;eeprom.c: 8:  
      +                             EEADR = dir;
 15711     1A92  0873               	movf	EEPROM_Write@dir,w
 15712     1A93  00F1               	movwf	??_EEPROM_Write
 15713     1A94  01F2               	clrf	??_EEPROM_Write+1
 15714     1A95  0871               	movf	??_EEPROM_Write,w
 15715     1A96  0023               	movlb	3	; select bank3
 15716     1A97  0091               	movwf	17	;volatile
 15717     1A98  0872               	movf	??_EEPROM_Write+1,w
 15718     1A99  0092               	movwf	18	;volatile
 15719                           
 15720                           ;eeprom.c: 9:     EEDAT = data;
 15721     1A9A  0870               	movf	EEPROM_Write@data,w
 15722     1A9B  00F1               	movwf	??_EEPROM_Write
 15723     1A9C  01F2               	clrf	??_EEPROM_Write+1
 15724     1A9D  0871               	movf	??_EEPROM_Write,w
 15725     1A9E  0093               	movwf	19	;volatile
 15726     1A9F  0872               	movf	??_EEPROM_Write+1,w
 15727     1AA0  0094               	movwf	20	;volatile
 15728     1AA1                     i1l4754:
 15729                           
 15730                           ;eeprom.c: 10:     EECON1bits.EEPGD = 0;
 15731     1AA1  1395               	bcf	21,7	;volsfr
 15732     1AA2                     i1l4756:
 15733                           
 15734                           ;eeprom.c: 11:     EECON1bits.WREN = 1;
 15735     1AA2  1515               	bsf	21,2	;volsfr
 15736                           
 15737                           ;eeprom.c: 12:     EECON2 = 0x55;
 15738     1AA3  3055               	movlw	85
 15739     1AA4  0096               	movwf	22	;volsfr
 15740                           
 15741                           ;eeprom.c: 13:     EECON2 = 0xAA;
 15742     1AA5  30AA               	movlw	170
 15743     1AA6  0096               	movwf	22	;volsfr
 15744     1AA7                     i1l4758:
 15745                           
 15746                           ;eeprom.c: 14:     EECON1bits.WR = 1;
 15747     1AA7  1495               	bsf	21,1	;volsfr
 15748     1AA8                     i1l442:	
 15749                           ;eeprom.c: 15:     while(PIR2bits.EEIF == 0);
 15750                           
 15751     1AA8  0020               	movlb	0	; select bank0
 15752     1AA9  1E12               	btfss	18,4	;volatile
 15753     1AAA  2AAC               	goto	u569_21
 15754     1AAB  2AAD               	goto	u569_20
 15755     1AAC                     u569_21:
 15756     1AAC  2AA8               	goto	i1l442
 15757     1AAD                     u569_20:
 15758     1AAD                     i1l444:
 15759                           
 15760                           ;eeprom.c: 16:     PIR2bits.EEIF = 0;
 15761     1AAD  1212               	bcf	18,4	;volatile
 15762     1AAE                     i1l445:
 15763     1AAE  0008               	return
 15764     1AAF                     __end_of_EEPROM_Write:
 15765     007E                     btemp	set	126	;btemp
 15766     007E                     int$flags	set	126
 15767     007E                     wtemp0	set	126
 15768                           
 15769                           	psect	config
 15770                           
 15771                           ;Config register CONFIG1 @ 0x8007
 15772                           ;	Oscillator Selection
 15773                           ;	FOSC = XT, XT Oscillator, Crystal/resonator connected between OSC1 and OSC2 pins
 15774                           ;	Watchdog Timer Enable
 15775                           ;	WDTE = OFF, WDT disabled
 15776                           ;	Power-up Timer Enable
 15777                           ;	PWRTE = OFF, PWRT disabled
 15778                           ;	MCLR Pin Function Select
 15779                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 15780                           ;	Flash Program Memory Code Protection
 15781                           ;	CP = OFF, Program memory code protection is disabled
 15782                           ;	Data Memory Code Protection
 15783                           ;	CPD = OFF, Data memory code protection is disabled
 15784                           ;	Brown-out Reset Enable
 15785                           ;	BOREN = OFF, Brown-out Reset disabled
 15786                           ;	Clock Out Enable
 15787                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 15788                           ;	Internal/External Switchover
 15789                           ;	IESO = ON, Internal/External Switchover mode is enabled
 15790                           ;	Fail-Safe Clock Monitor Enable
 15791                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 15792     8007                     	org	32775
 15793     8007  39E1               	dw	14817
 15794                           
 15795                           ;Config register CONFIG2 @ 0x8008
 15796                           ;	Flash Memory Self-Write Protection
 15797                           ;	WRT = OFF, Write protection off
 15798                           ;	Voltage Regulator Capacitor Enable
 15799                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 15800                           ;	PLL Enable
 15801                           ;	PLLEN = OFF, 4x PLL disabled
 15802                           ;	Stack Overflow/Underflow Reset Enable
 15803                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 15804                           ;	Brown-out Reset Voltage Selection
 15805                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 15806                           ;	Low-Voltage Programming Enable
 15807                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 15808     8008                     	org	32776
 15809     8008  1EFF               	dw	7935

Data Sizes:
    Strings     170
    Constant    0
    Data        0
    BSS         137
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     80      80
    BANK1            80     77      80
    BANK2            80     31      63
    BANK3            80      0      20
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    Escribir_Clave@str	PTR unsigned char  size(1) Largest target is 5
		 -> clave(BANK2[5]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK3[20]), STR_1(CODE[15]), STR_10(CODE[7]), STR_11(CODE[9]), 
		 -> STR_12(CODE[13]), STR_13(CODE[12]), STR_14(CODE[15]), STR_15(CODE[14]), 
		 -> STR_16(CODE[6]), STR_17(CODE[11]), STR_18(CODE[15]), STR_4(CODE[2]), 
		 -> STR_5(CODE[17]), STR_6(CODE[16]), STR_7(CODE[15]), STR_8(CODE[7]), 
		 -> STR_9(CODE[9]), 

    Leer_Clave@str	PTR unsigned char  size(1) Largest target is 5
		 -> clave_enter(BANK2[5]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1307$buffer	PTR unsigned char  size(2) Largest target is 0

    S1307$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_3(CODE[7]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK3[20]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> clave(BANK2[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> clave_enter(BANK2[5]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_19(CODE[4]), STR_22(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_3(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_3(CODE[7]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_3(CODE[7]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _IOC in COMMON

    _IOC->i1_Lcd_Write_String
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port
    _Leer_Clave->_EEPROM_Read
    _Escribir_Clave->_EEPROM_Write

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->__Umul8_16
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___xxtofl->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _IOC in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _IOC in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_sprintf

Critical Paths under _IOC in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IOC in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IOC in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IOC in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IOC in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   32091
                                             13 BANK2     18    18      0
            _ADC_GetConversionResult
                     _ADC_Initialize
               _ADC_IsConversionDone
                _ADC_StartConversion
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                             ___wmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             30    16     14   25770
                                             62 BANK1     15     1     14
                                              0 BANK2     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3   25347
                                             77 BANK0      3     0      3
                                             58 BANK1      4     4      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           15    13      2   25025
                                             75 BANK0      2     0      2
                                             45 BANK1     13    13      0
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2     685
                                              6 BANK0      9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              55    50      5   18708
                                             66 BANK0      9     4      5
                                              0 BANK1     45    45      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     4      2     291
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               8     5      3     328
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (5) _labs                                                 4     0      4     294
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             46 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2637
                                             35 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2288
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3177
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             35 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    2033
                                             20 BANK0     26    18      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13    11      2    4006
                                             22 BANK0     13    11      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     4      3    2445
                                             15 BANK0      7     4      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     888
                                              8 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              6 BANK0     14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2    1272
                                              5 BANK0      5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1804
                                              3 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     308
                                              3 BANK0      1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _IOC                                                  2     2      0    2883
                                             10 COMMON     2     2      0
                     _Escribir_Clave
                    _Keypad_Get_Char
                        _Keypad_Init
                         _Leer_Clave
                             _strcmp
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                   i1_Lcd_Write_Char
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (10) i1_Lcd_Write_String                                  5     3      2     632
                                              5 COMMON     5     3      2
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (11) i1_Lcd_Write_Char                                    4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (10) i1_Lcd_Set_Cursor                                    6     5      1    1092
                                              3 COMMON     6     5      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (10) i1_Lcd_Clear                                         0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (11) i1_Lcd_Cmd                                           2     2      0     110
                                              1 COMMON     2     2      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (12) i1_Lcd_Port                                          1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _strcmp                                              4     2      2     330
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _Leer_Clave                                          3     3      0     200
                                              3 COMMON     3     3      0
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (11) _EEPROM_Read                                         3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (10) _Keypad_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Keypad_Get_Char                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _Escribir_Clave                                      3     3      0     341
                                              4 COMMON     3     3      0
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (11) _EEPROM_Write                                        4     3      1     196
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_Initialize
   _ADC_IsConversionDone
   _ADC_StartConversion
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___wmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 _IOC (ROOT)
   _Escribir_Clave
     _EEPROM_Write
   _Keypad_Get_Char
   _Keypad_Init
   _Leer_Clave
     _EEPROM_Read
   _strcmp
   i1_Lcd_Clear
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
   i1_Lcd_Write_Char
     i1_Lcd_Port
   i1_Lcd_Write_String
     i1_Lcd_Write_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     151       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4D      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     1F      3F      10       78.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      14      12       25.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     151      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Jan 30 19:45:14 2025

                   ___fldiv@aexp 004D                     ___fldiv@bexp 004C                     ___fldiv@sign 0045  
                ?_Escribir_Clave 0070                      _SSPSTATbits 0214                    Leer_Clave@pos 0075  
                  Leer_Clave@str 0074                               l23 0804                               l17 19AE  
                             l26 07FF                               l29 19C9                     ___awdiv@sign 0026  
            ___wmul@multiplicand 0022              __Umul8_16@word_mpld 0026                              l211 168A  
                            l220 1698                              l205 1680                              l214 168F  
                            l223 169E                              l240 16C4                              l232 16B1  
                            l208 1686                              l401 1FFF                              l241 16C5  
                            l217 1693                              l234 16B5                              l226 16A2  
                            l411 1C61                              l235 16B6                              l219 1697  
                            l244 16CF                              l228 16A6                              l405 1FFF  
                            l229 16A7                              l246 16D3                              l238 16C0  
                            l247 16D4                              l408 1D31                              l417 1ACD  
                            l603 1B19                              l605 1B2D                              l382 1C2A  
                            l374 1C16                              l392 1A3E                              l386 1C34  
                            l378 1C20                              l395 19D2                              l804 1EFB  
                            l389 1C36                              l910 055E                              l807 1F10  
                            l904 0503                              l756 1E3E                              l772 1CAF  
                            l908 0580                              l773 1CCB                              l781 10E7  
                            l925 0610                              l917 06B4                              l950 1B0D  
                            l935 0654                              l960 14D0                              l784 113B  
                            l769 1D85                              l793 19DE                              l929 0632  
                            l962 1628                              l778 1CE0                              l946 06AD  
                            l938 068B                              l947 06B4                              l981 15FA  
                            l789 1154                              l797 1F10                              l982 1614  
                            l984 1621                              l976 15AE                              _IOC 0004  
                            _abs 19EC                              _pad 101B                              _hor 0131  
                            _min 0132                              _seg 00EF                     ___awmod@sign 0026  
                            wreg 0009                     ___flmul@aexp 003B                     ___flmul@bexp 003C  
                   ___flmul@sign 0036                     ___flmul@temp 0041                     ___flmul@prod 003D  
                           ?_IOC 0070                     ___fltol@exp1 0029                             l1000 04AC  
                           l1012 04A0                             l1021 1B97                             l1006 042C  
                           l1111 1245                             l1120 12D8                             l1201 147E  
                           l1050 11B1                             l1106 1226                             l1107 1247  
                           l1019 1B87                             l1131 0FFF                             ?_abs 0027  
                           l1044 1178                             l1046 11FF                             l1223 1B50  
                           l1304 1A73                             l1128 0964                             l1057 11CB  
                           l1241 19FD                             l1233 10C9                             l1058 11D7  
                           l1066 1B73                             l1251 08E7                             l1147 0B8F  
                           l1261 1A27                             l1157 0DE9                             l1246 0846  
                           l1095 1023                             l1247 08EF                             l4000 1540  
                           l1264 1C00                             l1193 1306                             l1290 0003  
                           l4010 1563                             l4002 1541                             l1186 1E9F  
                           l1099 104A                             l1267 1C0C                             l1195 1312  
                           l4020 157E                             l4004 1548                             l4012 1567  
                           l4100 02AF                             l4030 1592                             l4022 1582  
                           l4014 156D                             l4006 155A                             l4110 02CB  
                           l4102 02B7                             l1279 1DDE                             l1287 1BBC  
                           l4040 15B3                             l4032 1593                             l4024 1583  
                           l4016 1575                             l4008 155B                             l4200 0499  
                           l4120 0304                             l4104 02B9                             l4210 101D  
                           l4042 15B8                             l4050 15E0                             l4034 1597  
                           l4026 158A                             l4018 1577                             l4202 049D  
                           l4130 034A                             l4122 0311                             l4114 02D4  
                           l4106 02C1                             l5020 1170                             l4220 1043  
                           l4212 1021                             l4060 1617                             l4052 15ED  
                           l4044 15C0                             l4036 15AB                             l4028 158E  
                           l4204 049E                             l4140 0380                             l4132 0355  
                           l4124 0329                             l4116 02DF                             l4108 02C6  
                           l4300 1BF2                             l4310 1C1D                             l5030 1197  
                           l5022 1180                             l5014 1157                             l4222 19EC  
                           l4214 1026                             l4062 161B                             l4054 1608  
                           l4046 15C4                             l4206 04A4                             l4150 03CB  
                           l4142 0387                             l4134 035C                             l4126 0336  
                           l4118 02EC                             l4070 0272                             l4230 104B  
                           l4302 1BF6                             l5110 1629                             l4312 1C22  
                           l4304 1C0F                             l5040 11C1                             l5032 119E  
                           l5016 115C                             l4224 19F1                             l3520 1D86  
                           l4216 1030                             l4320 1202                             l4064 161D  
                           l4056 160B                             l4048 15DC                             l4160 0400  
                           l4152 03E2                             l4144 0399                             l4136 0367  
                           l4128 0343                             l4080 0282                             l4072 0276  
                           l3600 0521                             l4240 109A                             l4232 1063  
                           l4400 0985                             l5200 16BD                             l5120 1630  
                           l5112 162B                             l4314 1C27                             l4306 1C13  
                           l5050 11F2                             l5042 11C5                             l5034 11A2  
                           l5026 1189                             l5018 1160                             l4226 19F2  
                           l3530 1DC1                             l3522 1D8C                             l4218 1035  
                           l4330 121F                             l4322 1209                             l4058 1613  
                           l4170 0411                             l4162 0401                             l4154 03E9  
                           l4146 03A4                             l4138 036E                             l4090 029E  
                           l4082 0287                             l4074 0278                             l3610 052B  
                           l3602 0523                             l4250 10C5                             l4234 1078  
                           l4410 09CC                             l4402 0991                             l5210 16D8  
                           l5202 16BF                             l5130 1636                             l5122 1631  
                           l5114 162D                             l4316 1C2C                             l4308 1C18  
                           l5052 11F6                             l5044 11CF                             l5036 11AA  
                           l5028 118C                             l3532 1DD4                             l3524 1D91  
                           l4340 1241                             l4332 122E                             l4324 120E  
                           l4180 0436                             l4172 0415                             l4164 0408  
                           l4156 03F5                             l4148 03B6                             l4092 02A0  
                           l4084 028F                             l4076 027C                             l3620 0562  
                           l3612 052D                             l3604 0525                             l3540 04B3  
                           l4236 107E                             l4244 109F                             l4260 1A17  
                           l4500 0DDF                             l4412 09D2                             l4420 09FF  
                           l4404 099C                             l5220 17AA                             l5212 16DB  
                           l5204 16C9                             l5140 163E                             l5132 1637  
                           l5124 1632                             l5116 162E                             l4318 1C31  
                           l5054 11F7                             l5046 11D9                             l5038 11B8  
                           l3526 1D96                             l4350 1273                             l4342 124B  
                           l4334 1233                             l4326 1214                             l4190 046B  
                           l4182 043E                             l4174 0429                             l4158 03FC  
                           l4166 040C                             l4094 02A4                             l4086 0291  
                           l4078 027D                             l3710 0687                             l3702 0659  
                           l3630 0575                             l3622 0566                             l3606 0527  
                           l3614 052F                             l3550 04CA                             l3542 04B7  
                           l4246 10A5                             l4238 1095                             l4270 0838  
                           l4262 1A18                             l4254 1A5A                             l4510 0DFC  
                           l4502 0DE5                             l4430 0A36                             l4422 0A08  
                           l4414 09DE                             l5230 17E1                             l5222 17B1  
                           l5214 16E3                             l5206 16CC                             l5150 1648  
                           l5142 1640                             l5134 1638                             l5126 1633  
                           l5118 162F                             l5048 11ED                             l3800 1E2A  
                           l3528 1DA1                             l4360 12A9                             l4352 1277  
                           l4344 124E                             l4336 1237                             l4328 1219  
                           l4192 0475                             l4184 0442                             l4168 0410  
                           l4096 02A5                             l4088 0299                             l3720 06A3  
                           l3712 0690                             l3704 065E                             l3640 0592  
                           l3624 0568                             l3632 0579                             l3616 0530  
                           l3608 0529                             l3560 04DE                             l3552 04CB  
                           l3544 04B8                             l3536 04AD                             l4280 0878  
                           l4272 0845                             l4256 1A5C                             l4520 0E85  
                           l4512 0E5B                             l4504 0DF6                             l4440 0AF4  
                           l4432 0A62                             l4424 0A0A                             l4416 09E9  
                           l4408 09B2                             l4600 1E87                             l5232 17E8  
                           l5224 17B9                             l5216 16EE                             l5208 16CE  
                           l5160 1651                             l5152 164A                             l5144 1642  
                           l5136 1639                             l5128 1635                             l4610 1A31  
                           l3802 1E30                             l3810 1D32                             l4370 12CD  
                           l4362 12B7                             l4346 1253                             l4354 1287  
                           l4338 123C                             l3730 1B76                             l4194 0483  
                           l4186 045A                             l4178 0431                             l4098 02AA  
                           l3722 06A7                             l3714 0695                             l3706 0666  
                           l3650 05A8                             l3642 059A                             l3634 0584  
                           l3626 056C                             l3618 0547                             l3570 04EB  
                           l3562 04DF                             l3546 04BD                             l3554 04CD  
                           l3538 04B1                             l4290 08C8                             l4282 088F  
                           l4274 084B                             l4266 0805                             l4258 1A12  
                           l4530 0E9E                             l4522 0E8C                             l4514 0E77  
                           l4506 0DF7                             l4442 0B20                             l4434 0A92  
                           l4450 0B7C                             l4602 1E9B                             l5234 17F0  
                           l5226 17C0                             l5218 173F                             l5170 1657  
                           l5162 1653                             l5154 164B                             l5146 1644  
                           l5138 163B                             l4612 1A33                             l3804 1E35  
                           l3820 1D43                             l3812 1D34                             l4356 1295  
                           l4364 12BC                             l4348 126F                             l3740 1B93  
                           l3732 1B78                             l4196 048C                             l4188 045E  
                           l3724 06A9                             l3716 069D                             l3708 066A  
                           l3660 05D0                             l3652 05AC                             l3644 059E  
                           l3636 0589                             l3628 056D                             l3580 0509  
                           l3572 04F0                             l3564 04E1                             l3556 04D5  
                           l3548 04C2                             l3900 1ECD                             l4292 08DF  
                           l4284 0897                             l4276 0863                             l4268 081D  
                           l4540 0EB8                             l4532 0EA2                             l4524 0E90  
                           l4516 0E7C                             l4508 0DF9                             l4460 0B9D  
                           l4452 0B82                             l4444 0B24                             l4436 0AB9  
                           l4428 0A29                             l4380 0921                             l4620 12F7  
                           l5228 17D9                             l5180 166F                             l5172 1659  
                           l5164 1654                             l5156 164C                             l5148 1646  
                           l4614 1A3C                             l4606 1A2A                             l3806 1E3A  
                           l3830 1D5A                             l3822 1D48                             l3814 1D38  
                           l3750 1BAE                             l4366 12C2                             l4358 129C  
                           l3734 1B7F                             l4198 048E                             l3726 06AF  
                           l3718 06A2                             l3670 0618                             l3662 05F4  
                           l3654 05AD                             l3646 05A2                             l3590 0517  
                           l3582 050D                             l3574 04F8                             l3566 04E5  
                           l3558 04D8                             l3910 1EDB                             l3902 1ECF  
                           l4286 08A8                             l4550 0F3E                             l4542 0EBC  
                           l4534 0EA6                             l4526 0E94                             l4518 0E81  
                           l4462 0BA1                             l4470 0BB5                             l4454 0B86  
                           l4438 0AEA                             l4390 0956                             l4382 0924  
                           l4374 08F2                             l4630 1315                             l4622 12FF  
                           l5190 169C                             l5182 1676                             l5174 165C  
                           l5166 1655                             l5158 164D                             ?_pad 002F  
                           l4608 1A2C                             l3832 1D5E                             l3824 1D4E  
                           l3840 1D77                             l3816 1D3D                             l3744 1B9A  
                           l4368 12C6                             l3736 1B83                             l3728 06B3  
                           l3680 0631                             l3672 061D                             l3664 05FA  
                           l3656 05B5                             l3648 05A6                             l3592 0519  
                           l3584 0511                             l3576 04F9                             l3568 04E6  
                           l3920 1F00                             l3904 1ED3                             l3912 1EEB  
                           l4288 08BF                             l4296 1BE7                             l4560 0F6F  
                           l4544 0EC0                             l4528 0E97                             l4536 0EAA  
                           l4552 0F42                             l4480 0C9F                             l4472 0BB7  
                           l4464 0BA9                             l4456 0B8B                             l4448 0B55  
                           l4392 095B                             l4384 0946                             l4376 08F3  
                           l3760 1B23                             l3752 1B0E                             l4640 135F  
                           l4632 132F                             l4624 1304                             l4616 12DB  
                           l5192 16AB                             l5184 167E                             l5176 165F  
                           l5168 1656                             l4810 19AA                             l4730 19CA  
                           l3770 1DE5                             l3842 1D7C                             l3834 1D68  
                           l3826 1D51                             l3818 1D3F                             l3746 1B9D  
                           l3930 147F                             l3850 1CA7                             l3738 1B8E  
                           l3682 0636                             l3690 0642                             l3666 05FF  
                           l3658 05BA                             l3594 051B                             l3586 0513  
                           l3578 04FB                             l3922 1F05                             l4298 1BEC  
                           l4570 0FA3                             l4562 0F85                             l4554 0F54  
                           l4546 0F0E                             l4538 0EB0                             l4490 0D39  
                           l4482 0CB1                             l4474 0BBF                             l4466 0BAB  
                           l4458 0B97                             l4394 0960                             l4386 0949  
                           l4378 0903                             l3762 1B29                             l3754 1B11  
                           l4650 139A                             l4642 1368                             l4634 1335  
                           l4626 1308                             l4618 12EE                             l5194 16AE  
                           l5186 1684                             l5178 1662                             l4820 19C1  
                           l4812 19AB                             l4740 1C4E                             l4732 1C39  
                           l3780 1DF9                             l3772 1DEA                             l3844 1D81  
                           l3836 1D6C                             l3828 1D56                             l3748 1BA9  
                           l3940 148F                             l3932 1483                             l3852 1CC3  
                           l3860 10CA                             l3684 0639                             l3676 0626  
                           l3668 0608                             l3692 0646                             l3596 051D  
                           l3588 0515                             l3924 1AEE                             l4580 0FDF  
                           l4572 0FAF                             l4564 0F8C                             l4556 0F64  
                           l4548 0F3A                             l4492 0D41                             l4484 0D03  
                           l4476 0BC8                             l4468 0BB1                             l4396 0966  
                           l4388 0951                             l3756 1B15                             l4660 13BC  
                           l4644 1372                             l4636 1348                             l5196 16B0  
                           l5188 168E                             l4814 0802                             l4830 1CF5  
                           l4750 1C5F                             l4742 1C52                             l4734 1C3F  
                           l3790 1E0D                             l3782 1DFB                             l3774 1DEC  
                           l3766 1DDF                             l3838 1D71                             l3950 14A7  
                           l3942 1494                             l3934 1485                             l3854 1CDD  
                           l3870 111F                             l3862 10DF                             l3694 0647  
                           l3686 063B                             l3678 062D                             l3598 051F  
                           l3926 1AF1                             l3918 1EF2                             l4582 0FEA  
                           l4574 0FB3                             l4566 0F9D                             l4558 0F69  
                           l4494 0D74                             l4486 0D0D                             l4478 0C9B  
                           l4398 097F                             l3758 1B1E                             l4590 1E43  
                           l4670 13DF                             l4662 13BF                             l4654 13A7  
                           l4646 137C                             l4638 1351                             l5198 16BA  
                           l4808 19A7                             l4816 07F9                             l4832 1D01  
                           l4824 1CE1                             l4840 1F98                             l4744 1C54  
                           l4736 1C41                             l3792 1E11                             l3784 1E01  
                           l3776 1DF0                             l3768 1DE1                             l3960 14B8  
                           l3952 14AC                             l3944 149C                             l3936 1489  
                           l3856 1CDF                             l3848 1C92                             l3872 1123  
                           l3864 10FB                             l3880 19D3                             l3696 064B  
                           l3688 0640                             l4584 0FEE                             l4576 0FC6  
                           l4496 0DAE                             l4488 0D34                             l4592 1E54  
                           l4680 1427                             l4672 13F3                             l4656 13B0  
                           l4648 138B                             l4834 1D05                             l4826 1CE8  
                           l4850 1FB6                             l4842 1F9B                             l4746 1C59  
                           l4738 1C4C                             l3794 1E20                             l3786 1E04  
                           l3778 1DF5                             l3970 14D8                             l3962 14BD  
                           l3954 14AE                             l3946 149D                             l3938 148A  
                           l3874 1151                             l3866 1103                             l3882 19DC  
                           l3698 0651                             l3890 1EAA                             l4578 0FD9  
                           l4498 0DB3                             l4594 1E5C                             l4658 13B7  
                           l4666 13C1                             l4770 1B39                             l4828 1CEC  
                           l4860 1FD4                             l4852 1FB9                             l4844 1F9F  
                           l4836 1F88                             l4748 1C5B                             l3796 1E24  
                           l3788 1E09                             l3980 14F6                             l3972 14E4  
                           l3964 14C5                             l3956 14B2                             l3948 149F  
                           l3876 1153                             l3868 1107                             l3884 19DE  
                           l4596 1E6A                             l4588 1E41                             l5660 1450  
                           l4676 1407                             l4668 13D4                             l4692 145F  
                           l4772 1B43                             l4870 1FF2                             l4862 1FD7  
                           l4854 1FBD                             l4838 1F8D                             l4846 1FA5  
                           l3798 1E25                             l3990 151F                             l3974 14E8  
                           l3966 14C6                             l3958 14B3                             l3894 1EB3  
                           l4598 1E7F                             l4686 1444                             l4678 1417  
                           l5654 132A                             l4774 1B4D                             l4872 1FF5  
                           l4864 1FDB                             l4848 1FAB                             l4856 1FC3  
                           l4880 1ABD                             l3992 1527                             l3984 14FF  
                           l3968 14C8                             l3896 1EC4                             l3888 1EA0  
                           l4688 1455                             l5656 13C9                             l4768 1B30  
                           l4874 1FF9                             l4858 1FC9                             l4866 1FE1  
                           l4882 1AC2                             l3994 1529                             l3986 150F  
                           l3978 14F1                             l3898 1EC5                             l5658 140F  
                           l4890 1B5B                             l4868 1FE7                             l4876 1AAF  
                           l3996 152E                             l3988 1517                             l4892 1B69  
                           l4884 1B53                             l4878 1AB3                             l3998 153C  
                           l4886 1B57                             l4888 1B59                             STR_1 1821  
                           STR_2 183F                             STR_3 1892                             STR_4 18A8  
                           STR_5 1800                             STR_6 1811                             STR_7 1802  
                           STR_8 1899                             STR_9 1880                             _LATA 010C  
                           _LATB 010D                             _LATC 010E                             _LATD 010F  
                           _LATE 0110                             u4010 1D5E                             u4011 1D5D  
                           u4020 1D68                             u4100 10FB                             u4021 1D67  
                           u4005 1D52                             u4101 10FA                             u4110 1107  
                           u4111 1106                             u4040 1D77                             u3320 1D8C  
                           u4120 1123                             u3400 04E5                             u4200 1EEA  
                           u5000 08B5                             u4041 1D76                             u4025 1D64  
                           u3321 1D8B                             u4121 1122                             u3401 04E4  
                           u4201 1EE9                             u4050 1D7C                             u3330 1D91  
                           u4130 1151                             u3410 04EB                             u4210 1EF1  
                           u5010 08BF                             u4051 1D7B                             u4035 1D6D  
                           u3331 1D90                             u4131 1150                             u3411 04EA  
                           u4211 1EF0                             u5011 08BE                             u3340 1DA1  
                           u5100 1208                             u4300 14BD                             u4060 1CA7  
                           u4140 19DC                             u3420 04F0                             u5020 08D5  
                           u3341 1DA0                             u4301 14BC                             u4061 1CA6  
                           u4141 19DB                             u3421 04EF                             u5005 08B1  
                           u3350 1DC1                             u5110 120E                             u4310 14D8  
                           u4070 1CC3                             u3510 0580                             u3430 0509  
                           u4230 1F00                             u4150 1EAA                             u5030 08DF  
                           u3351 1DC0                             u5111 120D                             u4311 14D7  
                           u4071 1CC2                             u4135 114D                             u3511 057F  
                           u3431 0508                             u4231 1EFF                             u4151 1EA9  
                           u5031 08DE                             u5200 12C2                             u5120 1219  
                           u4400 1575                             u4320 14F6                             u4080 1CDD  
                           u3600 0618                             u3520 0584                             u3440 050D  
                           u3360 04B7                             u4240 1F05                             u4160 1EC0  
                           u5040 1C0C                             u5201 12C1                             u5121 1218  
                           u4401 1574                             u4321 14F5                             u4081 1CDC  
                           u3601 0617                             u3521 0583                             u3505 056F  
                           u3441 050C                             u3361 04B6                             u4241 1F04  
                           u4225 1EF3                             u5025 08D1                             u5041 1C0B  
                           u5050 1C13                             u5130 1233                             u4330 152E  
                           u4250 1489                             u4090 10DF                             u3610 061D  
                           u3530 0589                             u3450 0547                             u3370 04BD  
                           u4170 1ED3                             u5210 0921                             u5051 1C12  
                           u3355 1DBD                             u5131 1232                             u4331 152D  
                           u4251 1488                             u4091 10DE                             u3611 061C  
                           u3531 0588                             u3451 0546                             u3371 04BC  
                           u4171 1ED2                             u5211 0920                             u5060 1C1D  
                           u6100 1160                             u5140 123C                             u4500 15D2  
                           u4420 1582                             u4260 148F                             u3700 065E  
                           u3540 059E                             u3460 0551                             u3380 04C2  
                           u4180 1EDA                             u5300 0AB9                             u5220 0956  
                           u5061 1C1C                             u6101 115F                             u5141 123B  
                           u4421 1581                             u4261 148E                             u4085 1CD9  
                           u3701 065D                             u3541 059D                             u3461 054F  
                           u3381 04C1                             u4181 1ED9                             u4165 1EBC  
                           u5301 0AB8                             u5221 0955                             u5070 1C27  
                           u6110 1180                             u5150 1295                             u4510 15ED  
                           u4270 1494                             u3710 066A                             u3630 0631  
                           u3550 05A2                             u3470 0552                             u3390 04DE  
                           u5310 0AEA                             u5230 095B                             u5071 1C26  
                           u6111 117F                             u5151 1294                             u4511 15EC  
                           u4415 1578                             u4271 1493                             u3711 0669  
                           u3631 0630                             u3551 05A1                             u3455 0543  
                           u3391 04DD                             u5311 0AE9                             u5231 095A  
                           u5080 1C31                             u6200 11E3                             u5160 129C  
                           u4520 1608                             u4440 1592                             u4360 1540  
                           u4280 14B2                             u4600 02C6                             u3720 0678  
                           u3640 0636                             u3560 05AC                             u3480 0562  
                           u5400 0D34                             u5320 0B54                             u5240 097F  
                           u5081 1C30                             u5161 129B                             u4521 1607  
                           u4505 15CE                             u4441 1591                             u4361 153F  
                           u4345 152F                             u4281 14B1                             u4601 02C5  
                           u3641 0635                             u3625 0627                             u3561 05AB  
                           u3481 0561                             u5401 0D33                             u5321 0B53  
                           u5241 097E                             u6210 11F2                             u6130 119D  
                           u5170 12A9                             u5090 1207                             u4530 161B  
                           u4450 1597                             u4290 14B8                             u3810 1B93  
                           u4610 02CB                             u3730 0687                             u3650 0640  
                           u3490 056C                             u5410 0D39                             u5330 0B7C  
                           u5250 0985                             u6211 11F1                             u6131 119C  
                           u5171 12A8                             u5155 1291                             u5091 1205  
                           u4531 161A                             u4515 15E9                             u4451 1596  
                           u4435 1584                             u4355 1536                             u4291 14B7  
                           u3811 1B92                             u4611 02CA                             u3731 0686  
                           u3651 063F                             u3491 056B                             u4195 1EDC  
                           u5411 0D38                             u5331 0B7B                             u5251 0984  
                           u6220 11F6                             u3820 1BBC                             u5180 12B7  
                           u4460 15AB                             u4380 155A                             u4700 0410  
                           u4540 027C                             u3740 0690                             u3660 0646  
                           u3580 05D0                             u5500 0F92                             u5420 0DAE  
                           u5340 0B86                             u5260 09CC                             u6221 11F5  
                           u6205 11DF                             u6125 1191                             u3821 1BBB  
                           u5181 12B6                             u4525 1604                             u4461 15AA  
                           u4381 1559                             u3805 1B88                             u4701 040F  
                           u4541 027B                             u3741 068F                             u3725 0674  
                           u3661 0645                             u3581 05CF                             u5501 0F90  
                           u5421 0DAD                             u5341 0B85                             u5261 09CB  
                           u6150 11B7                             u3910 1E11                             u5190 12BC  
                           u4470 15B2                             u4390 156D                             u4710 0415  
                           u4550 0282                             u3750 0695                             u3670 064B  
                           u3590 05FF                             u5510 0F93                             u5430 0DE5  
                           u5350 0B9D                             u5270 09D2                             u3830 1B15  
                           u6151 11B6                             u3911 1E10                             u5191 12BB  
                           u5175 12A5                             u4471 15B1                             u4391 156C  
                           u4375 1542                             u4711 0414                             u4551 0281  
                           u3751 0694                             u3671 064A                             u3591 05FE  
                           u3583 05CC                             u3575 05AF                             u5431 0DE4  
                           u5351 0B9C                             u5271 09D1                             u3831 1B14  
                           u4800 1021                             u4480 15B8                             u4720 0429  
                           u4640 03C1                             u4560 0287                             u3760 06A2  
                           u3680 0651                             u5520 0FA2                             u5440 0E5B  
                           u5360 0BA1                             u5280 0A28                             u5600 1348  
                           u6400 16AB                             u6320 1684                             u6145 11AB  
                           u3905 1E05                             u4801 1020                             u5185 12B3  
                           u4481 15B7                             u4385 1556                             u4721 0428  
                           u4625 0344                             u4561 0286                             u3761 06A1  
                           u3681 0650                             u5521 0FA1                             u5441 0E5A  
                           u5361 0BA0                             u5281 0A27                             u5601 1347  
                           u6401 16AA                             u6321 1683                             u6170 11C5  
                           u6090 115C                             u3930 1E20                             u4810 1043  
                           u4490 15C4                             u4730 0430                             u4650 03D8  
                           u4570 02A4                             u3770 06A7                             u3690 0658  
                           u5530 0FC6                             u5450 0E81                             u5370 0BB1  
                           u5290 0A92                             u5610 1372                             u6410 16B5  
                           u6330 168A                             u6171 11C4                             u6091 115B  
                           u3931 1E1F                             u4811 1042                             u4491 15C3  
                           u4731 042F                             u4635 036F                             u4571 02A3  
                           u3771 06A6                             u3691 0657                             u5531 0FC5  
                           u5451 0E80                             u5371 0BB0                             u5291 0A91  
                           u5611 1371                             u6411 16B4                             u6331 1689  
                           u6180 11CB                             u4820 19F1                             u4740 0436  
                           u4580 02AA                             u3780 06B3                             u4900 10BE  
                           u5540 0FD9                             u5460 0E85                             u5380 0CB1  
                           u3860 1B29                             u5620 137C                             u5700 1B4D  
                           u6420 16BA                             u6340 168E                             u6181 11CA  
                           u6165 11BB                             u3925 1E12                             u4821 19F0  
                           u4741 0435                             u4645 03BD                             u4581 02A9  
                           u3781 06B2                             u5541 0FD8                             u5461 0E84  
                           u5445 0E57                             u5381 0CB0                             u3861 1B28  
                           u3845 1B1A                             u5621 137B                             u5701 1B4C  
                           u6421 16B9                             u6341 168D                             u6190 11CF  
                           u3950 1E30                             u3870 1DE5                             u3790 1B83  
                           u4750 0442                             u4590 02AF                             u4830 1070  
                           u4910 1A73                             u5550 0FDF                             u5470 0EB0  
                           u5390 0D03                             u5630 13DE                             u6430 16C4  
                           u6350 1693                             u6191 11CE                             u3951 1E2F  
                           u3935 1E1C                             u3871 1DE4                             u4815 103F  
                           u3791 1B82                             u4751 0441                             u4655 03D4  
                           u4591 02AE                             u4911 1A72                             u5551 0FDE  
                           u5535 0FC2                             u5471 0EAF                             u5391 0D02  
                           u3855 1B1F                             u5631 13DD                             u6431 16C3  
                           u6351 1692                             u5720 1F8D                             u5800 1ACD  
                           u3960 1E35                             u3880 1DF0                             u4760 0450  
                           u4680 0400                             u4840 107E                             u4920 1A17  
                           u5480 0F54                             u5560 1E54                             u6440 16C9  
                           u6360 1697                             u5721 1F8C                             u5801 1ACC  
                           u3961 1E34                             u3945 1E26                             u3881 1DEF  
                           u4681 03FF                             u4665 03E3                             u4841 107D  
                           u4921 1A16                             u5545 0FD5                             u5481 0F53  
                           u5385 0CAD                             u5561 1E53                             u6505 1788  
                           u6441 16C8                             u6361 1696                             u3890 1E01  
                           u3970 1D38                             u4770 046B                             u4850 108B  
                           u4930 082A                             u5490 0F64                             u5570 1E9B  
                           u6450 16D3                             u6370 169C                             u3891 1E00  
                           u3971 1D37                             u4771 046A                             u4675 03F6  
                           u4835 106C                             u5491 0F63                             u5571 1E9A  
                           u6451 16D2                             u6371 169B                             u5740 1FAB  
                           u3980 1D43                             u4780 0483                             u4860 1095  
                           u4940 0845                             u5580 12EE                             u6460 16D8  
                           u6380 16A2                             u5741 1FAA                             u3981 1D42  
                           u4781 0482                             u4765 044C                             u4861 1094  
                           u4941 0844                             u5485 0F50                             u5581 12ED  
                           u6461 16D7                             u6381 16A1                             u3990 1D4E  
                           u4790 049D                             u4870 10A5                             u4950 084B  
                           u5590 1335                             u6470 16E3                             u6390 16A6  
                           u5735 1F93                             u3991 1D4D                             u4791 049C  
                           u4775 0467                             u4695 0402                             u4871 10A4  
                           u4855 1087                             u4951 084A                             u4935 0826  
                           u5495 0F60                             u5591 1334                             u6471 16E2  
                           u6391 16A5                             u5760 1FC9                             u4880 10B2  
                           u4960 0859                             u5761 1FC8                             u4785 047F  
                           u4945 0841                             u4890 10BD                             u4970 0877  
                           u5755 1FB1                             u4891 10BB                             u4971 0876  
                           u6627 1668                             u5780 1FE7                             u4980 0885  
                           u5781 1FE6                             u5685 1C45                             u4885 10AE  
                           u4965 0855                             u6637 17F6                             u6485 1748  
                           u4990 088F                             u5775 1FCF                             u6647 1C4F  
                           u4991 088E                             u6495 1768                             u6657 1C5C  
                           u4985 0881                             u6667 1CF0                             u5795 1FED  
                           u6677 1CFD                             u6687 1D09                             u6697 1A37  
                           _WPUB 020D                             _WPUE 0210                             abs@a 0027  
              ?_Lcd_Write_String 0025                             _dbuf 0220                             _labs 1A12  
                           _main 1629                             _dtoa 1200                             _prec 00ED  
                           _temp 0128                             pad@i 0033                             pad@p 0030  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                    ___fpclassifyf 104B                             start 024E  
             ??_Lcd_Write_String 0027                  ___fldiv@new_exp 0046                  EEPROM_Write@dir 0073  
                __end_of_Lcd_Cmd 1A3F                            ??_IOC 007A                            ??_abs 0029  
           __end_of_EEPROM_Write 1AAF                            ??_pad 0032                    ___fltol@sign1 0028  
                          ?_labs 0020                  __end_of___fladd 06B5                            ?_main 0070  
                          ?_dtoa 0036                  __end_of___fldiv 1629                  __end_of___awdiv 1E3F  
                __end_of___flneg 19DF                            _EEADR 0191                            STR_10 1899  
                          _EEDAT 0193                            STR_11 1889                            STR_12 185C  
                          STR_13 1869                            STR_22 18A4                            STR_14 1830  
                          STR_15 184E                            STR_16 181B                            STR_17 1875  
                          STR_18 1821                            STR_19 18A0                  __end_of___awmod 1D86  
                __end_of___flmul 04AD                  __end_of___flsub 1B0E                  __end_of___fltol 1F11  
                ___awdiv@divisor 0020                            _IOCBF 0396                            _IOCBN 0395  
                          i1l300 1A57                            i1l312 06D3                            i1l321 0707  
                          i1l313 06C4                            i1l401 1F85                            i1l330 072F  
                          i1l322 06F8                            i1l411 1BE4                            i1l316 07F8  
                          i1l341 078C                            i1l333 0758                            i1l325 0721  
                          i1l317 06ED                            i1l309 19B7                            i1l405 1F85  
                          i1l350 07B4                            i1l342 077D                            i1l334 0749  
                          i1l326 0712                            i1l318 06DE                            i1l353 07DD  
                          i1l345 07A9                            i1l337 0772                            i1l329 073E  
                          i1l417 1A90                            i1l442 1AA8                            i1l354 07CE  
                          i1l346 079A                            i1l338 0763                            i1l290 024C  
                          i1l266 003E                            i1l444 1AAD                            i1l445 1AAE  
                          i1l349 07C3                            i1l358 07E8                            i1l382 1AE5  
                          i1l374 1AD6                            i1l295 101A                            i1l448 19EB  
                          i1l392 1A11                            i1l289 023C                            i1l386 1AEC  
                          i1l378 1ADE                            i1l395 19C0                            i1l389 1AED  
              ?i1_Lcd_Set_Cursor 0073                  ___awdiv@counter 0025                    ??_Keypad_Init 0070  
                   vfpfcnvrt@fmt 006B                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E                            _TRISD 008F                            _TRISE 0090  
                    ?i1_Lcd_Port 0070               ??i1_Lcd_Set_Cursor 0074                            _clave 0139  
                          _flags 0130              read_prec_or_width@c 002B              read_prec_or_width@n 002C  
                          _fputc 1D86                            _fputs 1B98                            _tecla 007D  
                          labs@a 0020                       _Leer_Clave 1A3F                            pad@fp 0035  
                          _width 012C                            _putch 0003                            dtoa@d 0036  
                          dtoa@i 0041                            dtoa@p 003C                            dtoa@s 0040  
                          dtoa@w 003E                            status 0003                            wtemp0 007E  
                __end_of_sprintf 1B74                   ?___fpclassifyf 0020                 EEPROM_Write@data 0070  
               __end_of_Lcd_Init 1D32                 __end_of_Lcd_Port 1C37                  __initialization 0250  
                   __end_of_labs 1A28                     __end_of_main 1800                     __end_of_dtoa 12D9  
                         ??_labs 0024                           ??_main 014D                           ??_dtoa 0038  
     __end_of_read_prec_or_width 1EA0                   _convertedValue 013E                           _ADCON0 009D  
                         _ADCON1 009E                           ?_fputc 0020                           ?_fputs 0028  
                         _ADRESH 009C                           _ADRESL 009B                           _EECON2 0196  
               ___awdiv@dividend 0022                           _APFCON 011D                           _ANSELA 018C  
                         ?_putch 0070                           _ANSELB 018D                           _ANSELD 018F  
                         _ANSELE 0190              __end_of_Keypad_Init 19B8                           _BORCON 0116  
                         i1l5010 1010                           i1l5002 1002                           i1l1298 1C91  
                         i1l5012 1014                           i1l5100 1A74                           i1l5102 1A77  
                         i1l5008 1003                           i1l5104 1A81                           i1l5106 1A85  
                         i1l5060 1F12                           i1l5300 00D0                           i1l5062 1F17  
                         i1l5070 1F2E                           i1l5310 00F7                           i1l5302 00D1  
                         i1l5072 1F34                           i1l5080 1F4B                           i1l5064 1F22  
                         i1l5400 01CA                           i1l5320 0108                           i1l5312 00F9  
                         i1l5304 00DD                           i1l5240 000C                           i1l5058 19B8  
                         i1l5082 1F51                           i1l5090 1F68                           i1l5074 1F3F  
                         i1l5066 1F25                           i1l5402 01D0                           i1l5410 01E7  
                         i1l5330 0111                           i1l5322 010A                           i1l5314 00FA  
                         i1l5306 00E3                           i1l5250 0038                           i1l5242 001A  
                         i1l5092 1F6E                           i1l5084 1F5C                           i1l5076 1F42  
                         i1l5068 1F29                           i1l5420 0204                           i1l5412 01ED  
                         i1l5404 01D7                           i1l5340 0118                           i1l5332 0112  
                         i1l5324 010D                           i1l5316 00FB                           i1l5308 00EA  
                         i1l5260 0049                           i1l5244 0020                           i1l5236 0006  
                         i1l5094 1F79                           i1l5086 1F5F                           i1l5078 1F46  
                         i1l5430 0216                           i1l5422 0205                           i1l5414 01F4  
                         i1l5406 01D9                           i1l5350 0132                           i1l5342 011B  
                         i1l5334 0113                           i1l5326 010F                           i1l5318 0107  
                         i1l5270 006F                           i1l5254 0042                           i1l5262 0059  
                         i1l5246 0027                           i1l5238 0009                           i1l4720 1ADC  
                         i1l5096 1F7C                           i1l5088 1F63                           i1l4800 1BD8  
                         i1l5440 021F                           i1l5432 0218                           i1l5416 0201  
                         i1l5424 0210                           i1l5408 01DA                           i1l5360 014E  
                         i1l5352 0139                           i1l5344 0121                           i1l5336 0114  
                         i1l5328 0110                           i1l5272 0074                           i1l5280 008A  
                         i1l5264 005D                           i1l5256 0046                           i1l5248 0034  
                         i1l4722 1ADF                           i1l4714 1ACF                           i1l5098 1F80  
                         i1l4802 1BDC                           i1l5442 0220                           i1l5434 0219  
                         i1l5426 0211                           i1l5418 0203                           i1l5370 0176  
                         i1l5362 015D                           i1l5354 0140                           i1l5346 0129  
                         i1l5338 0115                           i1l5290 00A8                           i1l5282 0090  
                         i1l5274 007B                           i1l5266 0063                           i1l5450 0236  
                         i1l4900 06BD                           i1l4724 1AE3                           i1l4716 1AD3  
                         i1l4804 1BDE                           i1l5452 023E                           i1l5436 021A  
                         i1l5428 0213                           i1l5380 018B                           i1l5372 017D  
                         i1l5364 0160                           i1l5356 0144                           i1l5348 012D  
                         i1l5292 00B4                           i1l5284 009F                           i1l5276 0082  
                         i1l5268 006B                           i1l4902 06C9                           i1l4726 1AE6  
                         i1l4718 1AD8                           i1l4806 1BE2                           i1l5454 0244  
                         i1l5438 021D                           i1l5390 01A7                           i1l5382 0192  
                         i1l5374 017E                           i1l5366 0164                           i1l5358 0148  
                         i1l5294 00BA                           i1l5286 00A2                           i1l5278 0086  
                         i1l4752 1A92                           i1l4920 0717                           i1l4912 06F1  
                         i1l4760 19E0                           i1l4728 1AEA                           i1l5456 024B  
                         i1l5448 0222                           i1l5392 01B6                           i1l5384 0199  
                         i1l5376 0182                           i1l5368 0170                           i1l5296 00C1  
                         i1l5288 00A6                           i1l4754 1AA1                           i1l4930 0742  
                         i1l4914 06FD                           i1l4906 06D7                           i1l4762 19E8  
                         i1l5394 01B9                           i1l5386 019D                           i1l5378 0186  
                         i1l5298 00CE                           i1l4756 1AA2                           i1l4932 074E  
                         i1l4924 0728                           i1l4908 06E3                           i1l4764 19E9  
                         i1l4780 1A01                           i1l5396 01BD                           i1l5388 01A1  
                         i1l4758 1AA7                           i1l4950 079F                           i1l4942 0776  
                         i1l4926 0734                           i1l4918 070B                           i1l4782 1A05  
                         i1l4790 1BC4                           i1l5398 01C3                           i1l5662 0051  
                         i1l4960 07C7                           i1l4944 0782                           i1l4936 075C  
                         i1l4784 1A07                           i1l4792 1BC6                           i1l5664 022B  
                         i1l4962 07D3                           i1l4954 07AD                           i1l4938 0768  
                         i1l4786 1A0F                           i1l4778 19FF                           i1l4794 1BD0  
                         i1l4972 07F7                           i1l4956 07B9                           i1l4948 0793  
                         i1l4796 1BD2                           i1l4788 1BBE                           i1l4966 07E1  
                         i1l4982 1A41                           i1l4990 1C64                           i1l4798 1BD6  
                         i1l4968 07ED                           i1l4896 19AF                           i1l4984 1A4D  
                         i1l4976 1A40                           i1l4992 1C68                           i1l4898 06B5  
                         i1l4986 1A51                           i1l4994 1C6C                           i1l4996 1C7A  
                         i1l4988 1C63                           i1l4998 1C83                           u600_20 07B9  
                         u600_21 07B8                           u601_20 07C7                           u601_21 07C6  
                         u602_20 07D3                           u602_21 07D2                           u603_20 07E1  
                         u603_21 07E0                           u604_20 07ED                           u604_21 07EC  
                         u700_27 07BC                           u605_20 1A57                           u605_21 1A56  
                         u701_27 07CA                           u606_20 1C7A                           u606_21 1C79  
                         u630_25 1F74                           u702_27 07D6                           u607_20 1C83  
                         u623_20 1F17                           u631_20 1A90                           u607_21 1C82  
                         u623_21 1F16                           u631_21 1A8F                           u703_27 07E4  
                         u608_20 101A                           u608_21 1019                           u624_25 1F1D  
                         u704_27 07F0                           u625_20 1F34                           u625_21 1F33  
                         _OSCCON 0099                           u626_25 1F3A                           u627_20 1F51  
                         u651_20 003D                           u627_21 1F50                           u651_21 003C  
                         u571_25 1BC9                ?i1_Lcd_Write_Char 0070                           u564_20 1AD3  
                         u660_20 023C                           u652_20 0074                           u564_21 1AD2  
                         u660_21 023B                           u652_21 0073                           u628_25 1F57  
                         u581_20 06BD                           u565_20 1ADC                           u629_20 1F6E  
                         u653_20 0090                           u581_21 06BC                           u565_21 1ADB  
                         u629_21 1F6D                           u653_21 008F                           u590_20 0734  
                         u582_20 06C9                           u566_20 1AE3                           u654_20 00B4  
                         u590_21 0733                           u582_21 06C8                           u566_21 1AE2  
                         u654_21 00B3                           u670_27 0013                           u591_20 0742  
                         u583_20 06D7                           u567_20 1AEA                           u655_20 0132  
                         u591_21 0741                           u583_21 06D6                           u567_21 1AE9  
                         u655_21 0131                           u671_27 0098                           u592_20 074E  
                         u584_20 06E3                           u656_20 014E                           u592_21 074D  
                         u584_21 06E2                           u656_21 014D                        ??_Lcd_Cmd 0021  
                         u680_27 1A0A                           u672_27 00D6                    vfpfcnvrt@done 00D1  
                         u569_20 1AAD                           u593_20 075C                           u585_20 06F1  
                         u657_20 0170                           u569_21 1AAC                           u593_21 075B  
                         u585_21 06F0                           u657_21 016F                           u681_27 06C0  
                         u673_27 0100                           u594_20 0768                           u586_20 06FD  
                         u658_20 018B                           u594_21 0767                           u586_21 06FC  
                         u658_21 018A                           u690_27 0737                           u682_27 06CC  
                         u674_27 0156                           u595_20 0776                           u587_20 070B  
                         u659_20 01A7                           u595_21 0775                           u587_21 070A  
                         u659_21 01A6                           u691_27 0745                           u683_27 06DA  
                         u675_27 01AF                           u596_20 0782                           u588_20 0717  
                         u596_21 0781                           u588_21 0716                           u692_27 0751  
                         u684_27 06E6                           u676_27 01DF                           u597_20 0793  
                         u589_20 0728                           u597_21 0792                           u589_21 0727  
                         u693_27 075F                           u685_27 06F4                           u677_27 020A  
                         u598_20 079F                           u598_21 079E                           u694_27 076B  
                         u686_27 0700                           u678_27 1BD3                           u599_20 07AD  
                         u599_21 07AC                           u695_27 0779                           u687_27 070E  
                         u679_27 1BDF                           u696_27 0785                           u688_27 071A  
                         u697_27 0796                           u689_27 072B                           u698_27 07A2  
                         u699_27 07B0                           _WDTCON 0097                           _SSPADD 0212  
                   ?i1_Lcd_Clear 0070                           _SSPBUF 0211                 __end_of___xxtofl 1200  
             ??i1_Lcd_Write_Char 0071                __end_ofi1_Lcd_Cmd 1A12                     vfprintf@cfmt 00DC  
                         ___flge 10CA                           ___fleq 1C92                i1Lcd_Write_Char@a 0074  
              i1Lcd_Write_Char@y 0073                        ??___fladd 0028                           ___wmul 1B0E  
                      ??___fldiv 003C                        ??___awdiv 0024                        ??___flneg 0024  
                      ??___awmod 0024                        ??___flmul 0031                        ??___flsub 004B  
                      ??___fltol 0024                           _efgtoa 08F0                           _buffer 01A0  
                         _floorf 0805                           _estado 0133                           _memcpy 1BE5  
           read_prec_or_width@ap 0026                 ___awdiv@quotient 0027                  ___awmod@divisor 0020  
                ___awmod@counter 0025                           pad@buf 002F                           dtoa@fp 003B  
                         _strcmp 1C62                           _strcpy 1A58                           fputc@c 0020  
                         fputs@c 002B                           fputs@i 002C                           fputs@s 002E  
                ___fpclassifyf@e 002A                  ___fpclassifyf@u 002C                  ___fpclassifyf@x 0020  
                         putch@c 0070                 __end_of_vfprintf 1B51                        ??_sprintf 00EC  
                    ?_Leer_Clave 0070                  Lcd_Set_Cursor@a 0025                  Lcd_Set_Cursor@b 0023  
                Lcd_Set_Cursor@y 0027                  Lcd_Set_Cursor@z 0026                       ___flge@ff1 0043  
                     ___flge@ff2 0047                  ??___fpclassifyf 0024                     ___xxtofl@arg 0030  
                   ___xxtofl@exp 002F                     ___xxtofl@val 0026                       ___fleq@ff1 0020  
                     ___fleq@ff2 0024          __end_of__initialization 026E                       ___flneg@f1 0020  
              __end_of_Lcd_Clear 19D3                       ___fltol@f1 0020                 ??_Escribir_Clave 0074  
                 __pcstackCOMMON 0070                    __end_of_fputc 1DDF                    __end_of_fputs 1BBD  
                  __end_of_putch 0004          _ADC_GetConversionResult 19C1                   _Lcd_Set_Cursor 1F86  
                 _OPTION_REGbits 0095                      _Keypad_Init 19AF                        ?_Lcd_Init 0070  
                      ?_Lcd_Port 0070                          ??_fputc 0023                          ??_fputs 0029  
                        ??_putch 0020                     _EEPROM_Write 1A91                       __pbssBANK1 00ED  
                     __pbssBANK2 0120                       __pbssBANK3 01A0                       __pbssBANK4 0220  
              __end_of__Umul8_16 1B98                       __pmaintext 1629                          ?___flge 0043  
                        ?___fleq 0020                          ?___wmul 0020                       __pintentry 0004  
                        ?_efgtoa 0062                          ?_floorf 004E                          ?_memcpy 0020  
         __end_of_Lcd_Set_Cursor 2000                          ?_strcmp 0070                          ?_strcpy 0020  
                      ?___xxtofl 0026                     ??i1_Lcd_Port 0070                          _OSCTUNE 0098  
                     ??_Lcd_Init 0023                       ??_Lcd_Port 0020                   _Lcd_Write_Char 1C37  
                        _Lcd_Cmd 1A28             _ADC_InterruptHandler 012E               __end_ofi1_Lcd_Port 1AEE  
                        ___fladd 04AD                          ___fldiv 147F                          ___awdiv 1DDF  
                        ___flneg 19D3                          ___awmod 1D32                          ___flmul 0272  
                        ___flsub 1AEE                          ___fltol 1EA0                        ?_vfprintf 006D  
      ??_ADC_GetConversionResult 0022                  ?_Lcd_Set_Cursor 0023                          __ptext1 1B51  
                        __ptext2 1B2E                          __ptext3 12D9                          __ptext4 1E3F  
                        __ptext5 1B0E                          __ptext6 08F0                          __ptext7 1A58  
                        __ptext8 1BE5                          __ptext9 1A12            read_prec_or_width@fmt 002E  
                     ??___xxtofl 002A                 ___awmod@dividend 0022                          efgtoa@c 0066  
                        efgtoa@d 00AB                          efgtoa@e 00B0                          efgtoa@f 0062  
                        efgtoa@g 00C3                          efgtoa@h 00B8                          efgtoa@i 00C0  
                        efgtoa@l 00BC                          efgtoa@m 00AD                          efgtoa@n 00C7  
                        efgtoa@p 00A2                          efgtoa@t 00A4                          efgtoa@u 00C9  
                        efgtoa@w 00B2       __end_ofi1_Lcd_Write_String 1A91                          _sprintf 1B51  
                        clrloop0 19A2           __end_of_Lcd_Write_Char 1C62             end_of_initialization 026E  
                        floorf@e 005C                          floorf@m 0058                          floorf@u 005E  
                        floorf@x 004E                ??_Keypad_Get_Char 0070                          memcpy@d 0026  
                        memcpy@n 0021                          memcpy@s 0027                    ??_EEPROM_Read 0070  
                        fputc@fp 0022                          fputs@fp 0028               _read_prec_or_width 1E3F  
   __end_of_ADC_IsConversionDone 0800                Escribir_Clave@pos 0076                Escribir_Clave@str 0075  
              __end_of_vfpfcnvrt 147F                       efgtoa@mode 00A9                       efgtoa@sign 00C2  
            ?_read_prec_or_width 0026                 vfpfcnvrt@convarg 00D2                        Lcd_Port@a 0020  
                     ??_vfprintf 00DA                          strcmp@l 0073                          strcmp@r 0070  
                      i1_Lcd_Cmd 19FE                          strcpy@d 0024                        _PORTBbits 000D  
                    ___fladd@grs 0033                    ___xxtofl@sign 002E                        _TRISAbits 008C  
                      _TRISBbits 008D                        _TRISCbits 008E                        _TRISDbits 008F  
            _ADC_StartConversion 0802             ??_read_prec_or_width 0028                      ___fldiv@grs 0048  
                    ___fldiv@rem 0041                     ??_Leer_Clave 0073                  ?_Lcd_Write_Char 0070  
              Lcd_Write_String@a 0025                Lcd_Write_String@i 0028                      ___flmul@grs 0037  
           ?_ADC_StartConversion 0070              __end_of_EEPROM_Read 19EC                        _Lcd_Clear 19CA  
                 __end_of___flge 1155                   __end_of___fleq 1CE1                      vfpfcnvrt@ap 006C  
                    vfpfcnvrt@cp 00D8                      vfpfcnvrt@fp 00D7                   __end_of___wmul 1B2E  
                     ?i1_Lcd_Cmd 0070                 _Lcd_Write_String 1AAF                   __end_of_efgtoa 1000  
             __end_of_Leer_Clave 1A58                   _ADC_Initialize 19A7                   __end_of_floorf 08F0  
                 __end_of_memcpy 1C0D                       floorf@F521 0120                     ?_Keypad_Init 0070  
                 __end_of_strcmp 1C92                   __end_of_strcpy 1A74              start_initialization 0250  
                    __end_of_IOC 024E                      __end_of_abs 19FE                      __end_of_pad 104B  
               i1_Lcd_Set_Cursor 1F11            __end_of___fpclassifyf 10CA            ??_ADC_StartConversion 0020  
                    vfprintf@fmt 006D                       ?_Lcd_Clear 0070                         ??___flge 004B  
                       ??___fleq 0028                         ??___wmul 0024                         ??_efgtoa 0067  
         __end_of_ADC_Initialize 19AF                        __Umul8_16 1B74                         ??_floorf 0052  
                       ??_memcpy 0023                  Lcd_Write_Char@a 0024                  Lcd_Write_Char@y 0023  
                       ??_strcmp 0072                         ??_strcpy 0022                        ___fladd@a 0024  
                      ___fladd@b 0020                        ___fldiv@a 0034                        ___fldiv@b 0038  
                      ___flmul@a 002D                        ___flmul@b 0029                      __pbssCOMMON 007C  
                      ___flsub@a 0043                        ___flsub@b 0047                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0                    __pcstackBANK2 0140  
           _ADC_IsConversionDone 07F9             i1Lcd_Write_Char@temp 0072                         ?_Lcd_Cmd 0070  
                    _EEPROM_Read 19DF                      _efgtoa$1448 00A6                        _dtoa$1417 0039  
               ??_Lcd_Set_Cursor 0024                         ?___fladd 0020                         ?___fldiv 0034  
                       ?___awdiv 0020                         ?___flneg 0020                         ?___awmod 0020  
                       ?___flmul 0029                         ?___flsub 0043                         ?___fltol 0020  
                     ?__Umul8_16 0020                  ?_ADC_Initialize 0070                      _clave_enter 0134  
               i1_Lcd_Write_Char 1BBD                      ??i1_Lcd_Cmd 0071             i1Lcd_Set_Cursor@temp 0078  
                _Keypad_Get_Char 06B5            ?_ADC_IsConversionDone 0070                         ?_sprintf 00DE  
                  ??i1_Lcd_Clear 0073                   ___wmul@product 0024                         _LATAbits 010C  
                       _LATBbits 010D                         _LATCbits 010E                         _LATDbits 010F  
                      clear_ram0 19A1               i1_Lcd_Write_String 1A74                         Lcd_Cmd@a 0022  
                       _PIR2bits 0012                      ??_Lcd_Clear 0023              ?i1_Lcd_Write_String 0075  
                      _vfpfcnvrt 12D9                       _ADCON0bits 009D                ___wmul@multiplier 0020  
               ??_Lcd_Write_Char 0021                         _Lcd_Init 1CE1                         _Lcd_Port 1C0D  
                     vfpfcnvrt@c 00D6             ??i1_Lcd_Write_String 0077         __end_of_Lcd_Write_String 1ACE  
                     _EECON1bits 0195                        memcpy@tmp 0024                       vfprintf@ap 006F  
                     vfprintf@fp 00DB         ?_ADC_GetConversionResult 0020              __end_ofi1_Lcd_Clear 19C1  
        __end_of_Keypad_Get_Char 07F9                      ??__Umul8_16 0022                       ?_vfpfcnvrt 006B  
       __end_ofi1_Lcd_Set_Cursor 1F86               ___fpclassifyf@F465 0124           ??_ADC_IsConversionDone 0020  
                     sprintf@fmt 00DE                         ___xxtofl 1155                i1Lcd_Set_Cursor@a 0075  
              i1Lcd_Set_Cursor@b 0073                i1Lcd_Set_Cursor@y 0077                i1Lcd_Set_Cursor@z 0076  
                       __ptext10 0805                         __ptext11 104B                         __ptext20 147F  
                       __ptext12 1EA0                         __ptext21 1200                         __ptext13 1AEE  
                       __ptext30 1AAF                         __ptext22 101B                         __ptext14 04AD  
                       __ptext31 1C37                         __ptext23 1B98                         __ptext15 19D3  
                       __ptext40 19C1                         __ptext32 1F86                         __ptext24 1D86  
                       __ptext16 0272                         __ptext33 1CE1                         __ptext25 0003  
                       __ptext17 1B74                         __ptext50 19DF                         __ptext42 1A74  
                       __ptext34 19CA                         __ptext26 19EC                         __ptext18 10CA  
                       __ptext51 19AF                         __ptext43 1BBD                         __ptext35 1A28  
                       __ptext27 1D32                         __ptext19 1C92                         __ptext52 06B5  
                       __ptext44 1F11                         __ptext36 1C0D                         __ptext28 1DDF  
                       __ptext53 1001                         __ptext45 19B8                         __ptext37 0802  
                       __ptext29 1155                         __ptext54 1A91                         __ptext46 19FE  
                       __ptext38 07F9                         __ptext47 1ACE                         __ptext39 19A7  
                       __ptext48 1C62                         __ptext49 1A3F                    ?_EEPROM_Write 0070  
                       _cont_key 007C                       strcpy@dest 0025                      i1Lcd_Port@a 0070  
                       efgtoa@fp 00AF                         efgtoa@ne 00A0                         efgtoa@pp 00A8  
                       efgtoa@ou 00B4                         int$flags 007E                         _vfprintf 1B2E  
            i1Lcd_Write_String@a 0075              i1Lcd_Write_String@i 0078                   _Escribir_Clave 1001  
                     _INTCONbits 000B                         memcpy@d1 0025                         memcpy@s1 0020  
                 __pstringtext10 1880                   __pstringtext11 1889                   __pstringtext12 1892  
                 __pstringtext13 1899                   __pstringtext14 18A0                   __pstringtext15 18A4  
                 __pstringtext16 18A8                   __pstringtext17 0000                   ??_EEPROM_Write 0071  
             Lcd_Write_Char@temp 0022                         intlevel1 0000                        sprintf@ap 0141  
       __end_ofi1_Lcd_Write_Char 1BE5      __end_of_ADC_StartConversion 0805                     ?_EEPROM_Read 0070  
                    i1_Lcd_Clear 19B8  __end_of_ADC_GetConversionResult 19CA                       i1Lcd_Cmd@a 0072  
                      strcpy@src 0020                 ??_ADC_Initialize 0020                      efgtoa@nmode 00AA  
         __end_of_Escribir_Clave 101B                 ?_Keypad_Get_Char 0070                      ??_vfpfcnvrt 00CD  
             Lcd_Set_Cursor@temp 0028                    __pstringtext1 1800                    __pstringtext2 1811  
                  __pstringtext3 1821                    __pstringtext4 1830                    __pstringtext5 183F  
                  __pstringtext6 184E                    __pstringtext7 185C                    __pstringtext8 1869  
                  __pstringtext9 1875           __Umul8_16@multiplicand 0020                         sprintf@f 0142  
                       sprintf@s 0140                       i1_Lcd_Port 1ACE                      _SSPCON1bits 0215  
                    _SSPCON2bits 0216                    ___fladd@signs 0030                     ___fladd@aexp 0031  
                   ___fladd@bexp 0032             __Umul8_16@multiplier 0028                       _SSPCONbits 0215  
                 EEPROM_Read@dir 0072                __Umul8_16@product 0024  
