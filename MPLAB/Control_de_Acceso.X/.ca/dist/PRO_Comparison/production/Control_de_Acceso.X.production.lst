

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan 29 15:14:36 2025

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F1937
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    25                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    26                           	psect	clrtext,global,class=CODE,delta=2
    27                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text30,local,class=CODE,merge=1,delta=2
    62                           	psect	text31,local,class=CODE,merge=1,delta=2
    63                           	psect	text32,local,class=CODE,merge=1,delta=2
    64                           	psect	text33,local,class=CODE,merge=1,delta=2
    65                           	psect	text34,local,class=CODE,merge=1,delta=2
    66                           	psect	text35,local,class=CODE,merge=1,delta=2
    67                           	psect	text36,local,class=CODE,merge=1,delta=2
    68                           	psect	text37,local,class=CODE,merge=1,delta=2
    69                           	psect	text38,local,class=CODE,merge=1,delta=2
    70                           	psect	text39,local,class=CODE,merge=1,delta=2
    71                           	psect	text40,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	psect	text42,local,class=CODE,merge=1,delta=2
    74                           	psect	text43,local,class=CODE,merge=1,delta=2
    75                           	psect	text44,local,class=CODE,merge=1,delta=2
    76                           	psect	text45,local,class=CODE,merge=1,delta=2
    77                           	psect	text46,local,class=CODE,merge=1,delta=2
    78                           	psect	text47,local,class=CODE,merge=1,delta=2
    79                           	psect	text48,local,class=CODE,merge=1,delta=2,group=3
    80                           	psect	text49,local,class=CODE,merge=1,delta=2
    81                           	psect	text50,local,class=CODE,merge=1,delta=2
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    83                           	dabs	1,0x7E,2
    84     0000                     
    85                           ; Generated 06/07/2023 GMT
    86                           ; 
    87                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC16F1937 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119     0000                     	;# 
   120     0001                     	;# 
   121     0002                     	;# 
   122     0003                     	;# 
   123     0004                     	;# 
   124     0005                     	;# 
   125     0006                     	;# 
   126     0007                     	;# 
   127     0008                     	;# 
   128     0009                     	;# 
   129     000A                     	;# 
   130     000B                     	;# 
   131     000C                     	;# 
   132     000D                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0015                     	;# 
   140     0016                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001C                     	;# 
   148     001E                     	;# 
   149     001F                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     008F                     	;# 
   154     0090                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0095                     	;# 
   159     0096                     	;# 
   160     0097                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009A                     	;# 
   164     009B                     	;# 
   165     009B                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     010C                     	;# 
   170     010D                     	;# 
   171     010E                     	;# 
   172     010F                     	;# 
   173     0110                     	;# 
   174     0111                     	;# 
   175     0112                     	;# 
   176     0113                     	;# 
   177     0114                     	;# 
   178     0115                     	;# 
   179     0116                     	;# 
   180     0117                     	;# 
   181     0118                     	;# 
   182     0119                     	;# 
   183     011A                     	;# 
   184     011B                     	;# 
   185     011D                     	;# 
   186     018C                     	;# 
   187     018D                     	;# 
   188     018F                     	;# 
   189     0190                     	;# 
   190     0191                     	;# 
   191     0191                     	;# 
   192     0192                     	;# 
   193     0193                     	;# 
   194     0193                     	;# 
   195     0193                     	;# 
   196     0194                     	;# 
   197     0195                     	;# 
   198     0196                     	;# 
   199     0199                     	;# 
   200     019A                     	;# 
   201     019B                     	;# 
   202     019B                     	;# 
   203     019B                     	;# 
   204     019B                     	;# 
   205     019C                     	;# 
   206     019C                     	;# 
   207     019D                     	;# 
   208     019E                     	;# 
   209     019F                     	;# 
   210     020D                     	;# 
   211     0210                     	;# 
   212     0211                     	;# 
   213     0212                     	;# 
   214     0213                     	;# 
   215     0214                     	;# 
   216     0215                     	;# 
   217     0215                     	;# 
   218     0216                     	;# 
   219     0217                     	;# 
   220     0291                     	;# 
   221     0291                     	;# 
   222     0292                     	;# 
   223     0293                     	;# 
   224     0294                     	;# 
   225     0295                     	;# 
   226     0295                     	;# 
   227     0296                     	;# 
   228     0298                     	;# 
   229     0298                     	;# 
   230     0299                     	;# 
   231     029A                     	;# 
   232     029B                     	;# 
   233     029C                     	;# 
   234     029C                     	;# 
   235     029D                     	;# 
   236     029E                     	;# 
   237     029F                     	;# 
   238     0311                     	;# 
   239     0311                     	;# 
   240     0312                     	;# 
   241     0313                     	;# 
   242     0314                     	;# 
   243     0315                     	;# 
   244     0315                     	;# 
   245     0316                     	;# 
   246     0318                     	;# 
   247     0318                     	;# 
   248     0319                     	;# 
   249     031A                     	;# 
   250     031C                     	;# 
   251     031C                     	;# 
   252     031D                     	;# 
   253     031E                     	;# 
   254     0394                     	;# 
   255     0395                     	;# 
   256     0396                     	;# 
   257     0415                     	;# 
   258     0416                     	;# 
   259     0417                     	;# 
   260     041C                     	;# 
   261     041D                     	;# 
   262     041E                     	;# 
   263     0791                     	;# 
   264     0792                     	;# 
   265     0793                     	;# 
   266     0794                     	;# 
   267     0795                     	;# 
   268     0798                     	;# 
   269     0799                     	;# 
   270     079A                     	;# 
   271     07A0                     	;# 
   272     07A1                     	;# 
   273     07A2                     	;# 
   274     07A3                     	;# 
   275     07A4                     	;# 
   276     07A5                     	;# 
   277     07A6                     	;# 
   278     07A7                     	;# 
   279     07A8                     	;# 
   280     07A9                     	;# 
   281     07AA                     	;# 
   282     07AB                     	;# 
   283     0FE4                     	;# 
   284     0FE5                     	;# 
   285     0FE6                     	;# 
   286     0FE7                     	;# 
   287     0FE8                     	;# 
   288     0FE9                     	;# 
   289     0FEA                     	;# 
   290     0FEB                     	;# 
   291     0FED                     	;# 
   292     0FEE                     	;# 
   293     0FEF                     	;# 
   294     0000                     	;# 
   295     0001                     	;# 
   296     0002                     	;# 
   297     0003                     	;# 
   298     0004                     	;# 
   299     0005                     	;# 
   300     0006                     	;# 
   301     0007                     	;# 
   302     0008                     	;# 
   303     0009                     	;# 
   304     000A                     	;# 
   305     000B                     	;# 
   306     000C                     	;# 
   307     000D                     	;# 
   308     000E                     	;# 
   309     000F                     	;# 
   310     0010                     	;# 
   311     0011                     	;# 
   312     0012                     	;# 
   313     0013                     	;# 
   314     0015                     	;# 
   315     0016                     	;# 
   316     0016                     	;# 
   317     0017                     	;# 
   318     0018                     	;# 
   319     0019                     	;# 
   320     001A                     	;# 
   321     001B                     	;# 
   322     001C                     	;# 
   323     001E                     	;# 
   324     001F                     	;# 
   325     008C                     	;# 
   326     008D                     	;# 
   327     008E                     	;# 
   328     008F                     	;# 
   329     0090                     	;# 
   330     0091                     	;# 
   331     0092                     	;# 
   332     0093                     	;# 
   333     0095                     	;# 
   334     0096                     	;# 
   335     0097                     	;# 
   336     0098                     	;# 
   337     0099                     	;# 
   338     009A                     	;# 
   339     009B                     	;# 
   340     009B                     	;# 
   341     009C                     	;# 
   342     009D                     	;# 
   343     009E                     	;# 
   344     010C                     	;# 
   345     010D                     	;# 
   346     010E                     	;# 
   347     010F                     	;# 
   348     0110                     	;# 
   349     0111                     	;# 
   350     0112                     	;# 
   351     0113                     	;# 
   352     0114                     	;# 
   353     0115                     	;# 
   354     0116                     	;# 
   355     0117                     	;# 
   356     0118                     	;# 
   357     0119                     	;# 
   358     011A                     	;# 
   359     011B                     	;# 
   360     011D                     	;# 
   361     018C                     	;# 
   362     018D                     	;# 
   363     018F                     	;# 
   364     0190                     	;# 
   365     0191                     	;# 
   366     0191                     	;# 
   367     0192                     	;# 
   368     0193                     	;# 
   369     0193                     	;# 
   370     0193                     	;# 
   371     0194                     	;# 
   372     0195                     	;# 
   373     0196                     	;# 
   374     0199                     	;# 
   375     019A                     	;# 
   376     019B                     	;# 
   377     019B                     	;# 
   378     019B                     	;# 
   379     019B                     	;# 
   380     019C                     	;# 
   381     019C                     	;# 
   382     019D                     	;# 
   383     019E                     	;# 
   384     019F                     	;# 
   385     020D                     	;# 
   386     0210                     	;# 
   387     0211                     	;# 
   388     0212                     	;# 
   389     0213                     	;# 
   390     0214                     	;# 
   391     0215                     	;# 
   392     0215                     	;# 
   393     0216                     	;# 
   394     0217                     	;# 
   395     0291                     	;# 
   396     0291                     	;# 
   397     0292                     	;# 
   398     0293                     	;# 
   399     0294                     	;# 
   400     0295                     	;# 
   401     0295                     	;# 
   402     0296                     	;# 
   403     0298                     	;# 
   404     0298                     	;# 
   405     0299                     	;# 
   406     029A                     	;# 
   407     029B                     	;# 
   408     029C                     	;# 
   409     029C                     	;# 
   410     029D                     	;# 
   411     029E                     	;# 
   412     029F                     	;# 
   413     0311                     	;# 
   414     0311                     	;# 
   415     0312                     	;# 
   416     0313                     	;# 
   417     0314                     	;# 
   418     0315                     	;# 
   419     0315                     	;# 
   420     0316                     	;# 
   421     0318                     	;# 
   422     0318                     	;# 
   423     0319                     	;# 
   424     031A                     	;# 
   425     031C                     	;# 
   426     031C                     	;# 
   427     031D                     	;# 
   428     031E                     	;# 
   429     0394                     	;# 
   430     0395                     	;# 
   431     0396                     	;# 
   432     0415                     	;# 
   433     0416                     	;# 
   434     0417                     	;# 
   435     041C                     	;# 
   436     041D                     	;# 
   437     041E                     	;# 
   438     0791                     	;# 
   439     0792                     	;# 
   440     0793                     	;# 
   441     0794                     	;# 
   442     0795                     	;# 
   443     0798                     	;# 
   444     0799                     	;# 
   445     079A                     	;# 
   446     07A0                     	;# 
   447     07A1                     	;# 
   448     07A2                     	;# 
   449     07A3                     	;# 
   450     07A4                     	;# 
   451     07A5                     	;# 
   452     07A6                     	;# 
   453     07A7                     	;# 
   454     07A8                     	;# 
   455     07A9                     	;# 
   456     07AA                     	;# 
   457     07AB                     	;# 
   458     0FE4                     	;# 
   459     0FE5                     	;# 
   460     0FE6                     	;# 
   461     0FE7                     	;# 
   462     0FE8                     	;# 
   463     0FE9                     	;# 
   464     0FEA                     	;# 
   465     0FEB                     	;# 
   466     0FED                     	;# 
   467     0FEE                     	;# 
   468     0FEF                     	;# 
   469     0000                     	;# 
   470     0001                     	;# 
   471     0002                     	;# 
   472     0003                     	;# 
   473     0004                     	;# 
   474     0005                     	;# 
   475     0006                     	;# 
   476     0007                     	;# 
   477     0008                     	;# 
   478     0009                     	;# 
   479     000A                     	;# 
   480     000B                     	;# 
   481     000C                     	;# 
   482     000D                     	;# 
   483     000E                     	;# 
   484     000F                     	;# 
   485     0010                     	;# 
   486     0011                     	;# 
   487     0012                     	;# 
   488     0013                     	;# 
   489     0015                     	;# 
   490     0016                     	;# 
   491     0016                     	;# 
   492     0017                     	;# 
   493     0018                     	;# 
   494     0019                     	;# 
   495     001A                     	;# 
   496     001B                     	;# 
   497     001C                     	;# 
   498     001E                     	;# 
   499     001F                     	;# 
   500     008C                     	;# 
   501     008D                     	;# 
   502     008E                     	;# 
   503     008F                     	;# 
   504     0090                     	;# 
   505     0091                     	;# 
   506     0092                     	;# 
   507     0093                     	;# 
   508     0095                     	;# 
   509     0096                     	;# 
   510     0097                     	;# 
   511     0098                     	;# 
   512     0099                     	;# 
   513     009A                     	;# 
   514     009B                     	;# 
   515     009B                     	;# 
   516     009C                     	;# 
   517     009D                     	;# 
   518     009E                     	;# 
   519     010C                     	;# 
   520     010D                     	;# 
   521     010E                     	;# 
   522     010F                     	;# 
   523     0110                     	;# 
   524     0111                     	;# 
   525     0112                     	;# 
   526     0113                     	;# 
   527     0114                     	;# 
   528     0115                     	;# 
   529     0116                     	;# 
   530     0117                     	;# 
   531     0118                     	;# 
   532     0119                     	;# 
   533     011A                     	;# 
   534     011B                     	;# 
   535     011D                     	;# 
   536     018C                     	;# 
   537     018D                     	;# 
   538     018F                     	;# 
   539     0190                     	;# 
   540     0191                     	;# 
   541     0191                     	;# 
   542     0192                     	;# 
   543     0193                     	;# 
   544     0193                     	;# 
   545     0193                     	;# 
   546     0194                     	;# 
   547     0195                     	;# 
   548     0196                     	;# 
   549     0199                     	;# 
   550     019A                     	;# 
   551     019B                     	;# 
   552     019B                     	;# 
   553     019B                     	;# 
   554     019B                     	;# 
   555     019C                     	;# 
   556     019C                     	;# 
   557     019D                     	;# 
   558     019E                     	;# 
   559     019F                     	;# 
   560     020D                     	;# 
   561     0210                     	;# 
   562     0211                     	;# 
   563     0212                     	;# 
   564     0213                     	;# 
   565     0214                     	;# 
   566     0215                     	;# 
   567     0215                     	;# 
   568     0216                     	;# 
   569     0217                     	;# 
   570     0291                     	;# 
   571     0291                     	;# 
   572     0292                     	;# 
   573     0293                     	;# 
   574     0294                     	;# 
   575     0295                     	;# 
   576     0295                     	;# 
   577     0296                     	;# 
   578     0298                     	;# 
   579     0298                     	;# 
   580     0299                     	;# 
   581     029A                     	;# 
   582     029B                     	;# 
   583     029C                     	;# 
   584     029C                     	;# 
   585     029D                     	;# 
   586     029E                     	;# 
   587     029F                     	;# 
   588     0311                     	;# 
   589     0311                     	;# 
   590     0312                     	;# 
   591     0313                     	;# 
   592     0314                     	;# 
   593     0315                     	;# 
   594     0315                     	;# 
   595     0316                     	;# 
   596     0318                     	;# 
   597     0318                     	;# 
   598     0319                     	;# 
   599     031A                     	;# 
   600     031C                     	;# 
   601     031C                     	;# 
   602     031D                     	;# 
   603     031E                     	;# 
   604     0394                     	;# 
   605     0395                     	;# 
   606     0396                     	;# 
   607     0415                     	;# 
   608     0416                     	;# 
   609     0417                     	;# 
   610     041C                     	;# 
   611     041D                     	;# 
   612     041E                     	;# 
   613     0791                     	;# 
   614     0792                     	;# 
   615     0793                     	;# 
   616     0794                     	;# 
   617     0795                     	;# 
   618     0798                     	;# 
   619     0799                     	;# 
   620     079A                     	;# 
   621     07A0                     	;# 
   622     07A1                     	;# 
   623     07A2                     	;# 
   624     07A3                     	;# 
   625     07A4                     	;# 
   626     07A5                     	;# 
   627     07A6                     	;# 
   628     07A7                     	;# 
   629     07A8                     	;# 
   630     07A9                     	;# 
   631     07AA                     	;# 
   632     07AB                     	;# 
   633     0FE4                     	;# 
   634     0FE5                     	;# 
   635     0FE6                     	;# 
   636     0FE7                     	;# 
   637     0FE8                     	;# 
   638     0FE9                     	;# 
   639     0FEA                     	;# 
   640     0FEB                     	;# 
   641     0FED                     	;# 
   642     0FEE                     	;# 
   643     0FEF                     	;# 
   644     0000                     	;# 
   645     0001                     	;# 
   646     0002                     	;# 
   647     0003                     	;# 
   648     0004                     	;# 
   649     0005                     	;# 
   650     0006                     	;# 
   651     0007                     	;# 
   652     0008                     	;# 
   653     0009                     	;# 
   654     000A                     	;# 
   655     000B                     	;# 
   656     000C                     	;# 
   657     000D                     	;# 
   658     000E                     	;# 
   659     000F                     	;# 
   660     0010                     	;# 
   661     0011                     	;# 
   662     0012                     	;# 
   663     0013                     	;# 
   664     0015                     	;# 
   665     0016                     	;# 
   666     0016                     	;# 
   667     0017                     	;# 
   668     0018                     	;# 
   669     0019                     	;# 
   670     001A                     	;# 
   671     001B                     	;# 
   672     001C                     	;# 
   673     001E                     	;# 
   674     001F                     	;# 
   675     008C                     	;# 
   676     008D                     	;# 
   677     008E                     	;# 
   678     008F                     	;# 
   679     0090                     	;# 
   680     0091                     	;# 
   681     0092                     	;# 
   682     0093                     	;# 
   683     0095                     	;# 
   684     0096                     	;# 
   685     0097                     	;# 
   686     0098                     	;# 
   687     0099                     	;# 
   688     009A                     	;# 
   689     009B                     	;# 
   690     009B                     	;# 
   691     009C                     	;# 
   692     009D                     	;# 
   693     009E                     	;# 
   694     010C                     	;# 
   695     010D                     	;# 
   696     010E                     	;# 
   697     010F                     	;# 
   698     0110                     	;# 
   699     0111                     	;# 
   700     0112                     	;# 
   701     0113                     	;# 
   702     0114                     	;# 
   703     0115                     	;# 
   704     0116                     	;# 
   705     0117                     	;# 
   706     0118                     	;# 
   707     0119                     	;# 
   708     011A                     	;# 
   709     011B                     	;# 
   710     011D                     	;# 
   711     018C                     	;# 
   712     018D                     	;# 
   713     018F                     	;# 
   714     0190                     	;# 
   715     0191                     	;# 
   716     0191                     	;# 
   717     0192                     	;# 
   718     0193                     	;# 
   719     0193                     	;# 
   720     0193                     	;# 
   721     0194                     	;# 
   722     0195                     	;# 
   723     0196                     	;# 
   724     0199                     	;# 
   725     019A                     	;# 
   726     019B                     	;# 
   727     019B                     	;# 
   728     019B                     	;# 
   729     019B                     	;# 
   730     019C                     	;# 
   731     019C                     	;# 
   732     019D                     	;# 
   733     019E                     	;# 
   734     019F                     	;# 
   735     020D                     	;# 
   736     0210                     	;# 
   737     0211                     	;# 
   738     0212                     	;# 
   739     0213                     	;# 
   740     0214                     	;# 
   741     0215                     	;# 
   742     0215                     	;# 
   743     0216                     	;# 
   744     0217                     	;# 
   745     0291                     	;# 
   746     0291                     	;# 
   747     0292                     	;# 
   748     0293                     	;# 
   749     0294                     	;# 
   750     0295                     	;# 
   751     0295                     	;# 
   752     0296                     	;# 
   753     0298                     	;# 
   754     0298                     	;# 
   755     0299                     	;# 
   756     029A                     	;# 
   757     029B                     	;# 
   758     029C                     	;# 
   759     029C                     	;# 
   760     029D                     	;# 
   761     029E                     	;# 
   762     029F                     	;# 
   763     0311                     	;# 
   764     0311                     	;# 
   765     0312                     	;# 
   766     0313                     	;# 
   767     0314                     	;# 
   768     0315                     	;# 
   769     0315                     	;# 
   770     0316                     	;# 
   771     0318                     	;# 
   772     0318                     	;# 
   773     0319                     	;# 
   774     031A                     	;# 
   775     031C                     	;# 
   776     031C                     	;# 
   777     031D                     	;# 
   778     031E                     	;# 
   779     0394                     	;# 
   780     0395                     	;# 
   781     0396                     	;# 
   782     0415                     	;# 
   783     0416                     	;# 
   784     0417                     	;# 
   785     041C                     	;# 
   786     041D                     	;# 
   787     041E                     	;# 
   788     0791                     	;# 
   789     0792                     	;# 
   790     0793                     	;# 
   791     0794                     	;# 
   792     0795                     	;# 
   793     0798                     	;# 
   794     0799                     	;# 
   795     079A                     	;# 
   796     07A0                     	;# 
   797     07A1                     	;# 
   798     07A2                     	;# 
   799     07A3                     	;# 
   800     07A4                     	;# 
   801     07A5                     	;# 
   802     07A6                     	;# 
   803     07A7                     	;# 
   804     07A8                     	;# 
   805     07A9                     	;# 
   806     07AA                     	;# 
   807     07AB                     	;# 
   808     0FE4                     	;# 
   809     0FE5                     	;# 
   810     0FE6                     	;# 
   811     0FE7                     	;# 
   812     0FE8                     	;# 
   813     0FE9                     	;# 
   814     0FEA                     	;# 
   815     0FEB                     	;# 
   816     0FED                     	;# 
   817     0FEE                     	;# 
   818     0FEF                     	;# 
   819     0000                     	;# 
   820     0001                     	;# 
   821     0002                     	;# 
   822     0003                     	;# 
   823     0004                     	;# 
   824     0005                     	;# 
   825     0006                     	;# 
   826     0007                     	;# 
   827     0008                     	;# 
   828     0009                     	;# 
   829     000A                     	;# 
   830     000B                     	;# 
   831     000C                     	;# 
   832     000D                     	;# 
   833     000E                     	;# 
   834     000F                     	;# 
   835     0010                     	;# 
   836     0011                     	;# 
   837     0012                     	;# 
   838     0013                     	;# 
   839     0015                     	;# 
   840     0016                     	;# 
   841     0016                     	;# 
   842     0017                     	;# 
   843     0018                     	;# 
   844     0019                     	;# 
   845     001A                     	;# 
   846     001B                     	;# 
   847     001C                     	;# 
   848     001E                     	;# 
   849     001F                     	;# 
   850     008C                     	;# 
   851     008D                     	;# 
   852     008E                     	;# 
   853     008F                     	;# 
   854     0090                     	;# 
   855     0091                     	;# 
   856     0092                     	;# 
   857     0093                     	;# 
   858     0095                     	;# 
   859     0096                     	;# 
   860     0097                     	;# 
   861     0098                     	;# 
   862     0099                     	;# 
   863     009A                     	;# 
   864     009B                     	;# 
   865     009B                     	;# 
   866     009C                     	;# 
   867     009D                     	;# 
   868     009E                     	;# 
   869     010C                     	;# 
   870     010D                     	;# 
   871     010E                     	;# 
   872     010F                     	;# 
   873     0110                     	;# 
   874     0111                     	;# 
   875     0112                     	;# 
   876     0113                     	;# 
   877     0114                     	;# 
   878     0115                     	;# 
   879     0116                     	;# 
   880     0117                     	;# 
   881     0118                     	;# 
   882     0119                     	;# 
   883     011A                     	;# 
   884     011B                     	;# 
   885     011D                     	;# 
   886     018C                     	;# 
   887     018D                     	;# 
   888     018F                     	;# 
   889     0190                     	;# 
   890     0191                     	;# 
   891     0191                     	;# 
   892     0192                     	;# 
   893     0193                     	;# 
   894     0193                     	;# 
   895     0193                     	;# 
   896     0194                     	;# 
   897     0195                     	;# 
   898     0196                     	;# 
   899     0199                     	;# 
   900     019A                     	;# 
   901     019B                     	;# 
   902     019B                     	;# 
   903     019B                     	;# 
   904     019B                     	;# 
   905     019C                     	;# 
   906     019C                     	;# 
   907     019D                     	;# 
   908     019E                     	;# 
   909     019F                     	;# 
   910     020D                     	;# 
   911     0210                     	;# 
   912     0211                     	;# 
   913     0212                     	;# 
   914     0213                     	;# 
   915     0214                     	;# 
   916     0215                     	;# 
   917     0215                     	;# 
   918     0216                     	;# 
   919     0217                     	;# 
   920     0291                     	;# 
   921     0291                     	;# 
   922     0292                     	;# 
   923     0293                     	;# 
   924     0294                     	;# 
   925     0295                     	;# 
   926     0295                     	;# 
   927     0296                     	;# 
   928     0298                     	;# 
   929     0298                     	;# 
   930     0299                     	;# 
   931     029A                     	;# 
   932     029B                     	;# 
   933     029C                     	;# 
   934     029C                     	;# 
   935     029D                     	;# 
   936     029E                     	;# 
   937     029F                     	;# 
   938     0311                     	;# 
   939     0311                     	;# 
   940     0312                     	;# 
   941     0313                     	;# 
   942     0314                     	;# 
   943     0315                     	;# 
   944     0315                     	;# 
   945     0316                     	;# 
   946     0318                     	;# 
   947     0318                     	;# 
   948     0319                     	;# 
   949     031A                     	;# 
   950     031C                     	;# 
   951     031C                     	;# 
   952     031D                     	;# 
   953     031E                     	;# 
   954     0394                     	;# 
   955     0395                     	;# 
   956     0396                     	;# 
   957     0415                     	;# 
   958     0416                     	;# 
   959     0417                     	;# 
   960     041C                     	;# 
   961     041D                     	;# 
   962     041E                     	;# 
   963     0791                     	;# 
   964     0792                     	;# 
   965     0793                     	;# 
   966     0794                     	;# 
   967     0795                     	;# 
   968     0798                     	;# 
   969     0799                     	;# 
   970     079A                     	;# 
   971     07A0                     	;# 
   972     07A1                     	;# 
   973     07A2                     	;# 
   974     07A3                     	;# 
   975     07A4                     	;# 
   976     07A5                     	;# 
   977     07A6                     	;# 
   978     07A7                     	;# 
   979     07A8                     	;# 
   980     07A9                     	;# 
   981     07AA                     	;# 
   982     07AB                     	;# 
   983     0FE4                     	;# 
   984     0FE5                     	;# 
   985     0FE6                     	;# 
   986     0FE7                     	;# 
   987     0FE8                     	;# 
   988     0FE9                     	;# 
   989     0FEA                     	;# 
   990     0FEB                     	;# 
   991     0FED                     	;# 
   992     0FEE                     	;# 
   993     0FEF                     	;# 
   994     0000                     	;# 
   995     0001                     	;# 
   996     0002                     	;# 
   997     0003                     	;# 
   998     0004                     	;# 
   999     0005                     	;# 
  1000     0006                     	;# 
  1001     0007                     	;# 
  1002     0008                     	;# 
  1003     0009                     	;# 
  1004     000A                     	;# 
  1005     000B                     	;# 
  1006     000C                     	;# 
  1007     000D                     	;# 
  1008     000E                     	;# 
  1009     000F                     	;# 
  1010     0010                     	;# 
  1011     0011                     	;# 
  1012     0012                     	;# 
  1013     0013                     	;# 
  1014     0015                     	;# 
  1015     0016                     	;# 
  1016     0016                     	;# 
  1017     0017                     	;# 
  1018     0018                     	;# 
  1019     0019                     	;# 
  1020     001A                     	;# 
  1021     001B                     	;# 
  1022     001C                     	;# 
  1023     001E                     	;# 
  1024     001F                     	;# 
  1025     008C                     	;# 
  1026     008D                     	;# 
  1027     008E                     	;# 
  1028     008F                     	;# 
  1029     0090                     	;# 
  1030     0091                     	;# 
  1031     0092                     	;# 
  1032     0093                     	;# 
  1033     0095                     	;# 
  1034     0096                     	;# 
  1035     0097                     	;# 
  1036     0098                     	;# 
  1037     0099                     	;# 
  1038     009A                     	;# 
  1039     009B                     	;# 
  1040     009B                     	;# 
  1041     009C                     	;# 
  1042     009D                     	;# 
  1043     009E                     	;# 
  1044     010C                     	;# 
  1045     010D                     	;# 
  1046     010E                     	;# 
  1047     010F                     	;# 
  1048     0110                     	;# 
  1049     0111                     	;# 
  1050     0112                     	;# 
  1051     0113                     	;# 
  1052     0114                     	;# 
  1053     0115                     	;# 
  1054     0116                     	;# 
  1055     0117                     	;# 
  1056     0118                     	;# 
  1057     0119                     	;# 
  1058     011A                     	;# 
  1059     011B                     	;# 
  1060     011D                     	;# 
  1061     018C                     	;# 
  1062     018D                     	;# 
  1063     018F                     	;# 
  1064     0190                     	;# 
  1065     0191                     	;# 
  1066     0191                     	;# 
  1067     0192                     	;# 
  1068     0193                     	;# 
  1069     0193                     	;# 
  1070     0193                     	;# 
  1071     0194                     	;# 
  1072     0195                     	;# 
  1073     0196                     	;# 
  1074     0199                     	;# 
  1075     019A                     	;# 
  1076     019B                     	;# 
  1077     019B                     	;# 
  1078     019B                     	;# 
  1079     019B                     	;# 
  1080     019C                     	;# 
  1081     019C                     	;# 
  1082     019D                     	;# 
  1083     019E                     	;# 
  1084     019F                     	;# 
  1085     020D                     	;# 
  1086     0210                     	;# 
  1087     0211                     	;# 
  1088     0212                     	;# 
  1089     0213                     	;# 
  1090     0214                     	;# 
  1091     0215                     	;# 
  1092     0215                     	;# 
  1093     0216                     	;# 
  1094     0217                     	;# 
  1095     0291                     	;# 
  1096     0291                     	;# 
  1097     0292                     	;# 
  1098     0293                     	;# 
  1099     0294                     	;# 
  1100     0295                     	;# 
  1101     0295                     	;# 
  1102     0296                     	;# 
  1103     0298                     	;# 
  1104     0298                     	;# 
  1105     0299                     	;# 
  1106     029A                     	;# 
  1107     029B                     	;# 
  1108     029C                     	;# 
  1109     029C                     	;# 
  1110     029D                     	;# 
  1111     029E                     	;# 
  1112     029F                     	;# 
  1113     0311                     	;# 
  1114     0311                     	;# 
  1115     0312                     	;# 
  1116     0313                     	;# 
  1117     0314                     	;# 
  1118     0315                     	;# 
  1119     0315                     	;# 
  1120     0316                     	;# 
  1121     0318                     	;# 
  1122     0318                     	;# 
  1123     0319                     	;# 
  1124     031A                     	;# 
  1125     031C                     	;# 
  1126     031C                     	;# 
  1127     031D                     	;# 
  1128     031E                     	;# 
  1129     0394                     	;# 
  1130     0395                     	;# 
  1131     0396                     	;# 
  1132     0415                     	;# 
  1133     0416                     	;# 
  1134     0417                     	;# 
  1135     041C                     	;# 
  1136     041D                     	;# 
  1137     041E                     	;# 
  1138     0791                     	;# 
  1139     0792                     	;# 
  1140     0793                     	;# 
  1141     0794                     	;# 
  1142     0795                     	;# 
  1143     0798                     	;# 
  1144     0799                     	;# 
  1145     079A                     	;# 
  1146     07A0                     	;# 
  1147     07A1                     	;# 
  1148     07A2                     	;# 
  1149     07A3                     	;# 
  1150     07A4                     	;# 
  1151     07A5                     	;# 
  1152     07A6                     	;# 
  1153     07A7                     	;# 
  1154     07A8                     	;# 
  1155     07A9                     	;# 
  1156     07AA                     	;# 
  1157     07AB                     	;# 
  1158     0FE4                     	;# 
  1159     0FE5                     	;# 
  1160     0FE6                     	;# 
  1161     0FE7                     	;# 
  1162     0FE8                     	;# 
  1163     0FE9                     	;# 
  1164     0FEA                     	;# 
  1165     0FEB                     	;# 
  1166     0FED                     	;# 
  1167     0FEE                     	;# 
  1168     0FEF                     	;# 
  1169     0000                     	;# 
  1170     0001                     	;# 
  1171     0002                     	;# 
  1172     0003                     	;# 
  1173     0004                     	;# 
  1174     0005                     	;# 
  1175     0006                     	;# 
  1176     0007                     	;# 
  1177     0008                     	;# 
  1178     0009                     	;# 
  1179     000A                     	;# 
  1180     000B                     	;# 
  1181     000C                     	;# 
  1182     000D                     	;# 
  1183     000E                     	;# 
  1184     000F                     	;# 
  1185     0010                     	;# 
  1186     0011                     	;# 
  1187     0012                     	;# 
  1188     0013                     	;# 
  1189     0015                     	;# 
  1190     0016                     	;# 
  1191     0016                     	;# 
  1192     0017                     	;# 
  1193     0018                     	;# 
  1194     0019                     	;# 
  1195     001A                     	;# 
  1196     001B                     	;# 
  1197     001C                     	;# 
  1198     001E                     	;# 
  1199     001F                     	;# 
  1200     008C                     	;# 
  1201     008D                     	;# 
  1202     008E                     	;# 
  1203     008F                     	;# 
  1204     0090                     	;# 
  1205     0091                     	;# 
  1206     0092                     	;# 
  1207     0093                     	;# 
  1208     0095                     	;# 
  1209     0096                     	;# 
  1210     0097                     	;# 
  1211     0098                     	;# 
  1212     0099                     	;# 
  1213     009A                     	;# 
  1214     009B                     	;# 
  1215     009B                     	;# 
  1216     009C                     	;# 
  1217     009D                     	;# 
  1218     009E                     	;# 
  1219     010C                     	;# 
  1220     010D                     	;# 
  1221     010E                     	;# 
  1222     010F                     	;# 
  1223     0110                     	;# 
  1224     0111                     	;# 
  1225     0112                     	;# 
  1226     0113                     	;# 
  1227     0114                     	;# 
  1228     0115                     	;# 
  1229     0116                     	;# 
  1230     0117                     	;# 
  1231     0118                     	;# 
  1232     0119                     	;# 
  1233     011A                     	;# 
  1234     011B                     	;# 
  1235     011D                     	;# 
  1236     018C                     	;# 
  1237     018D                     	;# 
  1238     018F                     	;# 
  1239     0190                     	;# 
  1240     0191                     	;# 
  1241     0191                     	;# 
  1242     0192                     	;# 
  1243     0193                     	;# 
  1244     0193                     	;# 
  1245     0193                     	;# 
  1246     0194                     	;# 
  1247     0195                     	;# 
  1248     0196                     	;# 
  1249     0199                     	;# 
  1250     019A                     	;# 
  1251     019B                     	;# 
  1252     019B                     	;# 
  1253     019B                     	;# 
  1254     019B                     	;# 
  1255     019C                     	;# 
  1256     019C                     	;# 
  1257     019D                     	;# 
  1258     019E                     	;# 
  1259     019F                     	;# 
  1260     020D                     	;# 
  1261     0210                     	;# 
  1262     0211                     	;# 
  1263     0212                     	;# 
  1264     0213                     	;# 
  1265     0214                     	;# 
  1266     0215                     	;# 
  1267     0215                     	;# 
  1268     0216                     	;# 
  1269     0217                     	;# 
  1270     0291                     	;# 
  1271     0291                     	;# 
  1272     0292                     	;# 
  1273     0293                     	;# 
  1274     0294                     	;# 
  1275     0295                     	;# 
  1276     0295                     	;# 
  1277     0296                     	;# 
  1278     0298                     	;# 
  1279     0298                     	;# 
  1280     0299                     	;# 
  1281     029A                     	;# 
  1282     029B                     	;# 
  1283     029C                     	;# 
  1284     029C                     	;# 
  1285     029D                     	;# 
  1286     029E                     	;# 
  1287     029F                     	;# 
  1288     0311                     	;# 
  1289     0311                     	;# 
  1290     0312                     	;# 
  1291     0313                     	;# 
  1292     0314                     	;# 
  1293     0315                     	;# 
  1294     0315                     	;# 
  1295     0316                     	;# 
  1296     0318                     	;# 
  1297     0318                     	;# 
  1298     0319                     	;# 
  1299     031A                     	;# 
  1300     031C                     	;# 
  1301     031C                     	;# 
  1302     031D                     	;# 
  1303     031E                     	;# 
  1304     0394                     	;# 
  1305     0395                     	;# 
  1306     0396                     	;# 
  1307     0415                     	;# 
  1308     0416                     	;# 
  1309     0417                     	;# 
  1310     041C                     	;# 
  1311     041D                     	;# 
  1312     041E                     	;# 
  1313     0791                     	;# 
  1314     0792                     	;# 
  1315     0793                     	;# 
  1316     0794                     	;# 
  1317     0795                     	;# 
  1318     0798                     	;# 
  1319     0799                     	;# 
  1320     079A                     	;# 
  1321     07A0                     	;# 
  1322     07A1                     	;# 
  1323     07A2                     	;# 
  1324     07A3                     	;# 
  1325     07A4                     	;# 
  1326     07A5                     	;# 
  1327     07A6                     	;# 
  1328     07A7                     	;# 
  1329     07A8                     	;# 
  1330     07A9                     	;# 
  1331     07AA                     	;# 
  1332     07AB                     	;# 
  1333     0FE4                     	;# 
  1334     0FE5                     	;# 
  1335     0FE6                     	;# 
  1336     0FE7                     	;# 
  1337     0FE8                     	;# 
  1338     0FE9                     	;# 
  1339     0FEA                     	;# 
  1340     0FEB                     	;# 
  1341     0FED                     	;# 
  1342     0FEE                     	;# 
  1343     0FEF                     	;# 
  1344                           
  1345                           	psect	idataBANK2
  1346     194F                     __pidataBANK2:
  1347                           
  1348                           ;initializer for _clave_enter
  1349     194F  3431               	retlw	49
  1350     1950  3432               	retlw	50
  1351     1951  3433               	retlw	51
  1352     1952  3434               	retlw	52
  1353     1953  3400               	retlw	0
  1354     000D                     _PORTBbits	set	13
  1355     000B                     _INTCONbits	set	11
  1356     008F                     _TRISDbits	set	143
  1357     008D                     _TRISBbits	set	141
  1358     008E                     _TRISCbits	set	142
  1359     008C                     _TRISAbits	set	140
  1360     0095                     _OPTION_REGbits	set	149
  1361     008F                     _TRISD	set	143
  1362     008E                     _TRISC	set	142
  1363     008D                     _TRISB	set	141
  1364     008C                     _TRISA	set	140
  1365     0090                     _TRISE	set	144
  1366     0097                     _WDTCON	set	151
  1367     0098                     _OSCTUNE	set	152
  1368     0099                     _OSCCON	set	153
  1369     009D                     _ADCON0bits	set	157
  1370     009D                     _ADCON0	set	157
  1371     009C                     _ADRESH	set	156
  1372     009B                     _ADRESL	set	155
  1373     009E                     _ADCON1	set	158
  1374     010F                     _LATDbits	set	271
  1375     010D                     _LATBbits	set	269
  1376     010E                     _LATCbits	set	270
  1377     010C                     _LATAbits	set	268
  1378     011D                     _APFCON	set	285
  1379     010E                     _LATC	set	270
  1380     010D                     _LATB	set	269
  1381     010C                     _LATA	set	268
  1382     010F                     _LATD	set	271
  1383     0110                     _LATE	set	272
  1384     0116                     _BORCON	set	278
  1385     018C                     _ANSELA	set	396
  1386     0190                     _ANSELE	set	400
  1387     018D                     _ANSELB	set	397
  1388     018F                     _ANSELD	set	399
  1389     0214                     _SSPSTATbits	set	532
  1390     0211                     _SSPBUF	set	529
  1391     0216                     _SSPCON2bits	set	534
  1392     0212                     _SSPADD	set	530
  1393     0215                     _SSPCONbits	set	533
  1394     0215                     _SSPCON1bits	set	533
  1395     020D                     _WPUB	set	525
  1396     0210                     _WPUE	set	528
  1397     0396                     _IOCBF	set	918
  1398     0395                     _IOCBN	set	917
  1399                           
  1400                           	psect	stringtext1
  1401     1800                     __pstringtext1:
  1402     1800                     STR_17:
  1403     1800  3443               	retlw	67	;'C'
  1404     1801  344C               	retlw	76	;'L'
  1405     1802  3441               	retlw	65	;'A'
  1406     1803  3456               	retlw	86	;'V'
  1407     1804  3445               	retlw	69	;'E'
  1408     1805  3420               	retlw	32	;' '
  1409     1806  3449               	retlw	73	;'I'
  1410     1807  344E               	retlw	78	;'N'
  1411     1808  3443               	retlw	67	;'C'
  1412     1809  344F               	retlw	79	;'O'
  1413     180A  3452               	retlw	82	;'R'
  1414     180B  3452               	retlw	82	;'R'
  1415     180C  3445               	retlw	69	;'E'
  1416     180D  3443               	retlw	67	;'C'
  1417     180E  3454               	retlw	84	;'T'
  1418     180F  3441               	retlw	65	;'A'
  1419     1810  3400               	retlw	0
  1420                           
  1421                           	psect	stringtext2
  1422     1811                     __pstringtext2:
  1423     1811                     STR_7:
  1424     1811  3431               	retlw	49	;'1'
  1425     1812  343A               	retlw	58	;':'
  1426     1813  3449               	retlw	73	;'I'
  1427     1814  344E               	retlw	78	;'N'
  1428     1815  3447               	retlw	71	;'G'
  1429     1816  3452               	retlw	82	;'R'
  1430     1817  3445               	retlw	69	;'E'
  1431     1818  3453               	retlw	83	;'S'
  1432     1819  3441               	retlw	65	;'A'
  1433     181A  3452               	retlw	82	;'R'
  1434     181B  3420               	retlw	32	;' '
  1435     181C  3443               	retlw	67	;'C'
  1436     181D  344C               	retlw	76	;'L'
  1437     181E  3441               	retlw	65	;'A'
  1438     181F  3456               	retlw	86	;'V'
  1439     1820  3445               	retlw	69	;'E'
  1440     1821  3400               	retlw	0
  1441                           
  1442                           	psect	stringtext3
  1443     1822                     __pstringtext3:
  1444     1822                     STR_8:
  1445     1822  3432               	retlw	50	;'2'
  1446     1823  343A               	retlw	58	;':'
  1447     1824  3443               	retlw	67	;'C'
  1448     1825  3441               	retlw	65	;'A'
  1449     1826  344D               	retlw	77	;'M'
  1450     1827  3442               	retlw	66	;'B'
  1451     1828  3449               	retlw	73	;'I'
  1452     1829  3441               	retlw	65	;'A'
  1453     182A  3452               	retlw	82	;'R'
  1454     182B  3420               	retlw	32	;' '
  1455     182C  3443               	retlw	67	;'C'
  1456     182D  344C               	retlw	76	;'L'
  1457     182E  3441               	retlw	65	;'A'
  1458     182F  3456               	retlw	86	;'V'
  1459     1830  3445               	retlw	69	;'E'
  1460     1831  3400               	retlw	0
  1461                           
  1462                           	psect	stringtext4
  1463     1832                     __pstringtext4:
  1464     1832                     STR_1:
  1465     1832  3443               	retlw	67	;'C'
  1466     1833  346F               	retlw	111	;'o'
  1467     1834  346E               	retlw	110	;'n'
  1468     1835  3474               	retlw	116	;'t'
  1469     1836  3472               	retlw	114	;'r'
  1470     1837  346F               	retlw	111	;'o'
  1471     1838  346C               	retlw	108	;'l'
  1472     1839  3454               	retlw	84	;'T'
  1473     183A  3465               	retlw	101	;'e'
  1474     183B  3463               	retlw	99	;'c'
  1475     183C  3468               	retlw	104	;'h'
  1476     183D  3420               	retlw	32	;' '
  1477     183E  3443               	retlw	67	;'C'
  1478     183F  3441               	retlw	65	;'A'
  1479     1840  3400               	retlw	0
  1480                           
  1481                           	psect	stringtext5
  1482     1841                     __pstringtext5:
  1483     1841                     STR_16:
  1484     1841  3443               	retlw	67	;'C'
  1485     1842  344C               	retlw	76	;'L'
  1486     1843  3441               	retlw	65	;'A'
  1487     1844  3456               	retlw	86	;'V'
  1488     1845  3445               	retlw	69	;'E'
  1489     1846  3420               	retlw	32	;' '
  1490     1847  3443               	retlw	67	;'C'
  1491     1848  3441               	retlw	65	;'A'
  1492     1849  344D               	retlw	77	;'M'
  1493     184A  3442               	retlw	66	;'B'
  1494     184B  3449               	retlw	73	;'I'
  1495     184C  3441               	retlw	65	;'A'
  1496     184D  3444               	retlw	68	;'D'
  1497     184E  3441               	retlw	65	;'A'
  1498     184F  3400               	retlw	0
  1499                           
  1500                           	psect	stringtext6
  1501     1850                     __pstringtext6:
  1502     1850                     STR_2:
  1503     1850  3425               	retlw	37	;'%'
  1504     1851  3464               	retlw	100	;'d'
  1505     1852  3425               	retlw	37	;'%'
  1506     1853  3464               	retlw	100	;'d'
  1507     1854  343A               	retlw	58	;':'
  1508     1855  3425               	retlw	37	;'%'
  1509     1856  3464               	retlw	100	;'d'
  1510     1857  3425               	retlw	37	;'%'
  1511     1858  3464               	retlw	100	;'d'
  1512     1859  343A               	retlw	58	;':'
  1513     185A  3425               	retlw	37	;'%'
  1514     185B  3464               	retlw	100	;'d'
  1515     185C  3425               	retlw	37	;'%'
  1516     185D  3464               	retlw	100	;'d'
  1517     185E  3400               	retlw	0
  1518                           
  1519                           	psect	stringtext7
  1520     185F                     __pstringtext7:
  1521     185F                     STR_11:
  1522     185F  3441               	retlw	65	;'A'
  1523     1860  3450               	retlw	80	;'P'
  1524     1861  3452               	retlw	82	;'R'
  1525     1862  344F               	retlw	79	;'O'
  1526     1863  3442               	retlw	66	;'B'
  1527     1864  3441               	retlw	65	;'A'
  1528     1865  3444               	retlw	68	;'D'
  1529     1866  344F               	retlw	79	;'O'
  1530     1867  3400               	retlw	0
  1531                           
  1532                           	psect	stringtext8
  1533     1868                     __pstringtext8:
  1534     1868                     STR_13:
  1535     1868  3444               	retlw	68	;'D'
  1536     1869  3445               	retlw	69	;'E'
  1537     186A  344E               	retlw	78	;'N'
  1538     186B  3445               	retlw	69	;'E'
  1539     186C  3447               	retlw	71	;'G'
  1540     186D  3441               	retlw	65	;'A'
  1541     186E  3444               	retlw	68	;'D'
  1542     186F  344F               	retlw	79	;'O'
  1543     1870  3400               	retlw	0
  1544                           
  1545                           	psect	stringtext9
  1546     1871                     __pstringtext9:
  1547     1871                     STR_3:
  1548     1871  3425               	retlw	37	;'%'
  1549     1872  3430               	retlw	48	;'0'
  1550     1873  342E               	retlw	46	;'.'
  1551     1874  3432               	retlw	50	;'2'
  1552     1875  3466               	retlw	102	;'f'
  1553     1876  34DF               	retlw	-33
  1554     1877  3400               	retlw	0
  1555                           
  1556                           	psect	stringtext10
  1557     1878                     __pstringtext10:
  1558     1878                     STR_10:
  1559     1878  3441               	retlw	65	;'A'
  1560     1879  3443               	retlw	67	;'C'
  1561     187A  3443               	retlw	67	;'C'
  1562     187B  3445               	retlw	69	;'E'
  1563     187C  3453               	retlw	83	;'S'
  1564     187D  344F               	retlw	79	;'O'
  1565     187E  3400               	retlw	0
  1566                           
  1567                           	psect	stringtext11
  1568     187F                     __pstringtext11:
  1569     187F                     STR_18:
  1570     187F  3469               	retlw	105	;'i'
  1571     1880  346E               	retlw	110	;'n'
  1572     1881  3466               	retlw	102	;'f'
  1573     1882  3400               	retlw	0
  1574                           
  1575                           	psect	stringtext12
  1576     1883                     __pstringtext12:
  1577     1883                     STR_21:
  1578     1883  346E               	retlw	110	;'n'
  1579     1884  3461               	retlw	97	;'a'
  1580     1885  346E               	retlw	110	;'n'
  1581     1886  3400               	retlw	0
  1582                           
  1583                           	psect	stringtext13
  1584     1887                     __pstringtext13:
  1585     1887                     STR_4:
  1586     1887  3443               	retlw	67	;'C'
  1587     1888  3400               	retlw	0
  1588                           
  1589                           	psect	stringtext14
  1590     0000                     __pstringtext14:
  1591     1871                     
  1592                           	psect	cinit
  1593     0239                     start_initialization:	
  1594                           ; #config settings
  1595                           
  1596     0239                     __initialization:
  1597                           
  1598                           ; Initialize objects allocated to BANK2
  1599     0239  304F               	movlw	low __pidataBANK2
  1600     023A  0084               	movwf	4
  1601     023B  3099               	movlw	(high __pidataBANK2)| (0+128)
  1602     023C  0085               	movwf	5
  1603     023D  0022               	movlb	2	; select bank2
  1604     023E  0012               	moviw fsr0++
  1605     023F  00DE               	movwf	__pdataBANK2& (0+127)
  1606     0240  0012               	moviw fsr0++
  1607     0241  00DF               	movwf	(__pdataBANK2+1)& (0+127)
  1608     0242  0012               	moviw fsr0++
  1609     0243  00E0               	movwf	(__pdataBANK2+2)& (0+127)
  1610     0244  0012               	moviw fsr0++
  1611     0245  00E1               	movwf	(__pdataBANK2+3)& (0+127)
  1612     0246  0012               	moviw fsr0++
  1613     0247  00E2               	movwf	(__pdataBANK2+4)& (0+127)
  1614                           
  1615                           ; Clear objects allocated to COMMON
  1616     0248  01FC               	clrf	__pbssCOMMON& (0+127)
  1617     0249  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1618                           
  1619                           ; Clear objects allocated to BANK1
  1620     024A  0021               	movlb	1	; select bank1
  1621     024B  01EF               	clrf	__pbssBANK1& (0+127)
  1622                           
  1623                           ; Clear objects allocated to BANK2
  1624     024C  3020               	movlw	low __pbssBANK2
  1625     024D  0084               	movwf	4
  1626     024E  3001               	movlw	high __pbssBANK2
  1627     024F  0085               	movwf	5
  1628     0250  301F               	movlw	31
  1629     0251  3199  2154  3182   	fcall	clear_ram0
  1630                           
  1631                           ; Clear objects allocated to BANK3
  1632     0254  30A0               	movlw	low __pbssBANK3
  1633     0255  0084               	movwf	4
  1634     0256  3001               	movlw	high __pbssBANK3
  1635     0257  0085               	movwf	5
  1636     0258  3014               	movlw	20
  1637     0259  3199  2154  3182   	fcall	clear_ram0
  1638                           
  1639                           ; Clear objects allocated to BANK4
  1640     025C  3020               	movlw	low __pbssBANK4
  1641     025D  0084               	movwf	4
  1642     025E  3002               	movlw	high __pbssBANK4
  1643     025F  0085               	movwf	5
  1644     0260  3050               	movlw	80
  1645     0261  3199  2154  3182   	fcall	clear_ram0
  1646     0264                     end_of_initialization:	
  1647                           ;End of C runtime variable initialization code
  1648                           
  1649     0264                     __end_of__initialization:
  1650     0264  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1651     0265  0020               	movlb	0
  1652     0266  3182  2A68         	ljmp	_main	;jump to C main() function
  1653                           
  1654                           	psect	bssCOMMON
  1655     007C                     __pbssCOMMON:
  1656     007C                     _flags:
  1657     007C                     	ds	1
  1658     007D                     _tecla:
  1659     007D                     	ds	1
  1660                           
  1661                           	psect	bssBANK1
  1662     00EF                     __pbssBANK1:
  1663     00EF                     _seg:
  1664     00EF                     	ds	1
  1665                           
  1666                           	psect	bssBANK2
  1667     0120                     __pbssBANK2:
  1668     0120                     floorf@F521:
  1669     0120                     	ds	4
  1670     0124                     ___fpclassifyf@F465:
  1671     0124                     	ds	4
  1672     0128                     _temp:
  1673     0128                     	ds	4
  1674     012C                     _width:
  1675     012C                     	ds	2
  1676     012E                     _prec:
  1677     012E                     	ds	2
  1678     0130                     _estado:
  1679     0130                     	ds	2
  1680     0132                     _cont_key:
  1681     0132                     	ds	2
  1682     0134                     _ADC_InterruptHandler:
  1683     0134                     	ds	2
  1684     0136                     _hor:
  1685     0136                     	ds	1
  1686     0137                     _min:
  1687     0137                     	ds	1
  1688     0138                     _clave:
  1689     0138                     	ds	5
  1690     013D                     _convertedValue:
  1691     013D                     	ds	2
  1692                           
  1693                           	psect	dataBANK2
  1694     015E                     __pdataBANK2:
  1695     015E                     _clave_enter:
  1696     015E                     	ds	5
  1697                           
  1698                           	psect	bssBANK3
  1699     01A0                     __pbssBANK3:
  1700     01A0                     _buffer:
  1701     01A0                     	ds	20
  1702                           
  1703                           	psect	bssBANK4
  1704     0220                     __pbssBANK4:
  1705     0220                     _dbuf:
  1706     0220                     	ds	80
  1707                           
  1708                           	psect	clrtext
  1709     1954                     clear_ram0:	
  1710                           ;	Called with FSR0 containing the base address, and
  1711                           ;	WREG with the size to clear
  1712                           
  1713     1954  0064               	clrwdt	;clear the watchdog before getting into this loop
  1714     1955                     clrloop0:
  1715     1955  0180               	clrf	0	;clear RAM location pointed to by FSR
  1716     1956  3101               	addfsr 0,1
  1717     1957  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1718     1958  2955               	goto	clrloop0	;have we reached the end yet?
  1719     1959  3400               	retlw	0	;all done for this memory range, return
  1720                           
  1721                           	psect	cstackBANK2
  1722     013F                     __pcstackBANK2:
  1723     013F                     sprintf@s:
  1724                           
  1725                           ; 1 bytes @ 0x0
  1726     013F                     	ds	1
  1727     0140                     sprintf@ap:
  1728                           
  1729                           ; 1 bytes @ 0x1
  1730     0140                     	ds	1
  1731     0141                     sprintf@f:
  1732                           
  1733                           ; 11 bytes @ 0x2
  1734     0141                     	ds	11
  1735     014C                     ??_main:
  1736                           
  1737                           ; 1 bytes @ 0xD
  1738     014C                     	ds	18
  1739                           
  1740                           	psect	cstackBANK1
  1741     00A0                     __pcstackBANK1:
  1742     00A0                     efgtoa@ne:
  1743                           
  1744                           ; 2 bytes @ 0x0
  1745     00A0                     	ds	2
  1746     00A2                     efgtoa@p:
  1747                           
  1748                           ; 2 bytes @ 0x2
  1749     00A2                     	ds	2
  1750     00A4                     efgtoa@t:
  1751                           
  1752                           ; 2 bytes @ 0x4
  1753     00A4                     	ds	2
  1754     00A6                     _efgtoa$1370:
  1755                           
  1756                           ; 2 bytes @ 0x6
  1757     00A6                     	ds	2
  1758     00A8                     efgtoa@pp:
  1759                           
  1760                           ; 1 bytes @ 0x8
  1761     00A8                     	ds	1
  1762     00A9                     efgtoa@mode:
  1763                           
  1764                           ; 1 bytes @ 0x9
  1765     00A9                     	ds	1
  1766     00AA                     efgtoa@nmode:
  1767                           
  1768                           ; 1 bytes @ 0xA
  1769     00AA                     	ds	1
  1770     00AB                     efgtoa@d:
  1771                           
  1772                           ; 2 bytes @ 0xB
  1773     00AB                     	ds	2
  1774     00AD                     efgtoa@m:
  1775                           
  1776                           ; 2 bytes @ 0xD
  1777     00AD                     	ds	2
  1778     00AF                     efgtoa@fp:
  1779                           
  1780                           ; 1 bytes @ 0xF
  1781     00AF                     	ds	1
  1782     00B0                     efgtoa@e:
  1783                           
  1784                           ; 2 bytes @ 0x10
  1785     00B0                     	ds	2
  1786     00B2                     efgtoa@w:
  1787                           
  1788                           ; 2 bytes @ 0x12
  1789     00B2                     	ds	2
  1790     00B4                     efgtoa@ou:
  1791                           
  1792                           ; 4 bytes @ 0x14
  1793     00B4                     	ds	4
  1794     00B8                     efgtoa@h:
  1795                           
  1796                           ; 4 bytes @ 0x18
  1797     00B8                     	ds	4
  1798     00BC                     efgtoa@l:
  1799                           
  1800                           ; 4 bytes @ 0x1C
  1801     00BC                     	ds	4
  1802     00C0                     efgtoa@i:
  1803                           
  1804                           ; 2 bytes @ 0x20
  1805     00C0                     	ds	2
  1806     00C2                     efgtoa@sign:
  1807                           
  1808                           ; 1 bytes @ 0x22
  1809     00C2                     	ds	1
  1810     00C3                     efgtoa@g:
  1811                           
  1812                           ; 4 bytes @ 0x23
  1813     00C3                     	ds	4
  1814     00C7                     efgtoa@n:
  1815                           
  1816                           ; 2 bytes @ 0x27
  1817     00C7                     	ds	2
  1818     00C9                     efgtoa@u:
  1819                           
  1820                           ; 4 bytes @ 0x29
  1821     00C9                     	ds	4
  1822     00CD                     ??_vfpfcnvrt:
  1823                           
  1824                           ; 1 bytes @ 0x2D
  1825     00CD                     	ds	4
  1826     00D1                     vfpfcnvrt@done:
  1827                           
  1828                           ; 1 bytes @ 0x31
  1829     00D1                     	ds	1
  1830     00D2                     vfpfcnvrt@convarg:
  1831                           
  1832                           ; 4 bytes @ 0x32
  1833     00D2                     	ds	4
  1834     00D6                     vfpfcnvrt@c:
  1835                           
  1836                           ; 1 bytes @ 0x36
  1837     00D6                     	ds	1
  1838     00D7                     vfpfcnvrt@fp:
  1839                           
  1840                           ; 1 bytes @ 0x37
  1841     00D7                     	ds	1
  1842     00D8                     vfpfcnvrt@cp:
  1843                           
  1844                           ; 2 bytes @ 0x38
  1845     00D8                     	ds	2
  1846     00DA                     ??_vfprintf:
  1847                           
  1848                           ; 1 bytes @ 0x3A
  1849     00DA                     	ds	1
  1850     00DB                     vfprintf@fp:
  1851                           
  1852                           ; 1 bytes @ 0x3B
  1853     00DB                     	ds	1
  1854     00DC                     vfprintf@cfmt:
  1855                           
  1856                           ; 2 bytes @ 0x3C
  1857     00DC                     	ds	2
  1858     00DE                     ?_sprintf:
  1859     00DE                     sprintf@fmt:	
  1860                           ; 2 bytes @ 0x3E
  1861                           
  1862                           
  1863                           ; 2 bytes @ 0x3E
  1864     00DE                     	ds	14
  1865     00EC                     ??_sprintf:
  1866                           
  1867                           ; 1 bytes @ 0x4C
  1868     00EC                     	ds	1
  1869     00ED                     main@contadorTemp:
  1870                           
  1871                           ; 2 bytes @ 0x4D
  1872     00ED                     	ds	2
  1873                           
  1874                           	psect	cstackCOMMON
  1875     0070                     __pcstackCOMMON:
  1876     0070                     ?_Lcd_Init:
  1877     0070                     ?_Lcd_Clear:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880     0070                     ?_Keypad_Init:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883     0070                     ??_Keypad_Init:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886     0070                     ?_Keypad_Get_Char:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889     0070                     ??_Keypad_Get_Char:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892     0070                     ?_Lcd_Write_Char:	
  1893                           ; 1 bytes @ 0x0
  1894                           
  1895     0070                     ?_putch:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898     0070                     ?_ADC_Initialize:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901     0070                     ?_ADC_StartConversion:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904     0070                     ?_ADC_IsConversionDone:	
  1905                           ; 1 bytes @ 0x0
  1906                           
  1907     0070                     ?_main:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910     0070                     ?_IOC:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913     0070                     ?_Lcd_Port:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916     0070                     ?_Lcd_Cmd:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919     0070                     ?i1_Lcd_Port:	
  1920                           ; 1 bytes @ 0x0
  1921                           
  1922     0070                     ??i1_Lcd_Port:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925     0070                     ?i1_Lcd_Cmd:	
  1926                           ; 1 bytes @ 0x0
  1927                           
  1928     0070                     ?i1_Lcd_Clear:	
  1929                           ; 1 bytes @ 0x0
  1930                           
  1931     0070                     ?i1_Lcd_Write_Char:	
  1932                           ; 1 bytes @ 0x0
  1933                           
  1934     0070                     ?_strcmp:	
  1935                           ; 1 bytes @ 0x0
  1936                           
  1937     0070                     putch@c:	
  1938                           ; 2 bytes @ 0x0
  1939                           
  1940     0070                     strcmp@r:	
  1941                           ; 1 bytes @ 0x0
  1942                           
  1943     0070                     i1Lcd_Port@a:	
  1944                           ; 1 bytes @ 0x0
  1945                           
  1946                           
  1947                           ; 1 bytes @ 0x0
  1948     0070                     	ds	1
  1949     0071                     ??i1_Lcd_Cmd:
  1950     0071                     ??i1_Lcd_Write_Char:	
  1951                           ; 1 bytes @ 0x1
  1952                           
  1953                           
  1954                           ; 1 bytes @ 0x1
  1955     0071                     	ds	1
  1956     0072                     ??_strcmp:
  1957     0072                     i1Lcd_Cmd@a:	
  1958                           ; 1 bytes @ 0x2
  1959                           
  1960     0072                     i1Lcd_Write_Char@temp:	
  1961                           ; 1 bytes @ 0x2
  1962                           
  1963                           
  1964                           ; 1 bytes @ 0x2
  1965     0072                     	ds	1
  1966     0073                     ??i1_Lcd_Clear:
  1967     0073                     ?i1_Lcd_Set_Cursor:	
  1968                           ; 1 bytes @ 0x3
  1969                           
  1970     0073                     strcmp@l:	
  1971                           ; 1 bytes @ 0x3
  1972                           
  1973     0073                     i1Lcd_Set_Cursor@b:	
  1974                           ; 1 bytes @ 0x3
  1975                           
  1976     0073                     i1Lcd_Write_Char@y:	
  1977                           ; 1 bytes @ 0x3
  1978                           
  1979                           
  1980                           ; 1 bytes @ 0x3
  1981     0073                     	ds	1
  1982     0074                     ??i1_Lcd_Set_Cursor:
  1983     0074                     i1Lcd_Write_Char@a:	
  1984                           ; 1 bytes @ 0x4
  1985                           
  1986                           
  1987                           ; 1 bytes @ 0x4
  1988     0074                     	ds	1
  1989     0075                     ?i1_Lcd_Write_String:
  1990     0075                     i1Lcd_Set_Cursor@a:	
  1991                           ; 1 bytes @ 0x5
  1992                           
  1993     0075                     i1Lcd_Write_String@a:	
  1994                           ; 1 bytes @ 0x5
  1995                           
  1996                           
  1997                           ; 2 bytes @ 0x5
  1998     0075                     	ds	1
  1999     0076                     i1Lcd_Set_Cursor@z:
  2000                           
  2001                           ; 1 bytes @ 0x6
  2002     0076                     	ds	1
  2003     0077                     ??i1_Lcd_Write_String:
  2004     0077                     i1Lcd_Set_Cursor@y:	
  2005                           ; 1 bytes @ 0x7
  2006                           
  2007                           
  2008                           ; 1 bytes @ 0x7
  2009     0077                     	ds	1
  2010     0078                     i1Lcd_Set_Cursor@temp:
  2011     0078                     i1Lcd_Write_String@i:	
  2012                           ; 1 bytes @ 0x8
  2013                           
  2014                           
  2015                           ; 2 bytes @ 0x8
  2016     0078                     	ds	2
  2017     007A                     ??_IOC:
  2018                           
  2019                           ; 1 bytes @ 0xA
  2020     007A                     	ds	2
  2021                           
  2022                           	psect	cstackBANK0
  2023     0020                     __pcstackBANK0:
  2024     0020                     ?___fleq:
  2025     0020                     ?_strcpy:	
  2026                           ; 1 bit 
  2027                           
  2028     0020                     ?_memcpy:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031     0020                     ??_putch:	
  2032                           ; 1 bytes @ 0x0
  2033                           
  2034     0020                     ??_ADC_Initialize:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037     0020                     ??_ADC_StartConversion:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040     0020                     ??_ADC_IsConversionDone:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043     0020                     ??_Lcd_Port:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046     0020                     ?__Umul8_16:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049     0020                     ?_fputc:	
  2050                           ; 2 bytes @ 0x0
  2051                           
  2052     0020                     ?___fpclassifyf:	
  2053                           ; 2 bytes @ 0x0
  2054                           
  2055     0020                     ?_ADC_GetConversionResult:	
  2056                           ; 2 bytes @ 0x0
  2057                           
  2058     0020                     ?___wmul:	
  2059                           ; 2 bytes @ 0x0
  2060                           
  2061     0020                     ?___awdiv:	
  2062                           ; 2 bytes @ 0x0
  2063                           
  2064     0020                     ?___awmod:	
  2065                           ; 2 bytes @ 0x0
  2066                           
  2067     0020                     ?_labs:	
  2068                           ; 2 bytes @ 0x0
  2069                           
  2070     0020                     ?___flneg:	
  2071                           ; 4 bytes @ 0x0
  2072                           
  2073     0020                     ?___fltol:	
  2074                           ; 4 bytes @ 0x0
  2075                           
  2076     0020                     ?___fladd:	
  2077                           ; 4 bytes @ 0x0
  2078                           
  2079     0020                     Lcd_Port@a:	
  2080                           ; 4 bytes @ 0x0
  2081                           
  2082     0020                     __Umul8_16@multiplicand:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085     0020                     memcpy@s1:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088     0020                     ___wmul@multiplier:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091     0020                     ___awdiv@divisor:	
  2092                           ; 2 bytes @ 0x0
  2093                           
  2094     0020                     ___awmod@divisor:	
  2095                           ; 2 bytes @ 0x0
  2096                           
  2097     0020                     fputc@c:	
  2098                           ; 2 bytes @ 0x0
  2099                           
  2100     0020                     strcpy@src:	
  2101                           ; 2 bytes @ 0x0
  2102                           
  2103     0020                     ___fleq@ff1:	
  2104                           ; 2 bytes @ 0x0
  2105                           
  2106     0020                     ___flneg@f1:	
  2107                           ; 4 bytes @ 0x0
  2108                           
  2109     0020                     ___fltol@f1:	
  2110                           ; 4 bytes @ 0x0
  2111                           
  2112     0020                     ___fladd@b:	
  2113                           ; 4 bytes @ 0x0
  2114                           
  2115     0020                     ___fpclassifyf@x:	
  2116                           ; 4 bytes @ 0x0
  2117                           
  2118     0020                     labs@a:	
  2119                           ; 4 bytes @ 0x0
  2120                           
  2121                           
  2122                           ; 4 bytes @ 0x0
  2123     0020                     	ds	1
  2124     0021                     ??_Lcd_Write_Char:
  2125     0021                     ??_Lcd_Cmd:	
  2126                           ; 1 bytes @ 0x1
  2127                           
  2128     0021                     memcpy@n:	
  2129                           ; 1 bytes @ 0x1
  2130                           
  2131                           
  2132                           ; 2 bytes @ 0x1
  2133     0021                     	ds	1
  2134     0022                     ??__Umul8_16:
  2135     0022                     ??_strcpy:	
  2136                           ; 1 bytes @ 0x2
  2137                           
  2138     0022                     ??_ADC_GetConversionResult:	
  2139                           ; 1 bytes @ 0x2
  2140                           
  2141     0022                     Lcd_Cmd@a:	
  2142                           ; 1 bytes @ 0x2
  2143                           
  2144     0022                     Lcd_Write_Char@temp:	
  2145                           ; 1 bytes @ 0x2
  2146                           
  2147     0022                     fputc@fp:	
  2148                           ; 1 bytes @ 0x2
  2149                           
  2150     0022                     ___wmul@multiplicand:	
  2151                           ; 1 bytes @ 0x2
  2152                           
  2153     0022                     ___awdiv@dividend:	
  2154                           ; 2 bytes @ 0x2
  2155                           
  2156     0022                     ___awmod@dividend:	
  2157                           ; 2 bytes @ 0x2
  2158                           
  2159                           
  2160                           ; 2 bytes @ 0x2
  2161     0022                     	ds	1
  2162     0023                     ??_Lcd_Init:
  2163     0023                     ??_Lcd_Clear:	
  2164                           ; 1 bytes @ 0x3
  2165                           
  2166     0023                     ?_Lcd_Set_Cursor:	
  2167                           ; 1 bytes @ 0x3
  2168                           
  2169     0023                     ??_fputc:	
  2170                           ; 1 bytes @ 0x3
  2171                           
  2172     0023                     ??_memcpy:	
  2173                           ; 1 bytes @ 0x3
  2174                           
  2175     0023                     Lcd_Set_Cursor@b:	
  2176                           ; 1 bytes @ 0x3
  2177                           
  2178     0023                     Lcd_Write_Char@y:	
  2179                           ; 1 bytes @ 0x3
  2180                           
  2181                           
  2182                           ; 1 bytes @ 0x3
  2183     0023                     	ds	1
  2184     0024                     ??_Lcd_Set_Cursor:
  2185     0024                     ??___fpclassifyf:	
  2186                           ; 1 bytes @ 0x4
  2187                           
  2188     0024                     ??_labs:	
  2189                           ; 1 bytes @ 0x4
  2190                           
  2191     0024                     ??___wmul:	
  2192                           ; 1 bytes @ 0x4
  2193                           
  2194     0024                     ??___awdiv:	
  2195                           ; 1 bytes @ 0x4
  2196                           
  2197     0024                     ??___awmod:	
  2198                           ; 1 bytes @ 0x4
  2199                           
  2200     0024                     ??___flneg:	
  2201                           ; 1 bytes @ 0x4
  2202                           
  2203     0024                     ??___fltol:	
  2204                           ; 1 bytes @ 0x4
  2205                           
  2206     0024                     Lcd_Write_Char@a:	
  2207                           ; 1 bytes @ 0x4
  2208                           
  2209     0024                     memcpy@tmp:	
  2210                           ; 1 bytes @ 0x4
  2211                           
  2212     0024                     strcpy@d:	
  2213                           ; 1 bytes @ 0x4
  2214                           
  2215     0024                     ___wmul@product:	
  2216                           ; 1 bytes @ 0x4
  2217                           
  2218     0024                     __Umul8_16@product:	
  2219                           ; 2 bytes @ 0x4
  2220                           
  2221     0024                     ___fleq@ff2:	
  2222                           ; 2 bytes @ 0x4
  2223                           
  2224     0024                     ___fladd@a:	
  2225                           ; 4 bytes @ 0x4
  2226                           
  2227                           
  2228                           ; 4 bytes @ 0x4
  2229     0024                     	ds	1
  2230     0025                     ?_Lcd_Write_String:
  2231     0025                     Lcd_Set_Cursor@a:	
  2232                           ; 1 bytes @ 0x5
  2233                           
  2234     0025                     ___awdiv@counter:	
  2235                           ; 1 bytes @ 0x5
  2236                           
  2237     0025                     ___awmod@counter:	
  2238                           ; 1 bytes @ 0x5
  2239                           
  2240     0025                     memcpy@d1:	
  2241                           ; 1 bytes @ 0x5
  2242                           
  2243     0025                     strcpy@dest:	
  2244                           ; 1 bytes @ 0x5
  2245                           
  2246     0025                     Lcd_Write_String@a:	
  2247                           ; 1 bytes @ 0x5
  2248                           
  2249                           
  2250                           ; 2 bytes @ 0x5
  2251     0025                     	ds	1
  2252     0026                     ?_read_prec_or_width:
  2253     0026                     ?___xxtofl:	
  2254                           ; 2 bytes @ 0x6
  2255                           
  2256     0026                     Lcd_Set_Cursor@z:	
  2257                           ; 4 bytes @ 0x6
  2258                           
  2259     0026                     ___awdiv@sign:	
  2260                           ; 1 bytes @ 0x6
  2261                           
  2262     0026                     ___awmod@sign:	
  2263                           ; 1 bytes @ 0x6
  2264                           
  2265     0026                     read_prec_or_width@ap:	
  2266                           ; 1 bytes @ 0x6
  2267                           
  2268     0026                     memcpy@d:	
  2269                           ; 1 bytes @ 0x6
  2270                           
  2271     0026                     __Umul8_16@word_mpld:	
  2272                           ; 1 bytes @ 0x6
  2273                           
  2274     0026                     ___xxtofl@val:	
  2275                           ; 2 bytes @ 0x6
  2276                           
  2277                           
  2278                           ; 4 bytes @ 0x6
  2279     0026                     	ds	1
  2280     0027                     ??_Lcd_Write_String:
  2281     0027                     ?_abs:	
  2282                           ; 1 bytes @ 0x7
  2283                           
  2284     0027                     Lcd_Set_Cursor@y:	
  2285                           ; 2 bytes @ 0x7
  2286                           
  2287     0027                     memcpy@s:	
  2288                           ; 1 bytes @ 0x7
  2289                           
  2290     0027                     ___awdiv@quotient:	
  2291                           ; 1 bytes @ 0x7
  2292                           
  2293     0027                     abs@a:	
  2294                           ; 2 bytes @ 0x7
  2295                           
  2296                           
  2297                           ; 2 bytes @ 0x7
  2298     0027                     	ds	1
  2299     0028                     ??___fleq:
  2300     0028                     ??___fladd:	
  2301                           ; 1 bytes @ 0x8
  2302                           
  2303     0028                     ??_read_prec_or_width:	
  2304                           ; 1 bytes @ 0x8
  2305                           
  2306     0028                     ?_fputs:	
  2307                           ; 1 bytes @ 0x8
  2308                           
  2309     0028                     Lcd_Set_Cursor@temp:	
  2310                           ; 2 bytes @ 0x8
  2311                           
  2312     0028                     ___fltol@sign1:	
  2313                           ; 1 bytes @ 0x8
  2314                           
  2315     0028                     __Umul8_16@multiplier:	
  2316                           ; 1 bytes @ 0x8
  2317                           
  2318     0028                     fputs@fp:	
  2319                           ; 1 bytes @ 0x8
  2320                           
  2321     0028                     Lcd_Write_String@i:	
  2322                           ; 1 bytes @ 0x8
  2323                           
  2324                           
  2325                           ; 2 bytes @ 0x8
  2326     0028                     	ds	1
  2327     0029                     ??_fputs:
  2328     0029                     ??_abs:	
  2329                           ; 1 bytes @ 0x9
  2330                           
  2331     0029                     ?___flmul:	
  2332                           ; 1 bytes @ 0x9
  2333                           
  2334     0029                     ___fltol@exp1:	
  2335                           ; 4 bytes @ 0x9
  2336                           
  2337     0029                     ___flmul@b:	
  2338                           ; 1 bytes @ 0x9
  2339                           
  2340                           
  2341                           ; 4 bytes @ 0x9
  2342     0029                     	ds	1
  2343     002A                     ??___xxtofl:
  2344     002A                     ___fpclassifyf@e:	
  2345                           ; 1 bytes @ 0xA
  2346                           
  2347                           
  2348                           ; 2 bytes @ 0xA
  2349     002A                     	ds	1
  2350     002B                     read_prec_or_width@c:
  2351     002B                     fputs@c:	
  2352                           ; 1 bytes @ 0xB
  2353                           
  2354                           
  2355                           ; 1 bytes @ 0xB
  2356     002B                     	ds	1
  2357     002C                     read_prec_or_width@n:
  2358     002C                     fputs@i:	
  2359                           ; 2 bytes @ 0xC
  2360                           
  2361     002C                     ___fpclassifyf@u:	
  2362                           ; 2 bytes @ 0xC
  2363                           
  2364                           
  2365                           ; 4 bytes @ 0xC
  2366     002C                     	ds	1
  2367     002D                     ___flmul@a:
  2368                           
  2369                           ; 4 bytes @ 0xD
  2370     002D                     	ds	1
  2371     002E                     ___xxtofl@sign:
  2372     002E                     read_prec_or_width@fmt:	
  2373                           ; 1 bytes @ 0xE
  2374                           
  2375     002E                     fputs@s:	
  2376                           ; 1 bytes @ 0xE
  2377                           
  2378                           
  2379                           ; 1 bytes @ 0xE
  2380     002E                     	ds	1
  2381     002F                     ?_pad:
  2382     002F                     ___xxtofl@exp:	
  2383                           ; 1 bytes @ 0xF
  2384                           
  2385     002F                     pad@buf:	
  2386                           ; 1 bytes @ 0xF
  2387                           
  2388                           
  2389                           ; 1 bytes @ 0xF
  2390     002F                     	ds	1
  2391     0030                     ___fladd@signs:
  2392     0030                     pad@p:	
  2393                           ; 1 bytes @ 0x10
  2394                           
  2395     0030                     ___xxtofl@arg:	
  2396                           ; 2 bytes @ 0x10
  2397                           
  2398                           
  2399                           ; 4 bytes @ 0x10
  2400     0030                     	ds	1
  2401     0031                     ??___flmul:
  2402     0031                     ___fladd@aexp:	
  2403                           ; 1 bytes @ 0x11
  2404                           
  2405                           
  2406                           ; 1 bytes @ 0x11
  2407     0031                     	ds	1
  2408     0032                     ??_pad:
  2409     0032                     ___fladd@bexp:	
  2410                           ; 1 bytes @ 0x12
  2411                           
  2412                           
  2413                           ; 1 bytes @ 0x12
  2414     0032                     	ds	1
  2415     0033                     ___fladd@grs:
  2416     0033                     pad@i:	
  2417                           ; 1 bytes @ 0x13
  2418                           
  2419                           
  2420                           ; 2 bytes @ 0x13
  2421     0033                     	ds	1
  2422     0034                     ?___fldiv:
  2423     0034                     ___fldiv@a:	
  2424                           ; 4 bytes @ 0x14
  2425                           
  2426                           
  2427                           ; 4 bytes @ 0x14
  2428     0034                     	ds	1
  2429     0035                     pad@fp:
  2430                           
  2431                           ; 1 bytes @ 0x15
  2432     0035                     	ds	1
  2433     0036                     ?_dtoa:
  2434     0036                     ___flmul@sign:	
  2435                           ; 1 bytes @ 0x16
  2436                           
  2437     0036                     dtoa@d:	
  2438                           ; 1 bytes @ 0x16
  2439                           
  2440                           
  2441                           ; 2 bytes @ 0x16
  2442     0036                     	ds	1
  2443     0037                     ___flmul@grs:
  2444                           
  2445                           ; 4 bytes @ 0x17
  2446     0037                     	ds	1
  2447     0038                     ??_dtoa:
  2448     0038                     ___fldiv@b:	
  2449                           ; 1 bytes @ 0x18
  2450                           
  2451                           
  2452                           ; 4 bytes @ 0x18
  2453     0038                     	ds	1
  2454     0039                     _dtoa$1339:
  2455                           
  2456                           ; 2 bytes @ 0x19
  2457     0039                     	ds	2
  2458     003B                     ___flmul@aexp:
  2459     003B                     dtoa@fp:	
  2460                           ; 1 bytes @ 0x1B
  2461                           
  2462                           
  2463                           ; 1 bytes @ 0x1B
  2464     003B                     	ds	1
  2465     003C                     ??___fldiv:
  2466     003C                     ___flmul@bexp:	
  2467                           ; 1 bytes @ 0x1C
  2468                           
  2469     003C                     dtoa@p:	
  2470                           ; 1 bytes @ 0x1C
  2471                           
  2472                           
  2473                           ; 2 bytes @ 0x1C
  2474     003C                     	ds	1
  2475     003D                     ___flmul@prod:
  2476                           
  2477                           ; 4 bytes @ 0x1D
  2478     003D                     	ds	1
  2479     003E                     dtoa@w:
  2480                           
  2481                           ; 2 bytes @ 0x1E
  2482     003E                     	ds	2
  2483     0040                     dtoa@s:
  2484                           
  2485                           ; 1 bytes @ 0x20
  2486     0040                     	ds	1
  2487     0041                     ___flmul@temp:
  2488     0041                     dtoa@i:	
  2489                           ; 2 bytes @ 0x21
  2490                           
  2491     0041                     ___fldiv@rem:	
  2492                           ; 2 bytes @ 0x21
  2493                           
  2494                           
  2495                           ; 4 bytes @ 0x21
  2496     0041                     	ds	2
  2497     0043                     ?___flge:
  2498     0043                     ?___flsub:	
  2499                           ; 1 bit 
  2500                           
  2501     0043                     ___flge@ff1:	
  2502                           ; 4 bytes @ 0x23
  2503                           
  2504     0043                     ___flsub@a:	
  2505                           ; 4 bytes @ 0x23
  2506                           
  2507                           
  2508                           ; 4 bytes @ 0x23
  2509     0043                     	ds	2
  2510     0045                     ___fldiv@sign:
  2511                           
  2512                           ; 1 bytes @ 0x25
  2513     0045                     	ds	1
  2514     0046                     ___fldiv@new_exp:
  2515                           
  2516                           ; 2 bytes @ 0x26
  2517     0046                     	ds	1
  2518     0047                     ___flge@ff2:
  2519     0047                     ___flsub@b:	
  2520                           ; 4 bytes @ 0x27
  2521                           
  2522                           
  2523                           ; 4 bytes @ 0x27
  2524     0047                     	ds	1
  2525     0048                     ___fldiv@grs:
  2526                           
  2527                           ; 4 bytes @ 0x28
  2528     0048                     	ds	3
  2529     004B                     ??___flge:
  2530     004B                     ??___flsub:	
  2531                           ; 1 bytes @ 0x2B
  2532                           
  2533                           
  2534                           ; 1 bytes @ 0x2B
  2535     004B                     	ds	1
  2536     004C                     ___fldiv@bexp:
  2537                           
  2538                           ; 1 bytes @ 0x2C
  2539     004C                     	ds	1
  2540     004D                     ___fldiv@aexp:
  2541                           
  2542                           ; 1 bytes @ 0x2D
  2543     004D                     	ds	1
  2544     004E                     ?_floorf:
  2545     004E                     floorf@x:	
  2546                           ; 4 bytes @ 0x2E
  2547                           
  2548                           
  2549                           ; 4 bytes @ 0x2E
  2550     004E                     	ds	4
  2551     0052                     ??_floorf:
  2552                           
  2553                           ; 1 bytes @ 0x32
  2554     0052                     	ds	6
  2555     0058                     floorf@m:
  2556                           
  2557                           ; 4 bytes @ 0x38
  2558     0058                     	ds	4
  2559     005C                     floorf@e:
  2560                           
  2561                           ; 2 bytes @ 0x3C
  2562     005C                     	ds	2
  2563     005E                     floorf@u:
  2564                           
  2565                           ; 4 bytes @ 0x3E
  2566     005E                     	ds	4
  2567     0062                     ?_efgtoa:
  2568     0062                     efgtoa@f:	
  2569                           ; 1 bytes @ 0x42
  2570                           
  2571                           
  2572                           ; 4 bytes @ 0x42
  2573     0062                     	ds	4
  2574     0066                     efgtoa@c:
  2575                           
  2576                           ; 1 bytes @ 0x46
  2577     0066                     	ds	1
  2578     0067                     ??_efgtoa:
  2579                           
  2580                           ; 1 bytes @ 0x47
  2581     0067                     	ds	4
  2582     006B                     ?_vfpfcnvrt:
  2583     006B                     vfpfcnvrt@fmt:	
  2584                           ; 1 bytes @ 0x4B
  2585                           
  2586                           
  2587                           ; 1 bytes @ 0x4B
  2588     006B                     	ds	1
  2589     006C                     vfpfcnvrt@ap:
  2590                           
  2591                           ; 1 bytes @ 0x4C
  2592     006C                     	ds	1
  2593     006D                     ?_vfprintf:
  2594     006D                     vfprintf@fmt:	
  2595                           ; 2 bytes @ 0x4D
  2596                           
  2597                           
  2598                           ; 2 bytes @ 0x4D
  2599     006D                     	ds	2
  2600     006F                     vfprintf@ap:
  2601                           
  2602                           ; 1 bytes @ 0x4F
  2603     006F                     	ds	1
  2604                           
  2605                           	psect	maintext
  2606     0268                     __pmaintext:	
  2607 ;;
  2608 ;;Main: autosize = 0, tempsize = 18, incstack = 0, save=0
  2609 ;;
  2610 ;; *************** function _main *****************
  2611 ;; Defined at:
  2612 ;;		line 34 in file "main.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  contadorTemp    2   77[BANK1 ] int 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : B1F/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2626 ;;      Params:         0       0       0       0       0       0       0       0
  2627 ;;      Locals:         0       0       2       0       0       0       0       0
  2628 ;;      Temps:          0       0       0      18       0       0       0       0
  2629 ;;      Totals:         0       0       2      18       0       0       0       0
  2630 ;;Total ram usage:       20 bytes
  2631 ;; Hardware stack levels required when called: 12
  2632 ;; This function calls:
  2633 ;;		_ADC_GetConversionResult
  2634 ;;		_ADC_Initialize
  2635 ;;		_ADC_IsConversionDone
  2636 ;;		_ADC_StartConversion
  2637 ;;		_Lcd_Clear
  2638 ;;		_Lcd_Init
  2639 ;;		_Lcd_Set_Cursor
  2640 ;;		_Lcd_Write_String
  2641 ;;		___fldiv
  2642 ;;		___wmul
  2643 ;;		___xxtofl
  2644 ;;		_sprintf
  2645 ;; This function is called by:
  2646 ;;		Startup code after reset
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650     0268                     _main:	
  2651                           ;psect for function _main
  2652                           
  2653     0268                     l4991:	
  2654                           ;incstack = 0
  2655                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2656                           
  2657                           
  2658                           ;main.c: 37:     ANSELB = 0;
  2659     0268  0023               	movlb	3	; select bank3
  2660     0269  018D               	clrf	13	;volatile
  2661     026A                     l4993:
  2662                           
  2663                           ;main.c: 38:     TRISAbits.TRISA1 = 0;
  2664     026A  0021               	movlb	1	; select bank1
  2665     026B  108C               	bcf	12,1	;volatile
  2666     026C                     l4995:
  2667                           
  2668                           ;main.c: 39:     TRISAbits.TRISA2 = 0;
  2669     026C  110C               	bcf	12,2	;volatile
  2670     026D                     l4997:
  2671                           
  2672                           ;main.c: 40:     TRISAbits.TRISA3 = 0;
  2673     026D  118C               	bcf	12,3	;volatile
  2674     026E                     l4999:
  2675                           
  2676                           ;main.c: 41:     TRISCbits.TRISC2 = 0;
  2677     026E  110E               	bcf	14,2	;volatile
  2678     026F                     l5001:
  2679                           
  2680                           ;main.c: 42:     TRISCbits.TRISC5 = 0;
  2681     026F  128E               	bcf	14,5	;volatile
  2682     0270                     l5003:
  2683                           
  2684                           ;main.c: 43:     TRISCbits.TRISC3 = 1;
  2685     0270  158E               	bsf	14,3	;volatile
  2686     0271                     l5005:
  2687                           
  2688                           ;main.c: 44:     TRISCbits.TRISC4 = 1;
  2689     0271  160E               	bsf	14,4	;volatile
  2690     0272                     l5007:
  2691                           
  2692                           ;main.c: 45:     LATAbits.LATA1 = 1;
  2693     0272  0022               	movlb	2	; select bank2
  2694     0273  148C               	bsf	12,1	;volatile
  2695     0274                     l5009:
  2696                           
  2697                           ;main.c: 46:     LATAbits.LATA2 = 1;
  2698     0274  150C               	bsf	12,2	;volatile
  2699     0275                     l5011:
  2700                           
  2701                           ;main.c: 47:     LATAbits.LATA3 = 1;
  2702     0275  158C               	bsf	12,3	;volatile
  2703     0276                     l5013:
  2704                           
  2705                           ;main.c: 48:     LATCbits.LATC2 = 0;
  2706     0276  110E               	bcf	14,2	;volatile
  2707     0277                     l5015:
  2708                           
  2709                           ;main.c: 49:     LATCbits.LATC5 = 1;
  2710     0277  168E               	bsf	14,5	;volatile
  2711     0278                     l5017:
  2712                           
  2713                           ;main.c: 52:     OPTION_REGbits.nWPUEN = 0;
  2714     0278  0021               	movlb	1	; select bank1
  2715     0279  1395               	bcf	21,7	;volatile
  2716     027A                     l5019:
  2717                           
  2718                           ;main.c: 53:     WPUB = 0b00001110;
  2719     027A  300E               	movlw	14
  2720     027B  0024               	movlb	4	; select bank4
  2721     027C  008D               	movwf	13	;volatile
  2722     027D                     l5021:
  2723                           
  2724                           ;main.c: 56:     TRISBbits.TRISB1 = 0;
  2725     027D  0021               	movlb	1	; select bank1
  2726     027E  108D               	bcf	13,1	;volatile
  2727     027F                     l5023:
  2728                           
  2729                           ;main.c: 57:     LATBbits.LATB1 = 0;
  2730     027F  0022               	movlb	2	; select bank2
  2731     0280  108D               	bcf	13,1	;volatile
  2732     0281                     l5025:
  2733                           
  2734                           ;main.c: 58:     TRISBbits.TRISB2 = 0;
  2735     0281  0021               	movlb	1	; select bank1
  2736     0282  110D               	bcf	13,2	;volatile
  2737     0283                     l5027:
  2738                           
  2739                           ;main.c: 59:     LATBbits.LATB2 = 0;
  2740     0283  0022               	movlb	2	; select bank2
  2741     0284  110D               	bcf	13,2	;volatile
  2742     0285                     l5029:
  2743                           
  2744                           ;main.c: 60:     TRISBbits.TRISB3 = 0;
  2745     0285  0021               	movlb	1	; select bank1
  2746     0286  118D               	bcf	13,3	;volatile
  2747     0287                     l5031:
  2748                           
  2749                           ;main.c: 61:     LATBbits.LATB3 = 0;
  2750     0287  0022               	movlb	2	; select bank2
  2751     0288  118D               	bcf	13,3	;volatile
  2752     0289                     l5033:
  2753                           
  2754                           ;main.c: 64:     INTCONbits.GIE = 1;
  2755     0289  178B               	bsf	11,7	;volatile
  2756     028A                     l5035:
  2757                           
  2758                           ;main.c: 65:     INTCONbits.IOCIE = 0;
  2759     028A  118B               	bcf	11,3	;volatile
  2760     028B                     l5037:
  2761                           
  2762                           ;main.c: 66:     INTCONbits.IOCIE = 1;
  2763     028B  158B               	bsf	11,3	;volatile
  2764     028C                     l5039:
  2765                           
  2766                           ;main.c: 68:     IOCBN = 0b11110000;
  2767     028C  30F0               	movlw	240
  2768     028D  0027               	movlb	7	; select bank7
  2769     028E  0095               	movwf	21	;volatile
  2770                           
  2771                           ;main.c: 69:     IOCBF = 0;
  2772     028F  0196               	clrf	22	;volatile
  2773     0290                     l5041:
  2774                           
  2775                           ;main.c: 72:     SSPCON1bits.SSPEN = 1;
  2776     0290  0024               	movlb	4	; select bank4
  2777     0291  1695               	bsf	21,5	;volatile
  2778     0292                     l5043:
  2779                           
  2780                           ;main.c: 73:     SSPCON1bits.SSPM3 = 1;
  2781     0292  1595               	bsf	21,3	;volatile
  2782     0293                     l5045:
  2783                           
  2784                           ;main.c: 74:     SSPCONbits.SSPM2 = 0;
  2785     0293  1115               	bcf	21,2	;volatile
  2786     0294                     l5047:
  2787                           
  2788                           ;main.c: 75:     SSPCONbits.SSPM1 = 0;
  2789     0294  1095               	bcf	21,1	;volatile
  2790     0295                     l5049:
  2791                           
  2792                           ;main.c: 76:     SSPCON1bits.SSPM0 = 0;
  2793     0295  1015               	bcf	21,0	;volatile
  2794     0296                     l5051:
  2795                           
  2796                           ;main.c: 77:     SSPADD = 0x4F;
  2797     0296  304F               	movlw	79
  2798     0297  0092               	movwf	18	;volatile
  2799     0298                     l5053:
  2800                           
  2801                           ;main.c: 80:     ADC_Initialize();
  2802     0298  3199  2161  3182   	fcall	_ADC_Initialize
  2803     029B                     l5055:
  2804                           
  2805                           ;main.c: 81:     Lcd_Init();
  2806     029B  319C  2462  3182   	fcall	_Lcd_Init
  2807     029E                     l5057:
  2808                           
  2809                           ;main.c: 82:     Lcd_Clear();
  2810     029E  3199  2184  3182   	fcall	_Lcd_Clear
  2811     02A1                     l5059:
  2812                           
  2813                           ;main.c: 84:     _delay((unsigned long)((200)*(4000000/4000.0)));
  2814     02A1  3002               	movlw	2
  2815     02A2  0022               	movlb	2	; select bank2
  2816     02A3  00CD               	movwf	(??_main^(0+256)+1)
  2817     02A4  3004               	movlw	4
  2818     02A5  00CC               	movwf	??_main^(0+256)
  2819     02A6  30BA               	movlw	186
  2820     02A7                     u6587:
  2821     02A7  0B89               	decfsz	9,f
  2822     02A8  2AA7               	goto	u6587
  2823     02A9  0BCC               	decfsz	??_main^(0+256),f
  2824     02AA  2AA7               	goto	u6587
  2825     02AB  0BCD               	decfsz	(??_main^(0+256)+1),f
  2826     02AC  2AA7               	goto	u6587
  2827     02AD  0000               	nop
  2828     02AE                     l5061:
  2829                           
  2830                           ;main.c: 87:     ADC_StartConversion();
  2831     02AE  3190  2000  3182   	fcall	_ADC_StartConversion
  2832     02B1                     l5063:	
  2833                           ;main.c: 88:     while (!ADC_IsConversionDone());
  2834                           
  2835     02B1  3199  215A  3182   	fcall	_ADC_IsConversionDone
  2836     02B4  3A00               	xorlw	0
  2837     02B5  1903               	skipnz
  2838     02B6  2AB8               	goto	u6271
  2839     02B7  2AB9               	goto	u6270
  2840     02B8                     u6271:
  2841     02B8  2AB1               	goto	l5063
  2842     02B9                     u6270:
  2843     02B9                     l5065:
  2844                           
  2845                           ;main.c: 89:     convertedValue = ADC_GetConversionResult();
  2846     02B9  3199  217B  3182   	fcall	_ADC_GetConversionResult
  2847     02BC  0020               	movlb	0	; select bank0
  2848     02BD  0821               	movf	?_ADC_GetConversionResult+1,w
  2849     02BE  0022               	movlb	2	; select bank2
  2850     02BF  00BE               	movwf	(_convertedValue+1)^(0+256)
  2851     02C0  0020               	movlb	0	; select bank0
  2852     02C1  0820               	movf	?_ADC_GetConversionResult,w
  2853     02C2  0022               	movlb	2	; select bank2
  2854     02C3  00BD               	movwf	_convertedValue^(0+256)
  2855     02C4                     l5067:
  2856                           
  2857                           ;main.c: 90:     temp = (float)(convertedValue*5*100)/1024;
  2858     02C4  3044               	movlw	68
  2859     02C5  0020               	movlb	0	; select bank0
  2860     02C6  00B7               	movwf	___fldiv@a+3
  2861     02C7  3080               	movlw	128
  2862     02C8  00B6               	movwf	___fldiv@a+2
  2863     02C9  3000               	movlw	0
  2864     02CA  00B5               	movwf	___fldiv@a+1
  2865     02CB  3000               	movlw	0
  2866     02CC  00B4               	movwf	___fldiv@a
  2867     02CD  30F4               	movlw	244
  2868     02CE  00A2               	movwf	___wmul@multiplicand
  2869     02CF  3001               	movlw	1
  2870     02D0  00A3               	movwf	___wmul@multiplicand+1
  2871     02D1  0022               	movlb	2	; select bank2
  2872     02D2  083E               	movf	(_convertedValue+1)^(0+256),w
  2873     02D3  0020               	movlb	0	; select bank0
  2874     02D4  00A1               	movwf	___wmul@multiplier+1
  2875     02D5  0022               	movlb	2	; select bank2
  2876     02D6  083D               	movf	_convertedValue^(0+256),w
  2877     02D7  0020               	movlb	0	; select bank0
  2878     02D8  00A0               	movwf	___wmul@multiplier
  2879     02D9  319A  2284  3182   	fcall	___wmul
  2880     02DC  0020               	movlb	0	; select bank0
  2881     02DD  0820               	movf	?___wmul,w
  2882     02DE  0022               	movlb	2	; select bank2
  2883     02DF  00CC               	movwf	??_main^(0+256)
  2884     02E0  0020               	movlb	0	; select bank0
  2885     02E1  0821               	movf	?___wmul+1,w
  2886     02E2  0022               	movlb	2	; select bank2
  2887     02E3  00CD               	movwf	(??_main^(0+256)+1)
  2888     02E4  01CE               	clrf	(??_main^(0+256)+2)
  2889     02E5  01CF               	clrf	(??_main^(0+256)+3)
  2890     02E6  084F               	movf	(??_main+3)^(0+256),w
  2891     02E7  0020               	movlb	0	; select bank0
  2892     02E8  00A9               	movwf	___xxtofl@val+3
  2893     02E9  0022               	movlb	2	; select bank2
  2894     02EA  084E               	movf	(??_main+2)^(0+256),w
  2895     02EB  0020               	movlb	0	; select bank0
  2896     02EC  00A8               	movwf	___xxtofl@val+2
  2897     02ED  0022               	movlb	2	; select bank2
  2898     02EE  084D               	movf	(??_main+1)^(0+256),w
  2899     02EF  0020               	movlb	0	; select bank0
  2900     02F0  00A7               	movwf	___xxtofl@val+1
  2901     02F1  0022               	movlb	2	; select bank2
  2902     02F2  084C               	movf	??_main^(0+256),w
  2903     02F3  0020               	movlb	0	; select bank0
  2904     02F4  00A6               	movwf	___xxtofl@val
  2905     02F5  3000               	movlw	0
  2906     02F6  3187  2730  3182   	fcall	___xxtofl
  2907     02F9  0020               	movlb	0	; select bank0
  2908     02FA  0829               	movf	?___xxtofl+3,w
  2909     02FB  00BB               	movwf	___fldiv@b+3
  2910     02FC  0828               	movf	?___xxtofl+2,w
  2911     02FD  00BA               	movwf	___fldiv@b+2
  2912     02FE  0827               	movf	?___xxtofl+1,w
  2913     02FF  00B9               	movwf	___fldiv@b+1
  2914     0300  0826               	movf	?___xxtofl,w
  2915     0301  00B8               	movwf	___fldiv@b
  2916     0302  3194  244E  3182   	fcall	___fldiv
  2917     0305  0020               	movlb	0	; select bank0
  2918     0306  0837               	movf	?___fldiv+3,w
  2919     0307  0022               	movlb	2	; select bank2
  2920     0308  00AB               	movwf	(_temp+3)^(0+256)
  2921     0309  0020               	movlb	0	; select bank0
  2922     030A  0836               	movf	?___fldiv+2,w
  2923     030B  0022               	movlb	2	; select bank2
  2924     030C  00AA               	movwf	(_temp+2)^(0+256)
  2925     030D  0020               	movlb	0	; select bank0
  2926     030E  0835               	movf	?___fldiv+1,w
  2927     030F  0022               	movlb	2	; select bank2
  2928     0310  00A9               	movwf	(_temp+1)^(0+256)
  2929     0311  0020               	movlb	0	; select bank0
  2930     0312  0834               	movf	?___fldiv,w
  2931     0313  0022               	movlb	2	; select bank2
  2932     0314  00A8               	movwf	_temp^(0+256)
  2933     0315                     l5069:
  2934                           
  2935                           ;main.c: 95:         Lcd_Set_Cursor(1,2);
  2936     0315  3002               	movlw	2
  2937     0316  0020               	movlb	0	; select bank0
  2938     0317  00A3               	movwf	Lcd_Set_Cursor@b
  2939     0318  3001               	movlw	1
  2940     0319  319F  2707  3182   	fcall	_Lcd_Set_Cursor
  2941     031C                     l5071:
  2942                           
  2943                           ;main.c: 96:         Lcd_Write_String("ControlTech CA");
  2944     031C  3032               	movlw	low (STR_1| (0+32768))
  2945     031D  0020               	movlb	0	; select bank0
  2946     031E  00A5               	movwf	Lcd_Write_String@a
  2947     031F  3098               	movlw	high (STR_1| (0+32768))
  2948     0320  00A6               	movwf	Lcd_Write_String@a+1
  2949     0321  319A  2225  3182   	fcall	_Lcd_Write_String
  2950     0324                     l5073:
  2951                           
  2952                           ;main.c: 99:         SSPCON2bits.SEN = 1;
  2953     0324  0024               	movlb	4	; select bank4
  2954     0325  1416               	bsf	22,0	;volatile
  2955     0326                     l200:	
  2956                           ;main.c: 100:         while(SSPCON2bits.SEN);
  2957                           
  2958     0326  1816               	btfsc	22,0	;volatile
  2959     0327  2B29               	goto	u6281
  2960     0328  2B2A               	goto	u6280
  2961     0329                     u6281:
  2962     0329  2B26               	goto	l200
  2963     032A                     u6280:
  2964     032A                     l5075:
  2965                           
  2966                           ;main.c: 101:         SSPBUF = 0b11010000;
  2967     032A  30D0               	movlw	208
  2968     032B  0091               	movwf	17	;volatile
  2969     032C                     l203:	
  2970                           ;main.c: 102:         while(SSPSTATbits.BF);
  2971                           
  2972     032C  1814               	btfsc	20,0	;volatile
  2973     032D  2B2F               	goto	u6291
  2974     032E  2B30               	goto	u6290
  2975     032F                     u6291:
  2976     032F  2B2C               	goto	l203
  2977     0330                     u6290:
  2978     0330                     l206:
  2979     0330  1914               	btfsc	20,2	;volatile
  2980     0331  2B33               	goto	u6301
  2981     0332  2B34               	goto	u6300
  2982     0333                     u6301:
  2983     0333  2B30               	goto	l206
  2984     0334                     u6300:
  2985     0334                     l5077:
  2986                           
  2987                           ;main.c: 104:         SSPBUF = 0;
  2988     0334  0191               	clrf	17	;volatile
  2989     0335                     l209:	
  2990                           ;main.c: 105:         while(SSPSTATbits.BF);
  2991                           
  2992     0335  1814               	btfsc	20,0	;volatile
  2993     0336  2B38               	goto	u6311
  2994     0337  2B39               	goto	u6310
  2995     0338                     u6311:
  2996     0338  2B35               	goto	l209
  2997     0339                     u6310:
  2998     0339                     l212:
  2999     0339  1914               	btfsc	20,2	;volatile
  3000     033A  2B3C               	goto	u6321
  3001     033B  2B3D               	goto	u6320
  3002     033C                     u6321:
  3003     033C  2B39               	goto	l212
  3004     033D                     u6320:
  3005     033D                     l214:
  3006                           
  3007                           ;main.c: 107:         SSPCON2bits.RSEN = 1;
  3008     033D  1496               	bsf	22,1	;volatile
  3009     033E                     l215:	
  3010                           ;main.c: 108:         while(SSPCON2bits.RSEN);
  3011                           
  3012     033E  1896               	btfsc	22,1	;volatile
  3013     033F  2B41               	goto	u6331
  3014     0340  2B42               	goto	u6330
  3015     0341                     u6331:
  3016     0341  2B3E               	goto	l215
  3017     0342                     u6330:
  3018     0342                     l5079:
  3019                           
  3020                           ;main.c: 109:         SSPBUF = 0b11010001;
  3021     0342  30D1               	movlw	209
  3022     0343  0091               	movwf	17	;volatile
  3023     0344                     l218:	
  3024                           ;main.c: 110:         while(SSPSTATbits.BF);
  3025                           
  3026     0344  1814               	btfsc	20,0	;volatile
  3027     0345  2B47               	goto	u6341
  3028     0346  2B48               	goto	u6340
  3029     0347                     u6341:
  3030     0347  2B44               	goto	l218
  3031     0348                     u6340:
  3032     0348                     l221:
  3033     0348  1914               	btfsc	20,2	;volatile
  3034     0349  2B4B               	goto	u6351
  3035     034A  2B4C               	goto	u6350
  3036     034B                     u6351:
  3037     034B  2B48               	goto	l221
  3038     034C                     u6350:
  3039     034C                     l223:
  3040                           
  3041                           ;main.c: 112:         SSPCON2bits.RCEN = 1;
  3042     034C  1596               	bsf	22,3	;volatile
  3043     034D                     l224:	
  3044                           ;main.c: 113:         while(SSPSTATbits.BF==0);
  3045                           
  3046     034D  1C14               	btfss	20,0	;volatile
  3047     034E  2B50               	goto	u6361
  3048     034F  2B51               	goto	u6360
  3049     0350                     u6361:
  3050     0350  2B4D               	goto	l224
  3051     0351                     u6360:
  3052     0351                     l5081:
  3053                           
  3054                           ;main.c: 114:         seg = SSPBUF;
  3055     0351  0811               	movf	17,w	;volatile
  3056     0352  0021               	movlb	1	; select bank1
  3057     0353  00EF               	movwf	_seg^(0+128)
  3058     0354                     l5083:
  3059                           
  3060                           ;main.c: 115:         SSPCON2bits.ACKDT = 0;
  3061     0354  0024               	movlb	4	; select bank4
  3062     0355  1296               	bcf	22,5	;volatile
  3063     0356                     l5085:
  3064                           
  3065                           ;main.c: 116:         SSPCON2bits.ACKEN = 1;
  3066     0356  1616               	bsf	22,4	;volatile
  3067     0357                     l227:	
  3068                           ;main.c: 117:         while(SSPCON2bits.ACKEN);
  3069                           
  3070     0357  1A16               	btfsc	22,4	;volatile
  3071     0358  2B5A               	goto	u6371
  3072     0359  2B5B               	goto	u6370
  3073     035A                     u6371:
  3074     035A  2B57               	goto	l227
  3075     035B                     u6370:
  3076     035B                     l229:
  3077                           
  3078                           ;main.c: 118:         SSPCON2bits.RCEN = 1;
  3079     035B  1596               	bsf	22,3	;volatile
  3080     035C                     l230:	
  3081                           ;main.c: 119:         while(SSPSTATbits.BF==0);
  3082                           
  3083     035C  1C14               	btfss	20,0	;volatile
  3084     035D  2B5F               	goto	u6381
  3085     035E  2B60               	goto	u6380
  3086     035F                     u6381:
  3087     035F  2B5C               	goto	l230
  3088     0360                     u6380:
  3089     0360                     l5087:
  3090                           
  3091                           ;main.c: 120:         min = SSPBUF;
  3092     0360  0811               	movf	17,w	;volatile
  3093     0361  0022               	movlb	2	; select bank2
  3094     0362  00B7               	movwf	_min^(0+256)
  3095     0363                     l5089:
  3096                           
  3097                           ;main.c: 121:         SSPCON2bits.ACKDT = 0;
  3098     0363  0024               	movlb	4	; select bank4
  3099     0364  1296               	bcf	22,5	;volatile
  3100     0365                     l5091:
  3101                           
  3102                           ;main.c: 122:         SSPCON2bits.ACKEN = 1;
  3103     0365  1616               	bsf	22,4	;volatile
  3104     0366                     l233:	
  3105                           ;main.c: 123:         while(SSPCON2bits.ACKEN);
  3106                           
  3107     0366  1A16               	btfsc	22,4	;volatile
  3108     0367  2B69               	goto	u6391
  3109     0368  2B6A               	goto	u6390
  3110     0369                     u6391:
  3111     0369  2B66               	goto	l233
  3112     036A                     u6390:
  3113     036A                     l235:
  3114                           
  3115                           ;main.c: 124:         SSPCON2bits.RCEN = 1;
  3116     036A  1596               	bsf	22,3	;volatile
  3117     036B                     l236:	
  3118                           ;main.c: 125:         while(SSPSTATbits.BF==0);
  3119                           
  3120     036B  1C14               	btfss	20,0	;volatile
  3121     036C  2B6E               	goto	u6401
  3122     036D  2B6F               	goto	u6400
  3123     036E                     u6401:
  3124     036E  2B6B               	goto	l236
  3125     036F                     u6400:
  3126     036F                     l5093:
  3127                           
  3128                           ;main.c: 126:         hor = SSPBUF;
  3129     036F  0811               	movf	17,w	;volatile
  3130     0370  0022               	movlb	2	; select bank2
  3131     0371  00B6               	movwf	_hor^(0+256)
  3132     0372                     l5095:
  3133                           
  3134                           ;main.c: 127:         SSPCON2bits.ACKDT = 1;
  3135     0372  0024               	movlb	4	; select bank4
  3136     0373  1696               	bsf	22,5	;volatile
  3137     0374                     l5097:
  3138                           
  3139                           ;main.c: 128:         SSPCON2bits.ACKEN = 1;
  3140     0374  1616               	bsf	22,4	;volatile
  3141     0375                     l239:	
  3142                           ;main.c: 129:         while(SSPCON2bits.ACKEN);
  3143                           
  3144     0375  1A16               	btfsc	22,4	;volatile
  3145     0376  2B78               	goto	u6411
  3146     0377  2B79               	goto	u6410
  3147     0378                     u6411:
  3148     0378  2B75               	goto	l239
  3149     0379                     u6410:
  3150     0379                     l241:
  3151                           
  3152                           ;main.c: 130:         SSPCON2bits.PEN = 1;
  3153     0379  1516               	bsf	22,2	;volatile
  3154     037A                     l242:	
  3155                           ;main.c: 131:         while(SSPCON2bits.PEN);
  3156                           
  3157     037A  1916               	btfsc	22,2	;volatile
  3158     037B  2B7D               	goto	u6421
  3159     037C  2B7E               	goto	u6420
  3160     037D                     u6421:
  3161     037D  2B7A               	goto	l242
  3162     037E                     u6420:
  3163     037E                     l5099:
  3164                           
  3165                           ;main.c: 134:         sprintf(buffer,"%d%d:%d%d:%d%d",hor>>4,hor&=0x0F,min>>4,min&=0x0F,
      +                          seg>>4,seg&=0x0F);
  3166     037E  3050               	movlw	low (STR_2| (0+32768))
  3167     037F  0021               	movlb	1	; select bank1
  3168     0380  00DE               	movwf	sprintf@fmt^(0+128)
  3169     0381  3098               	movlw	high (STR_2| (0+32768))
  3170     0382  00DF               	movwf	(sprintf@fmt^(0+128)+1)
  3171     0383  0022               	movlb	2	; select bank2
  3172     0384  0836               	movf	_hor^(0+256),w
  3173     0385  00CC               	movwf	??_main^(0+256)
  3174     0386  3004               	movlw	4
  3175     0387                     u6435:
  3176     0387  36CC               	lsrf	??_main^(0+256),f
  3177     0388  0B89               	decfsz	9,f
  3178     0389  2B87               	goto	u6435
  3179     038A  084C               	movf	??_main^(0+256),w
  3180     038B  00CD               	movwf	(??_main+1)^(0+256)
  3181     038C  01CE               	clrf	((??_main+1)^(0+256)+1)
  3182     038D  084D               	movf	(??_main+1)^(0+256),w
  3183     038E  0021               	movlb	1	; select bank1
  3184     038F  00E0               	movwf	(?_sprintf^(0+128)+2)
  3185     0390  0022               	movlb	2	; select bank2
  3186     0391  084E               	movf	(??_main+2)^(0+256),w
  3187     0392  0021               	movlb	1	; select bank1
  3188     0393  00E1               	movwf	((?_sprintf+1)^(0+128)+2)
  3189     0394  300F               	movlw	15
  3190     0395  0022               	movlb	2	; select bank2
  3191     0396  00CF               	movwf	(??_main+3)^(0+256)
  3192     0397  084F               	movf	(??_main+3)^(0+256),w
  3193     0398  05B6               	andwf	_hor^(0+256),f
  3194     0399  0836               	movf	_hor^(0+256),w
  3195     039A  00D0               	movwf	(??_main+4)^(0+256)
  3196     039B  01D1               	clrf	((??_main+4)^(0+256)+1)
  3197     039C  0850               	movf	(??_main+4)^(0+256),w
  3198     039D  0021               	movlb	1	; select bank1
  3199     039E  00E2               	movwf	(?_sprintf^(0+128)+4)
  3200     039F  0022               	movlb	2	; select bank2
  3201     03A0  0851               	movf	(??_main+5)^(0+256),w
  3202     03A1  0021               	movlb	1	; select bank1
  3203     03A2  00E3               	movwf	((?_sprintf+1)^(0+128)+4)
  3204     03A3  0022               	movlb	2	; select bank2
  3205     03A4  0837               	movf	_min^(0+256),w
  3206     03A5  00D2               	movwf	(??_main+6)^(0+256)
  3207     03A6  3004               	movlw	4
  3208     03A7                     u6445:
  3209     03A7  36D2               	lsrf	(??_main+6)^(0+256),f
  3210     03A8  0B89               	decfsz	9,f
  3211     03A9  2BA7               	goto	u6445
  3212     03AA  0852               	movf	(??_main+6)^(0+256),w
  3213     03AB  00D3               	movwf	(??_main+7)^(0+256)
  3214     03AC  01D4               	clrf	((??_main+7)^(0+256)+1)
  3215     03AD  0853               	movf	(??_main+7)^(0+256),w
  3216     03AE  0021               	movlb	1	; select bank1
  3217     03AF  00E4               	movwf	(?_sprintf^(0+128)+6)
  3218     03B0  0022               	movlb	2	; select bank2
  3219     03B1  0854               	movf	(??_main+8)^(0+256),w
  3220     03B2  0021               	movlb	1	; select bank1
  3221     03B3  00E5               	movwf	((?_sprintf+1)^(0+128)+6)
  3222     03B4  300F               	movlw	15
  3223     03B5  0022               	movlb	2	; select bank2
  3224     03B6  00D5               	movwf	(??_main+9)^(0+256)
  3225     03B7  0855               	movf	(??_main+9)^(0+256),w
  3226     03B8  05B7               	andwf	_min^(0+256),f
  3227     03B9  0837               	movf	_min^(0+256),w
  3228     03BA  00D6               	movwf	(??_main+10)^(0+256)
  3229     03BB  01D7               	clrf	((??_main+10)^(0+256)+1)
  3230     03BC  0856               	movf	(??_main+10)^(0+256),w
  3231     03BD  0021               	movlb	1	; select bank1
  3232     03BE  00E6               	movwf	(?_sprintf^(0+128)+8)
  3233     03BF  0022               	movlb	2	; select bank2
  3234     03C0  0857               	movf	(??_main+11)^(0+256),w
  3235     03C1  0021               	movlb	1	; select bank1
  3236     03C2  00E7               	movwf	((?_sprintf+1)^(0+128)+8)
  3237     03C3  086F               	movf	_seg^(0+128),w
  3238     03C4  0022               	movlb	2	; select bank2
  3239     03C5  00D8               	movwf	(??_main+12)^(0+256)
  3240     03C6  3004               	movlw	4
  3241     03C7                     u6455:
  3242     03C7  36D8               	lsrf	(??_main+12)^(0+256),f
  3243     03C8  0B89               	decfsz	9,f
  3244     03C9  2BC7               	goto	u6455
  3245     03CA  0858               	movf	(??_main+12)^(0+256),w
  3246     03CB  00D9               	movwf	(??_main+13)^(0+256)
  3247     03CC  01DA               	clrf	((??_main+13)^(0+256)+1)
  3248     03CD  0859               	movf	(??_main+13)^(0+256),w
  3249     03CE  0021               	movlb	1	; select bank1
  3250     03CF  00E8               	movwf	(?_sprintf^(0+128)+10)
  3251     03D0  0022               	movlb	2	; select bank2
  3252     03D1  085A               	movf	(??_main+14)^(0+256),w
  3253     03D2  0021               	movlb	1	; select bank1
  3254     03D3  00E9               	movwf	((?_sprintf+1)^(0+128)+10)
  3255     03D4  300F               	movlw	15
  3256     03D5  0022               	movlb	2	; select bank2
  3257     03D6  00DB               	movwf	(??_main+15)^(0+256)
  3258     03D7  085B               	movf	(??_main+15)^(0+256),w
  3259     03D8  0021               	movlb	1	; select bank1
  3260     03D9  05EF               	andwf	_seg^(0+128),f
  3261     03DA  086F               	movf	_seg^(0+128),w
  3262     03DB  0022               	movlb	2	; select bank2
  3263     03DC  00DC               	movwf	(??_main+16)^(0+256)
  3264     03DD  01DD               	clrf	((??_main+16)^(0+256)+1)
  3265     03DE  085C               	movf	(??_main+16)^(0+256),w
  3266     03DF  0021               	movlb	1	; select bank1
  3267     03E0  00EA               	movwf	(?_sprintf^(0+128)+12)
  3268     03E1  0022               	movlb	2	; select bank2
  3269     03E2  085D               	movf	(??_main+17)^(0+256),w
  3270     03E3  0021               	movlb	1	; select bank1
  3271     03E4  00EB               	movwf	((?_sprintf+1)^(0+128)+12)
  3272     03E5  30A0               	movlw	(low (_buffer| (0+256)))& (0+255)
  3273     03E6  319A  22C7  3182   	fcall	_sprintf
  3274     03E9                     l5101:
  3275                           
  3276                           ;main.c: 135:         Lcd_Set_Cursor(2,1);
  3277     03E9  0020               	movlb	0	; select bank0
  3278     03EA  01A3               	clrf	Lcd_Set_Cursor@b
  3279     03EB  0AA3               	incf	Lcd_Set_Cursor@b,f
  3280     03EC  3002               	movlw	2
  3281     03ED  319F  2707  3182   	fcall	_Lcd_Set_Cursor
  3282     03F0                     l5103:
  3283                           
  3284                           ;main.c: 136:         Lcd_Write_String(buffer);
  3285     03F0  30A0               	movlw	low _buffer
  3286     03F1  0020               	movlb	0	; select bank0
  3287     03F2  00A5               	movwf	Lcd_Write_String@a
  3288     03F3  3001               	movlw	high _buffer
  3289     03F4  00A6               	movwf	Lcd_Write_String@a+1
  3290     03F5  319A  2225  3182   	fcall	_Lcd_Write_String
  3291     03F8                     l5105:
  3292                           
  3293                           ;main.c: 139:         contadorTemp++;
  3294     03F8  3001               	movlw	1
  3295     03F9  0021               	movlb	1	; select bank1
  3296     03FA  07ED               	addwf	main@contadorTemp^(0+128),f
  3297     03FB  3000               	movlw	0
  3298     03FC  3DEE               	addwfc	(main@contadorTemp+1)^(0+128),f
  3299     03FD                     l5107:
  3300                           
  3301                           ;main.c: 142:         if (contadorTemp >= 300) {
  3302     03FD  086E               	movf	(main@contadorTemp+1)^(0+128),w
  3303     03FE  3A80               	xorlw	128
  3304     03FF  0022               	movlb	2	; select bank2
  3305     0400  00CC               	movwf	??_main^(0+256)
  3306     0401  3081               	movlw	129
  3307     0402  024C               	subwf	??_main^(0+256),w
  3308     0403  1D03               	skipz
  3309     0404  2C08               	goto	u6465
  3310     0405  302C               	movlw	44
  3311     0406  0021               	movlb	1	; select bank1
  3312     0407  026D               	subwf	main@contadorTemp^(0+128),w
  3313     0408                     u6465:
  3314     0408  1C03               	skipc
  3315     0409  2C0B               	goto	u6461
  3316     040A  2C0C               	goto	u6460
  3317     040B                     u6461:
  3318     040B  2CAE               	goto	l5129
  3319     040C                     u6460:
  3320     040C                     l5109:
  3321                           
  3322                           ;main.c: 144:             ADC_StartConversion();
  3323     040C  3190  2000  3182   	fcall	_ADC_StartConversion
  3324     040F                     l5111:	
  3325                           ;main.c: 145:             while(!ADC_IsConversionDone());
  3326                           
  3327     040F  3199  215A  3182   	fcall	_ADC_IsConversionDone
  3328     0412  3A00               	xorlw	0
  3329     0413  1903               	skipnz
  3330     0414  2C16               	goto	u6471
  3331     0415  2C17               	goto	u6470
  3332     0416                     u6471:
  3333     0416  2C0F               	goto	l5111
  3334     0417                     u6470:
  3335     0417                     l5113:
  3336                           
  3337                           ;main.c: 146:             convertedValue = ADC_GetConversionResult();
  3338     0417  3199  217B  3182   	fcall	_ADC_GetConversionResult
  3339     041A  0020               	movlb	0	; select bank0
  3340     041B  0821               	movf	?_ADC_GetConversionResult+1,w
  3341     041C  0022               	movlb	2	; select bank2
  3342     041D  00BE               	movwf	(_convertedValue+1)^(0+256)
  3343     041E  0020               	movlb	0	; select bank0
  3344     041F  0820               	movf	?_ADC_GetConversionResult,w
  3345     0420  0022               	movlb	2	; select bank2
  3346     0421  00BD               	movwf	_convertedValue^(0+256)
  3347     0422                     l5115:
  3348                           
  3349                           ;main.c: 147:             temp = (float) (convertedValue*5*100)/1024;
  3350     0422  3044               	movlw	68
  3351     0423  0020               	movlb	0	; select bank0
  3352     0424  00B7               	movwf	___fldiv@a+3
  3353     0425  3080               	movlw	128
  3354     0426  00B6               	movwf	___fldiv@a+2
  3355     0427  3000               	movlw	0
  3356     0428  00B5               	movwf	___fldiv@a+1
  3357     0429  3000               	movlw	0
  3358     042A  00B4               	movwf	___fldiv@a
  3359     042B  30F4               	movlw	244
  3360     042C  00A2               	movwf	___wmul@multiplicand
  3361     042D  3001               	movlw	1
  3362     042E  00A3               	movwf	___wmul@multiplicand+1
  3363     042F  0022               	movlb	2	; select bank2
  3364     0430  083E               	movf	(_convertedValue+1)^(0+256),w
  3365     0431  0020               	movlb	0	; select bank0
  3366     0432  00A1               	movwf	___wmul@multiplier+1
  3367     0433  0022               	movlb	2	; select bank2
  3368     0434  083D               	movf	_convertedValue^(0+256),w
  3369     0435  0020               	movlb	0	; select bank0
  3370     0436  00A0               	movwf	___wmul@multiplier
  3371     0437  319A  2284  3182   	fcall	___wmul
  3372     043A  0020               	movlb	0	; select bank0
  3373     043B  0820               	movf	?___wmul,w
  3374     043C  0022               	movlb	2	; select bank2
  3375     043D  00CC               	movwf	??_main^(0+256)
  3376     043E  0020               	movlb	0	; select bank0
  3377     043F  0821               	movf	?___wmul+1,w
  3378     0440  0022               	movlb	2	; select bank2
  3379     0441  00CD               	movwf	(??_main^(0+256)+1)
  3380     0442  01CE               	clrf	(??_main^(0+256)+2)
  3381     0443  01CF               	clrf	(??_main^(0+256)+3)
  3382     0444  084F               	movf	(??_main+3)^(0+256),w
  3383     0445  0020               	movlb	0	; select bank0
  3384     0446  00A9               	movwf	___xxtofl@val+3
  3385     0447  0022               	movlb	2	; select bank2
  3386     0448  084E               	movf	(??_main+2)^(0+256),w
  3387     0449  0020               	movlb	0	; select bank0
  3388     044A  00A8               	movwf	___xxtofl@val+2
  3389     044B  0022               	movlb	2	; select bank2
  3390     044C  084D               	movf	(??_main+1)^(0+256),w
  3391     044D  0020               	movlb	0	; select bank0
  3392     044E  00A7               	movwf	___xxtofl@val+1
  3393     044F  0022               	movlb	2	; select bank2
  3394     0450  084C               	movf	??_main^(0+256),w
  3395     0451  0020               	movlb	0	; select bank0
  3396     0452  00A6               	movwf	___xxtofl@val
  3397     0453  3000               	movlw	0
  3398     0454  3187  2730  3182   	fcall	___xxtofl
  3399     0457  0020               	movlb	0	; select bank0
  3400     0458  0829               	movf	?___xxtofl+3,w
  3401     0459  00BB               	movwf	___fldiv@b+3
  3402     045A  0828               	movf	?___xxtofl+2,w
  3403     045B  00BA               	movwf	___fldiv@b+2
  3404     045C  0827               	movf	?___xxtofl+1,w
  3405     045D  00B9               	movwf	___fldiv@b+1
  3406     045E  0826               	movf	?___xxtofl,w
  3407     045F  00B8               	movwf	___fldiv@b
  3408     0460  3194  244E  3182   	fcall	___fldiv
  3409     0463  0020               	movlb	0	; select bank0
  3410     0464  0837               	movf	?___fldiv+3,w
  3411     0465  0022               	movlb	2	; select bank2
  3412     0466  00AB               	movwf	(_temp+3)^(0+256)
  3413     0467  0020               	movlb	0	; select bank0
  3414     0468  0836               	movf	?___fldiv+2,w
  3415     0469  0022               	movlb	2	; select bank2
  3416     046A  00AA               	movwf	(_temp+2)^(0+256)
  3417     046B  0020               	movlb	0	; select bank0
  3418     046C  0835               	movf	?___fldiv+1,w
  3419     046D  0022               	movlb	2	; select bank2
  3420     046E  00A9               	movwf	(_temp+1)^(0+256)
  3421     046F  0020               	movlb	0	; select bank0
  3422     0470  0834               	movf	?___fldiv,w
  3423     0471  0022               	movlb	2	; select bank2
  3424     0472  00A8               	movwf	_temp^(0+256)
  3425     0473                     l5117:
  3426                           
  3427                           ;main.c: 150:             Lcd_Set_Cursor(2,10);
  3428     0473  300A               	movlw	10
  3429     0474  0020               	movlb	0	; select bank0
  3430     0475  00A3               	movwf	Lcd_Set_Cursor@b
  3431     0476  3002               	movlw	2
  3432     0477  319F  2707  3182   	fcall	_Lcd_Set_Cursor
  3433     047A                     l5119:
  3434                           
  3435                           ;main.c: 151:             sprintf(buffer,"%0.2f\xDF",temp);
  3436     047A  3071               	movlw	low (STR_3| (0+32768))
  3437     047B  0021               	movlb	1	; select bank1
  3438     047C  00DE               	movwf	sprintf@fmt^(0+128)
  3439     047D  3098               	movlw	high (STR_3| (0+32768))
  3440     047E  00DF               	movwf	(sprintf@fmt^(0+128)+1)
  3441     047F  0022               	movlb	2	; select bank2
  3442     0480  082B               	movf	(_temp+3)^(0+256),w
  3443     0481  0021               	movlb	1	; select bank1
  3444     0482  00E3               	movwf	((?_sprintf+3)^(0+128)+2)
  3445     0483  0022               	movlb	2	; select bank2
  3446     0484  082A               	movf	(_temp+2)^(0+256),w
  3447     0485  0021               	movlb	1	; select bank1
  3448     0486  00E2               	movwf	((?_sprintf+2)^(0+128)+2)
  3449     0487  0022               	movlb	2	; select bank2
  3450     0488  0829               	movf	(_temp+1)^(0+256),w
  3451     0489  0021               	movlb	1	; select bank1
  3452     048A  00E1               	movwf	((?_sprintf+1)^(0+128)+2)
  3453     048B  0022               	movlb	2	; select bank2
  3454     048C  0828               	movf	_temp^(0+256),w
  3455     048D  0021               	movlb	1	; select bank1
  3456     048E  00E0               	movwf	(?_sprintf^(0+128)+2)
  3457     048F  30A0               	movlw	(low (_buffer| (0+256)))& (0+255)
  3458     0490  319A  22C7  3182   	fcall	_sprintf
  3459     0493                     l5121:
  3460                           
  3461                           ;main.c: 152:             Lcd_Write_String(buffer);
  3462     0493  30A0               	movlw	low _buffer
  3463     0494  0020               	movlb	0	; select bank0
  3464     0495  00A5               	movwf	Lcd_Write_String@a
  3465     0496  3001               	movlw	high _buffer
  3466     0497  00A6               	movwf	Lcd_Write_String@a+1
  3467     0498  319A  2225  3182   	fcall	_Lcd_Write_String
  3468     049B                     l5123:
  3469                           
  3470                           ;main.c: 153:             Lcd_Set_Cursor(2,16);
  3471     049B  3010               	movlw	16
  3472     049C  0020               	movlb	0	; select bank0
  3473     049D  00A3               	movwf	Lcd_Set_Cursor@b
  3474     049E  3002               	movlw	2
  3475     049F  319F  2707  3182   	fcall	_Lcd_Set_Cursor
  3476     04A2                     l5125:
  3477                           
  3478                           ;main.c: 154:             Lcd_Write_String("C");
  3479     04A2  3087               	movlw	low (STR_4| (0+32768))
  3480     04A3  0020               	movlb	0	; select bank0
  3481     04A4  00A5               	movwf	Lcd_Write_String@a
  3482     04A5  3098               	movlw	high (STR_4| (0+32768))
  3483     04A6  00A6               	movwf	Lcd_Write_String@a+1
  3484     04A7  319A  2225  3182   	fcall	_Lcd_Write_String
  3485     04AA                     l5127:
  3486                           
  3487                           ;main.c: 157:             contadorTemp = 0;
  3488     04AA  0021               	movlb	1	; select bank1
  3489     04AB  01ED               	clrf	main@contadorTemp^(0+128)
  3490     04AC  01EE               	clrf	(main@contadorTemp+1)^(0+128)
  3491                           
  3492                           ;main.c: 158:         } else {
  3493     04AD  2CE5               	goto	l5139
  3494     04AE                     l5129:
  3495                           
  3496                           ;main.c: 160:             Lcd_Set_Cursor(2,10);
  3497     04AE  300A               	movlw	10
  3498     04AF  0020               	movlb	0	; select bank0
  3499     04B0  00A3               	movwf	Lcd_Set_Cursor@b
  3500     04B1  3002               	movlw	2
  3501     04B2  319F  2707  3182   	fcall	_Lcd_Set_Cursor
  3502     04B5                     l5131:
  3503                           
  3504                           ;main.c: 161:             sprintf(buffer,"%0.2f\xDF",temp);
  3505     04B5  3071               	movlw	low (STR_3| (0+32768))
  3506     04B6  0021               	movlb	1	; select bank1
  3507     04B7  00DE               	movwf	sprintf@fmt^(0+128)
  3508     04B8  3098               	movlw	high (STR_3| (0+32768))
  3509     04B9  00DF               	movwf	(sprintf@fmt^(0+128)+1)
  3510     04BA  0022               	movlb	2	; select bank2
  3511     04BB  082B               	movf	(_temp+3)^(0+256),w
  3512     04BC  0021               	movlb	1	; select bank1
  3513     04BD  00E3               	movwf	((?_sprintf+3)^(0+128)+2)
  3514     04BE  0022               	movlb	2	; select bank2
  3515     04BF  082A               	movf	(_temp+2)^(0+256),w
  3516     04C0  0021               	movlb	1	; select bank1
  3517     04C1  00E2               	movwf	((?_sprintf+2)^(0+128)+2)
  3518     04C2  0022               	movlb	2	; select bank2
  3519     04C3  0829               	movf	(_temp+1)^(0+256),w
  3520     04C4  0021               	movlb	1	; select bank1
  3521     04C5  00E1               	movwf	((?_sprintf+1)^(0+128)+2)
  3522     04C6  0022               	movlb	2	; select bank2
  3523     04C7  0828               	movf	_temp^(0+256),w
  3524     04C8  0021               	movlb	1	; select bank1
  3525     04C9  00E0               	movwf	(?_sprintf^(0+128)+2)
  3526     04CA  30A0               	movlw	(low (_buffer| (0+256)))& (0+255)
  3527     04CB  319A  22C7  3182   	fcall	_sprintf
  3528     04CE                     l5133:
  3529                           
  3530                           ;main.c: 162:             Lcd_Write_String(buffer);
  3531     04CE  30A0               	movlw	low _buffer
  3532     04CF  0020               	movlb	0	; select bank0
  3533     04D0  00A5               	movwf	Lcd_Write_String@a
  3534     04D1  3001               	movlw	high _buffer
  3535     04D2  00A6               	movwf	Lcd_Write_String@a+1
  3536     04D3  319A  2225  3182   	fcall	_Lcd_Write_String
  3537     04D6                     l5135:
  3538                           
  3539                           ;main.c: 163:             Lcd_Set_Cursor(2,16);
  3540     04D6  3010               	movlw	16
  3541     04D7  0020               	movlb	0	; select bank0
  3542     04D8  00A3               	movwf	Lcd_Set_Cursor@b
  3543     04D9  3002               	movlw	2
  3544     04DA  319F  2707  3182   	fcall	_Lcd_Set_Cursor
  3545     04DD                     l5137:
  3546                           
  3547                           ;main.c: 164:             Lcd_Write_String("C");
  3548     04DD  3087               	movlw	low (STR_4| (0+32768))
  3549     04DE  0020               	movlb	0	; select bank0
  3550     04DF  00A5               	movwf	Lcd_Write_String@a
  3551     04E0  3098               	movlw	high (STR_4| (0+32768))
  3552     04E1  00A6               	movwf	Lcd_Write_String@a+1
  3553     04E2  319A  2225  3182   	fcall	_Lcd_Write_String
  3554     04E5                     l5139:
  3555                           
  3556                           ;main.c: 166:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  3557     04E5  3006               	movlw	6
  3558     04E6  0022               	movlb	2	; select bank2
  3559     04E7  00CD               	movwf	(??_main^(0+256)+1)
  3560     04E8  3013               	movlw	19
  3561     04E9  00CC               	movwf	??_main^(0+256)
  3562     04EA  30AD               	movlw	173
  3563     04EB                     u6597:
  3564     04EB  0B89               	decfsz	9,f
  3565     04EC  2CEB               	goto	u6597
  3566     04ED  0BCC               	decfsz	??_main^(0+256),f
  3567     04EE  2CEB               	goto	u6597
  3568     04EF  0BCD               	decfsz	(??_main^(0+256)+1),f
  3569     04F0  2CEB               	goto	u6597
  3570     04F1  3200               	nop2
  3571     04F2  2B15               	goto	l5069
  3572     04F3  3182  2A37         	ljmp	start
  3573     04F5                     __end_of_main:
  3574                           
  3575                           	psect	text1
  3576     1AC7                     __ptext1:	
  3577 ;; *************** function _sprintf *****************
  3578 ;; Defined at:
  3579 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  s               1    wreg     PTR unsigned char 
  3582 ;;		 -> buffer(20), 
  3583 ;;  fmt             2   62[BANK1 ] PTR const unsigned char 
  3584 ;;		 -> STR_5(7), STR_3(7), STR_2(15), 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;  s               1    0[BANK2 ] PTR unsigned char 
  3587 ;;		 -> buffer(20), 
  3588 ;;  f              11    2[BANK2 ] struct _IO_FILE
  3589 ;;  ret             2    0        int 
  3590 ;;  ap              1    1[BANK2 ] PTR void [1]
  3591 ;;		 -> ?_sprintf(2), 
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  2   62[BANK1 ] int 
  3594 ;; Registers used:
  3595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3601 ;;      Params:         0       0      14       0       0       0       0       0
  3602 ;;      Locals:         0       0       0      13       0       0       0       0
  3603 ;;      Temps:          0       0       1       0       0       0       0       0
  3604 ;;      Totals:         0       0      15      13       0       0       0       0
  3605 ;;Total ram usage:       28 bytes
  3606 ;; Hardware stack levels used: 1
  3607 ;; Hardware stack levels required when called: 11
  3608 ;; This function calls:
  3609 ;;		_vfprintf
  3610 ;; This function is called by:
  3611 ;;		_main
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615     1AC7                     _sprintf:	
  3616                           ;psect for function _sprintf
  3617                           
  3618                           
  3619                           ;incstack = 0
  3620                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3621                           ;sprintf@s stored from wreg
  3622     1AC7  0022               	movlb	2	; select bank2
  3623     1AC8  00BF               	movwf	sprintf@s^(0+256)
  3624     1AC9                     l4789:
  3625     1AC9  30E0               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3626     1ACA  00C0               	movwf	sprintf@ap^(0+256)
  3627     1ACB  083F               	movf	sprintf@s^(0+256),w
  3628     1ACC  00C1               	movwf	sprintf@f^(0+256)
  3629     1ACD                     l4791:
  3630     1ACD  01C3               	clrf	(sprintf@f^(0+256)+2)
  3631     1ACE  01C4               	clrf	((sprintf@f+1)^(0+256)+2)
  3632     1ACF                     l4793:
  3633     1ACF  01CA               	clrf	(sprintf@f^(0+256)+9)
  3634     1AD0  01CB               	clrf	((sprintf@f+1)^(0+256)+9)
  3635     1AD1                     l4795:
  3636     1AD1  0021               	movlb	1	; select bank1
  3637     1AD2  085F               	movf	(sprintf@fmt+1)^(0+128),w
  3638     1AD3  0020               	movlb	0	; select bank0
  3639     1AD4  00EE               	movwf	vfprintf@fmt+1
  3640     1AD5  0021               	movlb	1	; select bank1
  3641     1AD6  085E               	movf	sprintf@fmt^(0+128),w
  3642     1AD7  0020               	movlb	0	; select bank0
  3643     1AD8  00ED               	movwf	vfprintf@fmt
  3644     1AD9  3040               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  3645     1ADA  00EF               	movwf	vfprintf@ap
  3646     1ADB  3041               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  3647     1ADC  319A  22A4  319A   	fcall	_vfprintf
  3648     1ADF                     l4797:
  3649     1ADF  0022               	movlb	2	; select bank2
  3650     1AE0  0843               	movf	(sprintf@f^(0+256)+2),w
  3651     1AE1  073F               	addwf	sprintf@s^(0+256),w
  3652     1AE2  0021               	movlb	1	; select bank1
  3653     1AE3  00EC               	movwf	??_sprintf^(0+128)
  3654     1AE4  086C               	movf	??_sprintf^(0+128),w
  3655     1AE5  0086               	movwf	6
  3656     1AE6  3001               	movlw	1	; select bank2/3
  3657     1AE7  0087               	movwf	7
  3658     1AE8  0181               	clrf	1
  3659     1AE9                     l1029:
  3660     1AE9  0008               	return
  3661     1AEA                     __end_of_sprintf:
  3662                           
  3663                           	psect	text2
  3664     1AA4                     __ptext2:	
  3665 ;; *************** function _vfprintf *****************
  3666 ;; Defined at:
  3667 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  fp              1    wreg     PTR struct _IO_FILE
  3670 ;;		 -> sprintf@f(11), 
  3671 ;;  fmt             2   77[BANK0 ] PTR const unsigned char 
  3672 ;;		 -> STR_5(7), STR_3(7), STR_2(15), 
  3673 ;;  ap              1   79[BANK0 ] PTR PTR void 
  3674 ;;		 -> sprintf@ap(1), 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  fp              1   59[BANK1 ] PTR struct _IO_FILE
  3677 ;;		 -> sprintf@f(11), 
  3678 ;;  cfmt            2   60[BANK1 ] PTR unsigned char 
  3679 ;;		 -> STR_5(7), STR_3(7), STR_2(15), 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  2   77[BANK0 ] int 
  3682 ;; Registers used:
  3683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3689 ;;      Params:         0       3       0       0       0       0       0       0
  3690 ;;      Locals:         0       0       3       0       0       0       0       0
  3691 ;;      Temps:          0       0       1       0       0       0       0       0
  3692 ;;      Totals:         0       3       4       0       0       0       0       0
  3693 ;;Total ram usage:        7 bytes
  3694 ;; Hardware stack levels used: 1
  3695 ;; Hardware stack levels required when called: 10
  3696 ;; This function calls:
  3697 ;;		_vfpfcnvrt
  3698 ;; This function is called by:
  3699 ;;		_sprintf
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703     1AA4                     _vfprintf:	
  3704                           ;psect for function _vfprintf
  3705                           
  3706                           
  3707                           ;incstack = 0
  3708                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3709                           ;vfprintf@fp stored from wreg
  3710     1AA4  0021               	movlb	1	; select bank1
  3711     1AA5  00DB               	movwf	vfprintf@fp^(0+128)
  3712     1AA6                     l4673:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3715     1AA6  0020               	movlb	0	; select bank0
  3716     1AA7  086E               	movf	vfprintf@fmt+1,w
  3717     1AA8  0021               	movlb	1	; select bank1
  3718     1AA9  00DD               	movwf	(vfprintf@cfmt+1)^(0+128)
  3719     1AAA  0020               	movlb	0	; select bank0
  3720     1AAB  086D               	movf	vfprintf@fmt,w
  3721     1AAC  0021               	movlb	1	; select bank1
  3722     1AAD  00DC               	movwf	vfprintf@cfmt^(0+128)
  3723                           
  3724                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3725     1AAE  2AB9               	goto	l4677
  3726     1AAF                     l4675:
  3727                           
  3728                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3729     1AAF  30DC               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3730     1AB0  0020               	movlb	0	; select bank0
  3731     1AB1  00EB               	movwf	vfpfcnvrt@fmt
  3732     1AB2  086F               	movf	vfprintf@ap,w
  3733     1AB3  00EC               	movwf	vfpfcnvrt@ap
  3734     1AB4  0021               	movlb	1	; select bank1
  3735     1AB5  085B               	movf	vfprintf@fp^(0+128),w
  3736     1AB6  3192  22A9  319A   	fcall	_vfpfcnvrt
  3737     1AB9                     l4677:
  3738                           
  3739                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3740     1AB9  0021               	movlb	1	; select bank1
  3741     1ABA  085C               	movf	vfprintf@cfmt^(0+128),w
  3742     1ABB  0084               	movwf	4
  3743     1ABC  085D               	movf	(vfprintf@cfmt+1)^(0+128),w
  3744     1ABD  0085               	movwf	5
  3745     1ABE  0012               	moviw fsr0++
  3746     1ABF  1D03               	btfss	3,2
  3747     1AC0  2AC2               	goto	u5671
  3748     1AC1  2AC3               	goto	u5670
  3749     1AC2                     u5671:
  3750     1AC2  2AAF               	goto	l4675
  3751     1AC3                     u5670:
  3752     1AC3                     l4679:
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3755     1AC3  0020               	movlb	0	; select bank0
  3756     1AC4  01ED               	clrf	?_vfprintf
  3757     1AC5  01EE               	clrf	?_vfprintf+1
  3758     1AC6                     l1186:
  3759     1AC6  0008               	return
  3760     1AC7                     __end_of_vfprintf:
  3761                           
  3762                           	psect	text3
  3763     12A9                     __ptext3:	
  3764 ;; *************** function _vfpfcnvrt *****************
  3765 ;; Defined at:
  3766 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  fp              1    wreg     PTR struct _IO_FILE
  3769 ;;		 -> sprintf@f(11), 
  3770 ;;  fmt             1   75[BANK0 ] PTR PTR unsigned char 
  3771 ;;		 -> vfprintf@cfmt(2), 
  3772 ;;  ap              1   76[BANK0 ] PTR PTR void 
  3773 ;;		 -> sprintf@ap(1), 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  fp              1   55[BANK1 ] PTR struct _IO_FILE
  3776 ;;		 -> sprintf@f(11), 
  3777 ;;  convarg         4   50[BANK1 ] struct .
  3778 ;;  cp              2   56[BANK1 ] PTR unsigned char 
  3779 ;;		 -> STR_5(7), STR_3(7), STR_2(15), 
  3780 ;;  c               1   54[BANK1 ] unsigned char 
  3781 ;;  done            1   49[BANK1 ] _Bool 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3791 ;;      Params:         0       2       0       0       0       0       0       0
  3792 ;;      Locals:         0       0       9       0       0       0       0       0
  3793 ;;      Temps:          0       0       4       0       0       0       0       0
  3794 ;;      Totals:         0       2      13       0       0       0       0       0
  3795 ;;Total ram usage:       15 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 9
  3798 ;; This function calls:
  3799 ;;		_dtoa
  3800 ;;		_efgtoa
  3801 ;;		_fputc
  3802 ;;		_read_prec_or_width
  3803 ;; This function is called by:
  3804 ;;		_vfprintf
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808     12A9                     _vfpfcnvrt:	
  3809                           ;psect for function _vfpfcnvrt
  3810                           
  3811                           
  3812                           ;incstack = 0
  3813                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3814                           ;vfpfcnvrt@fp stored from wreg
  3815     12A9  0021               	movlb	1	; select bank1
  3816     12AA  00D7               	movwf	vfpfcnvrt@fp^(0+128)
  3817     12AB                     l4537:
  3818                           
  3819                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3820     12AB  0020               	movlb	0	; select bank0
  3821     12AC  086B               	movf	vfpfcnvrt@fmt,w
  3822     12AD  0086               	movwf	6
  3823     12AE  0187               	clrf	7
  3824     12AF  3F40               	moviw [0]fsr1
  3825     12B0  0021               	movlb	1	; select bank1
  3826     12B1  00CD               	movwf	??_vfpfcnvrt^(0+128)
  3827     12B2  3F41               	moviw [1]fsr1
  3828     12B3  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3829     12B4  084D               	movf	??_vfpfcnvrt^(0+128),w
  3830     12B5  0084               	movwf	4
  3831     12B6  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3832     12B7  0085               	movwf	5
  3833     12B8  0012               	moviw fsr0++
  3834     12B9  3A25               	xorlw	37
  3835     12BA  1D03               	btfss	3,2
  3836     12BB  2ABD               	goto	u5561
  3837     12BC  2ABE               	goto	u5560
  3838     12BD                     u5561:
  3839     12BD  2C2E               	goto	l4613
  3840     12BE                     u5560:
  3841     12BE                     l4539:
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3844     12BE  0020               	movlb	0	; select bank0
  3845     12BF  086B               	movf	vfpfcnvrt@fmt,w
  3846     12C0  0086               	movwf	6
  3847     12C1  0187               	clrf	7
  3848     12C2  3001               	movlw	1
  3849     12C3  0781               	addwf	1,f
  3850     12C4  3141               	addfsr 1,1
  3851     12C5  1803               	skipnc
  3852     12C6  0A81               	incf	1,f
  3853     12C7                     l4541:
  3854                           
  3855                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3856     12C7  0022               	movlb	2	; select bank2
  3857     12C8  01AC               	clrf	_width^(0+256)
  3858     12C9  01AD               	clrf	(_width+1)^(0+256)
  3859     12CA  1003               	clrc
  3860     12CB  3000               	movlw	0
  3861     12CC  1803               	btfsc	3,0
  3862     12CD  3001               	movlw	1
  3863     12CE  00FC               	movwf	_flags
  3864     12CF                     l4543:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3867     12CF  30FF               	movlw	255
  3868     12D0  00AE               	movwf	_prec^(0+256)
  3869     12D1  30FF               	movlw	255
  3870     12D2  00AF               	movwf	(_prec^(0+256)+1)
  3871     12D3                     l4545:
  3872                           
  3873                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  3874     12D3  0021               	movlb	1	; select bank1
  3875     12D4  01D1               	clrf	vfpfcnvrt@done^(0+128)
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  3878     12D5  2AFE               	goto	l4553
  3879     12D6                     l1156:	
  3880                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  3881                           
  3882                           
  3883                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  3884     12D6  14FC               	bsf	_flags,1
  3885     12D7                     l4547:
  3886                           
  3887                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  3888     12D7  0020               	movlb	0	; select bank0
  3889     12D8  086B               	movf	vfpfcnvrt@fmt,w
  3890     12D9  0086               	movwf	6
  3891     12DA  0187               	clrf	7
  3892     12DB  3001               	movlw	1
  3893     12DC  0781               	addwf	1,f
  3894     12DD  3141               	addfsr 1,1
  3895     12DE  1803               	skipnc
  3896     12DF  0A81               	incf	1,f
  3897                           
  3898                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  3899     12E0  2AFE               	goto	l4553
  3900     12E1                     l1158:	
  3901                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  3902                           
  3903                           
  3904                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  3905     12E1  01D1               	clrf	vfpfcnvrt@done^(0+128)
  3906     12E2  0AD1               	incf	vfpfcnvrt@done^(0+128),f
  3907                           
  3908                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  3909     12E3  2AFE               	goto	l4553
  3910     12E4                     l4551:
  3911     12E4  0020               	movlb	0	; select bank0
  3912     12E5  086B               	movf	vfpfcnvrt@fmt,w
  3913     12E6  0086               	movwf	6
  3914     12E7  0187               	clrf	7
  3915     12E8  3F40               	moviw [0]fsr1
  3916     12E9  0021               	movlb	1	; select bank1
  3917     12EA  00CD               	movwf	??_vfpfcnvrt^(0+128)
  3918     12EB  3F41               	moviw [1]fsr1
  3919     12EC  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3920     12ED  084D               	movf	??_vfpfcnvrt^(0+128),w
  3921     12EE  0084               	movwf	4
  3922     12EF  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3923     12F0  0085               	movwf	5
  3924     12F1  0800               	movf	0,w	;code access
  3925     12F2  00CF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3926     12F3  01D0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3927                           
  3928                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3929                           ; Switch size 1, requested type "simple"
  3930                           ; Number of cases is 1, Range of values is 0 to 0
  3931                           ; switch strategies available:
  3932                           ; Name         Instructions Cycles
  3933                           ; simple_byte            4     3 (average)
  3934                           ; direct_byte            8     6 (fixed)
  3935                           ; jumptable            260     6 (fixed)
  3936                           ;	Chosen strategy is simple_byte
  3937     12F4  0850               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3938     12F5  3A00               	xorlw	0	; case 0
  3939     12F6  1903               	skipnz
  3940     12F7  2AF9               	goto	l5533
  3941     12F8  2AE1               	goto	l1158
  3942     12F9                     l5533:
  3943                           
  3944                           ; Switch size 1, requested type "simple"
  3945                           ; Number of cases is 1, Range of values is 48 to 48
  3946                           ; switch strategies available:
  3947                           ; Name         Instructions Cycles
  3948                           ; simple_byte            4     3 (average)
  3949                           ; direct_byte           11     9 (fixed)
  3950                           ; jumptable            263     9 (fixed)
  3951                           ;	Chosen strategy is simple_byte
  3952     12F9  084F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3953     12FA  3A30               	xorlw	48	; case 48
  3954     12FB  1903               	skipnz
  3955     12FC  2AD6               	goto	l1156
  3956     12FD  2AE1               	goto	l1158
  3957     12FE                     l4553:
  3958                           
  3959                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  3960     12FE  0021               	movlb	1	; select bank1
  3961     12FF  0851               	movf	vfpfcnvrt@done^(0+128),w
  3962     1300  1903               	btfsc	3,2
  3963     1301  2B03               	goto	u5571
  3964     1302  2B04               	goto	u5570
  3965     1303                     u5571:
  3966     1303  2AE4               	goto	l4551
  3967     1304                     u5570:
  3968     1304                     l4555:
  3969                           
  3970                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  3971     1304  0020               	movlb	0	; select bank0
  3972     1305  086B               	movf	vfpfcnvrt@fmt,w
  3973     1306  0086               	movwf	6
  3974     1307  0187               	clrf	7
  3975     1308  3F40               	moviw [0]fsr1
  3976     1309  0021               	movlb	1	; select bank1
  3977     130A  00CD               	movwf	??_vfpfcnvrt^(0+128)
  3978     130B  3F41               	moviw [1]fsr1
  3979     130C  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3980     130D  084D               	movf	??_vfpfcnvrt^(0+128),w
  3981     130E  0084               	movwf	4
  3982     130F  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3983     1310  0085               	movwf	5
  3984     1311  0012               	moviw fsr0++
  3985     1312  3A2E               	xorlw	46
  3986     1313  1D03               	btfss	3,2
  3987     1314  2B16               	goto	u5581
  3988     1315  2B17               	goto	u5580
  3989     1316                     u5581:
  3990     1316  2B2E               	goto	l4561
  3991     1317                     u5580:
  3992     1317                     l4557:
  3993                           
  3994                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  3995     1317  0020               	movlb	0	; select bank0
  3996     1318  086B               	movf	vfpfcnvrt@fmt,w
  3997     1319  0086               	movwf	6
  3998     131A  0187               	clrf	7
  3999     131B  3001               	movlw	1
  4000     131C  0781               	addwf	1,f
  4001     131D  3141               	addfsr 1,1
  4002     131E  1803               	skipnc
  4003     131F  0A81               	incf	1,f
  4004     1320                     l4559:
  4005                           
  4006                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  4007     1320  086C               	movf	vfpfcnvrt@ap,w
  4008     1321  00A6               	movwf	read_prec_or_width@ap
  4009     1322  086B               	movf	vfpfcnvrt@fmt,w
  4010     1323  319D  25C0  3192   	fcall	_read_prec_or_width
  4011     1326  0020               	movlb	0	; select bank0
  4012     1327  0827               	movf	?_read_prec_or_width+1,w
  4013     1328  0022               	movlb	2	; select bank2
  4014     1329  00AF               	movwf	(_prec+1)^(0+256)
  4015     132A  0020               	movlb	0	; select bank0
  4016     132B  0826               	movf	?_read_prec_or_width,w
  4017     132C  0022               	movlb	2	; select bank2
  4018     132D  00AE               	movwf	_prec^(0+256)
  4019     132E                     l4561:
  4020                           
  4021                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4022     132E  0020               	movlb	0	; select bank0
  4023     132F  086B               	movf	vfpfcnvrt@fmt,w
  4024     1330  0086               	movwf	6
  4025     1331  0187               	clrf	7
  4026     1332  3F40               	moviw [0]fsr1
  4027     1333  0021               	movlb	1	; select bank1
  4028     1334  00D8               	movwf	vfpfcnvrt@cp^(0+128)
  4029     1335  3F41               	moviw [1]fsr1
  4030     1336  00D9               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4031     1337                     l4563:
  4032                           
  4033                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4034     1337  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4035     1338  0084               	movwf	4
  4036     1339  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4037     133A  0085               	movwf	5
  4038     133B  0012               	moviw fsr0++
  4039     133C  3A64               	xorlw	100
  4040     133D  1903               	btfsc	3,2
  4041     133E  2B40               	goto	u5591
  4042     133F  2B41               	goto	u5590
  4043     1340                     u5591:
  4044     1340  2B4B               	goto	l4567
  4045     1341                     u5590:
  4046     1341                     l4565:
  4047     1341  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4048     1342  0084               	movwf	4
  4049     1343  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4050     1344  0085               	movwf	5
  4051     1345  0012               	moviw fsr0++
  4052     1346  3A69               	xorlw	105
  4053     1347  1D03               	btfss	3,2
  4054     1348  2B4A               	goto	u5601
  4055     1349  2B4B               	goto	u5600
  4056     134A                     u5601:
  4057     134A  2B76               	goto	l4575
  4058     134B                     u5600:
  4059     134B                     l4567:
  4060                           
  4061                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4062     134B  0020               	movlb	0	; select bank0
  4063     134C  086C               	movf	vfpfcnvrt@ap,w
  4064     134D  0086               	movwf	6
  4065     134E  3001               	movlw	1	; select bank2/3
  4066     134F  0087               	movwf	7
  4067     1350  0801               	movf	1,w
  4068     1351  0084               	movwf	4
  4069     1352  0185               	clrf	5
  4070     1353  3002               	movlw	2
  4071     1354  0781               	addwf	1,f
  4072     1355  3F00               	moviw [0]fsr0
  4073     1356  0021               	movlb	1	; select bank1
  4074     1357  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
  4075     1358  3F01               	moviw [1]fsr0
  4076     1359  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4077     135A                     l4569:
  4078                           
  4079                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4080     135A  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4081     135B  3E01               	addlw	1
  4082     135C  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4083     135D  3000               	movlw	0
  4084     135E  3D59               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4085     135F  00CE               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4086     1360  0020               	movlb	0	; select bank0
  4087     1361  086B               	movf	vfpfcnvrt@fmt,w
  4088     1362  0086               	movwf	6
  4089     1363  0187               	clrf	7
  4090     1364  0021               	movlb	1	; select bank1
  4091     1365  084D               	movf	??_vfpfcnvrt^(0+128),w
  4092     1366  3FC0               	movwi [0]fsr1
  4093     1367  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4094     1368  3FC1               	movwi [1]fsr1
  4095     1369                     l4571:
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  4098     1369  0853               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4099     136A  0020               	movlb	0	; select bank0
  4100     136B  00B7               	movwf	dtoa@d+1
  4101     136C  0021               	movlb	1	; select bank1
  4102     136D  0852               	movf	vfpfcnvrt@convarg^(0+128),w
  4103     136E  0020               	movlb	0	; select bank0
  4104     136F  00B6               	movwf	dtoa@d
  4105     1370  0021               	movlb	1	; select bank1
  4106     1371  0857               	movf	vfpfcnvrt@fp^(0+128),w
  4107     1372  3190  208E  3192   	fcall	_dtoa
  4108     1375  2C4D               	goto	l1164
  4109     1376                     l4575:
  4110                           
  4111                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  4112     1376  0020               	movlb	0	; select bank0
  4113     1377  086B               	movf	vfpfcnvrt@fmt,w
  4114     1378  0086               	movwf	6
  4115     1379  0187               	clrf	7
  4116     137A  3F40               	moviw [0]fsr1
  4117     137B  0021               	movlb	1	; select bank1
  4118     137C  00D8               	movwf	vfpfcnvrt@cp^(0+128)
  4119     137D  3F41               	moviw [1]fsr1
  4120     137E  00D9               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4121     137F                     l4577:
  4122                           
  4123                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  4124     137F  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4125     1380  0084               	movwf	4
  4126     1381  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4127     1382  0085               	movwf	5
  4128     1383  0800               	movf	0,w	;code access
  4129     1384  00D6               	movwf	vfpfcnvrt@c^(0+128)
  4130                           
  4131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  4132     1385  2B90               	goto	l4587
  4133     1386                     l4579:
  4134                           
  4135                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  4136     1386  3001               	movlw	1
  4137     1387  07D8               	addwf	vfpfcnvrt@cp^(0+128),f
  4138     1388  3000               	movlw	0
  4139     1389  3DD9               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
  4140                           
  4141                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  4142     138A  2BA3               	goto	l4589
  4143     138B                     l4581:
  4144                           
  4145                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  4146     138B  306C               	movlw	108
  4147     138C  00D6               	movwf	vfpfcnvrt@c^(0+128)
  4148                           
  4149                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  4150     138D  2BA3               	goto	l4589
  4151     138E                     l4583:
  4152                           
  4153                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  4154     138E  01D6               	clrf	vfpfcnvrt@c^(0+128)
  4155                           
  4156                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  4157     138F  2BA3               	goto	l4589
  4158     1390                     l4587:
  4159     1390  0856               	movf	vfpfcnvrt@c^(0+128),w
  4160     1391  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4161     1392  01CE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4162                           
  4163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4164                           ; Switch size 1, requested type "simple"
  4165                           ; Number of cases is 1, Range of values is 0 to 0
  4166                           ; switch strategies available:
  4167                           ; Name         Instructions Cycles
  4168                           ; simple_byte            4     3 (average)
  4169                           ; direct_byte            8     6 (fixed)
  4170                           ; jumptable            260     6 (fixed)
  4171                           ;	Chosen strategy is simple_byte
  4172     1393  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4173     1394  3A00               	xorlw	0	; case 0
  4174     1395  1903               	skipnz
  4175     1396  2B98               	goto	l5535
  4176     1397  2B8E               	goto	l4583
  4177     1398                     l5535:
  4178                           
  4179                           ; Switch size 1, requested type "simple"
  4180                           ; Number of cases is 3, Range of values is 76 to 108
  4181                           ; switch strategies available:
  4182                           ; Name         Instructions Cycles
  4183                           ; simple_byte           10     6 (average)
  4184                           ; direct_byte           75     9 (fixed)
  4185                           ; jumptable            263     9 (fixed)
  4186                           ;	Chosen strategy is simple_byte
  4187     1398  084D               	movf	??_vfpfcnvrt^(0+128),w
  4188     1399  3A4C               	xorlw	76	; case 76
  4189     139A  1903               	skipnz
  4190     139B  2B86               	goto	l4579
  4191     139C  3A2A               	xorlw	42	; case 102
  4192     139D  1903               	skipnz
  4193     139E  2B8B               	goto	l4581
  4194     139F  3A0A               	xorlw	10	; case 108
  4195     13A0  1903               	skipnz
  4196     13A1  2B86               	goto	l4579
  4197     13A2  2B8E               	goto	l4583
  4198     13A3                     l4589:
  4199     13A3  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4200     13A4  0084               	movwf	4
  4201     13A5  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4202     13A6  0085               	movwf	5
  4203     13A7  0012               	moviw fsr0++
  4204     13A8  3A66               	xorlw	102
  4205     13A9  1D03               	btfss	3,2
  4206     13AA  2BAC               	goto	u5611
  4207     13AB  2BAD               	goto	u5610
  4208     13AC                     u5611:
  4209     13AC  2C24               	goto	l4609
  4210     13AD                     u5610:
  4211     13AD  2BD6               	goto	l4597
  4212     13AE                     l4591:
  4213                           
  4214                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4215     13AE  0020               	movlb	0	; select bank0
  4216     13AF  086C               	movf	vfpfcnvrt@ap,w
  4217     13B0  0086               	movwf	6
  4218     13B1  3001               	movlw	1	; select bank2/3
  4219     13B2  0087               	movwf	7
  4220     13B3  0801               	movf	1,w
  4221     13B4  0084               	movwf	4
  4222     13B5  0185               	clrf	5
  4223     13B6  3004               	movlw	4
  4224     13B7  0781               	addwf	1,f
  4225     13B8  3F00               	moviw [0]fsr0
  4226     13B9  0021               	movlb	1	; select bank1
  4227     13BA  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
  4228     13BB  3F01               	moviw [1]fsr0
  4229     13BC  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4230     13BD  3F02               	moviw [2]fsr0
  4231     13BE  00D4               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4232     13BF  3F03               	moviw [3]fsr0
  4233     13C0  00D5               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4234                           
  4235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  4236     13C1  2BE6               	goto	l4599
  4237     13C2                     l4593:
  4238                           
  4239                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4240     13C2  0020               	movlb	0	; select bank0
  4241     13C3  086C               	movf	vfpfcnvrt@ap,w
  4242     13C4  0086               	movwf	6
  4243     13C5  3001               	movlw	1	; select bank2/3
  4244     13C6  0087               	movwf	7
  4245     13C7  0801               	movf	1,w
  4246     13C8  0084               	movwf	4
  4247     13C9  0185               	clrf	5
  4248     13CA  3004               	movlw	4
  4249     13CB  0781               	addwf	1,f
  4250     13CC  3F00               	moviw [0]fsr0
  4251     13CD  0021               	movlb	1	; select bank1
  4252     13CE  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
  4253     13CF  3F01               	moviw [1]fsr0
  4254     13D0  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4255     13D1  3F02               	moviw [2]fsr0
  4256     13D2  00D4               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4257     13D3  3F03               	moviw [3]fsr0
  4258     13D4  00D5               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4259                           
  4260                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  4261     13D5  2BE6               	goto	l4599
  4262     13D6                     l4597:
  4263     13D6  0856               	movf	vfpfcnvrt@c^(0+128),w
  4264     13D7  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4265     13D8  01CE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4266                           
  4267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4268                           ; Switch size 1, requested type "simple"
  4269                           ; Number of cases is 1, Range of values is 0 to 0
  4270                           ; switch strategies available:
  4271                           ; Name         Instructions Cycles
  4272                           ; simple_byte            4     3 (average)
  4273                           ; direct_byte            8     6 (fixed)
  4274                           ; jumptable            260     6 (fixed)
  4275                           ;	Chosen strategy is simple_byte
  4276     13D9  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4277     13DA  3A00               	xorlw	0	; case 0
  4278     13DB  1903               	skipnz
  4279     13DC  2BDE               	goto	l5537
  4280     13DD  2BE6               	goto	l4599
  4281     13DE                     l5537:
  4282                           
  4283                           ; Switch size 1, requested type "simple"
  4284                           ; Number of cases is 2, Range of values is 76 to 108
  4285                           ; switch strategies available:
  4286                           ; Name         Instructions Cycles
  4287                           ; simple_byte            7     4 (average)
  4288                           ; direct_byte           75     9 (fixed)
  4289                           ; jumptable            263     9 (fixed)
  4290                           ;	Chosen strategy is simple_byte
  4291     13DE  084D               	movf	??_vfpfcnvrt^(0+128),w
  4292     13DF  3A4C               	xorlw	76	; case 76
  4293     13E0  1903               	skipnz
  4294     13E1  2BC2               	goto	l4593
  4295     13E2  3A20               	xorlw	32	; case 108
  4296     13E3  1903               	skipnz
  4297     13E4  2BAE               	goto	l4591
  4298     13E5  2BE6               	goto	l4599
  4299     13E6                     l4599:
  4300                           
  4301                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  4302     13E6  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4303     13E7  3E01               	addlw	1
  4304     13E8  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4305     13E9  3000               	movlw	0
  4306     13EA  3D59               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4307     13EB  00CE               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4308     13EC  0020               	movlb	0	; select bank0
  4309     13ED  086B               	movf	vfpfcnvrt@fmt,w
  4310     13EE  0086               	movwf	6
  4311     13EF  0187               	clrf	7
  4312     13F0  0021               	movlb	1	; select bank1
  4313     13F1  084D               	movf	??_vfpfcnvrt^(0+128),w
  4314     13F2  3FC0               	movwi [0]fsr1
  4315     13F3  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4316     13F4  3FC1               	movwi [1]fsr1
  4317                           
  4318                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  4319     13F5  2C13               	goto	l4607
  4320     13F6                     l4601:
  4321                           
  4322                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  4323     13F6  0855               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  4324     13F7  0020               	movlb	0	; select bank0
  4325     13F8  00E5               	movwf	efgtoa@f+3
  4326     13F9  0021               	movlb	1	; select bank1
  4327     13FA  0854               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  4328     13FB  0020               	movlb	0	; select bank0
  4329     13FC  00E4               	movwf	efgtoa@f+2
  4330     13FD  0021               	movlb	1	; select bank1
  4331     13FE  0853               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4332     13FF  0020               	movlb	0	; select bank0
  4333     1400  00E3               	movwf	efgtoa@f+1
  4334     1401  0021               	movlb	1	; select bank1
  4335     1402  0852               	movf	vfpfcnvrt@convarg^(0+128),w
  4336     1403  0020               	movlb	0	; select bank0
  4337     1404  00E2               	movwf	efgtoa@f
  4338     1405  0021               	movlb	1	; select bank1
  4339     1406  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4340     1407  0084               	movwf	4
  4341     1408  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4342     1409  0085               	movwf	5
  4343     140A  0800               	movf	0,w	;code access
  4344     140B  0020               	movlb	0	; select bank0
  4345     140C  00E6               	movwf	efgtoa@c
  4346     140D  0021               	movlb	1	; select bank1
  4347     140E  0857               	movf	vfpfcnvrt@fp^(0+128),w
  4348     140F  3188  20ED  3192   	fcall	_efgtoa
  4349     1412  2C4D               	goto	l1164
  4350     1413                     l4607:
  4351     1413  0858               	movf	vfpfcnvrt@cp^(0+128),w
  4352     1414  0084               	movwf	4
  4353     1415  0859               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4354     1416  0085               	movwf	5
  4355     1417  0800               	movf	0,w	;code access
  4356     1418  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4357     1419  01CE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  4358                           
  4359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4360                           ; Switch size 1, requested type "simple"
  4361                           ; Number of cases is 1, Range of values is 0 to 0
  4362                           ; switch strategies available:
  4363                           ; Name         Instructions Cycles
  4364                           ; simple_byte            4     3 (average)
  4365                           ; direct_byte            8     6 (fixed)
  4366                           ; jumptable            260     6 (fixed)
  4367                           ;	Chosen strategy is simple_byte
  4368     141A  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4369     141B  3A00               	xorlw	0	; case 0
  4370     141C  1903               	skipnz
  4371     141D  2C1F               	goto	l5539
  4372     141E  2C24               	goto	l4609
  4373     141F                     l5539:
  4374                           
  4375                           ; Switch size 1, requested type "simple"
  4376                           ; Number of cases is 1, Range of values is 102 to 102
  4377                           ; switch strategies available:
  4378                           ; Name         Instructions Cycles
  4379                           ; simple_byte            4     3 (average)
  4380                           ; direct_byte           11     9 (fixed)
  4381                           ; jumptable            263     9 (fixed)
  4382                           ;	Chosen strategy is simple_byte
  4383     141F  084D               	movf	??_vfpfcnvrt^(0+128),w
  4384     1420  3A66               	xorlw	102	; case 102
  4385     1421  1903               	skipnz
  4386     1422  2BF6               	goto	l4601
  4387     1423  2C24               	goto	l4609
  4388     1424                     l4609:
  4389                           
  4390                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4391     1424  0020               	movlb	0	; select bank0
  4392     1425  086B               	movf	vfpfcnvrt@fmt,w
  4393     1426  0086               	movwf	6
  4394     1427  0187               	clrf	7
  4395     1428  3001               	movlw	1
  4396     1429  0781               	addwf	1,f
  4397     142A  3141               	addfsr 1,1
  4398     142B  1803               	skipnc
  4399     142C  0A81               	incf	1,f
  4400     142D  2C4D               	goto	l1164
  4401     142E                     l4613:
  4402                           
  4403                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4404     142E  0020               	movlb	0	; select bank0
  4405     142F  086B               	movf	vfpfcnvrt@fmt,w
  4406     1430  0086               	movwf	6
  4407     1431  0187               	clrf	7
  4408     1432  3F40               	moviw [0]fsr1
  4409     1433  0021               	movlb	1	; select bank1
  4410     1434  00CD               	movwf	??_vfpfcnvrt^(0+128)
  4411     1435  3F41               	moviw [1]fsr1
  4412     1436  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4413     1437  084D               	movf	??_vfpfcnvrt^(0+128),w
  4414     1438  0084               	movwf	4
  4415     1439  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4416     143A  0085               	movwf	5
  4417     143B  0800               	movf	0,w	;code access
  4418     143C  00CF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4419     143D  01D0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  4420     143E  084F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  4421     143F  0020               	movlb	0	; select bank0
  4422     1440  00A0               	movwf	fputc@c
  4423     1441  0021               	movlb	1	; select bank1
  4424     1442  0850               	movf	(??_vfpfcnvrt+3)^(0+128),w
  4425     1443  0020               	movlb	0	; select bank0
  4426     1444  00A1               	movwf	fputc@c+1
  4427     1445  0021               	movlb	1	; select bank1
  4428     1446  0857               	movf	vfpfcnvrt@fp^(0+128),w
  4429     1447  0020               	movlb	0	; select bank0
  4430     1448  00A2               	movwf	fputc@fp
  4431     1449  319D  2507  3192   	fcall	_fputc
  4432     144C  2C24               	goto	l4609
  4433     144D                     l1164:
  4434     144D  0008               	return
  4435     144E                     __end_of_vfpfcnvrt:
  4436                           
  4437                           	psect	text4
  4438     1DC0                     __ptext4:	
  4439 ;; *************** function _read_prec_or_width *****************
  4440 ;; Defined at:
  4441 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  fmt             1    wreg     PTR PTR const unsigned c
  4444 ;;		 -> vfprintf@cfmt(2), 
  4445 ;;  ap              1    6[BANK0 ] PTR PTR void [1]
  4446 ;;		 -> sprintf@ap(1), 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  fmt             1   14[BANK0 ] PTR PTR const unsigned c
  4449 ;;		 -> vfprintf@cfmt(2), 
  4450 ;;  c               1   11[BANK0 ] unsigned char 
  4451 ;;  n               2   12[BANK0 ] int 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  2    6[BANK0 ] int 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4461 ;;      Params:         0       2       0       0       0       0       0       0
  4462 ;;      Locals:         0       4       0       0       0       0       0       0
  4463 ;;      Temps:          0       3       0       0       0       0       0       0
  4464 ;;      Totals:         0       9       0       0       0       0       0       0
  4465 ;;Total ram usage:        9 bytes
  4466 ;; Hardware stack levels used: 1
  4467 ;; Hardware stack levels required when called: 5
  4468 ;; This function calls:
  4469 ;;		___wmul
  4470 ;; This function is called by:
  4471 ;;		_vfpfcnvrt
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475     1DC0                     _read_prec_or_width:	
  4476                           ;psect for function _read_prec_or_width
  4477                           
  4478                           
  4479                           ;incstack = 0
  4480                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4481                           ;read_prec_or_width@fmt stored from wreg
  4482     1DC0  0020               	movlb	0	; select bank0
  4483     1DC1  00AE               	movwf	read_prec_or_width@fmt
  4484     1DC2                     l4509:
  4485                           
  4486                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  4487     1DC2  01AC               	clrf	read_prec_or_width@n
  4488     1DC3  01AD               	clrf	read_prec_or_width@n+1
  4489     1DC4                     l4511:
  4490                           
  4491                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  4492     1DC4  082E               	movf	read_prec_or_width@fmt,w
  4493     1DC5  0086               	movwf	6
  4494     1DC6  0187               	clrf	7
  4495     1DC7  3F40               	moviw [0]fsr1
  4496     1DC8  00A8               	movwf	??_read_prec_or_width
  4497     1DC9  3F41               	moviw [1]fsr1
  4498     1DCA  00A9               	movwf	??_read_prec_or_width+1
  4499     1DCB  0828               	movf	??_read_prec_or_width,w
  4500     1DCC  0084               	movwf	4
  4501     1DCD  0829               	movf	??_read_prec_or_width+1,w
  4502     1DCE  0085               	movwf	5
  4503     1DCF  0012               	moviw fsr0++
  4504     1DD0  3A2A               	xorlw	42
  4505     1DD1  1D03               	btfss	3,2
  4506     1DD2  2DD4               	goto	u5541
  4507     1DD3  2DD5               	goto	u5540
  4508     1DD4                     u5541:
  4509     1DD4  2E08               	goto	l4521
  4510     1DD5                     u5540:
  4511     1DD5                     l4513:
  4512                           
  4513                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  4514     1DD5  082E               	movf	read_prec_or_width@fmt,w
  4515     1DD6  0086               	movwf	6
  4516     1DD7  0187               	clrf	7
  4517     1DD8  3001               	movlw	1
  4518     1DD9  0781               	addwf	1,f
  4519     1DDA  3141               	addfsr 1,1
  4520     1DDB  1803               	skipnc
  4521     1DDC  0A81               	incf	1,f
  4522     1DDD                     l4515:
  4523                           
  4524                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4525     1DDD  0826               	movf	read_prec_or_width@ap,w
  4526     1DDE  0086               	movwf	6
  4527     1DDF  3001               	movlw	1	; select bank2/3
  4528     1DE0  0087               	movwf	7
  4529     1DE1  0801               	movf	1,w
  4530     1DE2  0084               	movwf	4
  4531     1DE3  0185               	clrf	5
  4532     1DE4  3002               	movlw	2
  4533     1DE5  0781               	addwf	1,f
  4534     1DE6  3F00               	moviw [0]fsr0
  4535     1DE7  00AC               	movwf	read_prec_or_width@n
  4536     1DE8  3F01               	moviw [1]fsr0
  4537     1DE9  00AD               	movwf	read_prec_or_width@n+1
  4538                           
  4539                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  4540     1DEA  2E1C               	goto	l4523
  4541     1DEB                     l4517:
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  4544     1DEB  082B               	movf	read_prec_or_width@c,w
  4545     1DEC  00A8               	movwf	??_read_prec_or_width
  4546     1DED  01A9               	clrf	??_read_prec_or_width+1
  4547     1DEE  082D               	movf	read_prec_or_width@n+1,w
  4548     1DEF  00A1               	movwf	___wmul@multiplier+1
  4549     1DF0  082C               	movf	read_prec_or_width@n,w
  4550     1DF1  00A0               	movwf	___wmul@multiplier
  4551     1DF2  300A               	movlw	10
  4552     1DF3  00A2               	movwf	___wmul@multiplicand
  4553     1DF4  3000               	movlw	0
  4554     1DF5  00A3               	movwf	___wmul@multiplicand+1
  4555     1DF6  319A  2284  319D   	fcall	___wmul
  4556     1DF9  0020               	movlb	0	; select bank0
  4557     1DFA  0828               	movf	??_read_prec_or_width,w
  4558     1DFB  0720               	addwf	?___wmul,w
  4559     1DFC  00AC               	movwf	read_prec_or_width@n
  4560     1DFD  0829               	movf	??_read_prec_or_width+1,w
  4561     1DFE  3D21               	addwfc	?___wmul+1,w
  4562     1DFF  00AD               	movwf	read_prec_or_width@n+1
  4563     1E00                     l4519:
  4564                           
  4565                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  4566     1E00  082E               	movf	read_prec_or_width@fmt,w
  4567     1E01  0086               	movwf	6
  4568     1E02  0187               	clrf	7
  4569     1E03  3001               	movlw	1
  4570     1E04  0781               	addwf	1,f
  4571     1E05  3141               	addfsr 1,1
  4572     1E06  1803               	skipnc
  4573     1E07  0A81               	incf	1,f
  4574     1E08                     l4521:
  4575                           
  4576                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4577     1E08  082E               	movf	read_prec_or_width@fmt,w
  4578     1E09  0086               	movwf	6
  4579     1E0A  0187               	clrf	7
  4580     1E0B  3F40               	moviw [0]fsr1
  4581     1E0C  00A8               	movwf	??_read_prec_or_width
  4582     1E0D  3F41               	moviw [1]fsr1
  4583     1E0E  00A9               	movwf	??_read_prec_or_width+1
  4584     1E0F  0828               	movf	??_read_prec_or_width,w
  4585     1E10  0084               	movwf	4
  4586     1E11  0829               	movf	??_read_prec_or_width+1,w
  4587     1E12  0085               	movwf	5
  4588     1E13  0800               	movf	0,w	;code access
  4589     1E14  3ED0               	addlw	208
  4590     1E15  00AB               	movwf	read_prec_or_width@c
  4591     1E16  300A               	movlw	10
  4592     1E17  022B               	subwf	read_prec_or_width@c,w
  4593     1E18  1C03               	skipc
  4594     1E19  2E1B               	goto	u5551
  4595     1E1A  2E1C               	goto	u5550
  4596     1E1B                     u5551:
  4597     1E1B  2DEB               	goto	l4517
  4598     1E1C                     u5550:
  4599     1E1C                     l4523:
  4600                           
  4601                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  4602     1E1C  082D               	movf	read_prec_or_width@n+1,w
  4603     1E1D  00A7               	movwf	?_read_prec_or_width+1
  4604     1E1E  082C               	movf	read_prec_or_width@n,w
  4605     1E1F  00A6               	movwf	?_read_prec_or_width
  4606     1E20                     l1149:
  4607     1E20  0008               	return
  4608     1E21                     __end_of_read_prec_or_width:
  4609                           
  4610                           	psect	text5
  4611     1A84                     __ptext5:	
  4612 ;; *************** function ___wmul *****************
  4613 ;; Defined at:
  4614 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4617 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  product         2    4[BANK0 ] unsigned int 
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  2    0[BANK0 ] unsigned int 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4629 ;;      Params:         0       4       0       0       0       0       0       0
  4630 ;;      Locals:         0       2       0       0       0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0       0
  4632 ;;      Totals:         0       6       0       0       0       0       0       0
  4633 ;;Total ram usage:        6 bytes
  4634 ;; Hardware stack levels used: 1
  4635 ;; Hardware stack levels required when called: 4
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_main
  4640 ;;		_read_prec_or_width
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644     1A84                     ___wmul:	
  4645                           ;psect for function ___wmul
  4646                           
  4647     1A84                     l3673:	
  4648                           ;incstack = 0
  4649                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4650                           
  4651     1A84  0020               	movlb	0	; select bank0
  4652     1A85  01A4               	clrf	___wmul@product
  4653     1A86  01A5               	clrf	___wmul@product+1
  4654     1A87                     l3675:
  4655     1A87  1C20               	btfss	___wmul@multiplier,0
  4656     1A88  2A8A               	goto	u3811
  4657     1A89  2A8B               	goto	u3810
  4658     1A8A                     u3811:
  4659     1A8A  2A8F               	goto	l566
  4660     1A8B                     u3810:
  4661     1A8B                     l3677:
  4662     1A8B  0822               	movf	___wmul@multiplicand,w
  4663     1A8C  07A4               	addwf	___wmul@product,f
  4664     1A8D  0823               	movf	___wmul@multiplicand+1,w
  4665     1A8E  3DA5               	addwfc	___wmul@product+1,f
  4666     1A8F                     l566:
  4667     1A8F  3001               	movlw	1
  4668     1A90                     u3825:
  4669     1A90  35A2               	lslf	___wmul@multiplicand,f
  4670     1A91  0DA3               	rlf	___wmul@multiplicand+1,f
  4671     1A92  0B89               	decfsz	9,f
  4672     1A93  2A90               	goto	u3825
  4673     1A94                     l3679:
  4674     1A94  3001               	movlw	1
  4675     1A95                     u3835:
  4676     1A95  36A1               	lsrf	___wmul@multiplier+1,f
  4677     1A96  0CA0               	rrf	___wmul@multiplier,f
  4678     1A97  0B89               	decfsz	9,f
  4679     1A98  2A95               	goto	u3835
  4680     1A99                     l3681:
  4681     1A99  0820               	movf	___wmul@multiplier,w
  4682     1A9A  0421               	iorwf	___wmul@multiplier+1,w
  4683     1A9B  1D03               	btfss	3,2
  4684     1A9C  2A9E               	goto	u3841
  4685     1A9D  2A9F               	goto	u3840
  4686     1A9E                     u3841:
  4687     1A9E  2A87               	goto	l3675
  4688     1A9F                     u3840:
  4689     1A9F                     l3683:
  4690     1A9F  0825               	movf	___wmul@product+1,w
  4691     1AA0  00A1               	movwf	?___wmul+1
  4692     1AA1  0824               	movf	___wmul@product,w
  4693     1AA2  00A0               	movwf	?___wmul
  4694     1AA3                     l568:
  4695     1AA3  0008               	return
  4696     1AA4                     __end_of___wmul:
  4697                           
  4698                           	psect	text6
  4699     08ED                     __ptext6:	
  4700 ;; *************** function _efgtoa *****************
  4701 ;; Defined at:
  4702 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  fp              1    wreg     PTR struct _IO_FILE
  4705 ;;		 -> sprintf@f(11), 
  4706 ;;  f               4   66[BANK0 ] PTR struct _IO_FILE
  4707 ;;  c               1   70[BANK0 ] unsigned char 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  fp              1   15[BANK1 ] PTR struct _IO_FILE
  4710 ;;		 -> sprintf@f(11), 
  4711 ;;  u               4   41[BANK1 ] struct flui
  4712 ;;  g               4   35[BANK1 ] struct flui
  4713 ;;  l               4   28[BANK1 ] struct flui
  4714 ;;  h               4   24[BANK1 ] struct flui
  4715 ;;  ou              4   20[BANK1 ] struct flui
  4716 ;;  n               2   39[BANK1 ] int 
  4717 ;;  i               2   32[BANK1 ] int 
  4718 ;;  w               2   18[BANK1 ] int 
  4719 ;;  e               2   16[BANK1 ] int 
  4720 ;;  m               2   13[BANK1 ] int 
  4721 ;;  d               2   11[BANK1 ] int 
  4722 ;;  t               2    4[BANK1 ] int 
  4723 ;;  p               2    2[BANK1 ] int 
  4724 ;;  ne              2    0[BANK1 ] int 
  4725 ;;  sign            1   34[BANK1 ] unsigned char 
  4726 ;;  nmode           1   10[BANK1 ] unsigned char 
  4727 ;;  mode            1    9[BANK1 ] unsigned char 
  4728 ;;  pp              1    8[BANK1 ] unsigned char 
  4729 ;;  esign           1    0        unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4739 ;;      Params:         0       5       0       0       0       0       0       0
  4740 ;;      Locals:         0       0      45       0       0       0       0       0
  4741 ;;      Temps:          0       4       0       0       0       0       0       0
  4742 ;;      Totals:         0       9      45       0       0       0       0       0
  4743 ;;Total ram usage:       54 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 8
  4746 ;; This function calls:
  4747 ;;		___fladd
  4748 ;;		___fldiv
  4749 ;;		___fleq
  4750 ;;		___flge
  4751 ;;		___flmul
  4752 ;;		___flneg
  4753 ;;		___flsub
  4754 ;;		___fltol
  4755 ;;		___fpclassifyf
  4756 ;;		_floorf
  4757 ;;		_labs
  4758 ;;		_memcpy
  4759 ;;		_pad
  4760 ;;		_strcpy
  4761 ;; This function is called by:
  4762 ;;		_vfpfcnvrt
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766     08ED                     _efgtoa:	
  4767                           ;psect for function _efgtoa
  4768                           
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4772                           ;efgtoa@fp stored from wreg
  4773     08ED  0021               	movlb	1	; select bank1
  4774     08EE  00AF               	movwf	efgtoa@fp^(0+128)
  4775     08EF                     l4295:
  4776                           
  4777                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  4778     08EF  01C2               	clrf	efgtoa@sign^(0+128)
  4779     08F0                     l4297:
  4780                           
  4781                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  4782     08F0  0020               	movlb	0	; select bank0
  4783     08F1  0865               	movf	efgtoa@f+3,w
  4784     08F2  0021               	movlb	1	; select bank1
  4785     08F3  00C6               	movwf	(efgtoa@g+3)^(0+128)
  4786     08F4  0020               	movlb	0	; select bank0
  4787     08F5  0864               	movf	efgtoa@f+2,w
  4788     08F6  0021               	movlb	1	; select bank1
  4789     08F7  00C5               	movwf	(efgtoa@g+2)^(0+128)
  4790     08F8  0020               	movlb	0	; select bank0
  4791     08F9  0863               	movf	efgtoa@f+1,w
  4792     08FA  0021               	movlb	1	; select bank1
  4793     08FB  00C4               	movwf	(efgtoa@g+1)^(0+128)
  4794     08FC  0020               	movlb	0	; select bank0
  4795     08FD  0862               	movf	efgtoa@f,w
  4796     08FE  0021               	movlb	1	; select bank1
  4797     08FF  00C3               	movwf	efgtoa@g^(0+128)
  4798     0900                     l4299:
  4799                           
  4800                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  4801     0900  0846               	movf	(efgtoa@g+3)^(0+128),w
  4802     0901  0020               	movlb	0	; select bank0
  4803     0902  00C6               	movwf	___flge@ff1+3
  4804     0903  0021               	movlb	1	; select bank1
  4805     0904  0845               	movf	(efgtoa@g+2)^(0+128),w
  4806     0905  0020               	movlb	0	; select bank0
  4807     0906  00C5               	movwf	___flge@ff1+2
  4808     0907  0021               	movlb	1	; select bank1
  4809     0908  0844               	movf	(efgtoa@g+1)^(0+128),w
  4810     0909  0020               	movlb	0	; select bank0
  4811     090A  00C4               	movwf	___flge@ff1+1
  4812     090B  0021               	movlb	1	; select bank1
  4813     090C  0843               	movf	efgtoa@g^(0+128),w
  4814     090D  0020               	movlb	0	; select bank0
  4815     090E  00C3               	movwf	___flge@ff1
  4816     090F  3000               	movlw	0
  4817     0910  00CA               	movwf	___flge@ff2+3
  4818     0911  3000               	movlw	0
  4819     0912  00C9               	movwf	___flge@ff2+2
  4820     0913  3000               	movlw	0
  4821     0914  00C8               	movwf	___flge@ff2+1
  4822     0915  3000               	movlw	0
  4823     0916  00C7               	movwf	___flge@ff2
  4824     0917  3190  2003  3188   	fcall	___flge
  4825     091A  1803               	btfsc	3,0
  4826     091B  291D               	goto	u5191
  4827     091C  291E               	goto	u5190
  4828     091D                     u5191:
  4829     091D  2943               	goto	l4305
  4830     091E                     u5190:
  4831     091E                     l4301:
  4832                           
  4833                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  4834     091E  0021               	movlb	1	; select bank1
  4835     091F  01C2               	clrf	efgtoa@sign^(0+128)
  4836     0920  0AC2               	incf	efgtoa@sign^(0+128),f
  4837     0921                     l4303:
  4838                           
  4839                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  4840     0921  0846               	movf	(efgtoa@g+3)^(0+128),w
  4841     0922  0020               	movlb	0	; select bank0
  4842     0923  00A3               	movwf	___flneg@f1+3
  4843     0924  0021               	movlb	1	; select bank1
  4844     0925  0845               	movf	(efgtoa@g+2)^(0+128),w
  4845     0926  0020               	movlb	0	; select bank0
  4846     0927  00A2               	movwf	___flneg@f1+2
  4847     0928  0021               	movlb	1	; select bank1
  4848     0929  0844               	movf	(efgtoa@g+1)^(0+128),w
  4849     092A  0020               	movlb	0	; select bank0
  4850     092B  00A1               	movwf	___flneg@f1+1
  4851     092C  0021               	movlb	1	; select bank1
  4852     092D  0843               	movf	efgtoa@g^(0+128),w
  4853     092E  0020               	movlb	0	; select bank0
  4854     092F  00A0               	movwf	___flneg@f1
  4855     0930  3199  218D  3188   	fcall	___flneg
  4856     0933  0020               	movlb	0	; select bank0
  4857     0934  0823               	movf	?___flneg+3,w
  4858     0935  0021               	movlb	1	; select bank1
  4859     0936  00C6               	movwf	(efgtoa@g+3)^(0+128)
  4860     0937  0020               	movlb	0	; select bank0
  4861     0938  0822               	movf	?___flneg+2,w
  4862     0939  0021               	movlb	1	; select bank1
  4863     093A  00C5               	movwf	(efgtoa@g+2)^(0+128)
  4864     093B  0020               	movlb	0	; select bank0
  4865     093C  0821               	movf	?___flneg+1,w
  4866     093D  0021               	movlb	1	; select bank1
  4867     093E  00C4               	movwf	(efgtoa@g+1)^(0+128)
  4868     093F  0020               	movlb	0	; select bank0
  4869     0940  0820               	movf	?___flneg,w
  4870     0941  0021               	movlb	1	; select bank1
  4871     0942  00C3               	movwf	efgtoa@g^(0+128)
  4872     0943                     l4305:
  4873                           
  4874                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  4875     0943  0021               	movlb	1	; select bank1
  4876     0944  01C7               	clrf	efgtoa@n^(0+128)
  4877     0945  01C8               	clrf	(efgtoa@n+1)^(0+128)
  4878     0946                     l4307:
  4879                           
  4880                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  4881     0946  0022               	movlb	2	; select bank2
  4882     0947  082D               	movf	(_width+1)^(0+256),w
  4883     0948  0021               	movlb	1	; select bank1
  4884     0949  00B3               	movwf	(efgtoa@w+1)^(0+128)
  4885     094A  0022               	movlb	2	; select bank2
  4886     094B  082C               	movf	_width^(0+256),w
  4887     094C  0021               	movlb	1	; select bank1
  4888     094D  00B2               	movwf	efgtoa@w^(0+128)
  4889     094E                     l4309:
  4890                           
  4891                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  4892     094E  0842               	movf	efgtoa@sign^(0+128),w
  4893     094F  1903               	btfsc	3,2
  4894     0950  2952               	goto	u5201
  4895     0951  2953               	goto	u5200
  4896     0952                     u5201:
  4897     0952  2963               	goto	l4317
  4898     0953                     u5200:
  4899     0953                     l4311:
  4900                           
  4901                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  4902     0953  0842               	movf	efgtoa@sign^(0+128),w
  4903     0954  1D03               	btfss	3,2
  4904     0955  2957               	goto	u5211
  4905     0956  2958               	goto	u5210
  4906     0957                     u5211:
  4907     0957  295D               	goto	l4315
  4908     0958                     u5210:
  4909     0958                     l4313:
  4910     0958  302B               	movlw	43
  4911     0959  00A6               	movwf	_efgtoa$1370^(0+128)
  4912     095A  3000               	movlw	0
  4913     095B  00A7               	movwf	(_efgtoa$1370^(0+128)+1)
  4914     095C  2961               	goto	l1091
  4915     095D                     l4315:
  4916     095D  302D               	movlw	45
  4917     095E  00A6               	movwf	_efgtoa$1370^(0+128)
  4918     095F  3000               	movlw	0
  4919     0960  00A7               	movwf	(_efgtoa$1370^(0+128)+1)
  4920     0961                     l1091:
  4921     0961  0826               	movf	_efgtoa$1370^(0+128),w
  4922     0962  00C2               	movwf	efgtoa@sign^(0+128)
  4923     0963                     l4317:
  4924                           
  4925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4926     0963  0846               	movf	(efgtoa@g+3)^(0+128),w
  4927     0964  0020               	movlb	0	; select bank0
  4928     0965  00A3               	movwf	___fpclassifyf@x+3
  4929     0966  0021               	movlb	1	; select bank1
  4930     0967  0845               	movf	(efgtoa@g+2)^(0+128),w
  4931     0968  0020               	movlb	0	; select bank0
  4932     0969  00A2               	movwf	___fpclassifyf@x+2
  4933     096A  0021               	movlb	1	; select bank1
  4934     096B  0844               	movf	(efgtoa@g+1)^(0+128),w
  4935     096C  0020               	movlb	0	; select bank0
  4936     096D  00A1               	movwf	___fpclassifyf@x+1
  4937     096E  0021               	movlb	1	; select bank1
  4938     096F  0843               	movf	efgtoa@g^(0+128),w
  4939     0970  0020               	movlb	0	; select bank0
  4940     0971  00A0               	movwf	___fpclassifyf@x
  4941     0972  319F  2781  3188   	fcall	___fpclassifyf
  4942     0975  0020               	movlb	0	; select bank0
  4943     0976  0320               	decf	?___fpclassifyf,w
  4944     0977  0421               	iorwf	?___fpclassifyf+1,w
  4945     0978  1D03               	btfss	3,2
  4946     0979  297B               	goto	u5221
  4947     097A  297C               	goto	u5220
  4948     097B                     u5221:
  4949     097B  29AF               	goto	l4329
  4950     097C                     u5220:
  4951     097C                     l4319:
  4952                           
  4953                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  4954     097C  0021               	movlb	1	; select bank1
  4955     097D  0842               	movf	efgtoa@sign^(0+128),w
  4956     097E  1903               	btfsc	3,2
  4957     097F  2981               	goto	u5231
  4958     0980  2982               	goto	u5230
  4959     0981                     u5231:
  4960     0981  298E               	goto	l4323
  4961     0982                     u5230:
  4962     0982                     l4321:
  4963                           
  4964                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  4965     0982  0842               	movf	efgtoa@sign^(0+128),w
  4966     0983  0024               	movlb	4	; select bank4
  4967     0984  00A0               	movwf	_dbuf^(0+512)
  4968                           
  4969                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  4970     0985  30FF               	movlw	255
  4971     0986  0021               	movlb	1	; select bank1
  4972     0987  07B2               	addwf	efgtoa@w^(0+128),f
  4973     0988  30FF               	movlw	255
  4974     0989  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  4975                           
  4976                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  4977     098A  3001               	movlw	1
  4978     098B  00C7               	movwf	efgtoa@n^(0+128)
  4979     098C  3000               	movlw	0
  4980     098D  00C8               	movwf	(efgtoa@n^(0+128)+1)
  4981     098E                     l4323:
  4982                           
  4983                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  4984     098E  307F               	movlw	low (STR_18| (0+32768))
  4985     098F  0020               	movlb	0	; select bank0
  4986     0990  00A0               	movwf	strcpy@src
  4987     0991  3098               	movlw	high (STR_18| (0+32768))
  4988     0992  00A1               	movwf	strcpy@src+1
  4989     0993  0021               	movlb	1	; select bank1
  4990     0994  0847               	movf	efgtoa@n^(0+128),w
  4991     0995  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4992     0996  3199  21EC  3188   	fcall	_strcpy
  4993     0999                     l4325:
  4994                           
  4995                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4996     0999  30FD               	movlw	253
  4997     099A  0021               	movlb	1	; select bank1
  4998     099B  07B2               	addwf	efgtoa@w^(0+128),f
  4999     099C  30FF               	movlw	255
  5000     099D  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  5001                           
  5002                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  5003     099E  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  5004     099F  0020               	movlb	0	; select bank0
  5005     09A0  00AF               	movwf	pad@buf
  5006     09A1  0021               	movlb	1	; select bank1
  5007     09A2  0833               	movf	(efgtoa@w+1)^(0+128),w
  5008     09A3  0020               	movlb	0	; select bank0
  5009     09A4  00B1               	movwf	pad@p+1
  5010     09A5  0021               	movlb	1	; select bank1
  5011     09A6  0832               	movf	efgtoa@w^(0+128),w
  5012     09A7  0020               	movlb	0	; select bank0
  5013     09A8  00B0               	movwf	pad@p
  5014     09A9  0021               	movlb	1	; select bank1
  5015     09AA  082F               	movf	efgtoa@fp^(0+128),w
  5016     09AB  319B  23E3  3188   	fcall	_pad
  5017     09AE  2FFF               	goto	l1094
  5018     09AF                     l4329:
  5019                           
  5020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  5021     09AF  0021               	movlb	1	; select bank1
  5022     09B0  0846               	movf	(efgtoa@g+3)^(0+128),w
  5023     09B1  0020               	movlb	0	; select bank0
  5024     09B2  00A3               	movwf	___fpclassifyf@x+3
  5025     09B3  0021               	movlb	1	; select bank1
  5026     09B4  0845               	movf	(efgtoa@g+2)^(0+128),w
  5027     09B5  0020               	movlb	0	; select bank0
  5028     09B6  00A2               	movwf	___fpclassifyf@x+2
  5029     09B7  0021               	movlb	1	; select bank1
  5030     09B8  0844               	movf	(efgtoa@g+1)^(0+128),w
  5031     09B9  0020               	movlb	0	; select bank0
  5032     09BA  00A1               	movwf	___fpclassifyf@x+1
  5033     09BB  0021               	movlb	1	; select bank1
  5034     09BC  0843               	movf	efgtoa@g^(0+128),w
  5035     09BD  0020               	movlb	0	; select bank0
  5036     09BE  00A0               	movwf	___fpclassifyf@x
  5037     09BF  319F  2781  3188   	fcall	___fpclassifyf
  5038     09C2  0020               	movlb	0	; select bank0
  5039     09C3  0820               	movf	?___fpclassifyf,w
  5040     09C4  0421               	iorwf	?___fpclassifyf+1,w
  5041     09C5  1D03               	btfss	3,2
  5042     09C6  29C8               	goto	u5241
  5043     09C7  29C9               	goto	u5240
  5044     09C8                     u5241:
  5045     09C8  29FC               	goto	l4341
  5046     09C9                     u5240:
  5047     09C9                     l4331:
  5048                           
  5049                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  5050     09C9  0021               	movlb	1	; select bank1
  5051     09CA  0842               	movf	efgtoa@sign^(0+128),w
  5052     09CB  1903               	btfsc	3,2
  5053     09CC  29CE               	goto	u5251
  5054     09CD  29CF               	goto	u5250
  5055     09CE                     u5251:
  5056     09CE  29DB               	goto	l4335
  5057     09CF                     u5250:
  5058     09CF                     l4333:
  5059                           
  5060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  5061     09CF  0842               	movf	efgtoa@sign^(0+128),w
  5062     09D0  0024               	movlb	4	; select bank4
  5063     09D1  00A0               	movwf	_dbuf^(0+512)
  5064                           
  5065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  5066     09D2  30FF               	movlw	255
  5067     09D3  0021               	movlb	1	; select bank1
  5068     09D4  07B2               	addwf	efgtoa@w^(0+128),f
  5069     09D5  30FF               	movlw	255
  5070     09D6  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  5071                           
  5072                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  5073     09D7  3001               	movlw	1
  5074     09D8  00C7               	movwf	efgtoa@n^(0+128)
  5075     09D9  3000               	movlw	0
  5076     09DA  00C8               	movwf	(efgtoa@n^(0+128)+1)
  5077     09DB                     l4335:
  5078                           
  5079                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  5080     09DB  3083               	movlw	low (STR_21| (0+32768))
  5081     09DC  0020               	movlb	0	; select bank0
  5082     09DD  00A0               	movwf	strcpy@src
  5083     09DE  3098               	movlw	high (STR_21| (0+32768))
  5084     09DF  00A1               	movwf	strcpy@src+1
  5085     09E0  0021               	movlb	1	; select bank1
  5086     09E1  0847               	movf	efgtoa@n^(0+128),w
  5087     09E2  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5088     09E3  3199  21EC  3188   	fcall	_strcpy
  5089     09E6                     l4337:
  5090                           
  5091                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 651:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 652:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
  5092     09E6  30FD               	movlw	253
  5093     09E7  0021               	movlb	1	; select bank1
  5094     09E8  07B2               	addwf	efgtoa@w^(0+128),f
  5095     09E9  30FF               	movlw	255
  5096     09EA  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  5097                           
  5098                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 653:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  5099     09EB  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  5100     09EC  0020               	movlb	0	; select bank0
  5101     09ED  00AF               	movwf	pad@buf
  5102     09EE  0021               	movlb	1	; select bank1
  5103     09EF  0833               	movf	(efgtoa@w+1)^(0+128),w
  5104     09F0  0020               	movlb	0	; select bank0
  5105     09F1  00B1               	movwf	pad@p+1
  5106     09F2  0021               	movlb	1	; select bank1
  5107     09F3  0832               	movf	efgtoa@w^(0+128),w
  5108     09F4  0020               	movlb	0	; select bank0
  5109     09F5  00B0               	movwf	pad@p
  5110     09F6  0021               	movlb	1	; select bank1
  5111     09F7  082F               	movf	efgtoa@fp^(0+128),w
  5112     09F8  319B  23E3  3188   	fcall	_pad
  5113     09FB  2FFF               	goto	l1094
  5114     09FC                     l4341:
  5115                           
  5116                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  5117     09FC  303F               	movlw	63
  5118     09FD  0021               	movlb	1	; select bank1
  5119     09FE  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5120     09FF  3080               	movlw	128
  5121     0A00  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5122     0A01  3000               	movlw	0
  5123     0A02  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5124     0A03  3000               	movlw	0
  5125     0A04  00C9               	movwf	efgtoa@u^(0+128)
  5126     0A05                     l4343:
  5127                           
  5128                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  5129     0A05  01B0               	clrf	efgtoa@e^(0+128)
  5130     0A06  01B1               	clrf	(efgtoa@e+1)^(0+128)
  5131     0A07                     l4345:
  5132                           
  5133                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  5134     0A07  0846               	movf	(efgtoa@g+3)^(0+128),w
  5135     0A08  0020               	movlb	0	; select bank0
  5136     0A09  00A3               	movwf	___fleq@ff1+3
  5137     0A0A  0021               	movlb	1	; select bank1
  5138     0A0B  0845               	movf	(efgtoa@g+2)^(0+128),w
  5139     0A0C  0020               	movlb	0	; select bank0
  5140     0A0D  00A2               	movwf	___fleq@ff1+2
  5141     0A0E  0021               	movlb	1	; select bank1
  5142     0A0F  0844               	movf	(efgtoa@g+1)^(0+128),w
  5143     0A10  0020               	movlb	0	; select bank0
  5144     0A11  00A1               	movwf	___fleq@ff1+1
  5145     0A12  0021               	movlb	1	; select bank1
  5146     0A13  0843               	movf	efgtoa@g^(0+128),w
  5147     0A14  0020               	movlb	0	; select bank0
  5148     0A15  00A0               	movwf	___fleq@ff1
  5149     0A16  3000               	movlw	0
  5150     0A17  00A7               	movwf	___fleq@ff2+3
  5151     0A18  3000               	movlw	0
  5152     0A19  00A6               	movwf	___fleq@ff2+2
  5153     0A1A  3000               	movlw	0
  5154     0A1B  00A5               	movwf	___fleq@ff2+1
  5155     0A1C  3000               	movlw	0
  5156     0A1D  00A4               	movwf	___fleq@ff2
  5157     0A1E  319C  2413  3188   	fcall	___fleq
  5158     0A21  1803               	btfsc	3,0
  5159     0A22  2A24               	goto	u5261
  5160     0A23  2A25               	goto	u5260
  5161     0A24                     u5261:
  5162     0A24  2B79               	goto	l4371
  5163     0A25                     u5260:
  5164     0A25  2A33               	goto	l4351
  5165     0A26                     l4349:
  5166                           
  5167                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  5168     0A26  0021               	movlb	1	; select bank1
  5169     0A27  0837               	movf	(efgtoa@ou+3)^(0+128),w
  5170     0A28  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5171     0A29  0836               	movf	(efgtoa@ou+2)^(0+128),w
  5172     0A2A  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5173     0A2B  0835               	movf	(efgtoa@ou+1)^(0+128),w
  5174     0A2C  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5175     0A2D  0834               	movf	efgtoa@ou^(0+128),w
  5176     0A2E  00C9               	movwf	efgtoa@u^(0+128)
  5177                           
  5178                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  5179     0A2F  3001               	movlw	1
  5180     0A30  07B0               	addwf	efgtoa@e^(0+128),f
  5181     0A31  3000               	movlw	0
  5182     0A32  3DB1               	addwfc	(efgtoa@e+1)^(0+128),f
  5183     0A33                     l4351:
  5184                           
  5185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  5186     0A33  3041               	movlw	65
  5187     0A34  0020               	movlb	0	; select bank0
  5188     0A35  00AC               	movwf	___flmul@b+3
  5189     0A36  3020               	movlw	32
  5190     0A37  00AB               	movwf	___flmul@b+2
  5191     0A38  3000               	movlw	0
  5192     0A39  00AA               	movwf	___flmul@b+1
  5193     0A3A  3000               	movlw	0
  5194     0A3B  00A9               	movwf	___flmul@b
  5195     0A3C  0021               	movlb	1	; select bank1
  5196     0A3D  084C               	movf	(efgtoa@u+3)^(0+128),w
  5197     0A3E  0020               	movlb	0	; select bank0
  5198     0A3F  00B0               	movwf	___flmul@a+3
  5199     0A40  0021               	movlb	1	; select bank1
  5200     0A41  084B               	movf	(efgtoa@u+2)^(0+128),w
  5201     0A42  0020               	movlb	0	; select bank0
  5202     0A43  00AF               	movwf	___flmul@a+2
  5203     0A44  0021               	movlb	1	; select bank1
  5204     0A45  084A               	movf	(efgtoa@u+1)^(0+128),w
  5205     0A46  0020               	movlb	0	; select bank0
  5206     0A47  00AE               	movwf	___flmul@a+1
  5207     0A48  0021               	movlb	1	; select bank1
  5208     0A49  0849               	movf	efgtoa@u^(0+128),w
  5209     0A4A  0020               	movlb	0	; select bank0
  5210     0A4B  00AD               	movwf	___flmul@a
  5211     0A4C  3184  24F5  3188   	fcall	___flmul
  5212     0A4F  0020               	movlb	0	; select bank0
  5213     0A50  082C               	movf	?___flmul+3,w
  5214     0A51  0021               	movlb	1	; select bank1
  5215     0A52  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  5216     0A53  0020               	movlb	0	; select bank0
  5217     0A54  082B               	movf	?___flmul+2,w
  5218     0A55  0021               	movlb	1	; select bank1
  5219     0A56  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  5220     0A57  0020               	movlb	0	; select bank0
  5221     0A58  082A               	movf	?___flmul+1,w
  5222     0A59  0021               	movlb	1	; select bank1
  5223     0A5A  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  5224     0A5B  0020               	movlb	0	; select bank0
  5225     0A5C  0829               	movf	?___flmul,w
  5226     0A5D  0021               	movlb	1	; select bank1
  5227     0A5E  00B4               	movwf	efgtoa@ou^(0+128)
  5228     0A5F                     l4353:
  5229     0A5F  0834               	movf	efgtoa@ou^(0+128),w
  5230     0A60  0243               	subwf	efgtoa@g^(0+128),w
  5231     0A61  0020               	movlb	0	; select bank0
  5232     0A62  00E7               	movwf	??_efgtoa
  5233     0A63  0021               	movlb	1	; select bank1
  5234     0A64  0835               	movf	(efgtoa@ou+1)^(0+128),w
  5235     0A65  3B44               	subwfb	(efgtoa@g+1)^(0+128),w
  5236     0A66  0020               	movlb	0	; select bank0
  5237     0A67  00E8               	movwf	??_efgtoa+1
  5238     0A68  0021               	movlb	1	; select bank1
  5239     0A69  0836               	movf	(efgtoa@ou+2)^(0+128),w
  5240     0A6A  3B45               	subwfb	(efgtoa@g+2)^(0+128),w
  5241     0A6B  0020               	movlb	0	; select bank0
  5242     0A6C  00E9               	movwf	??_efgtoa+2
  5243     0A6D  0021               	movlb	1	; select bank1
  5244     0A6E  0837               	movf	(efgtoa@ou+3)^(0+128),w
  5245     0A6F  3B46               	subwfb	(efgtoa@g+3)^(0+128),w
  5246     0A70  0020               	movlb	0	; select bank0
  5247     0A71  00EA               	movwf	??_efgtoa+3
  5248     0A72  086A               	movf	??_efgtoa+3,w
  5249     0A73  00A3               	movwf	labs@a+3
  5250     0A74  0869               	movf	??_efgtoa+2,w
  5251     0A75  00A2               	movwf	labs@a+2
  5252     0A76  0868               	movf	??_efgtoa+1,w
  5253     0A77  00A1               	movwf	labs@a+1
  5254     0A78  0867               	movf	??_efgtoa,w
  5255     0A79  00A0               	movwf	labs@a
  5256     0A7A  3199  21BF  3188   	fcall	_labs
  5257     0A7D  0020               	movlb	0	; select bank0
  5258     0A7E  1BA3               	btfsc	?_labs+3,7
  5259     0A7F  2A8E               	goto	u5271
  5260     0A80  0823               	movf	?_labs+3,w
  5261     0A81  1D03               	btfss	3,2
  5262     0A82  2A8F               	goto	u5270
  5263     0A83  0822               	movf	?_labs+2,w
  5264     0A84  1D03               	btfss	3,2
  5265     0A85  2A8F               	goto	u5270
  5266     0A86  0821               	movf	?_labs+1,w
  5267     0A87  1D03               	btfss	3,2
  5268     0A88  2A8F               	goto	u5270
  5269     0A89  3002               	movlw	2
  5270     0A8A  0220               	subwf	?_labs,w
  5271     0A8B  1C03               	btfss	3,0
  5272     0A8C  2A8E               	goto	u5271
  5273     0A8D  2A8F               	goto	u5270
  5274     0A8E                     u5271:
  5275     0A8E  2A26               	goto	l4349
  5276     0A8F                     u5270:
  5277     0A8F                     l4355:
  5278     0A8F  0021               	movlb	1	; select bank1
  5279     0A90  0837               	movf	(efgtoa@ou+3)^(0+128),w
  5280     0A91  0020               	movlb	0	; select bank0
  5281     0A92  00C6               	movwf	___flge@ff1+3
  5282     0A93  0021               	movlb	1	; select bank1
  5283     0A94  0836               	movf	(efgtoa@ou+2)^(0+128),w
  5284     0A95  0020               	movlb	0	; select bank0
  5285     0A96  00C5               	movwf	___flge@ff1+2
  5286     0A97  0021               	movlb	1	; select bank1
  5287     0A98  0835               	movf	(efgtoa@ou+1)^(0+128),w
  5288     0A99  0020               	movlb	0	; select bank0
  5289     0A9A  00C4               	movwf	___flge@ff1+1
  5290     0A9B  0021               	movlb	1	; select bank1
  5291     0A9C  0834               	movf	efgtoa@ou^(0+128),w
  5292     0A9D  0020               	movlb	0	; select bank0
  5293     0A9E  00C3               	movwf	___flge@ff1
  5294     0A9F  0021               	movlb	1	; select bank1
  5295     0AA0  0846               	movf	(efgtoa@g+3)^(0+128),w
  5296     0AA1  0020               	movlb	0	; select bank0
  5297     0AA2  00CA               	movwf	___flge@ff2+3
  5298     0AA3  0021               	movlb	1	; select bank1
  5299     0AA4  0845               	movf	(efgtoa@g+2)^(0+128),w
  5300     0AA5  0020               	movlb	0	; select bank0
  5301     0AA6  00C9               	movwf	___flge@ff2+2
  5302     0AA7  0021               	movlb	1	; select bank1
  5303     0AA8  0844               	movf	(efgtoa@g+1)^(0+128),w
  5304     0AA9  0020               	movlb	0	; select bank0
  5305     0AAA  00C8               	movwf	___flge@ff2+1
  5306     0AAB  0021               	movlb	1	; select bank1
  5307     0AAC  0843               	movf	efgtoa@g^(0+128),w
  5308     0AAD  0020               	movlb	0	; select bank0
  5309     0AAE  00C7               	movwf	___flge@ff2
  5310     0AAF  3190  2003  3188   	fcall	___flge
  5311     0AB2  1C03               	btfss	3,0
  5312     0AB3  2AB5               	goto	u5281
  5313     0AB4  2AB6               	goto	u5280
  5314     0AB5                     u5281:
  5315     0AB5  2A26               	goto	l4349
  5316     0AB6                     u5280:
  5317     0AB6                     l4357:
  5318                           
  5319                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  5320     0AB6  0021               	movlb	1	; select bank1
  5321     0AB7  0849               	movf	efgtoa@u^(0+128),w
  5322     0AB8  0243               	subwf	efgtoa@g^(0+128),w
  5323     0AB9  0020               	movlb	0	; select bank0
  5324     0ABA  00E7               	movwf	??_efgtoa
  5325     0ABB  0021               	movlb	1	; select bank1
  5326     0ABC  084A               	movf	(efgtoa@u+1)^(0+128),w
  5327     0ABD  3B44               	subwfb	(efgtoa@g+1)^(0+128),w
  5328     0ABE  0020               	movlb	0	; select bank0
  5329     0ABF  00E8               	movwf	??_efgtoa+1
  5330     0AC0  0021               	movlb	1	; select bank1
  5331     0AC1  084B               	movf	(efgtoa@u+2)^(0+128),w
  5332     0AC2  3B45               	subwfb	(efgtoa@g+2)^(0+128),w
  5333     0AC3  0020               	movlb	0	; select bank0
  5334     0AC4  00E9               	movwf	??_efgtoa+2
  5335     0AC5  0021               	movlb	1	; select bank1
  5336     0AC6  084C               	movf	(efgtoa@u+3)^(0+128),w
  5337     0AC7  3B46               	subwfb	(efgtoa@g+3)^(0+128),w
  5338     0AC8  0020               	movlb	0	; select bank0
  5339     0AC9  00EA               	movwf	??_efgtoa+3
  5340     0ACA  086A               	movf	??_efgtoa+3,w
  5341     0ACB  00A3               	movwf	labs@a+3
  5342     0ACC  0869               	movf	??_efgtoa+2,w
  5343     0ACD  00A2               	movwf	labs@a+2
  5344     0ACE  0868               	movf	??_efgtoa+1,w
  5345     0ACF  00A1               	movwf	labs@a+1
  5346     0AD0  0867               	movf	??_efgtoa,w
  5347     0AD1  00A0               	movwf	labs@a
  5348     0AD2  3199  21BF  3188   	fcall	_labs
  5349     0AD5  0020               	movlb	0	; select bank0
  5350     0AD6  1BA3               	btfsc	?_labs+3,7
  5351     0AD7  2AE7               	goto	u5290
  5352     0AD8  0823               	movf	?_labs+3,w
  5353     0AD9  1D03               	btfss	3,2
  5354     0ADA  2AE6               	goto	u5291
  5355     0ADB  0822               	movf	?_labs+2,w
  5356     0ADC  1D03               	btfss	3,2
  5357     0ADD  2AE6               	goto	u5291
  5358     0ADE  0821               	movf	?_labs+1,w
  5359     0ADF  1D03               	btfss	3,2
  5360     0AE0  2AE6               	goto	u5291
  5361     0AE1  3002               	movlw	2
  5362     0AE2  0220               	subwf	?_labs,w
  5363     0AE3  1803               	btfsc	3,0
  5364     0AE4  2AE6               	goto	u5291
  5365     0AE5  2AE7               	goto	u5290
  5366     0AE6                     u5291:
  5367     0AE6  2B52               	goto	l4369
  5368     0AE7                     u5290:
  5369     0AE7                     l4359:
  5370                           
  5371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  5372     0AE7  0021               	movlb	1	; select bank1
  5373     0AE8  084C               	movf	(efgtoa@u+3)^(0+128),w
  5374     0AE9  00C6               	movwf	(efgtoa@g+3)^(0+128)
  5375     0AEA  084B               	movf	(efgtoa@u+2)^(0+128),w
  5376     0AEB  00C5               	movwf	(efgtoa@g+2)^(0+128)
  5377     0AEC  084A               	movf	(efgtoa@u+1)^(0+128),w
  5378     0AED  00C4               	movwf	(efgtoa@g+1)^(0+128)
  5379     0AEE  0849               	movf	efgtoa@u^(0+128),w
  5380     0AEF  00C3               	movwf	efgtoa@g^(0+128)
  5381                           
  5382                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  5383     0AF0  2B79               	goto	l4371
  5384     0AF1                     l4361:
  5385                           
  5386                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  5387     0AF1  3041               	movlw	65
  5388     0AF2  0020               	movlb	0	; select bank0
  5389     0AF3  00B7               	movwf	___fldiv@a+3
  5390     0AF4  3020               	movlw	32
  5391     0AF5  00B6               	movwf	___fldiv@a+2
  5392     0AF6  3000               	movlw	0
  5393     0AF7  00B5               	movwf	___fldiv@a+1
  5394     0AF8  3000               	movlw	0
  5395     0AF9  00B4               	movwf	___fldiv@a
  5396     0AFA  0021               	movlb	1	; select bank1
  5397     0AFB  084C               	movf	(efgtoa@u+3)^(0+128),w
  5398     0AFC  0020               	movlb	0	; select bank0
  5399     0AFD  00BB               	movwf	___fldiv@b+3
  5400     0AFE  0021               	movlb	1	; select bank1
  5401     0AFF  084B               	movf	(efgtoa@u+2)^(0+128),w
  5402     0B00  0020               	movlb	0	; select bank0
  5403     0B01  00BA               	movwf	___fldiv@b+2
  5404     0B02  0021               	movlb	1	; select bank1
  5405     0B03  084A               	movf	(efgtoa@u+1)^(0+128),w
  5406     0B04  0020               	movlb	0	; select bank0
  5407     0B05  00B9               	movwf	___fldiv@b+1
  5408     0B06  0021               	movlb	1	; select bank1
  5409     0B07  0849               	movf	efgtoa@u^(0+128),w
  5410     0B08  0020               	movlb	0	; select bank0
  5411     0B09  00B8               	movwf	___fldiv@b
  5412     0B0A  3194  244E  3188   	fcall	___fldiv
  5413     0B0D  0020               	movlb	0	; select bank0
  5414     0B0E  0837               	movf	?___fldiv+3,w
  5415     0B0F  0021               	movlb	1	; select bank1
  5416     0B10  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5417     0B11  0020               	movlb	0	; select bank0
  5418     0B12  0836               	movf	?___fldiv+2,w
  5419     0B13  0021               	movlb	1	; select bank1
  5420     0B14  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5421     0B15  0020               	movlb	0	; select bank0
  5422     0B16  0835               	movf	?___fldiv+1,w
  5423     0B17  0021               	movlb	1	; select bank1
  5424     0B18  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5425     0B19  0020               	movlb	0	; select bank0
  5426     0B1A  0834               	movf	?___fldiv,w
  5427     0B1B  0021               	movlb	1	; select bank1
  5428     0B1C  00C9               	movwf	efgtoa@u^(0+128)
  5429     0B1D                     l4363:
  5430                           
  5431                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  5432     0B1D  30FF               	movlw	255
  5433     0B1E  07B0               	addwf	efgtoa@e^(0+128),f
  5434     0B1F  30FF               	movlw	255
  5435     0B20  3DB1               	addwfc	(efgtoa@e+1)^(0+128),f
  5436     0B21                     l4365:
  5437                           
  5438                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  5439     0B21  0849               	movf	efgtoa@u^(0+128),w
  5440     0B22  0243               	subwf	efgtoa@g^(0+128),w
  5441     0B23  0020               	movlb	0	; select bank0
  5442     0B24  00E7               	movwf	??_efgtoa
  5443     0B25  0021               	movlb	1	; select bank1
  5444     0B26  084A               	movf	(efgtoa@u+1)^(0+128),w
  5445     0B27  3B44               	subwfb	(efgtoa@g+1)^(0+128),w
  5446     0B28  0020               	movlb	0	; select bank0
  5447     0B29  00E8               	movwf	??_efgtoa+1
  5448     0B2A  0021               	movlb	1	; select bank1
  5449     0B2B  084B               	movf	(efgtoa@u+2)^(0+128),w
  5450     0B2C  3B45               	subwfb	(efgtoa@g+2)^(0+128),w
  5451     0B2D  0020               	movlb	0	; select bank0
  5452     0B2E  00E9               	movwf	??_efgtoa+2
  5453     0B2F  0021               	movlb	1	; select bank1
  5454     0B30  084C               	movf	(efgtoa@u+3)^(0+128),w
  5455     0B31  3B46               	subwfb	(efgtoa@g+3)^(0+128),w
  5456     0B32  0020               	movlb	0	; select bank0
  5457     0B33  00EA               	movwf	??_efgtoa+3
  5458     0B34  086A               	movf	??_efgtoa+3,w
  5459     0B35  00A3               	movwf	labs@a+3
  5460     0B36  0869               	movf	??_efgtoa+2,w
  5461     0B37  00A2               	movwf	labs@a+2
  5462     0B38  0868               	movf	??_efgtoa+1,w
  5463     0B39  00A1               	movwf	labs@a+1
  5464     0B3A  0867               	movf	??_efgtoa,w
  5465     0B3B  00A0               	movwf	labs@a
  5466     0B3C  3199  21BF  3188   	fcall	_labs
  5467     0B3F  0020               	movlb	0	; select bank0
  5468     0B40  1BA3               	btfsc	?_labs+3,7
  5469     0B41  2B51               	goto	u5300
  5470     0B42  0823               	movf	?_labs+3,w
  5471     0B43  1D03               	btfss	3,2
  5472     0B44  2B50               	goto	u5301
  5473     0B45  0822               	movf	?_labs+2,w
  5474     0B46  1D03               	btfss	3,2
  5475     0B47  2B50               	goto	u5301
  5476     0B48  0821               	movf	?_labs+1,w
  5477     0B49  1D03               	btfss	3,2
  5478     0B4A  2B50               	goto	u5301
  5479     0B4B  3002               	movlw	2
  5480     0B4C  0220               	subwf	?_labs,w
  5481     0B4D  1803               	btfsc	3,0
  5482     0B4E  2B50               	goto	u5301
  5483     0B4F  2B51               	goto	u5300
  5484     0B50                     u5301:
  5485     0B50  2B52               	goto	l4369
  5486     0B51                     u5300:
  5487     0B51  2AE7               	goto	l4359
  5488     0B52                     l4369:
  5489                           
  5490                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  5491     0B52  0021               	movlb	1	; select bank1
  5492     0B53  0846               	movf	(efgtoa@g+3)^(0+128),w
  5493     0B54  0020               	movlb	0	; select bank0
  5494     0B55  00C6               	movwf	___flge@ff1+3
  5495     0B56  0021               	movlb	1	; select bank1
  5496     0B57  0845               	movf	(efgtoa@g+2)^(0+128),w
  5497     0B58  0020               	movlb	0	; select bank0
  5498     0B59  00C5               	movwf	___flge@ff1+2
  5499     0B5A  0021               	movlb	1	; select bank1
  5500     0B5B  0844               	movf	(efgtoa@g+1)^(0+128),w
  5501     0B5C  0020               	movlb	0	; select bank0
  5502     0B5D  00C4               	movwf	___flge@ff1+1
  5503     0B5E  0021               	movlb	1	; select bank1
  5504     0B5F  0843               	movf	efgtoa@g^(0+128),w
  5505     0B60  0020               	movlb	0	; select bank0
  5506     0B61  00C3               	movwf	___flge@ff1
  5507     0B62  0021               	movlb	1	; select bank1
  5508     0B63  084C               	movf	(efgtoa@u+3)^(0+128),w
  5509     0B64  0020               	movlb	0	; select bank0
  5510     0B65  00CA               	movwf	___flge@ff2+3
  5511     0B66  0021               	movlb	1	; select bank1
  5512     0B67  084B               	movf	(efgtoa@u+2)^(0+128),w
  5513     0B68  0020               	movlb	0	; select bank0
  5514     0B69  00C9               	movwf	___flge@ff2+2
  5515     0B6A  0021               	movlb	1	; select bank1
  5516     0B6B  084A               	movf	(efgtoa@u+1)^(0+128),w
  5517     0B6C  0020               	movlb	0	; select bank0
  5518     0B6D  00C8               	movwf	___flge@ff2+1
  5519     0B6E  0021               	movlb	1	; select bank1
  5520     0B6F  0849               	movf	efgtoa@u^(0+128),w
  5521     0B70  0020               	movlb	0	; select bank0
  5522     0B71  00C7               	movwf	___flge@ff2
  5523     0B72  3190  2003  3188   	fcall	___flge
  5524     0B75  1C03               	btfss	3,0
  5525     0B76  2B78               	goto	u5311
  5526     0B77  2B79               	goto	u5310
  5527     0B78                     u5311:
  5528     0B78  2AF1               	goto	l4361
  5529     0B79                     u5310:
  5530     0B79                     l4371:
  5531                           
  5532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  5533     0B79  0020               	movlb	0	; select bank0
  5534     0B7A  0866               	movf	efgtoa@c,w
  5535     0B7B  0021               	movlb	1	; select bank1
  5536     0B7C  00A9               	movwf	efgtoa@mode^(0+128)
  5537                           
  5538                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  5539     0B7D  0829               	movf	efgtoa@mode^(0+128),w
  5540     0B7E  00AA               	movwf	efgtoa@nmode^(0+128)
  5541     0B7F                     l4373:
  5542                           
  5543                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  5544     0B7F  0022               	movlb	2	; select bank2
  5545     0B80  1BAF               	btfsc	(_prec+1)^(0+256),7
  5546     0B81  2B83               	goto	u5321
  5547     0B82  2B84               	goto	u5320
  5548     0B83                     u5321:
  5549     0B83  2B8C               	goto	l4377
  5550     0B84                     u5320:
  5551     0B84                     l4375:
  5552     0B84  082F               	movf	(_prec+1)^(0+256),w
  5553     0B85  0021               	movlb	1	; select bank1
  5554     0B86  00A3               	movwf	(efgtoa@p+1)^(0+128)
  5555     0B87  0022               	movlb	2	; select bank2
  5556     0B88  082E               	movf	_prec^(0+256),w
  5557     0B89  0021               	movlb	1	; select bank1
  5558     0B8A  00A2               	movwf	efgtoa@p^(0+128)
  5559     0B8B  2B91               	goto	l1110
  5560     0B8C                     l4377:
  5561     0B8C  3006               	movlw	6
  5562     0B8D  0021               	movlb	1	; select bank1
  5563     0B8E  00A2               	movwf	efgtoa@p^(0+128)
  5564     0B8F  3000               	movlw	0
  5565     0B90  00A3               	movwf	(efgtoa@p^(0+128)+1)
  5566     0B91                     l1110:
  5567                           
  5568                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  5569     0B91  0823               	movf	(efgtoa@p+1)^(0+128),w
  5570     0B92  00AE               	movwf	(efgtoa@m+1)^(0+128)
  5571     0B93  0822               	movf	efgtoa@p^(0+128),w
  5572     0B94  00AD               	movwf	efgtoa@m^(0+128)
  5573                           
  5574                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  5575     0B95  3001               	movlw	1
  5576     0B96  07AD               	addwf	efgtoa@m^(0+128),f
  5577     0B97  3000               	movlw	0
  5578     0B98  3DAE               	addwfc	(efgtoa@m+1)^(0+128),f
  5579     0B99                     l4379:
  5580                           
  5581                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  5582     0B99  3066               	movlw	102
  5583     0B9A  062A               	xorwf	efgtoa@nmode^(0+128),w
  5584     0B9B  1D03               	btfss	3,2
  5585     0B9C  2B9E               	goto	u5331
  5586     0B9D  2B9F               	goto	u5330
  5587     0B9E                     u5331:
  5588     0B9E  2BB7               	goto	l4391
  5589     0B9F                     u5330:
  5590     0B9F                     l4381:
  5591                           
  5592                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  5593     0B9F  1FB1               	btfss	(efgtoa@e+1)^(0+128),7
  5594     0BA0  2BA2               	goto	u5341
  5595     0BA1  2BA3               	goto	u5340
  5596     0BA2                     u5341:
  5597     0BA2  2BAD               	goto	l4387
  5598     0BA3                     u5340:
  5599     0BA3                     l4383:
  5600                           
  5601                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  5602     0BA3  303F               	movlw	63
  5603     0BA4  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5604     0BA5  3080               	movlw	128
  5605     0BA6  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5606     0BA7  3000               	movlw	0
  5607     0BA8  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5608     0BA9  3000               	movlw	0
  5609     0BAA  00C9               	movwf	efgtoa@u^(0+128)
  5610     0BAB                     l4385:
  5611                           
  5612                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  5613     0BAB  01B0               	clrf	efgtoa@e^(0+128)
  5614     0BAC  01B1               	clrf	(efgtoa@e+1)^(0+128)
  5615     0BAD                     l4387:
  5616                           
  5617                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  5618     0BAD  3067               	movlw	103
  5619     0BAE  0629               	xorwf	efgtoa@mode^(0+128),w
  5620     0BAF  1903               	btfsc	3,2
  5621     0BB0  2BB2               	goto	u5351
  5622     0BB1  2BB3               	goto	u5350
  5623     0BB2                     u5351:
  5624     0BB2  2BB7               	goto	l4391
  5625     0BB3                     u5350:
  5626     0BB3                     l4389:
  5627                           
  5628                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  5629     0BB3  0830               	movf	efgtoa@e^(0+128),w
  5630     0BB4  07AD               	addwf	efgtoa@m^(0+128),f
  5631     0BB5  0831               	movf	(efgtoa@e+1)^(0+128),w
  5632     0BB6  3DAE               	addwfc	(efgtoa@m+1)^(0+128),f
  5633     0BB7                     l4391:
  5634                           
  5635                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  5636     0BB7  01C0               	clrf	efgtoa@i^(0+128)
  5637     0BB8  01C1               	clrf	(efgtoa@i+1)^(0+128)
  5638     0BB9                     l4393:
  5639                           
  5640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  5641     0BB9  0846               	movf	(efgtoa@g+3)^(0+128),w
  5642     0BBA  00BB               	movwf	(efgtoa@h+3)^(0+128)
  5643     0BBB  0845               	movf	(efgtoa@g+2)^(0+128),w
  5644     0BBC  00BA               	movwf	(efgtoa@h+2)^(0+128)
  5645     0BBD  0844               	movf	(efgtoa@g+1)^(0+128),w
  5646     0BBE  00B9               	movwf	(efgtoa@h+1)^(0+128)
  5647     0BBF  0843               	movf	efgtoa@g^(0+128),w
  5648     0BC0  00B8               	movwf	efgtoa@h^(0+128)
  5649     0BC1                     l4395:
  5650                           
  5651                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  5652     0BC1  084C               	movf	(efgtoa@u+3)^(0+128),w
  5653     0BC2  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  5654     0BC3  084B               	movf	(efgtoa@u+2)^(0+128),w
  5655     0BC4  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  5656     0BC5  084A               	movf	(efgtoa@u+1)^(0+128),w
  5657     0BC6  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  5658     0BC7  0849               	movf	efgtoa@u^(0+128),w
  5659     0BC8  00B4               	movwf	efgtoa@ou^(0+128)
  5660                           
  5661                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  5662     0BC9  2CA1               	goto	l4401
  5663     0BCA                     l4397:
  5664                           
  5665                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  5666     0BCA  0021               	movlb	1	; select bank1
  5667     0BCB  084C               	movf	(efgtoa@u+3)^(0+128),w
  5668     0BCC  0020               	movlb	0	; select bank0
  5669     0BCD  00B7               	movwf	___fldiv@a+3
  5670     0BCE  0021               	movlb	1	; select bank1
  5671     0BCF  084B               	movf	(efgtoa@u+2)^(0+128),w
  5672     0BD0  0020               	movlb	0	; select bank0
  5673     0BD1  00B6               	movwf	___fldiv@a+2
  5674     0BD2  0021               	movlb	1	; select bank1
  5675     0BD3  084A               	movf	(efgtoa@u+1)^(0+128),w
  5676     0BD4  0020               	movlb	0	; select bank0
  5677     0BD5  00B5               	movwf	___fldiv@a+1
  5678     0BD6  0021               	movlb	1	; select bank1
  5679     0BD7  0849               	movf	efgtoa@u^(0+128),w
  5680     0BD8  0020               	movlb	0	; select bank0
  5681     0BD9  00B4               	movwf	___fldiv@a
  5682     0BDA  0021               	movlb	1	; select bank1
  5683     0BDB  083B               	movf	(efgtoa@h+3)^(0+128),w
  5684     0BDC  0020               	movlb	0	; select bank0
  5685     0BDD  00BB               	movwf	___fldiv@b+3
  5686     0BDE  0021               	movlb	1	; select bank1
  5687     0BDF  083A               	movf	(efgtoa@h+2)^(0+128),w
  5688     0BE0  0020               	movlb	0	; select bank0
  5689     0BE1  00BA               	movwf	___fldiv@b+2
  5690     0BE2  0021               	movlb	1	; select bank1
  5691     0BE3  0839               	movf	(efgtoa@h+1)^(0+128),w
  5692     0BE4  0020               	movlb	0	; select bank0
  5693     0BE5  00B9               	movwf	___fldiv@b+1
  5694     0BE6  0021               	movlb	1	; select bank1
  5695     0BE7  0838               	movf	efgtoa@h^(0+128),w
  5696     0BE8  0020               	movlb	0	; select bank0
  5697     0BE9  00B8               	movwf	___fldiv@b
  5698     0BEA  3194  244E  3188   	fcall	___fldiv
  5699     0BED  0020               	movlb	0	; select bank0
  5700     0BEE  0837               	movf	?___fldiv+3,w
  5701     0BEF  00D1               	movwf	floorf@x+3
  5702     0BF0  0836               	movf	?___fldiv+2,w
  5703     0BF1  00D0               	movwf	floorf@x+2
  5704     0BF2  0835               	movf	?___fldiv+1,w
  5705     0BF3  00CF               	movwf	floorf@x+1
  5706     0BF4  0834               	movf	?___fldiv,w
  5707     0BF5  00CE               	movwf	floorf@x
  5708     0BF6  3188  2002  3188   	fcall	_floorf
  5709     0BF9  0020               	movlb	0	; select bank0
  5710     0BFA  0851               	movf	?_floorf+3,w
  5711     0BFB  0021               	movlb	1	; select bank1
  5712     0BFC  00BF               	movwf	(efgtoa@l+3)^(0+128)
  5713     0BFD  0020               	movlb	0	; select bank0
  5714     0BFE  0850               	movf	?_floorf+2,w
  5715     0BFF  0021               	movlb	1	; select bank1
  5716     0C00  00BE               	movwf	(efgtoa@l+2)^(0+128)
  5717     0C01  0020               	movlb	0	; select bank0
  5718     0C02  084F               	movf	?_floorf+1,w
  5719     0C03  0021               	movlb	1	; select bank1
  5720     0C04  00BD               	movwf	(efgtoa@l+1)^(0+128)
  5721     0C05  0020               	movlb	0	; select bank0
  5722     0C06  084E               	movf	?_floorf,w
  5723     0C07  0021               	movlb	1	; select bank1
  5724     0C08  00BC               	movwf	efgtoa@l^(0+128)
  5725                           
  5726                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  5727     0C09  083F               	movf	(efgtoa@l+3)^(0+128),w
  5728     0C0A  0020               	movlb	0	; select bank0
  5729     0C0B  00A3               	movwf	___fltol@f1+3
  5730     0C0C  0021               	movlb	1	; select bank1
  5731     0C0D  083E               	movf	(efgtoa@l+2)^(0+128),w
  5732     0C0E  0020               	movlb	0	; select bank0
  5733     0C0F  00A2               	movwf	___fltol@f1+2
  5734     0C10  0021               	movlb	1	; select bank1
  5735     0C11  083D               	movf	(efgtoa@l+1)^(0+128),w
  5736     0C12  0020               	movlb	0	; select bank0
  5737     0C13  00A1               	movwf	___fltol@f1+1
  5738     0C14  0021               	movlb	1	; select bank1
  5739     0C15  083C               	movf	efgtoa@l^(0+128),w
  5740     0C16  0020               	movlb	0	; select bank0
  5741     0C17  00A0               	movwf	___fltol@f1
  5742     0C18  319E  2621  3188   	fcall	___fltol
  5743     0C1B  0020               	movlb	0	; select bank0
  5744     0C1C  0821               	movf	?___fltol+1,w
  5745     0C1D  0021               	movlb	1	; select bank1
  5746     0C1E  00AC               	movwf	(efgtoa@d+1)^(0+128)
  5747     0C1F  0020               	movlb	0	; select bank0
  5748     0C20  0820               	movf	?___fltol,w
  5749     0C21  0021               	movlb	1	; select bank1
  5750     0C22  00AB               	movwf	efgtoa@d^(0+128)
  5751                           
  5752                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  5753     0C23  084C               	movf	(efgtoa@u+3)^(0+128),w
  5754     0C24  0020               	movlb	0	; select bank0
  5755     0C25  00B0               	movwf	___flmul@a+3
  5756     0C26  0021               	movlb	1	; select bank1
  5757     0C27  084B               	movf	(efgtoa@u+2)^(0+128),w
  5758     0C28  0020               	movlb	0	; select bank0
  5759     0C29  00AF               	movwf	___flmul@a+2
  5760     0C2A  0021               	movlb	1	; select bank1
  5761     0C2B  084A               	movf	(efgtoa@u+1)^(0+128),w
  5762     0C2C  0020               	movlb	0	; select bank0
  5763     0C2D  00AE               	movwf	___flmul@a+1
  5764     0C2E  0021               	movlb	1	; select bank1
  5765     0C2F  0849               	movf	efgtoa@u^(0+128),w
  5766     0C30  0020               	movlb	0	; select bank0
  5767     0C31  00AD               	movwf	___flmul@a
  5768     0C32  0021               	movlb	1	; select bank1
  5769     0C33  083F               	movf	(efgtoa@l+3)^(0+128),w
  5770     0C34  0020               	movlb	0	; select bank0
  5771     0C35  00AC               	movwf	___flmul@b+3
  5772     0C36  0021               	movlb	1	; select bank1
  5773     0C37  083E               	movf	(efgtoa@l+2)^(0+128),w
  5774     0C38  0020               	movlb	0	; select bank0
  5775     0C39  00AB               	movwf	___flmul@b+2
  5776     0C3A  0021               	movlb	1	; select bank1
  5777     0C3B  083D               	movf	(efgtoa@l+1)^(0+128),w
  5778     0C3C  0020               	movlb	0	; select bank0
  5779     0C3D  00AA               	movwf	___flmul@b+1
  5780     0C3E  0021               	movlb	1	; select bank1
  5781     0C3F  083C               	movf	efgtoa@l^(0+128),w
  5782     0C40  0020               	movlb	0	; select bank0
  5783     0C41  00A9               	movwf	___flmul@b
  5784     0C42  3184  24F5  3188   	fcall	___flmul
  5785     0C45  0020               	movlb	0	; select bank0
  5786     0C46  082C               	movf	?___flmul+3,w
  5787     0C47  00C6               	movwf	___flsub@a+3
  5788     0C48  082B               	movf	?___flmul+2,w
  5789     0C49  00C5               	movwf	___flsub@a+2
  5790     0C4A  082A               	movf	?___flmul+1,w
  5791     0C4B  00C4               	movwf	___flsub@a+1
  5792     0C4C  0829               	movf	?___flmul,w
  5793     0C4D  00C3               	movwf	___flsub@a
  5794     0C4E  0021               	movlb	1	; select bank1
  5795     0C4F  083B               	movf	(efgtoa@h+3)^(0+128),w
  5796     0C50  0020               	movlb	0	; select bank0
  5797     0C51  00CA               	movwf	___flsub@b+3
  5798     0C52  0021               	movlb	1	; select bank1
  5799     0C53  083A               	movf	(efgtoa@h+2)^(0+128),w
  5800     0C54  0020               	movlb	0	; select bank0
  5801     0C55  00C9               	movwf	___flsub@b+2
  5802     0C56  0021               	movlb	1	; select bank1
  5803     0C57  0839               	movf	(efgtoa@h+1)^(0+128),w
  5804     0C58  0020               	movlb	0	; select bank0
  5805     0C59  00C8               	movwf	___flsub@b+1
  5806     0C5A  0021               	movlb	1	; select bank1
  5807     0C5B  0838               	movf	efgtoa@h^(0+128),w
  5808     0C5C  0020               	movlb	0	; select bank0
  5809     0C5D  00C7               	movwf	___flsub@b
  5810     0C5E  319A  2264  3188   	fcall	___flsub
  5811     0C61  0020               	movlb	0	; select bank0
  5812     0C62  0846               	movf	?___flsub+3,w
  5813     0C63  0021               	movlb	1	; select bank1
  5814     0C64  00BB               	movwf	(efgtoa@h+3)^(0+128)
  5815     0C65  0020               	movlb	0	; select bank0
  5816     0C66  0845               	movf	?___flsub+2,w
  5817     0C67  0021               	movlb	1	; select bank1
  5818     0C68  00BA               	movwf	(efgtoa@h+2)^(0+128)
  5819     0C69  0020               	movlb	0	; select bank0
  5820     0C6A  0844               	movf	?___flsub+1,w
  5821     0C6B  0021               	movlb	1	; select bank1
  5822     0C6C  00B9               	movwf	(efgtoa@h+1)^(0+128)
  5823     0C6D  0020               	movlb	0	; select bank0
  5824     0C6E  0843               	movf	?___flsub,w
  5825     0C6F  0021               	movlb	1	; select bank1
  5826     0C70  00B8               	movwf	efgtoa@h^(0+128)
  5827                           
  5828                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  5829     0C71  3041               	movlw	65
  5830     0C72  0020               	movlb	0	; select bank0
  5831     0C73  00B7               	movwf	___fldiv@a+3
  5832     0C74  3020               	movlw	32
  5833     0C75  00B6               	movwf	___fldiv@a+2
  5834     0C76  3000               	movlw	0
  5835     0C77  00B5               	movwf	___fldiv@a+1
  5836     0C78  3000               	movlw	0
  5837     0C79  00B4               	movwf	___fldiv@a
  5838     0C7A  0021               	movlb	1	; select bank1
  5839     0C7B  084C               	movf	(efgtoa@u+3)^(0+128),w
  5840     0C7C  0020               	movlb	0	; select bank0
  5841     0C7D  00BB               	movwf	___fldiv@b+3
  5842     0C7E  0021               	movlb	1	; select bank1
  5843     0C7F  084B               	movf	(efgtoa@u+2)^(0+128),w
  5844     0C80  0020               	movlb	0	; select bank0
  5845     0C81  00BA               	movwf	___fldiv@b+2
  5846     0C82  0021               	movlb	1	; select bank1
  5847     0C83  084A               	movf	(efgtoa@u+1)^(0+128),w
  5848     0C84  0020               	movlb	0	; select bank0
  5849     0C85  00B9               	movwf	___fldiv@b+1
  5850     0C86  0021               	movlb	1	; select bank1
  5851     0C87  0849               	movf	efgtoa@u^(0+128),w
  5852     0C88  0020               	movlb	0	; select bank0
  5853     0C89  00B8               	movwf	___fldiv@b
  5854     0C8A  3194  244E  3188   	fcall	___fldiv
  5855     0C8D  0020               	movlb	0	; select bank0
  5856     0C8E  0837               	movf	?___fldiv+3,w
  5857     0C8F  0021               	movlb	1	; select bank1
  5858     0C90  00CC               	movwf	(efgtoa@u+3)^(0+128)
  5859     0C91  0020               	movlb	0	; select bank0
  5860     0C92  0836               	movf	?___fldiv+2,w
  5861     0C93  0021               	movlb	1	; select bank1
  5862     0C94  00CB               	movwf	(efgtoa@u+2)^(0+128)
  5863     0C95  0020               	movlb	0	; select bank0
  5864     0C96  0835               	movf	?___fldiv+1,w
  5865     0C97  0021               	movlb	1	; select bank1
  5866     0C98  00CA               	movwf	(efgtoa@u+1)^(0+128)
  5867     0C99  0020               	movlb	0	; select bank0
  5868     0C9A  0834               	movf	?___fldiv,w
  5869     0C9B  0021               	movlb	1	; select bank1
  5870     0C9C  00C9               	movwf	efgtoa@u^(0+128)
  5871     0C9D                     l4399:
  5872                           
  5873                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  5874     0C9D  3001               	movlw	1
  5875     0C9E  07C0               	addwf	efgtoa@i^(0+128),f
  5876     0C9F  3000               	movlw	0
  5877     0CA0  3DC1               	addwfc	(efgtoa@i+1)^(0+128),f
  5878     0CA1                     l4401:
  5879                           
  5880                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  5881     0CA1  0841               	movf	(efgtoa@i+1)^(0+128),w
  5882     0CA2  3A80               	xorlw	128
  5883     0CA3  0020               	movlb	0	; select bank0
  5884     0CA4  00E7               	movwf	??_efgtoa
  5885     0CA5  0021               	movlb	1	; select bank1
  5886     0CA6  082E               	movf	(efgtoa@m+1)^(0+128),w
  5887     0CA7  3A80               	xorlw	128
  5888     0CA8  0020               	movlb	0	; select bank0
  5889     0CA9  0267               	subwf	??_efgtoa,w
  5890     0CAA  1D03               	skipz
  5891     0CAB  2CAF               	goto	u5365
  5892     0CAC  0021               	movlb	1	; select bank1
  5893     0CAD  082D               	movf	efgtoa@m^(0+128),w
  5894     0CAE  0240               	subwf	efgtoa@i^(0+128),w
  5895     0CAF                     u5365:
  5896     0CAF  1C03               	skipc
  5897     0CB0  2CB2               	goto	u5361
  5898     0CB1  2CB3               	goto	u5360
  5899     0CB2                     u5361:
  5900     0CB2  2BCA               	goto	l4397
  5901     0CB3                     u5360:
  5902     0CB3                     l4403:
  5903                           
  5904                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  5905     0CB3  3040               	movlw	64
  5906     0CB4  0020               	movlb	0	; select bank0
  5907     0CB5  00AC               	movwf	___flmul@b+3
  5908     0CB6  30A0               	movlw	160
  5909     0CB7  00AB               	movwf	___flmul@b+2
  5910     0CB8  3000               	movlw	0
  5911     0CB9  00AA               	movwf	___flmul@b+1
  5912     0CBA  3000               	movlw	0
  5913     0CBB  00A9               	movwf	___flmul@b
  5914     0CBC  0021               	movlb	1	; select bank1
  5915     0CBD  084C               	movf	(efgtoa@u+3)^(0+128),w
  5916     0CBE  0020               	movlb	0	; select bank0
  5917     0CBF  00B0               	movwf	___flmul@a+3
  5918     0CC0  0021               	movlb	1	; select bank1
  5919     0CC1  084B               	movf	(efgtoa@u+2)^(0+128),w
  5920     0CC2  0020               	movlb	0	; select bank0
  5921     0CC3  00AF               	movwf	___flmul@a+2
  5922     0CC4  0021               	movlb	1	; select bank1
  5923     0CC5  084A               	movf	(efgtoa@u+1)^(0+128),w
  5924     0CC6  0020               	movlb	0	; select bank0
  5925     0CC7  00AE               	movwf	___flmul@a+1
  5926     0CC8  0021               	movlb	1	; select bank1
  5927     0CC9  0849               	movf	efgtoa@u^(0+128),w
  5928     0CCA  0020               	movlb	0	; select bank0
  5929     0CCB  00AD               	movwf	___flmul@a
  5930     0CCC  3184  24F5  3188   	fcall	___flmul
  5931     0CCF  0020               	movlb	0	; select bank0
  5932     0CD0  082C               	movf	?___flmul+3,w
  5933     0CD1  0021               	movlb	1	; select bank1
  5934     0CD2  00BF               	movwf	(efgtoa@l+3)^(0+128)
  5935     0CD3  0020               	movlb	0	; select bank0
  5936     0CD4  082B               	movf	?___flmul+2,w
  5937     0CD5  0021               	movlb	1	; select bank1
  5938     0CD6  00BE               	movwf	(efgtoa@l+2)^(0+128)
  5939     0CD7  0020               	movlb	0	; select bank0
  5940     0CD8  082A               	movf	?___flmul+1,w
  5941     0CD9  0021               	movlb	1	; select bank1
  5942     0CDA  00BD               	movwf	(efgtoa@l+1)^(0+128)
  5943     0CDB  0020               	movlb	0	; select bank0
  5944     0CDC  0829               	movf	?___flmul,w
  5945     0CDD  0021               	movlb	1	; select bank1
  5946     0CDE  00BC               	movwf	efgtoa@l^(0+128)
  5947                           
  5948                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  5949     0CDF  083B               	movf	(efgtoa@h+3)^(0+128),w
  5950     0CE0  0020               	movlb	0	; select bank0
  5951     0CE1  00C6               	movwf	___flge@ff1+3
  5952     0CE2  0021               	movlb	1	; select bank1
  5953     0CE3  083A               	movf	(efgtoa@h+2)^(0+128),w
  5954     0CE4  0020               	movlb	0	; select bank0
  5955     0CE5  00C5               	movwf	___flge@ff1+2
  5956     0CE6  0021               	movlb	1	; select bank1
  5957     0CE7  0839               	movf	(efgtoa@h+1)^(0+128),w
  5958     0CE8  0020               	movlb	0	; select bank0
  5959     0CE9  00C4               	movwf	___flge@ff1+1
  5960     0CEA  0021               	movlb	1	; select bank1
  5961     0CEB  0838               	movf	efgtoa@h^(0+128),w
  5962     0CEC  0020               	movlb	0	; select bank0
  5963     0CED  00C3               	movwf	___flge@ff1
  5964     0CEE  0021               	movlb	1	; select bank1
  5965     0CEF  083F               	movf	(efgtoa@l+3)^(0+128),w
  5966     0CF0  0020               	movlb	0	; select bank0
  5967     0CF1  00CA               	movwf	___flge@ff2+3
  5968     0CF2  0021               	movlb	1	; select bank1
  5969     0CF3  083E               	movf	(efgtoa@l+2)^(0+128),w
  5970     0CF4  0020               	movlb	0	; select bank0
  5971     0CF5  00C9               	movwf	___flge@ff2+2
  5972     0CF6  0021               	movlb	1	; select bank1
  5973     0CF7  083D               	movf	(efgtoa@l+1)^(0+128),w
  5974     0CF8  0020               	movlb	0	; select bank0
  5975     0CF9  00C8               	movwf	___flge@ff2+1
  5976     0CFA  0021               	movlb	1	; select bank1
  5977     0CFB  083C               	movf	efgtoa@l^(0+128),w
  5978     0CFC  0020               	movlb	0	; select bank0
  5979     0CFD  00C7               	movwf	___flge@ff2
  5980     0CFE  3190  2003  3188   	fcall	___flge
  5981     0D01  1803               	btfsc	3,0
  5982     0D02  2D04               	goto	u5371
  5983     0D03  2D05               	goto	u5370
  5984     0D04                     u5371:
  5985     0D04  2D0F               	goto	l4407
  5986     0D05                     u5370:
  5987     0D05                     l4405:
  5988                           
  5989                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  5990     0D05  3000               	movlw	0
  5991     0D06  0021               	movlb	1	; select bank1
  5992     0D07  00BF               	movwf	(efgtoa@l+3)^(0+128)
  5993     0D08  3000               	movlw	0
  5994     0D09  00BE               	movwf	(efgtoa@l+2)^(0+128)
  5995     0D0A  3000               	movlw	0
  5996     0D0B  00BD               	movwf	(efgtoa@l+1)^(0+128)
  5997     0D0C  3000               	movlw	0
  5998     0D0D  00BC               	movwf	efgtoa@l^(0+128)
  5999                           
  6000                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  6001     0D0E  2D43               	goto	l4413
  6002     0D0F                     l4407:
  6003                           
  6004                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  6005     0D0F  0021               	movlb	1	; select bank1
  6006     0D10  083B               	movf	(efgtoa@h+3)^(0+128),w
  6007     0D11  0020               	movlb	0	; select bank0
  6008     0D12  00A3               	movwf	___fleq@ff1+3
  6009     0D13  0021               	movlb	1	; select bank1
  6010     0D14  083A               	movf	(efgtoa@h+2)^(0+128),w
  6011     0D15  0020               	movlb	0	; select bank0
  6012     0D16  00A2               	movwf	___fleq@ff1+2
  6013     0D17  0021               	movlb	1	; select bank1
  6014     0D18  0839               	movf	(efgtoa@h+1)^(0+128),w
  6015     0D19  0020               	movlb	0	; select bank0
  6016     0D1A  00A1               	movwf	___fleq@ff1+1
  6017     0D1B  0021               	movlb	1	; select bank1
  6018     0D1C  0838               	movf	efgtoa@h^(0+128),w
  6019     0D1D  0020               	movlb	0	; select bank0
  6020     0D1E  00A0               	movwf	___fleq@ff1
  6021     0D1F  0021               	movlb	1	; select bank1
  6022     0D20  083F               	movf	(efgtoa@l+3)^(0+128),w
  6023     0D21  0020               	movlb	0	; select bank0
  6024     0D22  00A7               	movwf	___fleq@ff2+3
  6025     0D23  0021               	movlb	1	; select bank1
  6026     0D24  083E               	movf	(efgtoa@l+2)^(0+128),w
  6027     0D25  0020               	movlb	0	; select bank0
  6028     0D26  00A6               	movwf	___fleq@ff2+2
  6029     0D27  0021               	movlb	1	; select bank1
  6030     0D28  083D               	movf	(efgtoa@l+1)^(0+128),w
  6031     0D29  0020               	movlb	0	; select bank0
  6032     0D2A  00A5               	movwf	___fleq@ff2+1
  6033     0D2B  0021               	movlb	1	; select bank1
  6034     0D2C  083C               	movf	efgtoa@l^(0+128),w
  6035     0D2D  0020               	movlb	0	; select bank0
  6036     0D2E  00A4               	movwf	___fleq@ff2
  6037     0D2F  319C  2413  3188   	fcall	___fleq
  6038     0D32  1C03               	btfss	3,0
  6039     0D33  2D35               	goto	u5381
  6040     0D34  2D36               	goto	u5380
  6041     0D35                     u5381:
  6042     0D35  2D43               	goto	l4413
  6043     0D36                     u5380:
  6044     0D36                     l4409:
  6045     0D36  0021               	movlb	1	; select bank1
  6046     0D37  182B               	btfsc	efgtoa@d^(0+128),0
  6047     0D38  2D3A               	goto	u5391
  6048     0D39  2D3B               	goto	u5390
  6049     0D3A                     u5391:
  6050     0D3A  2D43               	goto	l4413
  6051     0D3B                     u5390:
  6052     0D3B                     l4411:
  6053                           
  6054                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  6055     0D3B  3000               	movlw	0
  6056     0D3C  00BF               	movwf	(efgtoa@l+3)^(0+128)
  6057     0D3D  3000               	movlw	0
  6058     0D3E  00BE               	movwf	(efgtoa@l+2)^(0+128)
  6059     0D3F  3000               	movlw	0
  6060     0D40  00BD               	movwf	(efgtoa@l+1)^(0+128)
  6061     0D41  3000               	movlw	0
  6062     0D42  00BC               	movwf	efgtoa@l^(0+128)
  6063     0D43                     l4413:
  6064                           
  6065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  6066     0D43  0021               	movlb	1	; select bank1
  6067     0D44  083F               	movf	(efgtoa@l+3)^(0+128),w
  6068     0D45  0020               	movlb	0	; select bank0
  6069     0D46  00A3               	movwf	___fladd@b+3
  6070     0D47  0021               	movlb	1	; select bank1
  6071     0D48  083E               	movf	(efgtoa@l+2)^(0+128),w
  6072     0D49  0020               	movlb	0	; select bank0
  6073     0D4A  00A2               	movwf	___fladd@b+2
  6074     0D4B  0021               	movlb	1	; select bank1
  6075     0D4C  083D               	movf	(efgtoa@l+1)^(0+128),w
  6076     0D4D  0020               	movlb	0	; select bank0
  6077     0D4E  00A1               	movwf	___fladd@b+1
  6078     0D4F  0021               	movlb	1	; select bank1
  6079     0D50  083C               	movf	efgtoa@l^(0+128),w
  6080     0D51  0020               	movlb	0	; select bank0
  6081     0D52  00A0               	movwf	___fladd@b
  6082     0D53  0021               	movlb	1	; select bank1
  6083     0D54  0846               	movf	(efgtoa@g+3)^(0+128),w
  6084     0D55  0020               	movlb	0	; select bank0
  6085     0D56  00A7               	movwf	___fladd@a+3
  6086     0D57  0021               	movlb	1	; select bank1
  6087     0D58  0845               	movf	(efgtoa@g+2)^(0+128),w
  6088     0D59  0020               	movlb	0	; select bank0
  6089     0D5A  00A6               	movwf	___fladd@a+2
  6090     0D5B  0021               	movlb	1	; select bank1
  6091     0D5C  0844               	movf	(efgtoa@g+1)^(0+128),w
  6092     0D5D  0020               	movlb	0	; select bank0
  6093     0D5E  00A5               	movwf	___fladd@a+1
  6094     0D5F  0021               	movlb	1	; select bank1
  6095     0D60  0843               	movf	efgtoa@g^(0+128),w
  6096     0D61  0020               	movlb	0	; select bank0
  6097     0D62  00A4               	movwf	___fladd@a
  6098     0D63  3195  25F8  3188   	fcall	___fladd
  6099     0D66  0020               	movlb	0	; select bank0
  6100     0D67  0823               	movf	?___fladd+3,w
  6101     0D68  0021               	movlb	1	; select bank1
  6102     0D69  00BB               	movwf	(efgtoa@h+3)^(0+128)
  6103     0D6A  0020               	movlb	0	; select bank0
  6104     0D6B  0822               	movf	?___fladd+2,w
  6105     0D6C  0021               	movlb	1	; select bank1
  6106     0D6D  00BA               	movwf	(efgtoa@h+2)^(0+128)
  6107     0D6E  0020               	movlb	0	; select bank0
  6108     0D6F  0821               	movf	?___fladd+1,w
  6109     0D70  0021               	movlb	1	; select bank1
  6110     0D71  00B9               	movwf	(efgtoa@h+1)^(0+128)
  6111     0D72  0020               	movlb	0	; select bank0
  6112     0D73  0820               	movf	?___fladd,w
  6113     0D74  0021               	movlb	1	; select bank1
  6114     0D75  00B8               	movwf	efgtoa@h^(0+128)
  6115     0D76                     l4415:
  6116                           
  6117                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  6118     0D76  083B               	movf	(efgtoa@h+3)^(0+128),w
  6119     0D77  0020               	movlb	0	; select bank0
  6120     0D78  00C6               	movwf	___flge@ff1+3
  6121     0D79  0021               	movlb	1	; select bank1
  6122     0D7A  083A               	movf	(efgtoa@h+2)^(0+128),w
  6123     0D7B  0020               	movlb	0	; select bank0
  6124     0D7C  00C5               	movwf	___flge@ff1+2
  6125     0D7D  0021               	movlb	1	; select bank1
  6126     0D7E  0839               	movf	(efgtoa@h+1)^(0+128),w
  6127     0D7F  0020               	movlb	0	; select bank0
  6128     0D80  00C4               	movwf	___flge@ff1+1
  6129     0D81  0021               	movlb	1	; select bank1
  6130     0D82  0838               	movf	efgtoa@h^(0+128),w
  6131     0D83  0020               	movlb	0	; select bank0
  6132     0D84  00C3               	movwf	___flge@ff1
  6133     0D85  3041               	movlw	65
  6134     0D86  00AC               	movwf	___flmul@b+3
  6135     0D87  3020               	movlw	32
  6136     0D88  00AB               	movwf	___flmul@b+2
  6137     0D89  3000               	movlw	0
  6138     0D8A  00AA               	movwf	___flmul@b+1
  6139     0D8B  3000               	movlw	0
  6140     0D8C  00A9               	movwf	___flmul@b
  6141     0D8D  0021               	movlb	1	; select bank1
  6142     0D8E  0837               	movf	(efgtoa@ou+3)^(0+128),w
  6143     0D8F  0020               	movlb	0	; select bank0
  6144     0D90  00B0               	movwf	___flmul@a+3
  6145     0D91  0021               	movlb	1	; select bank1
  6146     0D92  0836               	movf	(efgtoa@ou+2)^(0+128),w
  6147     0D93  0020               	movlb	0	; select bank0
  6148     0D94  00AF               	movwf	___flmul@a+2
  6149     0D95  0021               	movlb	1	; select bank1
  6150     0D96  0835               	movf	(efgtoa@ou+1)^(0+128),w
  6151     0D97  0020               	movlb	0	; select bank0
  6152     0D98  00AE               	movwf	___flmul@a+1
  6153     0D99  0021               	movlb	1	; select bank1
  6154     0D9A  0834               	movf	efgtoa@ou^(0+128),w
  6155     0D9B  0020               	movlb	0	; select bank0
  6156     0D9C  00AD               	movwf	___flmul@a
  6157     0D9D  3184  24F5  3188   	fcall	___flmul
  6158     0DA0  0020               	movlb	0	; select bank0
  6159     0DA1  082C               	movf	?___flmul+3,w
  6160     0DA2  00CA               	movwf	___flge@ff2+3
  6161     0DA3  082B               	movf	?___flmul+2,w
  6162     0DA4  00C9               	movwf	___flge@ff2+2
  6163     0DA5  082A               	movf	?___flmul+1,w
  6164     0DA6  00C8               	movwf	___flge@ff2+1
  6165     0DA7  0829               	movf	?___flmul,w
  6166     0DA8  00C7               	movwf	___flge@ff2
  6167     0DA9  3190  2003  3188   	fcall	___flge
  6168     0DAC  1C03               	btfss	3,0
  6169     0DAD  2DAF               	goto	u5401
  6170     0DAE  2DB0               	goto	u5400
  6171     0DAF                     u5401:
  6172     0DAF  2DEB               	goto	l1120
  6173     0DB0                     u5400:
  6174     0DB0                     l4417:
  6175                           
  6176                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  6177     0DB0  3001               	movlw	1
  6178     0DB1  0021               	movlb	1	; select bank1
  6179     0DB2  07B0               	addwf	efgtoa@e^(0+128),f
  6180     0DB3  3000               	movlw	0
  6181     0DB4  3DB1               	addwfc	(efgtoa@e+1)^(0+128),f
  6182     0DB5                     l4419:
  6183                           
  6184                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  6185     0DB5  3041               	movlw	65
  6186     0DB6  0020               	movlb	0	; select bank0
  6187     0DB7  00AC               	movwf	___flmul@b+3
  6188     0DB8  3020               	movlw	32
  6189     0DB9  00AB               	movwf	___flmul@b+2
  6190     0DBA  3000               	movlw	0
  6191     0DBB  00AA               	movwf	___flmul@b+1
  6192     0DBC  3000               	movlw	0
  6193     0DBD  00A9               	movwf	___flmul@b
  6194     0DBE  0021               	movlb	1	; select bank1
  6195     0DBF  0837               	movf	(efgtoa@ou+3)^(0+128),w
  6196     0DC0  0020               	movlb	0	; select bank0
  6197     0DC1  00B0               	movwf	___flmul@a+3
  6198     0DC2  0021               	movlb	1	; select bank1
  6199     0DC3  0836               	movf	(efgtoa@ou+2)^(0+128),w
  6200     0DC4  0020               	movlb	0	; select bank0
  6201     0DC5  00AF               	movwf	___flmul@a+2
  6202     0DC6  0021               	movlb	1	; select bank1
  6203     0DC7  0835               	movf	(efgtoa@ou+1)^(0+128),w
  6204     0DC8  0020               	movlb	0	; select bank0
  6205     0DC9  00AE               	movwf	___flmul@a+1
  6206     0DCA  0021               	movlb	1	; select bank1
  6207     0DCB  0834               	movf	efgtoa@ou^(0+128),w
  6208     0DCC  0020               	movlb	0	; select bank0
  6209     0DCD  00AD               	movwf	___flmul@a
  6210     0DCE  3184  24F5  3188   	fcall	___flmul
  6211     0DD1  0020               	movlb	0	; select bank0
  6212     0DD2  082C               	movf	?___flmul+3,w
  6213     0DD3  0021               	movlb	1	; select bank1
  6214     0DD4  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  6215     0DD5  0020               	movlb	0	; select bank0
  6216     0DD6  082B               	movf	?___flmul+2,w
  6217     0DD7  0021               	movlb	1	; select bank1
  6218     0DD8  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  6219     0DD9  0020               	movlb	0	; select bank0
  6220     0DDA  082A               	movf	?___flmul+1,w
  6221     0DDB  0021               	movlb	1	; select bank1
  6222     0DDC  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  6223     0DDD  0020               	movlb	0	; select bank0
  6224     0DDE  0829               	movf	?___flmul,w
  6225     0DDF  0021               	movlb	1	; select bank1
  6226     0DE0  00B4               	movwf	efgtoa@ou^(0+128)
  6227     0DE1                     l4421:
  6228                           
  6229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  6230     0DE1  3066               	movlw	102
  6231     0DE2  062A               	xorwf	efgtoa@nmode^(0+128),w
  6232     0DE3  1D03               	btfss	3,2
  6233     0DE4  2DE6               	goto	u5411
  6234     0DE5  2DE7               	goto	u5410
  6235     0DE6                     u5411:
  6236     0DE6  2DEB               	goto	l1120
  6237     0DE7                     u5410:
  6238     0DE7                     l4423:
  6239                           
  6240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  6241     0DE7  3001               	movlw	1
  6242     0DE8  07AD               	addwf	efgtoa@m^(0+128),f
  6243     0DE9  3000               	movlw	0
  6244     0DEA  3DAE               	addwfc	(efgtoa@m+1)^(0+128),f
  6245     0DEB                     l1120:	
  6246                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 767:  }
  6247                           
  6248                           
  6249                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  6250     0DEB  0021               	movlb	1	; select bank1
  6251     0DEC  0837               	movf	(efgtoa@ou+3)^(0+128),w
  6252     0DED  00CC               	movwf	(efgtoa@u+3)^(0+128)
  6253     0DEE  0836               	movf	(efgtoa@ou+2)^(0+128),w
  6254     0DEF  00CB               	movwf	(efgtoa@u+2)^(0+128)
  6255     0DF0  0835               	movf	(efgtoa@ou+1)^(0+128),w
  6256     0DF1  00CA               	movwf	(efgtoa@u+1)^(0+128)
  6257     0DF2  0834               	movf	efgtoa@ou^(0+128),w
  6258     0DF3  00C9               	movwf	efgtoa@u^(0+128)
  6259                           
  6260                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  6261     0DF4  0831               	movf	(efgtoa@e+1)^(0+128),w
  6262     0DF5  00A1               	movwf	(efgtoa@ne+1)^(0+128)
  6263     0DF6  0830               	movf	efgtoa@e^(0+128),w
  6264     0DF7  00A0               	movwf	efgtoa@ne^(0+128)
  6265     0DF8                     l4425:
  6266                           
  6267                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  6268     0DF8  01A8               	clrf	efgtoa@pp^(0+128)
  6269     0DF9                     l4427:
  6270                           
  6271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  6272     0DF9  01A4               	clrf	efgtoa@t^(0+128)
  6273     0DFA  01A5               	clrf	(efgtoa@t+1)^(0+128)
  6274     0DFB                     l4429:
  6275                           
  6276                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  6277     0DFB  01C0               	clrf	efgtoa@i^(0+128)
  6278     0DFC  01C1               	clrf	(efgtoa@i+1)^(0+128)
  6279                           
  6280                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6281     0DFD  2F44               	goto	l4473
  6282     0DFE                     l4431:
  6283                           
  6284                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  6285     0DFE  0021               	movlb	1	; select bank1
  6286     0DFF  084C               	movf	(efgtoa@u+3)^(0+128),w
  6287     0E00  0020               	movlb	0	; select bank0
  6288     0E01  00B7               	movwf	___fldiv@a+3
  6289     0E02  0021               	movlb	1	; select bank1
  6290     0E03  084B               	movf	(efgtoa@u+2)^(0+128),w
  6291     0E04  0020               	movlb	0	; select bank0
  6292     0E05  00B6               	movwf	___fldiv@a+2
  6293     0E06  0021               	movlb	1	; select bank1
  6294     0E07  084A               	movf	(efgtoa@u+1)^(0+128),w
  6295     0E08  0020               	movlb	0	; select bank0
  6296     0E09  00B5               	movwf	___fldiv@a+1
  6297     0E0A  0021               	movlb	1	; select bank1
  6298     0E0B  0849               	movf	efgtoa@u^(0+128),w
  6299     0E0C  0020               	movlb	0	; select bank0
  6300     0E0D  00B4               	movwf	___fldiv@a
  6301     0E0E  0021               	movlb	1	; select bank1
  6302     0E0F  083B               	movf	(efgtoa@h+3)^(0+128),w
  6303     0E10  0020               	movlb	0	; select bank0
  6304     0E11  00BB               	movwf	___fldiv@b+3
  6305     0E12  0021               	movlb	1	; select bank1
  6306     0E13  083A               	movf	(efgtoa@h+2)^(0+128),w
  6307     0E14  0020               	movlb	0	; select bank0
  6308     0E15  00BA               	movwf	___fldiv@b+2
  6309     0E16  0021               	movlb	1	; select bank1
  6310     0E17  0839               	movf	(efgtoa@h+1)^(0+128),w
  6311     0E18  0020               	movlb	0	; select bank0
  6312     0E19  00B9               	movwf	___fldiv@b+1
  6313     0E1A  0021               	movlb	1	; select bank1
  6314     0E1B  0838               	movf	efgtoa@h^(0+128),w
  6315     0E1C  0020               	movlb	0	; select bank0
  6316     0E1D  00B8               	movwf	___fldiv@b
  6317     0E1E  3194  244E  3188   	fcall	___fldiv
  6318     0E21  0020               	movlb	0	; select bank0
  6319     0E22  0837               	movf	?___fldiv+3,w
  6320     0E23  00D1               	movwf	floorf@x+3
  6321     0E24  0836               	movf	?___fldiv+2,w
  6322     0E25  00D0               	movwf	floorf@x+2
  6323     0E26  0835               	movf	?___fldiv+1,w
  6324     0E27  00CF               	movwf	floorf@x+1
  6325     0E28  0834               	movf	?___fldiv,w
  6326     0E29  00CE               	movwf	floorf@x
  6327     0E2A  3188  2002  3188   	fcall	_floorf
  6328     0E2D  0020               	movlb	0	; select bank0
  6329     0E2E  0851               	movf	?_floorf+3,w
  6330     0E2F  0021               	movlb	1	; select bank1
  6331     0E30  00BF               	movwf	(efgtoa@l+3)^(0+128)
  6332     0E31  0020               	movlb	0	; select bank0
  6333     0E32  0850               	movf	?_floorf+2,w
  6334     0E33  0021               	movlb	1	; select bank1
  6335     0E34  00BE               	movwf	(efgtoa@l+2)^(0+128)
  6336     0E35  0020               	movlb	0	; select bank0
  6337     0E36  084F               	movf	?_floorf+1,w
  6338     0E37  0021               	movlb	1	; select bank1
  6339     0E38  00BD               	movwf	(efgtoa@l+1)^(0+128)
  6340     0E39  0020               	movlb	0	; select bank0
  6341     0E3A  084E               	movf	?_floorf,w
  6342     0E3B  0021               	movlb	1	; select bank1
  6343     0E3C  00BC               	movwf	efgtoa@l^(0+128)
  6344                           
  6345                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  6346     0E3D  083F               	movf	(efgtoa@l+3)^(0+128),w
  6347     0E3E  0020               	movlb	0	; select bank0
  6348     0E3F  00A3               	movwf	___fltol@f1+3
  6349     0E40  0021               	movlb	1	; select bank1
  6350     0E41  083E               	movf	(efgtoa@l+2)^(0+128),w
  6351     0E42  0020               	movlb	0	; select bank0
  6352     0E43  00A2               	movwf	___fltol@f1+2
  6353     0E44  0021               	movlb	1	; select bank1
  6354     0E45  083D               	movf	(efgtoa@l+1)^(0+128),w
  6355     0E46  0020               	movlb	0	; select bank0
  6356     0E47  00A1               	movwf	___fltol@f1+1
  6357     0E48  0021               	movlb	1	; select bank1
  6358     0E49  083C               	movf	efgtoa@l^(0+128),w
  6359     0E4A  0020               	movlb	0	; select bank0
  6360     0E4B  00A0               	movwf	___fltol@f1
  6361     0E4C  319E  2621  3188   	fcall	___fltol
  6362     0E4F  0020               	movlb	0	; select bank0
  6363     0E50  0821               	movf	?___fltol+1,w
  6364     0E51  3A80               	xorlw	128
  6365     0E52  00E7               	movwf	??_efgtoa
  6366     0E53  3080               	movlw	128
  6367     0E54  0267               	subwf	??_efgtoa,w
  6368     0E55  1D03               	skipz
  6369     0E56  2E59               	goto	u5425
  6370     0E57  300A               	movlw	10
  6371     0E58  0220               	subwf	?___fltol,w
  6372     0E59                     u5425:
  6373     0E59  1803               	skipnc
  6374     0E5A  2E5C               	goto	u5421
  6375     0E5B  2E5D               	goto	u5420
  6376     0E5C                     u5421:
  6377     0E5C  2E79               	goto	l4435
  6378     0E5D                     u5420:
  6379     0E5D                     l4433:
  6380     0E5D  0021               	movlb	1	; select bank1
  6381     0E5E  083F               	movf	(efgtoa@l+3)^(0+128),w
  6382     0E5F  0020               	movlb	0	; select bank0
  6383     0E60  00A3               	movwf	___fltol@f1+3
  6384     0E61  0021               	movlb	1	; select bank1
  6385     0E62  083E               	movf	(efgtoa@l+2)^(0+128),w
  6386     0E63  0020               	movlb	0	; select bank0
  6387     0E64  00A2               	movwf	___fltol@f1+2
  6388     0E65  0021               	movlb	1	; select bank1
  6389     0E66  083D               	movf	(efgtoa@l+1)^(0+128),w
  6390     0E67  0020               	movlb	0	; select bank0
  6391     0E68  00A1               	movwf	___fltol@f1+1
  6392     0E69  0021               	movlb	1	; select bank1
  6393     0E6A  083C               	movf	efgtoa@l^(0+128),w
  6394     0E6B  0020               	movlb	0	; select bank0
  6395     0E6C  00A0               	movwf	___fltol@f1
  6396     0E6D  319E  2621  3188   	fcall	___fltol
  6397     0E70  0020               	movlb	0	; select bank0
  6398     0E71  0821               	movf	?___fltol+1,w
  6399     0E72  0021               	movlb	1	; select bank1
  6400     0E73  00AC               	movwf	(efgtoa@d+1)^(0+128)
  6401     0E74  0020               	movlb	0	; select bank0
  6402     0E75  0820               	movf	?___fltol,w
  6403     0E76  0021               	movlb	1	; select bank1
  6404     0E77  00AB               	movwf	efgtoa@d^(0+128)
  6405     0E78  2E7E               	goto	l4437
  6406     0E79                     l4435:
  6407     0E79  3009               	movlw	9
  6408     0E7A  0021               	movlb	1	; select bank1
  6409     0E7B  00AB               	movwf	efgtoa@d^(0+128)
  6410     0E7C  3000               	movlw	0
  6411     0E7D  00AC               	movwf	(efgtoa@d^(0+128)+1)
  6412     0E7E                     l4437:
  6413                           
  6414                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  6415     0E7E  0828               	movf	efgtoa@pp^(0+128),w
  6416     0E7F  1D03               	btfss	3,2
  6417     0E80  2E82               	goto	u5431
  6418     0E81  2E83               	goto	u5430
  6419     0E82                     u5431:
  6420     0E82  2EAC               	goto	l4457
  6421     0E83                     u5430:
  6422     0E83                     l4439:
  6423     0E83  1FA1               	btfss	(efgtoa@ne+1)^(0+128),7
  6424     0E84  2E86               	goto	u5441
  6425     0E85  2E87               	goto	u5440
  6426     0E86                     u5441:
  6427     0E86  2EAC               	goto	l4457
  6428     0E87                     u5440:
  6429     0E87                     l4441:
  6430                           
  6431                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  6432     0E87  0847               	movf	efgtoa@n^(0+128),w
  6433     0E88  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6434     0E89  0086               	movwf	6
  6435     0E8A  3002               	movlw	2	; select bank4/5
  6436     0E8B  0087               	movwf	7
  6437     0E8C  302E               	movlw	46
  6438     0E8D  0081               	movwf	1
  6439     0E8E                     l4443:
  6440     0E8E  3001               	movlw	1
  6441     0E8F  07C7               	addwf	efgtoa@n^(0+128),f
  6442     0E90  3000               	movlw	0
  6443     0E91  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6444     0E92                     l4445:
  6445                           
  6446                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  6447     0E92  30FF               	movlw	255
  6448     0E93  07B2               	addwf	efgtoa@w^(0+128),f
  6449     0E94  30FF               	movlw	255
  6450     0E95  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  6451     0E96                     l4447:
  6452                           
  6453                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  6454     0E96  01A8               	clrf	efgtoa@pp^(0+128)
  6455     0E97  0AA8               	incf	efgtoa@pp^(0+128),f
  6456     0E98  2EAC               	goto	l4457
  6457     0E99                     l4449:
  6458                           
  6459                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  6460     0E99  0847               	movf	efgtoa@n^(0+128),w
  6461     0E9A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6462     0E9B  0086               	movwf	6
  6463     0E9C  3002               	movlw	2	; select bank4/5
  6464     0E9D  0087               	movwf	7
  6465     0E9E  3030               	movlw	48
  6466     0E9F  0081               	movwf	1
  6467     0EA0                     l4451:
  6468     0EA0  3001               	movlw	1
  6469     0EA1  07C7               	addwf	efgtoa@n^(0+128),f
  6470     0EA2  3000               	movlw	0
  6471     0EA3  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6472     0EA4                     l4453:
  6473                           
  6474                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  6475     0EA4  30FF               	movlw	255
  6476     0EA5  07B2               	addwf	efgtoa@w^(0+128),f
  6477     0EA6  30FF               	movlw	255
  6478     0EA7  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  6479     0EA8                     l4455:
  6480                           
  6481                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  6482     0EA8  30FF               	movlw	255
  6483     0EA9  07A4               	addwf	efgtoa@t^(0+128),f
  6484     0EAA  30FF               	movlw	255
  6485     0EAB  3DA5               	addwfc	(efgtoa@t+1)^(0+128),f
  6486     0EAC                     l4457:
  6487                           
  6488                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  6489     0EAC  0824               	movf	efgtoa@t^(0+128),w
  6490     0EAD  0425               	iorwf	(efgtoa@t+1)^(0+128),w
  6491     0EAE  1D03               	btfss	3,2
  6492     0EAF  2EB1               	goto	u5451
  6493     0EB0  2EB2               	goto	u5450
  6494     0EB1                     u5451:
  6495     0EB1  2E99               	goto	l4449
  6496     0EB2                     u5450:
  6497     0EB2                     l4459:
  6498                           
  6499                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6500     0EB2  0847               	movf	efgtoa@n^(0+128),w
  6501     0EB3  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6502     0EB4  0086               	movwf	6
  6503     0EB5  3002               	movlw	2	; select bank4/5
  6504     0EB6  0087               	movwf	7
  6505     0EB7  082B               	movf	efgtoa@d^(0+128),w
  6506     0EB8  3E30               	addlw	48
  6507     0EB9  0081               	movwf	1
  6508     0EBA                     l4461:
  6509     0EBA  3001               	movlw	1
  6510     0EBB  07C7               	addwf	efgtoa@n^(0+128),f
  6511     0EBC  3000               	movlw	0
  6512     0EBD  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6513     0EBE                     l4463:
  6514                           
  6515                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  6516     0EBE  30FF               	movlw	255
  6517     0EBF  07B2               	addwf	efgtoa@w^(0+128),f
  6518     0EC0  30FF               	movlw	255
  6519     0EC1  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  6520     0EC2                     l4465:
  6521                           
  6522                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  6523     0EC2  084C               	movf	(efgtoa@u+3)^(0+128),w
  6524     0EC3  0020               	movlb	0	; select bank0
  6525     0EC4  00B0               	movwf	___flmul@a+3
  6526     0EC5  0021               	movlb	1	; select bank1
  6527     0EC6  084B               	movf	(efgtoa@u+2)^(0+128),w
  6528     0EC7  0020               	movlb	0	; select bank0
  6529     0EC8  00AF               	movwf	___flmul@a+2
  6530     0EC9  0021               	movlb	1	; select bank1
  6531     0ECA  084A               	movf	(efgtoa@u+1)^(0+128),w
  6532     0ECB  0020               	movlb	0	; select bank0
  6533     0ECC  00AE               	movwf	___flmul@a+1
  6534     0ECD  0021               	movlb	1	; select bank1
  6535     0ECE  0849               	movf	efgtoa@u^(0+128),w
  6536     0ECF  0020               	movlb	0	; select bank0
  6537     0ED0  00AD               	movwf	___flmul@a
  6538     0ED1  0021               	movlb	1	; select bank1
  6539     0ED2  083F               	movf	(efgtoa@l+3)^(0+128),w
  6540     0ED3  0020               	movlb	0	; select bank0
  6541     0ED4  00AC               	movwf	___flmul@b+3
  6542     0ED5  0021               	movlb	1	; select bank1
  6543     0ED6  083E               	movf	(efgtoa@l+2)^(0+128),w
  6544     0ED7  0020               	movlb	0	; select bank0
  6545     0ED8  00AB               	movwf	___flmul@b+2
  6546     0ED9  0021               	movlb	1	; select bank1
  6547     0EDA  083D               	movf	(efgtoa@l+1)^(0+128),w
  6548     0EDB  0020               	movlb	0	; select bank0
  6549     0EDC  00AA               	movwf	___flmul@b+1
  6550     0EDD  0021               	movlb	1	; select bank1
  6551     0EDE  083C               	movf	efgtoa@l^(0+128),w
  6552     0EDF  0020               	movlb	0	; select bank0
  6553     0EE0  00A9               	movwf	___flmul@b
  6554     0EE1  3184  24F5  3188   	fcall	___flmul
  6555     0EE4  0020               	movlb	0	; select bank0
  6556     0EE5  082C               	movf	?___flmul+3,w
  6557     0EE6  00C6               	movwf	___flsub@a+3
  6558     0EE7  082B               	movf	?___flmul+2,w
  6559     0EE8  00C5               	movwf	___flsub@a+2
  6560     0EE9  082A               	movf	?___flmul+1,w
  6561     0EEA  00C4               	movwf	___flsub@a+1
  6562     0EEB  0829               	movf	?___flmul,w
  6563     0EEC  00C3               	movwf	___flsub@a
  6564     0EED  0021               	movlb	1	; select bank1
  6565     0EEE  083B               	movf	(efgtoa@h+3)^(0+128),w
  6566     0EEF  0020               	movlb	0	; select bank0
  6567     0EF0  00CA               	movwf	___flsub@b+3
  6568     0EF1  0021               	movlb	1	; select bank1
  6569     0EF2  083A               	movf	(efgtoa@h+2)^(0+128),w
  6570     0EF3  0020               	movlb	0	; select bank0
  6571     0EF4  00C9               	movwf	___flsub@b+2
  6572     0EF5  0021               	movlb	1	; select bank1
  6573     0EF6  0839               	movf	(efgtoa@h+1)^(0+128),w
  6574     0EF7  0020               	movlb	0	; select bank0
  6575     0EF8  00C8               	movwf	___flsub@b+1
  6576     0EF9  0021               	movlb	1	; select bank1
  6577     0EFA  0838               	movf	efgtoa@h^(0+128),w
  6578     0EFB  0020               	movlb	0	; select bank0
  6579     0EFC  00C7               	movwf	___flsub@b
  6580     0EFD  319A  2264  3188   	fcall	___flsub
  6581     0F00  0020               	movlb	0	; select bank0
  6582     0F01  0846               	movf	?___flsub+3,w
  6583     0F02  0021               	movlb	1	; select bank1
  6584     0F03  00BB               	movwf	(efgtoa@h+3)^(0+128)
  6585     0F04  0020               	movlb	0	; select bank0
  6586     0F05  0845               	movf	?___flsub+2,w
  6587     0F06  0021               	movlb	1	; select bank1
  6588     0F07  00BA               	movwf	(efgtoa@h+2)^(0+128)
  6589     0F08  0020               	movlb	0	; select bank0
  6590     0F09  0844               	movf	?___flsub+1,w
  6591     0F0A  0021               	movlb	1	; select bank1
  6592     0F0B  00B9               	movwf	(efgtoa@h+1)^(0+128)
  6593     0F0C  0020               	movlb	0	; select bank0
  6594     0F0D  0843               	movf	?___flsub,w
  6595     0F0E  0021               	movlb	1	; select bank1
  6596     0F0F  00B8               	movwf	efgtoa@h^(0+128)
  6597     0F10                     l4467:
  6598                           
  6599                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  6600     0F10  3041               	movlw	65
  6601     0F11  0020               	movlb	0	; select bank0
  6602     0F12  00B7               	movwf	___fldiv@a+3
  6603     0F13  3020               	movlw	32
  6604     0F14  00B6               	movwf	___fldiv@a+2
  6605     0F15  3000               	movlw	0
  6606     0F16  00B5               	movwf	___fldiv@a+1
  6607     0F17  3000               	movlw	0
  6608     0F18  00B4               	movwf	___fldiv@a
  6609     0F19  0021               	movlb	1	; select bank1
  6610     0F1A  084C               	movf	(efgtoa@u+3)^(0+128),w
  6611     0F1B  0020               	movlb	0	; select bank0
  6612     0F1C  00BB               	movwf	___fldiv@b+3
  6613     0F1D  0021               	movlb	1	; select bank1
  6614     0F1E  084B               	movf	(efgtoa@u+2)^(0+128),w
  6615     0F1F  0020               	movlb	0	; select bank0
  6616     0F20  00BA               	movwf	___fldiv@b+2
  6617     0F21  0021               	movlb	1	; select bank1
  6618     0F22  084A               	movf	(efgtoa@u+1)^(0+128),w
  6619     0F23  0020               	movlb	0	; select bank0
  6620     0F24  00B9               	movwf	___fldiv@b+1
  6621     0F25  0021               	movlb	1	; select bank1
  6622     0F26  0849               	movf	efgtoa@u^(0+128),w
  6623     0F27  0020               	movlb	0	; select bank0
  6624     0F28  00B8               	movwf	___fldiv@b
  6625     0F29  3194  244E  3188   	fcall	___fldiv
  6626     0F2C  0020               	movlb	0	; select bank0
  6627     0F2D  0837               	movf	?___fldiv+3,w
  6628     0F2E  0021               	movlb	1	; select bank1
  6629     0F2F  00CC               	movwf	(efgtoa@u+3)^(0+128)
  6630     0F30  0020               	movlb	0	; select bank0
  6631     0F31  0836               	movf	?___fldiv+2,w
  6632     0F32  0021               	movlb	1	; select bank1
  6633     0F33  00CB               	movwf	(efgtoa@u+2)^(0+128)
  6634     0F34  0020               	movlb	0	; select bank0
  6635     0F35  0835               	movf	?___fldiv+1,w
  6636     0F36  0021               	movlb	1	; select bank1
  6637     0F37  00CA               	movwf	(efgtoa@u+1)^(0+128)
  6638     0F38  0020               	movlb	0	; select bank0
  6639     0F39  0834               	movf	?___fldiv,w
  6640     0F3A  0021               	movlb	1	; select bank1
  6641     0F3B  00C9               	movwf	efgtoa@u^(0+128)
  6642     0F3C                     l4469:
  6643                           
  6644                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  6645     0F3C  30FF               	movlw	255
  6646     0F3D  07A0               	addwf	efgtoa@ne^(0+128),f
  6647     0F3E  30FF               	movlw	255
  6648     0F3F  3DA1               	addwfc	(efgtoa@ne+1)^(0+128),f
  6649     0F40                     l4471:
  6650                           
  6651                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  6652     0F40  3001               	movlw	1
  6653     0F41  07C0               	addwf	efgtoa@i^(0+128),f
  6654     0F42  3000               	movlw	0
  6655     0F43  3DC1               	addwfc	(efgtoa@i+1)^(0+128),f
  6656     0F44                     l4473:
  6657                           
  6658                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6659     0F44  0841               	movf	(efgtoa@i+1)^(0+128),w
  6660     0F45  3A80               	xorlw	128
  6661     0F46  0020               	movlb	0	; select bank0
  6662     0F47  00E7               	movwf	??_efgtoa
  6663     0F48  0021               	movlb	1	; select bank1
  6664     0F49  082E               	movf	(efgtoa@m+1)^(0+128),w
  6665     0F4A  3A80               	xorlw	128
  6666     0F4B  0020               	movlb	0	; select bank0
  6667     0F4C  0267               	subwf	??_efgtoa,w
  6668     0F4D  1D03               	skipz
  6669     0F4E  2F52               	goto	u5465
  6670     0F4F  0021               	movlb	1	; select bank1
  6671     0F50  082D               	movf	efgtoa@m^(0+128),w
  6672     0F51  0240               	subwf	efgtoa@i^(0+128),w
  6673     0F52                     u5465:
  6674     0F52  1803               	skipnc
  6675     0F53  2F55               	goto	u5461
  6676     0F54  2F56               	goto	u5460
  6677     0F55                     u5461:
  6678     0F55  2F66               	goto	l4477
  6679     0F56                     u5460:
  6680     0F56                     l4475:
  6681     0F56  0021               	movlb	1	; select bank1
  6682     0F57  0848               	movf	(efgtoa@n+1)^(0+128),w
  6683     0F58  3A80               	xorlw	128
  6684     0F59  0020               	movlb	0	; select bank0
  6685     0F5A  00E7               	movwf	??_efgtoa
  6686     0F5B  3080               	movlw	128
  6687     0F5C  0267               	subwf	??_efgtoa,w
  6688     0F5D  1D03               	skipz
  6689     0F5E  2F62               	goto	u5475
  6690     0F5F  304B               	movlw	75
  6691     0F60  0021               	movlb	1	; select bank1
  6692     0F61  0247               	subwf	efgtoa@n^(0+128),w
  6693     0F62                     u5475:
  6694     0F62  1C03               	skipc
  6695     0F63  2F65               	goto	u5471
  6696     0F64  2F66               	goto	u5470
  6697     0F65                     u5471:
  6698     0F65  2DFE               	goto	l4431
  6699     0F66                     u5470:
  6700     0F66                     l4477:
  6701                           
  6702                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  6703     0F66  304F               	movlw	79
  6704     0F67  0021               	movlb	1	; select bank1
  6705     0F68  00C0               	movwf	efgtoa@i^(0+128)
  6706     0F69  3000               	movlw	0
  6707     0F6A  00C1               	movwf	(efgtoa@i^(0+128)+1)
  6708     0F6B                     l4479:
  6709                           
  6710                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  6711     0F6B  0840               	movf	efgtoa@i^(0+128),w
  6712     0F6C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6713     0F6D  0086               	movwf	6
  6714     0F6E  3002               	movlw	2	; select bank4/5
  6715     0F6F  0087               	movwf	7
  6716     0F70  0181               	clrf	1
  6717     0F71                     l4481:
  6718                           
  6719                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  6720     0F71  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6721     0F72  0020               	movlb	0	; select bank0
  6722     0F73  00A0               	movwf	memcpy@s1
  6723     0F74  0021               	movlb	1	; select bank1
  6724     0F75  0848               	movf	(efgtoa@n+1)^(0+128),w
  6725     0F76  0020               	movlb	0	; select bank0
  6726     0F77  00A2               	movwf	memcpy@n+1
  6727     0F78  0021               	movlb	1	; select bank1
  6728     0F79  0847               	movf	efgtoa@n^(0+128),w
  6729     0F7A  0020               	movlb	0	; select bank0
  6730     0F7B  00A1               	movwf	memcpy@n
  6731     0F7C  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6732     0F7D  00E7               	movwf	??_efgtoa
  6733     0F7E  0021               	movlb	1	; select bank1
  6734     0F7F  0847               	movf	efgtoa@n^(0+128),w
  6735     0F80  0020               	movlb	0	; select bank0
  6736     0F81  0267               	subwf	??_efgtoa,w
  6737     0F82  0021               	movlb	1	; select bank1
  6738     0F83  0740               	addwf	efgtoa@i^(0+128),w
  6739     0F84  319B  2336  3188   	fcall	_memcpy
  6740     0F87                     l4483:
  6741                           
  6742                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  6743     0F87  0021               	movlb	1	; select bank1
  6744     0F88  0847               	movf	efgtoa@n^(0+128),w
  6745     0F89  0240               	subwf	efgtoa@i^(0+128),w
  6746     0F8A  00C7               	movwf	efgtoa@n^(0+128)
  6747     0F8B  0848               	movf	(efgtoa@n+1)^(0+128),w
  6748     0F8C  3B41               	subwfb	(efgtoa@i+1)^(0+128),w
  6749     0F8D  00C8               	movwf	(efgtoa@n+1)^(0+128)
  6750     0F8E                     l4485:
  6751                           
  6752                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  6753     0F8E  0842               	movf	efgtoa@sign^(0+128),w
  6754     0F8F  1D03               	btfss	3,2
  6755     0F90  2F92               	goto	u5481
  6756     0F91  2F94               	goto	u5480
  6757     0F92                     u5481:
  6758     0F92  3001               	movlw	1
  6759     0F93  2F95               	goto	u5490
  6760     0F94                     u5480:
  6761     0F94  3000               	movlw	0
  6762     0F95                     u5490:
  6763     0F95  0020               	movlb	0	; select bank0
  6764     0F96  00E7               	movwf	??_efgtoa
  6765     0F97  01E8               	clrf	??_efgtoa+1
  6766     0F98  0867               	movf	??_efgtoa,w
  6767     0F99  0021               	movlb	1	; select bank1
  6768     0F9A  00C0               	movwf	efgtoa@i^(0+128)
  6769     0F9B  0020               	movlb	0	; select bank0
  6770     0F9C  0868               	movf	??_efgtoa+1,w
  6771     0F9D  0021               	movlb	1	; select bank1
  6772     0F9E  00C1               	movwf	(efgtoa@i+1)^(0+128)
  6773     0F9F                     l4487:
  6774                           
  6775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
  6776     0F9F  1CFC               	btfss	_flags,1
  6777     0FA0  2FA2               	goto	u5501
  6778     0FA1  2FA3               	goto	u5500
  6779     0FA2                     u5501:
  6780     0FA2  2FD9               	goto	l4499
  6781     0FA3                     u5500:
  6782     0FA3  2FB4               	goto	l4495
  6783     0FA4                     l4491:
  6784                           
  6785                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
  6786     0FA4  30FF               	movlw	255
  6787     0FA5  0021               	movlb	1	; select bank1
  6788     0FA6  07C7               	addwf	efgtoa@n^(0+128),f
  6789     0FA7  30FF               	movlw	255
  6790     0FA8  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6791     0FA9  0847               	movf	efgtoa@n^(0+128),w
  6792     0FAA  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6793     0FAB  0086               	movwf	6
  6794     0FAC  3002               	movlw	2	; select bank4/5
  6795     0FAD  0087               	movwf	7
  6796     0FAE  3030               	movlw	48
  6797     0FAF  0081               	movwf	1
  6798     0FB0                     l4493:
  6799                           
  6800                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 856:    w--;
  6801     0FB0  30FF               	movlw	255
  6802     0FB1  07B2               	addwf	efgtoa@w^(0+128),f
  6803     0FB2  30FF               	movlw	255
  6804     0FB3  3DB3               	addwfc	(efgtoa@w+1)^(0+128),f
  6805     0FB4                     l4495:
  6806                           
  6807                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
  6808     0FB4  0841               	movf	(efgtoa@i+1)^(0+128),w
  6809     0FB5  3A80               	xorlw	128
  6810     0FB6  0020               	movlb	0	; select bank0
  6811     0FB7  00E7               	movwf	??_efgtoa
  6812     0FB8  0021               	movlb	1	; select bank1
  6813     0FB9  0833               	movf	(efgtoa@w+1)^(0+128),w
  6814     0FBA  3A80               	xorlw	128
  6815     0FBB  0020               	movlb	0	; select bank0
  6816     0FBC  0267               	subwf	??_efgtoa,w
  6817     0FBD  1D03               	skipz
  6818     0FBE  2FC2               	goto	u5515
  6819     0FBF  0021               	movlb	1	; select bank1
  6820     0FC0  0832               	movf	efgtoa@w^(0+128),w
  6821     0FC1  0240               	subwf	efgtoa@i^(0+128),w
  6822     0FC2                     u5515:
  6823     0FC2  1803               	skipnc
  6824     0FC3  2FC5               	goto	u5511
  6825     0FC4  2FC6               	goto	u5510
  6826     0FC5                     u5511:
  6827     0FC5  2FD9               	goto	l4499
  6828     0FC6                     u5510:
  6829     0FC6                     l4497:
  6830     0FC6  0021               	movlb	1	; select bank1
  6831     0FC7  0841               	movf	(efgtoa@i+1)^(0+128),w
  6832     0FC8  3A80               	xorlw	128
  6833     0FC9  0020               	movlb	0	; select bank0
  6834     0FCA  00E7               	movwf	??_efgtoa
  6835     0FCB  0021               	movlb	1	; select bank1
  6836     0FCC  0848               	movf	(efgtoa@n+1)^(0+128),w
  6837     0FCD  3A80               	xorlw	128
  6838     0FCE  0020               	movlb	0	; select bank0
  6839     0FCF  0267               	subwf	??_efgtoa,w
  6840     0FD0  1D03               	skipz
  6841     0FD1  2FD5               	goto	u5525
  6842     0FD2  0021               	movlb	1	; select bank1
  6843     0FD3  0847               	movf	efgtoa@n^(0+128),w
  6844     0FD4  0240               	subwf	efgtoa@i^(0+128),w
  6845     0FD5                     u5525:
  6846     0FD5  1C03               	skipc
  6847     0FD6  2FD8               	goto	u5521
  6848     0FD7  2FD9               	goto	u5520
  6849     0FD8                     u5521:
  6850     0FD8  2FA4               	goto	l4491
  6851     0FD9                     u5520:
  6852     0FD9                     l4499:
  6853                           
  6854                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  6855     0FD9  0021               	movlb	1	; select bank1
  6856     0FDA  0842               	movf	efgtoa@sign^(0+128),w
  6857     0FDB  1903               	btfsc	3,2
  6858     0FDC  2FDE               	goto	u5531
  6859     0FDD  2FDF               	goto	u5530
  6860     0FDE                     u5531:
  6861     0FDE  2FEA               	goto	l4503
  6862     0FDF                     u5530:
  6863     0FDF                     l4501:
  6864                           
  6865                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  6866     0FDF  30FF               	movlw	255
  6867     0FE0  07C7               	addwf	efgtoa@n^(0+128),f
  6868     0FE1  30FF               	movlw	255
  6869     0FE2  3DC8               	addwfc	(efgtoa@n+1)^(0+128),f
  6870     0FE3  0847               	movf	efgtoa@n^(0+128),w
  6871     0FE4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6872     0FE5  0086               	movwf	6
  6873     0FE6  3002               	movlw	2	; select bank4/5
  6874     0FE7  0087               	movwf	7
  6875     0FE8  0842               	movf	efgtoa@sign^(0+128),w
  6876     0FE9  0081               	movwf	1
  6877     0FEA                     l4503:
  6878                           
  6879                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  6880     0FEA  0840               	movf	efgtoa@i^(0+128),w
  6881     0FEB  02B2               	subwf	efgtoa@w^(0+128),f
  6882     0FEC  0841               	movf	(efgtoa@i+1)^(0+128),w
  6883     0FED  3BB3               	subwfb	(efgtoa@w+1)^(0+128),f
  6884     0FEE                     l4505:
  6885                           
  6886                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  6887     0FEE  0847               	movf	efgtoa@n^(0+128),w
  6888     0FEF  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6889     0FF0  0020               	movlb	0	; select bank0
  6890     0FF1  00AF               	movwf	pad@buf
  6891     0FF2  0021               	movlb	1	; select bank1
  6892     0FF3  0833               	movf	(efgtoa@w+1)^(0+128),w
  6893     0FF4  0020               	movlb	0	; select bank0
  6894     0FF5  00B1               	movwf	pad@p+1
  6895     0FF6  0021               	movlb	1	; select bank1
  6896     0FF7  0832               	movf	efgtoa@w^(0+128),w
  6897     0FF8  0020               	movlb	0	; select bank0
  6898     0FF9  00B0               	movwf	pad@p
  6899     0FFA  0021               	movlb	1	; select bank1
  6900     0FFB  082F               	movf	efgtoa@fp^(0+128),w
  6901     0FFC  319B  23E3  3188   	fcall	_pad
  6902     0FFF                     l1094:
  6903     0FFF  0008               	return
  6904     1000                     __end_of_efgtoa:
  6905                           
  6906                           	psect	text7
  6907     19EC                     __ptext7:	
  6908 ;; *************** function _strcpy *****************
  6909 ;; Defined at:
  6910 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  dest            1    wreg     PTR unsigned char 
  6913 ;;		 -> dbuf(80), 
  6914 ;;  src             2    0[BANK0 ] PTR const unsigned char 
  6915 ;;		 -> STR_21(4), STR_18(4), 
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;  dest            1    5[BANK0 ] PTR unsigned char 
  6918 ;;		 -> dbuf(80), 
  6919 ;;  d               1    4[BANK0 ] PTR unsigned char 
  6920 ;;		 -> dbuf(80), 
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  1    wreg      PTR unsigned char 
  6923 ;; Registers used:
  6924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6930 ;;      Params:         0       2       0       0       0       0       0       0
  6931 ;;      Locals:         0       2       0       0       0       0       0       0
  6932 ;;      Temps:          0       2       0       0       0       0       0       0
  6933 ;;      Totals:         0       6       0       0       0       0       0       0
  6934 ;;Total ram usage:        6 bytes
  6935 ;; Hardware stack levels used: 1
  6936 ;; Hardware stack levels required when called: 4
  6937 ;; This function calls:
  6938 ;;		Nothing
  6939 ;; This function is called by:
  6940 ;;		_efgtoa
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944     19EC                     _strcpy:	
  6945                           ;psect for function _strcpy
  6946                           
  6947                           
  6948                           ;incstack = 0
  6949                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6950                           ;strcpy@dest stored from wreg
  6951     19EC  0020               	movlb	0	; select bank0
  6952     19ED  00A5               	movwf	strcpy@dest
  6953     19EE                     l4175:
  6954     19EE  0825               	movf	strcpy@dest,w
  6955     19EF  00A4               	movwf	strcpy@d
  6956     19F0                     l4177:
  6957     19F0  0824               	movf	strcpy@d,w
  6958     19F1  0086               	movwf	6
  6959     19F2  3002               	movlw	2	; select bank4/5
  6960     19F3  0087               	movwf	7
  6961     19F4  0AA4               	incf	strcpy@d,f
  6962     19F5  0821               	movf	strcpy@src+1,w
  6963     19F6  00A3               	movwf	??_strcpy+1
  6964     19F7  0820               	movf	strcpy@src,w
  6965     19F8  00A2               	movwf	??_strcpy
  6966     19F9  0AA0               	incf	strcpy@src,f
  6967     19FA  1903               	skipnz
  6968     19FB  0AA1               	incf	strcpy@src+1,f
  6969     19FC  0822               	movf	??_strcpy,w
  6970     19FD  0084               	movwf	4
  6971     19FE  0823               	movf	??_strcpy+1,w
  6972     19FF  0085               	movwf	5
  6973     1A00  0800               	movf	0,w	;code access
  6974     1A01  3FC0               	movwi [0]fsr1
  6975     1A02  0889               	movf	9,f
  6976     1A03  1D03               	btfss	3,2
  6977     1A04  2A06               	goto	u4891
  6978     1A05  2A07               	goto	u4890
  6979     1A06                     u4891:
  6980     1A06  29F0               	goto	l4177
  6981     1A07                     u4890:
  6982     1A07                     l1267:
  6983     1A07  0008               	return
  6984     1A08                     __end_of_strcpy:
  6985                           
  6986                           	psect	text8
  6987     1B36                     __ptext8:	
  6988 ;; *************** function _memcpy *****************
  6989 ;; Defined at:
  6990 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;  d1              1    wreg     PTR void 
  6993 ;;		 -> dbuf(80), 
  6994 ;;  s1              1    0[BANK0 ] PTR const void 
  6995 ;;		 -> dbuf(80), 
  6996 ;;  n               2    1[BANK0 ] unsigned int 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  d1              1    5[BANK0 ] PTR void 
  6999 ;;		 -> dbuf(80), 
  7000 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  7001 ;;		 -> dbuf(80), 
  7002 ;;  d               1    6[BANK0 ] PTR unsigned char 
  7003 ;;		 -> dbuf(80), 
  7004 ;;  tmp             1    4[BANK0 ] unsigned char 
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  1    wreg      PTR void 
  7007 ;; Registers used:
  7008 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7014 ;;      Params:         0       3       0       0       0       0       0       0
  7015 ;;      Locals:         0       4       0       0       0       0       0       0
  7016 ;;      Temps:          0       1       0       0       0       0       0       0
  7017 ;;      Totals:         0       8       0       0       0       0       0       0
  7018 ;;Total ram usage:        8 bytes
  7019 ;; Hardware stack levels used: 1
  7020 ;; Hardware stack levels required when called: 4
  7021 ;; This function calls:
  7022 ;;		Nothing
  7023 ;; This function is called by:
  7024 ;;		_efgtoa
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028     1B36                     _memcpy:	
  7029                           ;psect for function _memcpy
  7030                           
  7031                           
  7032                           ;incstack = 0
  7033                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  7034                           ;memcpy@d1 stored from wreg
  7035     1B36  0020               	movlb	0	; select bank0
  7036     1B37  00A5               	movwf	memcpy@d1
  7037     1B38                     l4217:
  7038     1B38  0820               	movf	memcpy@s1,w
  7039     1B39  00A7               	movwf	memcpy@s
  7040     1B3A  0825               	movf	memcpy@d1,w
  7041     1B3B  00A6               	movwf	memcpy@d
  7042     1B3C  2B51               	goto	l1227
  7043     1B3D                     l4219:
  7044     1B3D  0827               	movf	memcpy@s,w
  7045     1B3E  0086               	movwf	6
  7046     1B3F  3002               	movlw	2	; select bank4/5
  7047     1B40  0087               	movwf	7
  7048     1B41  0801               	movf	1,w
  7049     1B42  00A4               	movwf	memcpy@tmp
  7050     1B43                     l4221:
  7051     1B43  3001               	movlw	1
  7052     1B44  00A3               	movwf	??_memcpy
  7053     1B45  0823               	movf	??_memcpy,w
  7054     1B46  07A7               	addwf	memcpy@s,f
  7055     1B47                     l4223:
  7056     1B47  0826               	movf	memcpy@d,w
  7057     1B48  0086               	movwf	6
  7058     1B49  3002               	movlw	2	; select bank4/5
  7059     1B4A  0087               	movwf	7
  7060     1B4B  0824               	movf	memcpy@tmp,w
  7061     1B4C  0081               	movwf	1
  7062     1B4D  3001               	movlw	1
  7063     1B4E  00A3               	movwf	??_memcpy
  7064     1B4F  0823               	movf	??_memcpy,w
  7065     1B50  07A6               	addwf	memcpy@d,f
  7066     1B51                     l1227:
  7067     1B51  3001               	movlw	1
  7068     1B52  02A1               	subwf	memcpy@n,f
  7069     1B53  3000               	movlw	0
  7070     1B54  3BA2               	subwfb	memcpy@n+1,f
  7071     1B55  0A21               	incf	memcpy@n,w
  7072     1B56  1D03               	skipz
  7073     1B57  2B5C               	goto	u5021
  7074     1B58  0A22               	incf	memcpy@n+1,w
  7075     1B59  1D03               	btfss	3,2
  7076     1B5A  2B5C               	goto	u5021
  7077     1B5B  2B5D               	goto	u5020
  7078     1B5C                     u5021:
  7079     1B5C  2B3D               	goto	l4219
  7080     1B5D                     u5020:
  7081     1B5D                     l1230:
  7082     1B5D  0008               	return
  7083     1B5E                     __end_of_memcpy:
  7084                           
  7085                           	psect	text9
  7086     19BF                     __ptext9:	
  7087 ;; *************** function _labs *****************
  7088 ;; Defined at:
  7089 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;  a               4    0[BANK0 ] long 
  7092 ;; Auto vars:     Size  Location     Type
  7093 ;;		None
  7094 ;; Return value:  Size  Location     Type
  7095 ;;                  4    0[BANK0 ] long 
  7096 ;; Registers used:
  7097 ;;		wreg, status,2, status,0
  7098 ;; Tracked objects:
  7099 ;;		On entry : 0/0
  7100 ;;		On exit  : 0/0
  7101 ;;		Unchanged: 0/0
  7102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7103 ;;      Params:         0       4       0       0       0       0       0       0
  7104 ;;      Locals:         0       0       0       0       0       0       0       0
  7105 ;;      Temps:          0       0       0       0       0       0       0       0
  7106 ;;      Totals:         0       4       0       0       0       0       0       0
  7107 ;;Total ram usage:        4 bytes
  7108 ;; Hardware stack levels used: 1
  7109 ;; Hardware stack levels required when called: 4
  7110 ;; This function calls:
  7111 ;;		Nothing
  7112 ;; This function is called by:
  7113 ;;		_efgtoa
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117     19BF                     _labs:	
  7118                           ;psect for function _labs
  7119                           
  7120     19BF                     l4179:	
  7121                           ;incstack = 0
  7122                           ; Regs used in _labs: [wreg+status,2+status,0]
  7123                           
  7124     19BF  0020               	movlb	0	; select bank0
  7125     19C0  1BA3               	btfsc	labs@a+3,7
  7126     19C1  29C3               	goto	u4901
  7127     19C2  29C4               	goto	u4900
  7128     19C3                     u4901:
  7129     19C3  29C5               	goto	l4183
  7130     19C4                     u4900:
  7131     19C4                     l4181:
  7132     19C4  29D4               	goto	l1224
  7133     19C5                     l4183:
  7134     19C5  0920               	comf	labs@a,w
  7135     19C6  00A0               	movwf	?_labs
  7136     19C7  0921               	comf	labs@a+1,w
  7137     19C8  00A1               	movwf	?_labs+1
  7138     19C9  0922               	comf	labs@a+2,w
  7139     19CA  00A2               	movwf	?_labs+2
  7140     19CB  0923               	comf	labs@a+3,w
  7141     19CC  00A3               	movwf	?_labs+3
  7142     19CD  0AA0               	incf	?_labs,f
  7143     19CE  1903               	skipnz
  7144     19CF  0AA1               	incf	?_labs+1,f
  7145     19D0  1903               	skipnz
  7146     19D1  0AA2               	incf	?_labs+2,f
  7147     19D2  1903               	skipnz
  7148     19D3  0AA3               	incf	?_labs+3,f
  7149     19D4                     l1224:
  7150     19D4  0008               	return
  7151     19D5                     __end_of_labs:
  7152                           
  7153                           	psect	text10
  7154     0802                     __ptext10:	
  7155 ;; *************** function _floorf *****************
  7156 ;; Defined at:
  7157 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  x               4   46[BANK0 ] float 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;  u               4   62[BANK0 ] struct .
  7162 ;;  m               4   56[BANK0 ] unsigned long 
  7163 ;;  e               2   60[BANK0 ] int 
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  4   46[BANK0 ] float 
  7166 ;; Registers used:
  7167 ;;		wreg, status,2, status,0
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7173 ;;      Params:         0       4       0       0       0       0       0       0
  7174 ;;      Locals:         0      10       0       0       0       0       0       0
  7175 ;;      Temps:          0       6       0       0       0       0       0       0
  7176 ;;      Totals:         0      20       0       0       0       0       0       0
  7177 ;;Total ram usage:       20 bytes
  7178 ;; Hardware stack levels used: 1
  7179 ;; Hardware stack levels required when called: 4
  7180 ;; This function calls:
  7181 ;;		Nothing
  7182 ;; This function is called by:
  7183 ;;		_efgtoa
  7184 ;; This function uses a non-reentrant model
  7185 ;;
  7186                           
  7187     0802                     _floorf:	
  7188                           ;psect for function _floorf
  7189                           
  7190     0802                     l4187:	
  7191                           ;incstack = 0
  7192                           ; Regs used in _floorf: [wreg+status,2+status,0]
  7193                           
  7194     0802  0022               	movlb	2	; select bank2
  7195     0803  0823               	movf	(floorf@F521+3)^(0+256),w
  7196     0804  0020               	movlb	0	; select bank0
  7197     0805  00E1               	movwf	floorf@u+3
  7198     0806  0022               	movlb	2	; select bank2
  7199     0807  0822               	movf	(floorf@F521+2)^(0+256),w
  7200     0808  0020               	movlb	0	; select bank0
  7201     0809  00E0               	movwf	floorf@u+2
  7202     080A  0022               	movlb	2	; select bank2
  7203     080B  0821               	movf	(floorf@F521+1)^(0+256),w
  7204     080C  0020               	movlb	0	; select bank0
  7205     080D  00DF               	movwf	floorf@u+1
  7206     080E  0022               	movlb	2	; select bank2
  7207     080F  0820               	movf	floorf@F521^(0+256),w
  7208     0810  0020               	movlb	0	; select bank0
  7209     0811  00DE               	movwf	floorf@u
  7210     0812  0851               	movf	floorf@x+3,w
  7211     0813  00E1               	movwf	floorf@u+3
  7212     0814  0850               	movf	floorf@x+2,w
  7213     0815  00E0               	movwf	floorf@u+2
  7214     0816  084F               	movf	floorf@x+1,w
  7215     0817  00DF               	movwf	floorf@u+1
  7216     0818  084E               	movf	floorf@x,w
  7217     0819  00DE               	movwf	floorf@u
  7218     081A                     l4189:
  7219     081A  085E               	movf	floorf@u,w
  7220     081B  00D2               	movwf	??_floorf
  7221     081C  085F               	movf	floorf@u+1,w
  7222     081D  00D3               	movwf	??_floorf+1
  7223     081E  0860               	movf	floorf@u+2,w
  7224     081F  00D4               	movwf	??_floorf+2
  7225     0820  0861               	movf	floorf@u+3,w
  7226     0821  00D5               	movwf	??_floorf+3
  7227     0822  3017               	movlw	23
  7228     0823                     u4915:
  7229     0823  36D5               	lsrf	??_floorf+3,f
  7230     0824  0CD4               	rrf	??_floorf+2,f
  7231     0825  0CD3               	rrf	??_floorf+1,f
  7232     0826  0CD2               	rrf	??_floorf,f
  7233     0827                     u4910:
  7234     0827  0B89               	decfsz	9,f
  7235     0828  2823               	goto	u4915
  7236     0829  30FF               	movlw	255
  7237     082A  0552               	andwf	??_floorf,w
  7238     082B  00D6               	movwf	??_floorf+4
  7239     082C  3000               	movlw	0
  7240     082D  0553               	andwf	??_floorf+1,w
  7241     082E  00D7               	movwf	??_floorf+5
  7242     082F  0856               	movf	??_floorf+4,w
  7243     0830  3E81               	addlw	129
  7244     0831  00DC               	movwf	floorf@e
  7245     0832  30FF               	movlw	255
  7246     0833  3D57               	addwfc	??_floorf+5,w
  7247     0834  00DD               	movwf	floorf@e+1
  7248     0835                     l4191:
  7249     0835  085D               	movf	floorf@e+1,w
  7250     0836  3A80               	xorlw	128
  7251     0837  00D2               	movwf	??_floorf
  7252     0838  3080               	movlw	128
  7253     0839  0252               	subwf	??_floorf,w
  7254     083A  1D03               	skipz
  7255     083B  283E               	goto	u4925
  7256     083C  3017               	movlw	23
  7257     083D  025C               	subwf	floorf@e,w
  7258     083E                     u4925:
  7259     083E  1C03               	skipc
  7260     083F  2841               	goto	u4921
  7261     0840  2842               	goto	u4920
  7262     0841                     u4921:
  7263     0841  2843               	goto	l1209
  7264     0842                     u4920:
  7265     0842                     l4193:
  7266     0842  28EC               	goto	l1210
  7267     0843                     l1209:
  7268     0843  0020               	movlb	0	; select bank0
  7269     0844  1BDD               	btfsc	floorf@e+1,7
  7270     0845  2847               	goto	u4931
  7271     0846  2848               	goto	u4930
  7272     0847                     u4931:
  7273     0847  28A5               	goto	l4207
  7274     0848                     u4930:
  7275     0848                     l4195:
  7276     0848  30FF               	movlw	255
  7277     0849  00D2               	movwf	??_floorf
  7278     084A  30FF               	movlw	255
  7279     084B  00D3               	movwf	??_floorf+1
  7280     084C  307F               	movlw	127
  7281     084D  00D4               	movwf	??_floorf+2
  7282     084E  3000               	movlw	0
  7283     084F  00D5               	movwf	??_floorf+3
  7284     0850  0A5C               	incf	floorf@e,w
  7285     0851  2856               	goto	u4940
  7286     0852                     u4945:
  7287     0852  37D5               	asrf	??_floorf+3,f
  7288     0853  0CD4               	rrf	??_floorf+2,f
  7289     0854  0CD3               	rrf	??_floorf+1,f
  7290     0855  0CD2               	rrf	??_floorf,f
  7291     0856                     u4940:
  7292     0856  0B89               	decfsz	9,f
  7293     0857  2852               	goto	u4945
  7294     0858  0855               	movf	??_floorf+3,w
  7295     0859  00DB               	movwf	floorf@m+3
  7296     085A  0854               	movf	??_floorf+2,w
  7297     085B  00DA               	movwf	floorf@m+2
  7298     085C  0853               	movf	??_floorf+1,w
  7299     085D  00D9               	movwf	floorf@m+1
  7300     085E  0852               	movf	??_floorf,w
  7301     085F  00D8               	movwf	floorf@m
  7302     0860                     l4197:
  7303     0860  085E               	movf	floorf@u,w
  7304     0861  0558               	andwf	floorf@m,w
  7305     0862  00D2               	movwf	??_floorf
  7306     0863  085F               	movf	floorf@u+1,w
  7307     0864  0559               	andwf	floorf@m+1,w
  7308     0865  00D3               	movwf	??_floorf+1
  7309     0866  0860               	movf	floorf@u+2,w
  7310     0867  055A               	andwf	floorf@m+2,w
  7311     0868  00D4               	movwf	??_floorf+2
  7312     0869  0861               	movf	floorf@u+3,w
  7313     086A  055B               	andwf	floorf@m+3,w
  7314     086B  00D5               	movwf	??_floorf+3
  7315     086C  0855               	movf	??_floorf+3,w
  7316     086D  0454               	iorwf	??_floorf+2,w
  7317     086E  0453               	iorwf	??_floorf+1,w
  7318     086F  0452               	iorwf	??_floorf,w
  7319     0870  1D03               	skipz
  7320     0871  2873               	goto	u4951
  7321     0872  2874               	goto	u4950
  7322     0873                     u4951:
  7323     0873  2875               	goto	l4201
  7324     0874                     u4950:
  7325     0874  2842               	goto	l4193
  7326     0875                     l4201:
  7327     0875  085E               	movf	floorf@u,w
  7328     0876  00D2               	movwf	??_floorf
  7329     0877  085F               	movf	floorf@u+1,w
  7330     0878  00D3               	movwf	??_floorf+1
  7331     0879  0860               	movf	floorf@u+2,w
  7332     087A  00D4               	movwf	??_floorf+2
  7333     087B  0861               	movf	floorf@u+3,w
  7334     087C  00D5               	movwf	??_floorf+3
  7335     087D  301F               	movlw	31
  7336     087E                     u4965:
  7337     087E  36D5               	lsrf	??_floorf+3,f
  7338     087F  0CD4               	rrf	??_floorf+2,f
  7339     0880  0CD3               	rrf	??_floorf+1,f
  7340     0881  0CD2               	rrf	??_floorf,f
  7341     0882                     u4960:
  7342     0882  0B89               	decfsz	9,f
  7343     0883  287E               	goto	u4965
  7344     0884  0855               	movf	??_floorf+3,w
  7345     0885  0454               	iorwf	??_floorf+2,w
  7346     0886  0453               	iorwf	??_floorf+1,w
  7347     0887  0452               	iorwf	??_floorf,w
  7348     0888  1903               	skipnz
  7349     0889  288B               	goto	u4971
  7350     088A  288C               	goto	u4970
  7351     088B                     u4971:
  7352     088B  2894               	goto	l4205
  7353     088C                     u4970:
  7354     088C                     l4203:
  7355     088C  0858               	movf	floorf@m,w
  7356     088D  07DE               	addwf	floorf@u,f
  7357     088E  0859               	movf	floorf@m+1,w
  7358     088F  3DDF               	addwfc	floorf@u+1,f
  7359     0890  085A               	movf	floorf@m+2,w
  7360     0891  3DE0               	addwfc	floorf@u+2,f
  7361     0892  085B               	movf	floorf@m+3,w
  7362     0893  3DE1               	addwfc	floorf@u+3,f
  7363     0894                     l4205:
  7364     0894  0958               	comf	floorf@m,w
  7365     0895  00D2               	movwf	??_floorf
  7366     0896  0959               	comf	floorf@m+1,w
  7367     0897  00D3               	movwf	??_floorf+1
  7368     0898  095A               	comf	floorf@m+2,w
  7369     0899  00D4               	movwf	??_floorf+2
  7370     089A  095B               	comf	floorf@m+3,w
  7371     089B  00D5               	movwf	??_floorf+3
  7372     089C  0852               	movf	??_floorf,w
  7373     089D  05DE               	andwf	floorf@u,f
  7374     089E  0853               	movf	??_floorf+1,w
  7375     089F  05DF               	andwf	floorf@u+1,f
  7376     08A0  0854               	movf	??_floorf+2,w
  7377     08A1  05E0               	andwf	floorf@u+2,f
  7378     08A2  0855               	movf	??_floorf+3,w
  7379     08A3  05E1               	andwf	floorf@u+3,f
  7380     08A4  28E4               	goto	l1214
  7381     08A5                     l4207:
  7382     08A5  085E               	movf	floorf@u,w
  7383     08A6  00D2               	movwf	??_floorf
  7384     08A7  085F               	movf	floorf@u+1,w
  7385     08A8  00D3               	movwf	??_floorf+1
  7386     08A9  0860               	movf	floorf@u+2,w
  7387     08AA  00D4               	movwf	??_floorf+2
  7388     08AB  0861               	movf	floorf@u+3,w
  7389     08AC  00D5               	movwf	??_floorf+3
  7390     08AD  301F               	movlw	31
  7391     08AE                     u4985:
  7392     08AE  36D5               	lsrf	??_floorf+3,f
  7393     08AF  0CD4               	rrf	??_floorf+2,f
  7394     08B0  0CD3               	rrf	??_floorf+1,f
  7395     08B1  0CD2               	rrf	??_floorf,f
  7396     08B2                     u4980:
  7397     08B2  0B89               	decfsz	9,f
  7398     08B3  28AE               	goto	u4985
  7399     08B4  0855               	movf	??_floorf+3,w
  7400     08B5  0454               	iorwf	??_floorf+2,w
  7401     08B6  0453               	iorwf	??_floorf+1,w
  7402     08B7  0452               	iorwf	??_floorf,w
  7403     08B8  1D03               	skipz
  7404     08B9  28BB               	goto	u4991
  7405     08BA  28BC               	goto	u4990
  7406     08BB                     u4991:
  7407     08BB  28C5               	goto	l4211
  7408     08BC                     u4990:
  7409     08BC                     l4209:
  7410     08BC  3000               	movlw	0
  7411     08BD  00E1               	movwf	floorf@u+3
  7412     08BE  3000               	movlw	0
  7413     08BF  00E0               	movwf	floorf@u+2
  7414     08C0  3000               	movlw	0
  7415     08C1  00DF               	movwf	floorf@u+1
  7416     08C2  3000               	movlw	0
  7417     08C3  00DE               	movwf	floorf@u
  7418     08C4  28E4               	goto	l1214
  7419     08C5                     l4211:
  7420     08C5  085E               	movf	floorf@u,w
  7421     08C6  00D2               	movwf	??_floorf
  7422     08C7  085F               	movf	floorf@u+1,w
  7423     08C8  00D3               	movwf	??_floorf+1
  7424     08C9  0860               	movf	floorf@u+2,w
  7425     08CA  00D4               	movwf	??_floorf+2
  7426     08CB  0861               	movf	floorf@u+3,w
  7427     08CC  00D5               	movwf	??_floorf+3
  7428     08CD  3001               	movlw	1
  7429     08CE                     u5005:
  7430     08CE  35D2               	lslf	??_floorf,f
  7431     08CF  0DD3               	rlf	??_floorf+1,f
  7432     08D0  0DD4               	rlf	??_floorf+2,f
  7433     08D1  0DD5               	rlf	??_floorf+3,f
  7434     08D2                     u5000:
  7435     08D2  0B89               	decfsz	9,f
  7436     08D3  28CE               	goto	u5005
  7437     08D4  0855               	movf	??_floorf+3,w
  7438     08D5  0454               	iorwf	??_floorf+2,w
  7439     08D6  0453               	iorwf	??_floorf+1,w
  7440     08D7  0452               	iorwf	??_floorf,w
  7441     08D8  1903               	skipnz
  7442     08D9  28DB               	goto	u5011
  7443     08DA  28DC               	goto	u5010
  7444     08DB                     u5011:
  7445     08DB  28E4               	goto	l1214
  7446     08DC                     u5010:
  7447     08DC                     l4213:
  7448     08DC  30BF               	movlw	191
  7449     08DD  00E1               	movwf	floorf@u+3
  7450     08DE  3080               	movlw	128
  7451     08DF  00E0               	movwf	floorf@u+2
  7452     08E0  3000               	movlw	0
  7453     08E1  00DF               	movwf	floorf@u+1
  7454     08E2  3000               	movlw	0
  7455     08E3  00DE               	movwf	floorf@u
  7456     08E4                     l1214:
  7457     08E4  0861               	movf	floorf@u+3,w
  7458     08E5  00D1               	movwf	?_floorf+3
  7459     08E6  0860               	movf	floorf@u+2,w
  7460     08E7  00D0               	movwf	?_floorf+2
  7461     08E8  085F               	movf	floorf@u+1,w
  7462     08E9  00CF               	movwf	?_floorf+1
  7463     08EA  085E               	movf	floorf@u,w
  7464     08EB  00CE               	movwf	?_floorf
  7465     08EC                     l1210:
  7466     08EC  0008               	return
  7467     08ED                     __end_of_floorf:
  7468                           
  7469                           	psect	text11
  7470     1F81                     __ptext11:	
  7471 ;; *************** function ___fpclassifyf *****************
  7472 ;; Defined at:
  7473 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;  x               4    0[BANK0 ] float 
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;  u               4   12[BANK0 ] struct .
  7478 ;;  e               2   10[BANK0 ] int 
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  2    0[BANK0 ] int 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7488 ;;      Params:         0       4       0       0       0       0       0       0
  7489 ;;      Locals:         0       6       0       0       0       0       0       0
  7490 ;;      Temps:          0       6       0       0       0       0       0       0
  7491 ;;      Totals:         0      16       0       0       0       0       0       0
  7492 ;;Total ram usage:       16 bytes
  7493 ;; Hardware stack levels used: 1
  7494 ;; Hardware stack levels required when called: 4
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_efgtoa
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502     1F81                     ___fpclassifyf:	
  7503                           ;psect for function ___fpclassifyf
  7504                           
  7505     1F81                     l4151:	
  7506                           ;incstack = 0
  7507                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  7508                           
  7509     1F81  0022               	movlb	2	; select bank2
  7510     1F82  0827               	movf	(___fpclassifyf@F465+3)^(0+256),w
  7511     1F83  0020               	movlb	0	; select bank0
  7512     1F84  00AF               	movwf	___fpclassifyf@u+3
  7513     1F85  0022               	movlb	2	; select bank2
  7514     1F86  0826               	movf	(___fpclassifyf@F465+2)^(0+256),w
  7515     1F87  0020               	movlb	0	; select bank0
  7516     1F88  00AE               	movwf	___fpclassifyf@u+2
  7517     1F89  0022               	movlb	2	; select bank2
  7518     1F8A  0825               	movf	(___fpclassifyf@F465+1)^(0+256),w
  7519     1F8B  0020               	movlb	0	; select bank0
  7520     1F8C  00AD               	movwf	___fpclassifyf@u+1
  7521     1F8D  0022               	movlb	2	; select bank2
  7522     1F8E  0824               	movf	___fpclassifyf@F465^(0+256),w
  7523     1F8F  0020               	movlb	0	; select bank0
  7524     1F90  00AC               	movwf	___fpclassifyf@u
  7525     1F91  0823               	movf	___fpclassifyf@x+3,w
  7526     1F92  00AF               	movwf	___fpclassifyf@u+3
  7527     1F93  0822               	movf	___fpclassifyf@x+2,w
  7528     1F94  00AE               	movwf	___fpclassifyf@u+2
  7529     1F95  0821               	movf	___fpclassifyf@x+1,w
  7530     1F96  00AD               	movwf	___fpclassifyf@u+1
  7531     1F97  0820               	movf	___fpclassifyf@x,w
  7532     1F98  00AC               	movwf	___fpclassifyf@u
  7533     1F99                     l4153:
  7534     1F99  082C               	movf	___fpclassifyf@u,w
  7535     1F9A  00A4               	movwf	??___fpclassifyf
  7536     1F9B  082D               	movf	___fpclassifyf@u+1,w
  7537     1F9C  00A5               	movwf	??___fpclassifyf+1
  7538     1F9D  082E               	movf	___fpclassifyf@u+2,w
  7539     1F9E  00A6               	movwf	??___fpclassifyf+2
  7540     1F9F  082F               	movf	___fpclassifyf@u+3,w
  7541     1FA0  00A7               	movwf	??___fpclassifyf+3
  7542     1FA1  3017               	movlw	23
  7543     1FA2                     u4815:
  7544     1FA2  36A7               	lsrf	??___fpclassifyf+3,f
  7545     1FA3  0CA6               	rrf	??___fpclassifyf+2,f
  7546     1FA4  0CA5               	rrf	??___fpclassifyf+1,f
  7547     1FA5  0CA4               	rrf	??___fpclassifyf,f
  7548     1FA6                     u4810:
  7549     1FA6  0B89               	decfsz	9,f
  7550     1FA7  2FA2               	goto	u4815
  7551     1FA8  30FF               	movlw	255
  7552     1FA9  0524               	andwf	??___fpclassifyf,w
  7553     1FAA  00AA               	movwf	___fpclassifyf@e
  7554     1FAB  3000               	movlw	0
  7555     1FAC  0525               	andwf	??___fpclassifyf+1,w
  7556     1FAD  00AB               	movwf	___fpclassifyf@e+1
  7557     1FAE                     l4155:
  7558     1FAE  082A               	movf	___fpclassifyf@e,w
  7559     1FAF  042B               	iorwf	___fpclassifyf@e+1,w
  7560     1FB0  1D03               	btfss	3,2
  7561     1FB1  2FB3               	goto	u4821
  7562     1FB2  2FB4               	goto	u4820
  7563     1FB3                     u4821:
  7564     1FB3  2FD5               	goto	l4165
  7565     1FB4                     u4820:
  7566     1FB4                     l4157:
  7567     1FB4  082C               	movf	___fpclassifyf@u,w
  7568     1FB5  00A4               	movwf	??___fpclassifyf
  7569     1FB6  082D               	movf	___fpclassifyf@u+1,w
  7570     1FB7  00A5               	movwf	??___fpclassifyf+1
  7571     1FB8  082E               	movf	___fpclassifyf@u+2,w
  7572     1FB9  00A6               	movwf	??___fpclassifyf+2
  7573     1FBA  082F               	movf	___fpclassifyf@u+3,w
  7574     1FBB  00A7               	movwf	??___fpclassifyf+3
  7575     1FBC  3001               	movlw	1
  7576     1FBD                     u4835:
  7577     1FBD  35A4               	lslf	??___fpclassifyf,f
  7578     1FBE  0DA5               	rlf	??___fpclassifyf+1,f
  7579     1FBF  0DA6               	rlf	??___fpclassifyf+2,f
  7580     1FC0  0DA7               	rlf	??___fpclassifyf+3,f
  7581     1FC1                     u4830:
  7582     1FC1  0B89               	decfsz	9,f
  7583     1FC2  2FBD               	goto	u4835
  7584     1FC3  0827               	movf	??___fpclassifyf+3,w
  7585     1FC4  0426               	iorwf	??___fpclassifyf+2,w
  7586     1FC5  0425               	iorwf	??___fpclassifyf+1,w
  7587     1FC6  0424               	iorwf	??___fpclassifyf,w
  7588     1FC7  1D03               	skipz
  7589     1FC8  2FCA               	goto	u4841
  7590     1FC9  2FCB               	goto	u4840
  7591     1FCA                     u4841:
  7592     1FCA  2FD0               	goto	l4161
  7593     1FCB                     u4840:
  7594     1FCB                     l4159:
  7595     1FCB  3002               	movlw	2
  7596     1FCC  00A0               	movwf	?___fpclassifyf
  7597     1FCD  3000               	movlw	0
  7598     1FCE  00A1               	movwf	?___fpclassifyf+1
  7599     1FCF  2FFF               	goto	l1196
  7600     1FD0                     l4161:
  7601     1FD0  3003               	movlw	3
  7602     1FD1  00A0               	movwf	?___fpclassifyf
  7603     1FD2  3000               	movlw	0
  7604     1FD3  00A1               	movwf	?___fpclassifyf+1
  7605     1FD4  2FFF               	goto	l1196
  7606     1FD5                     l4165:
  7607     1FD5  0A2A               	incf	___fpclassifyf@e,w
  7608     1FD6  042B               	iorwf	___fpclassifyf@e+1,w
  7609     1FD7  1D03               	btfss	3,2
  7610     1FD8  2FDA               	goto	u4851
  7611     1FD9  2FDB               	goto	u4850
  7612     1FDA                     u4851:
  7613     1FDA  2FFB               	goto	l4171
  7614     1FDB                     u4850:
  7615     1FDB                     l4167:
  7616     1FDB  082C               	movf	___fpclassifyf@u,w
  7617     1FDC  00A4               	movwf	??___fpclassifyf
  7618     1FDD  082D               	movf	___fpclassifyf@u+1,w
  7619     1FDE  00A5               	movwf	??___fpclassifyf+1
  7620     1FDF  082E               	movf	___fpclassifyf@u+2,w
  7621     1FE0  00A6               	movwf	??___fpclassifyf+2
  7622     1FE1  082F               	movf	___fpclassifyf@u+3,w
  7623     1FE2  00A7               	movwf	??___fpclassifyf+3
  7624     1FE3  3009               	movlw	9
  7625     1FE4                     u4865:
  7626     1FE4  35A4               	lslf	??___fpclassifyf,f
  7627     1FE5  0DA5               	rlf	??___fpclassifyf+1,f
  7628     1FE6  0DA6               	rlf	??___fpclassifyf+2,f
  7629     1FE7  0DA7               	rlf	??___fpclassifyf+3,f
  7630     1FE8                     u4860:
  7631     1FE8  0B89               	decfsz	9,f
  7632     1FE9  2FE4               	goto	u4865
  7633     1FEA  0827               	movf	??___fpclassifyf+3,w
  7634     1FEB  0426               	iorwf	??___fpclassifyf+2,w
  7635     1FEC  0425               	iorwf	??___fpclassifyf+1,w
  7636     1FED  0424               	iorwf	??___fpclassifyf,w
  7637     1FEE  1903               	skipnz
  7638     1FEF  2FF1               	goto	u4871
  7639     1FF0  2FF3               	goto	u4870
  7640     1FF1                     u4871:
  7641     1FF1  3001               	movlw	1
  7642     1FF2  2FF4               	goto	u4880
  7643     1FF3                     u4870:
  7644     1FF3  3000               	movlw	0
  7645     1FF4                     u4880:
  7646     1FF4  00A8               	movwf	??___fpclassifyf+4
  7647     1FF5  01A9               	clrf	??___fpclassifyf+5
  7648     1FF6  0828               	movf	??___fpclassifyf+4,w
  7649     1FF7  00A0               	movwf	?___fpclassifyf
  7650     1FF8  0829               	movf	??___fpclassifyf+5,w
  7651     1FF9  00A1               	movwf	?___fpclassifyf+1
  7652     1FFA  2FFF               	goto	l1196
  7653     1FFB                     l4171:
  7654     1FFB  3004               	movlw	4
  7655     1FFC  00A0               	movwf	?___fpclassifyf
  7656     1FFD  3000               	movlw	0
  7657     1FFE  00A1               	movwf	?___fpclassifyf+1
  7658     1FFF                     l1196:
  7659     1FFF  0008               	return
  7660     2000                     __end_of___fpclassifyf:
  7661                           
  7662                           	psect	text12
  7663     1E21                     __ptext12:	
  7664 ;; *************** function ___fltol *****************
  7665 ;; Defined at:
  7666 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  f1              4    0[BANK0 ] int 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  exp1            1    9[BANK0 ] unsigned char 
  7671 ;;  sign1           1    8[BANK0 ] unsigned char 
  7672 ;; Return value:  Size  Location     Type
  7673 ;;                  4    0[BANK0 ] long 
  7674 ;; Registers used:
  7675 ;;		wreg, status,2, status,0
  7676 ;; Tracked objects:
  7677 ;;		On entry : 0/0
  7678 ;;		On exit  : 0/0
  7679 ;;		Unchanged: 0/0
  7680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7681 ;;      Params:         0       4       0       0       0       0       0       0
  7682 ;;      Locals:         0       2       0       0       0       0       0       0
  7683 ;;      Temps:          0       4       0       0       0       0       0       0
  7684 ;;      Totals:         0      10       0       0       0       0       0       0
  7685 ;;Total ram usage:       10 bytes
  7686 ;; Hardware stack levels used: 1
  7687 ;; Hardware stack levels required when called: 4
  7688 ;; This function calls:
  7689 ;;		Nothing
  7690 ;; This function is called by:
  7691 ;;		_efgtoa
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695     1E21                     ___fltol:	
  7696                           ;psect for function ___fltol
  7697                           
  7698     1E21                     l3809:	
  7699                           ;incstack = 0
  7700                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7701                           
  7702     1E21  1003               	clrc
  7703     1E22  0020               	movlb	0	; select bank0
  7704     1E23  0D22               	rlf	___fltol@f1+2,w
  7705     1E24  0D23               	rlf	___fltol@f1+3,w
  7706     1E25  00A9               	movwf	___fltol@exp1
  7707     1E26  0829               	movf	___fltol@exp1,w
  7708     1E27  1D03               	btfss	3,2
  7709     1E28  2E2A               	goto	u4131
  7710     1E29  2E2B               	goto	u4130
  7711     1E2A                     u4131:
  7712     1E2A  2E34               	goto	l3815
  7713     1E2B                     u4130:
  7714     1E2B                     l3811:
  7715     1E2B  3000               	movlw	0
  7716     1E2C  00A3               	movwf	?___fltol+3
  7717     1E2D  3000               	movlw	0
  7718     1E2E  00A2               	movwf	?___fltol+2
  7719     1E2F  3000               	movlw	0
  7720     1E30  00A1               	movwf	?___fltol+1
  7721     1E31  3000               	movlw	0
  7722     1E32  00A0               	movwf	?___fltol
  7723     1E33  2E91               	goto	l760
  7724     1E34                     l3815:
  7725     1E34  0820               	movf	___fltol@f1,w
  7726     1E35  00A4               	movwf	??___fltol
  7727     1E36  0821               	movf	___fltol@f1+1,w
  7728     1E37  00A5               	movwf	??___fltol+1
  7729     1E38  0822               	movf	___fltol@f1+2,w
  7730     1E39  00A6               	movwf	??___fltol+2
  7731     1E3A  0823               	movf	___fltol@f1+3,w
  7732     1E3B  00A7               	movwf	??___fltol+3
  7733     1E3C  301F               	movlw	31
  7734     1E3D                     u4145:
  7735     1E3D  36A7               	lsrf	??___fltol+3,f
  7736     1E3E  0CA6               	rrf	??___fltol+2,f
  7737     1E3F  0CA5               	rrf	??___fltol+1,f
  7738     1E40  0CA4               	rrf	??___fltol,f
  7739     1E41                     u4140:
  7740     1E41  0B89               	decfsz	9,f
  7741     1E42  2E3D               	goto	u4145
  7742     1E43  0824               	movf	??___fltol,w
  7743     1E44  00A8               	movwf	___fltol@sign1
  7744     1E45                     l3817:
  7745     1E45  17A2               	bsf	___fltol@f1+2,7
  7746     1E46                     l3819:
  7747     1E46  30FF               	movlw	255
  7748     1E47  05A0               	andwf	___fltol@f1,f
  7749     1E48  30FF               	movlw	255
  7750     1E49  05A1               	andwf	___fltol@f1+1,f
  7751     1E4A  30FF               	movlw	255
  7752     1E4B  05A2               	andwf	___fltol@f1+2,f
  7753     1E4C  3000               	movlw	0
  7754     1E4D  05A3               	andwf	___fltol@f1+3,f
  7755     1E4E                     l3821:
  7756     1E4E  3096               	movlw	150
  7757     1E4F  02A9               	subwf	___fltol@exp1,f
  7758     1E50                     l3823:
  7759     1E50  1FA9               	btfss	___fltol@exp1,7
  7760     1E51  2E53               	goto	u4151
  7761     1E52  2E54               	goto	u4150
  7762     1E53                     u4151:
  7763     1E53  2E6C               	goto	l3833
  7764     1E54                     u4150:
  7765     1E54                     l3825:
  7766     1E54  0829               	movf	___fltol@exp1,w
  7767     1E55  3A80               	xorlw	128
  7768     1E56  3E97               	addlw	151
  7769     1E57  1803               	skipnc
  7770     1E58  2E5A               	goto	u4161
  7771     1E59  2E5B               	goto	u4160
  7772     1E5A                     u4161:
  7773     1E5A  2E5C               	goto	l3831
  7774     1E5B                     u4160:
  7775     1E5B  2E2B               	goto	l3811
  7776     1E5C                     l3831:
  7777     1E5C  3001               	movlw	1
  7778     1E5D                     u4175:
  7779     1E5D  36A3               	lsrf	___fltol@f1+3,f
  7780     1E5E  0CA2               	rrf	___fltol@f1+2,f
  7781     1E5F  0CA1               	rrf	___fltol@f1+1,f
  7782     1E60  0CA0               	rrf	___fltol@f1,f
  7783     1E61  0B89               	decfsz	9,f
  7784     1E62  2E5D               	goto	u4175
  7785     1E63  3001               	movlw	1
  7786     1E64  00A4               	movwf	??___fltol
  7787     1E65  0824               	movf	??___fltol,w
  7788     1E66  07A9               	addwf	___fltol@exp1,f
  7789     1E67  1D03               	btfss	3,2
  7790     1E68  2E6A               	goto	u4181
  7791     1E69  2E6B               	goto	u4180
  7792     1E6A                     u4181:
  7793     1E6A  2E5C               	goto	l3831
  7794     1E6B                     u4180:
  7795     1E6B  2E81               	goto	l3841
  7796     1E6C                     l3833:
  7797     1E6C  3020               	movlw	32
  7798     1E6D  0229               	subwf	___fltol@exp1,w
  7799     1E6E  1C03               	skipc
  7800     1E6F  2E71               	goto	u4191
  7801     1E70  2E72               	goto	u4190
  7802     1E71                     u4191:
  7803     1E71  2E7C               	goto	l767
  7804     1E72                     u4190:
  7805     1E72  2E2B               	goto	l3811
  7806     1E73                     l3839:
  7807     1E73  3001               	movlw	1
  7808     1E74                     u4205:
  7809     1E74  35A0               	lslf	___fltol@f1,f
  7810     1E75  0DA1               	rlf	___fltol@f1+1,f
  7811     1E76  0DA2               	rlf	___fltol@f1+2,f
  7812     1E77  0DA3               	rlf	___fltol@f1+3,f
  7813     1E78  0B89               	decfsz	9,f
  7814     1E79  2E74               	goto	u4205
  7815     1E7A  3001               	movlw	1
  7816     1E7B  02A9               	subwf	___fltol@exp1,f
  7817     1E7C                     l767:
  7818     1E7C  0829               	movf	___fltol@exp1,w
  7819     1E7D  1D03               	btfss	3,2
  7820     1E7E  2E80               	goto	u4211
  7821     1E7F  2E81               	goto	u4210
  7822     1E80                     u4211:
  7823     1E80  2E73               	goto	l3839
  7824     1E81                     u4210:
  7825     1E81                     l3841:
  7826     1E81  0828               	movf	___fltol@sign1,w
  7827     1E82  1903               	btfsc	3,2
  7828     1E83  2E85               	goto	u4221
  7829     1E84  2E86               	goto	u4220
  7830     1E85                     u4221:
  7831     1E85  2E91               	goto	l770
  7832     1E86                     u4220:
  7833     1E86                     l3843:
  7834     1E86  09A0               	comf	___fltol@f1,f
  7835     1E87  09A1               	comf	___fltol@f1+1,f
  7836     1E88  09A2               	comf	___fltol@f1+2,f
  7837     1E89  09A3               	comf	___fltol@f1+3,f
  7838     1E8A  0AA0               	incf	___fltol@f1,f
  7839     1E8B  1903               	skipnz
  7840     1E8C  0AA1               	incf	___fltol@f1+1,f
  7841     1E8D  1903               	skipnz
  7842     1E8E  0AA2               	incf	___fltol@f1+2,f
  7843     1E8F  1903               	skipnz
  7844     1E90  0AA3               	incf	___fltol@f1+3,f
  7845     1E91                     l770:
  7846     1E91                     l760:
  7847     1E91  0008               	return
  7848     1E92                     __end_of___fltol:
  7849                           
  7850                           	psect	text13
  7851     1A64                     __ptext13:	
  7852 ;; *************** function ___flsub *****************
  7853 ;; Defined at:
  7854 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;  a               4   35[BANK0 ] long 
  7857 ;;  b               4   39[BANK0 ] long 
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;		None
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  4   35[BANK0 ] long 
  7862 ;; Registers used:
  7863 ;;		wreg, status,2, status,0, pclath, cstack
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7869 ;;      Params:         0       8       0       0       0       0       0       0
  7870 ;;      Locals:         0       0       0       0       0       0       0       0
  7871 ;;      Temps:          0       0       0       0       0       0       0       0
  7872 ;;      Totals:         0       8       0       0       0       0       0       0
  7873 ;;Total ram usage:        8 bytes
  7874 ;; Hardware stack levels used: 1
  7875 ;; Hardware stack levels required when called: 5
  7876 ;; This function calls:
  7877 ;;		___fladd
  7878 ;; This function is called by:
  7879 ;;		_efgtoa
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883     1A64                     ___flsub:	
  7884                           ;psect for function ___flsub
  7885                           
  7886     1A64                     l3845:	
  7887                           ;incstack = 0
  7888                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7889                           
  7890     1A64  3080               	movlw	128
  7891     1A65  0020               	movlb	0	; select bank0
  7892     1A66  06C6               	xorwf	___flsub@a+3,f
  7893     1A67                     l3847:
  7894     1A67  084A               	movf	___flsub@b+3,w
  7895     1A68  00A3               	movwf	___fladd@b+3
  7896     1A69  0849               	movf	___flsub@b+2,w
  7897     1A6A  00A2               	movwf	___fladd@b+2
  7898     1A6B  0848               	movf	___flsub@b+1,w
  7899     1A6C  00A1               	movwf	___fladd@b+1
  7900     1A6D  0847               	movf	___flsub@b,w
  7901     1A6E  00A0               	movwf	___fladd@b
  7902     1A6F  0846               	movf	___flsub@a+3,w
  7903     1A70  00A7               	movwf	___fladd@a+3
  7904     1A71  0845               	movf	___flsub@a+2,w
  7905     1A72  00A6               	movwf	___fladd@a+2
  7906     1A73  0844               	movf	___flsub@a+1,w
  7907     1A74  00A5               	movwf	___fladd@a+1
  7908     1A75  0843               	movf	___flsub@a,w
  7909     1A76  00A4               	movwf	___fladd@a
  7910     1A77  3195  25F8  319A   	fcall	___fladd
  7911     1A7A  0020               	movlb	0	; select bank0
  7912     1A7B  0823               	movf	?___fladd+3,w
  7913     1A7C  00C6               	movwf	?___flsub+3
  7914     1A7D  0822               	movf	?___fladd+2,w
  7915     1A7E  00C5               	movwf	?___flsub+2
  7916     1A7F  0821               	movf	?___fladd+1,w
  7917     1A80  00C4               	movwf	?___flsub+1
  7918     1A81  0820               	movf	?___fladd,w
  7919     1A82  00C3               	movwf	?___flsub
  7920     1A83                     l913:
  7921     1A83  0008               	return
  7922     1A84                     __end_of___flsub:
  7923                           
  7924                           	psect	text14
  7925     15F8                     __ptext14:	
  7926 ;; *************** function ___fladd *****************
  7927 ;; Defined at:
  7928 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;  b               4    0[BANK0 ] long 
  7931 ;;  a               4    4[BANK0 ] long 
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;  grs             1   19[BANK0 ] unsigned char 
  7934 ;;  bexp            1   18[BANK0 ] unsigned char 
  7935 ;;  aexp            1   17[BANK0 ] unsigned char 
  7936 ;;  signs           1   16[BANK0 ] unsigned char 
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  4    0[BANK0 ] unsigned char 
  7939 ;; Registers used:
  7940 ;;		wreg, status,2, status,0
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7946 ;;      Params:         0       8       0       0       0       0       0       0
  7947 ;;      Locals:         0       4       0       0       0       0       0       0
  7948 ;;      Temps:          0       8       0       0       0       0       0       0
  7949 ;;      Totals:         0      20       0       0       0       0       0       0
  7950 ;;Total ram usage:       20 bytes
  7951 ;; Hardware stack levels used: 1
  7952 ;; Hardware stack levels required when called: 4
  7953 ;; This function calls:
  7954 ;;		Nothing
  7955 ;; This function is called by:
  7956 ;;		___flsub
  7957 ;;		_efgtoa
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961     15F8                     ___fladd:	
  7962                           ;psect for function ___fladd
  7963                           
  7964     15F8                     l3457:	
  7965                           ;incstack = 0
  7966                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7967                           
  7968     15F8  0020               	movlb	0	; select bank0
  7969     15F9  0823               	movf	___fladd@b+3,w
  7970     15FA  3980               	andlw	128
  7971     15FB  00B0               	movwf	___fladd@signs
  7972     15FC                     l3459:
  7973     15FC  3523               	lslf	___fladd@b+3,w
  7974     15FD  00B2               	movwf	___fladd@bexp
  7975     15FE                     l3461:
  7976     15FE  1FA2               	btfss	___fladd@b+2,7
  7977     15FF  2E01               	goto	u3341
  7978     1600  2E02               	goto	u3340
  7979     1601                     u3341:
  7980     1601  2E03               	goto	l3465
  7981     1602                     u3340:
  7982     1602                     l3463:
  7983     1602  1432               	bsf	___fladd@bexp,0
  7984     1603                     l3465:
  7985     1603  0832               	movf	___fladd@bexp,w
  7986     1604  1903               	btfsc	3,2
  7987     1605  2E07               	goto	u3351
  7988     1606  2E08               	goto	u3350
  7989     1607                     u3351:
  7990     1607  2E18               	goto	l3475
  7991     1608                     u3350:
  7992     1608                     l3467:
  7993     1608  0A32               	incf	___fladd@bexp,w
  7994     1609  1D03               	btfss	3,2
  7995     160A  2E0C               	goto	u3361
  7996     160B  2E0D               	goto	u3360
  7997     160C                     u3361:
  7998     160C  2E15               	goto	l3471
  7999     160D                     u3360:
  8000     160D                     l3469:
  8001     160D  3000               	movlw	0
  8002     160E  00A3               	movwf	___fladd@b+3
  8003     160F  3000               	movlw	0
  8004     1610  00A2               	movwf	___fladd@b+2
  8005     1611  3000               	movlw	0
  8006     1612  00A1               	movwf	___fladd@b+1
  8007     1613  3000               	movlw	0
  8008     1614  00A0               	movwf	___fladd@b
  8009     1615                     l3471:
  8010     1615  17A2               	bsf	___fladd@b+2,7
  8011     1616                     l3473:
  8012     1616  01A3               	clrf	___fladd@b+3
  8013     1617  2E20               	goto	l3477
  8014     1618                     l3475:
  8015     1618  3000               	movlw	0
  8016     1619  00A3               	movwf	___fladd@b+3
  8017     161A  3000               	movlw	0
  8018     161B  00A2               	movwf	___fladd@b+2
  8019     161C  3000               	movlw	0
  8020     161D  00A1               	movwf	___fladd@b+1
  8021     161E  3000               	movlw	0
  8022     161F  00A0               	movwf	___fladd@b
  8023     1620                     l3477:
  8024     1620  0827               	movf	___fladd@a+3,w
  8025     1621  3980               	andlw	128
  8026     1622  00B1               	movwf	___fladd@aexp
  8027     1623                     l3479:
  8028     1623  0831               	movf	___fladd@aexp,w
  8029     1624  0630               	xorwf	___fladd@signs,w
  8030     1625  1903               	skipnz
  8031     1626  2E28               	goto	u3371
  8032     1627  2E29               	goto	u3370
  8033     1628                     u3371:
  8034     1628  2E2A               	goto	l3483
  8035     1629                     u3370:
  8036     1629                     l3481:
  8037     1629  1730               	bsf	___fladd@signs,6
  8038     162A                     l3483:
  8039     162A  3527               	lslf	___fladd@a+3,w
  8040     162B  00B1               	movwf	___fladd@aexp
  8041     162C                     l3485:
  8042     162C  1FA6               	btfss	___fladd@a+2,7
  8043     162D  2E2F               	goto	u3381
  8044     162E  2E30               	goto	u3380
  8045     162F                     u3381:
  8046     162F  2E31               	goto	l3489
  8047     1630                     u3380:
  8048     1630                     l3487:
  8049     1630  1431               	bsf	___fladd@aexp,0
  8050     1631                     l3489:
  8051     1631  0831               	movf	___fladd@aexp,w
  8052     1632  1903               	btfsc	3,2
  8053     1633  2E35               	goto	u3391
  8054     1634  2E36               	goto	u3390
  8055     1635                     u3391:
  8056     1635  2E46               	goto	l3499
  8057     1636                     u3390:
  8058     1636                     l3491:
  8059     1636  0A31               	incf	___fladd@aexp,w
  8060     1637  1D03               	btfss	3,2
  8061     1638  2E3A               	goto	u3401
  8062     1639  2E3B               	goto	u3400
  8063     163A                     u3401:
  8064     163A  2E43               	goto	l3495
  8065     163B                     u3400:
  8066     163B                     l3493:
  8067     163B  3000               	movlw	0
  8068     163C  00A7               	movwf	___fladd@a+3
  8069     163D  3000               	movlw	0
  8070     163E  00A6               	movwf	___fladd@a+2
  8071     163F  3000               	movlw	0
  8072     1640  00A5               	movwf	___fladd@a+1
  8073     1641  3000               	movlw	0
  8074     1642  00A4               	movwf	___fladd@a
  8075     1643                     l3495:
  8076     1643  17A6               	bsf	___fladd@a+2,7
  8077     1644                     l3497:
  8078     1644  01A7               	clrf	___fladd@a+3
  8079     1645  2E4E               	goto	l867
  8080     1646                     l3499:
  8081     1646  3000               	movlw	0
  8082     1647  00A7               	movwf	___fladd@a+3
  8083     1648  3000               	movlw	0
  8084     1649  00A6               	movwf	___fladd@a+2
  8085     164A  3000               	movlw	0
  8086     164B  00A5               	movwf	___fladd@a+1
  8087     164C  3000               	movlw	0
  8088     164D  00A4               	movwf	___fladd@a
  8089     164E                     l867:
  8090     164E  0832               	movf	___fladd@bexp,w
  8091     164F  0231               	subwf	___fladd@aexp,w
  8092     1650  1803               	skipnc
  8093     1651  2E53               	goto	u3411
  8094     1652  2E54               	goto	u3410
  8095     1653                     u3411:
  8096     1653  2E7A               	goto	l3535
  8097     1654                     u3410:
  8098     1654                     l3501:
  8099     1654  1F30               	btfss	___fladd@signs,6
  8100     1655  2E57               	goto	u3421
  8101     1656  2E58               	goto	u3420
  8102     1657                     u3421:
  8103     1657  2E5C               	goto	l3505
  8104     1658                     u3420:
  8105     1658                     l3503:
  8106     1658  3080               	movlw	128
  8107     1659  00A8               	movwf	??___fladd
  8108     165A  0828               	movf	??___fladd,w
  8109     165B  06B0               	xorwf	___fladd@signs,f
  8110     165C                     l3505:
  8111     165C  0832               	movf	___fladd@bexp,w
  8112     165D  00B3               	movwf	___fladd@grs
  8113     165E                     l3507:
  8114     165E  0831               	movf	___fladd@aexp,w
  8115     165F  00B2               	movwf	___fladd@bexp
  8116     1660                     l3509:
  8117     1660  0833               	movf	___fladd@grs,w
  8118     1661  00B1               	movwf	___fladd@aexp
  8119     1662                     l3511:
  8120     1662  0820               	movf	___fladd@b,w
  8121     1663  00B3               	movwf	___fladd@grs
  8122     1664                     l3513:
  8123     1664  0824               	movf	___fladd@a,w
  8124     1665  00A0               	movwf	___fladd@b
  8125     1666                     l3515:
  8126     1666  0833               	movf	___fladd@grs,w
  8127     1667  00A4               	movwf	___fladd@a
  8128     1668                     l3517:
  8129     1668  0821               	movf	___fladd@b+1,w
  8130     1669  00B3               	movwf	___fladd@grs
  8131     166A                     l3519:
  8132     166A  0825               	movf	___fladd@a+1,w
  8133     166B  00A1               	movwf	___fladd@b+1
  8134     166C                     l3521:
  8135     166C  0833               	movf	___fladd@grs,w
  8136     166D  00A5               	movwf	___fladd@a+1
  8137     166E                     l3523:
  8138     166E  0822               	movf	___fladd@b+2,w
  8139     166F  00B3               	movwf	___fladd@grs
  8140     1670                     l3525:
  8141     1670  0826               	movf	___fladd@a+2,w
  8142     1671  00A2               	movwf	___fladd@b+2
  8143     1672                     l3527:
  8144     1672  0833               	movf	___fladd@grs,w
  8145     1673  00A6               	movwf	___fladd@a+2
  8146     1674                     l3529:
  8147     1674  0823               	movf	___fladd@b+3,w
  8148     1675  00B3               	movwf	___fladd@grs
  8149     1676                     l3531:
  8150     1676  0827               	movf	___fladd@a+3,w
  8151     1677  00A3               	movwf	___fladd@b+3
  8152     1678                     l3533:
  8153     1678  0833               	movf	___fladd@grs,w
  8154     1679  00A7               	movwf	___fladd@a+3
  8155     167A                     l3535:
  8156     167A  01B3               	clrf	___fladd@grs
  8157     167B                     l3537:
  8158     167B  0831               	movf	___fladd@aexp,w
  8159     167C  00A8               	movwf	??___fladd
  8160     167D  01A9               	clrf	??___fladd+1
  8161     167E  0829               	movf	??___fladd+1,w
  8162     167F  00AB               	movwf	??___fladd+3
  8163     1680  0832               	movf	___fladd@bexp,w
  8164     1681  0228               	subwf	??___fladd,w
  8165     1682  00AA               	movwf	??___fladd+2
  8166     1683  1C03               	skipc
  8167     1684  03AB               	decf	??___fladd+3,f
  8168     1685  082B               	movf	??___fladd+3,w
  8169     1686  3A80               	xorlw	128
  8170     1687  00AC               	movwf	??___fladd+4
  8171     1688  3080               	movlw	128
  8172     1689  022C               	subwf	??___fladd+4,w
  8173     168A  1D03               	skipz
  8174     168B  2E8E               	goto	u3435
  8175     168C  301A               	movlw	26
  8176     168D  022A               	subwf	??___fladd+2,w
  8177     168E                     u3435:
  8178     168E  1C03               	skipc
  8179     168F  2E91               	goto	u3431
  8180     1690  2E92               	goto	u3430
  8181     1691                     u3431:
  8182     1691  2EC4               	goto	l3553
  8183     1692                     u3430:
  8184     1692                     l3539:
  8185     1692  0020               	movlb	0	; select bank0
  8186     1693  0823               	movf	___fladd@b+3,w
  8187     1694  0422               	iorwf	___fladd@b+2,w
  8188     1695  0421               	iorwf	___fladd@b+1,w
  8189     1696  0420               	iorwf	___fladd@b,w
  8190     1697  1D03               	skipz
  8191     1698  2E9A               	goto	u3441
  8192     1699  2E9C               	goto	u3440
  8193     169A                     u3441:
  8194     169A  3001               	movlw	1
  8195     169B  2E9D               	goto	u3450
  8196     169C                     u3440:
  8197     169C  3000               	movlw	0
  8198     169D                     u3450:
  8199     169D  00B3               	movwf	___fladd@grs
  8200     169E  3000               	movlw	0
  8201     169F  00A3               	movwf	___fladd@b+3
  8202     16A0  3000               	movlw	0
  8203     16A1  00A2               	movwf	___fladd@b+2
  8204     16A2  3000               	movlw	0
  8205     16A3  00A1               	movwf	___fladd@b+1
  8206     16A4  3000               	movlw	0
  8207     16A5  00A0               	movwf	___fladd@b
  8208     16A6  0831               	movf	___fladd@aexp,w
  8209     16A7  00B2               	movwf	___fladd@bexp
  8210     16A8  2ECB               	goto	l871
  8211     16A9                     l873:
  8212     16A9  1C33               	btfss	___fladd@grs,0
  8213     16AA  2EAC               	goto	u3461
  8214     16AB  2EAD               	goto	u3460
  8215     16AC                     u3461:
  8216     16AC  2EB1               	goto	l3543
  8217     16AD                     u3460:
  8218     16AD                     l3541:
  8219     16AD  3633               	lsrf	___fladd@grs,w
  8220     16AE  3801               	iorlw	1
  8221     16AF  00B3               	movwf	___fladd@grs
  8222     16B0  2EB3               	goto	l3545
  8223     16B1                     l3543:
  8224     16B1  1003               	clrc
  8225     16B2  0CB3               	rrf	___fladd@grs,f
  8226     16B3                     l3545:
  8227     16B3  1C20               	btfss	___fladd@b,0
  8228     16B4  2EB6               	goto	u3471
  8229     16B5  2EB7               	goto	u3470
  8230     16B6                     u3471:
  8231     16B6  2EB8               	goto	l3549
  8232     16B7                     u3470:
  8233     16B7                     l3547:
  8234     16B7  17B3               	bsf	___fladd@grs,7
  8235     16B8                     l3549:
  8236     16B8  3001               	movlw	1
  8237     16B9  00A8               	movwf	??___fladd
  8238     16BA                     u3485:
  8239     16BA  37A3               	asrf	___fladd@b+3,f
  8240     16BB  0CA2               	rrf	___fladd@b+2,f
  8241     16BC  0CA1               	rrf	___fladd@b+1,f
  8242     16BD  0CA0               	rrf	___fladd@b,f
  8243     16BE  0BA8               	decfsz	??___fladd& (0+127),f
  8244     16BF  2EBA               	goto	u3485
  8245     16C0                     l3551:
  8246     16C0  3001               	movlw	1
  8247     16C1  00A8               	movwf	??___fladd
  8248     16C2  0828               	movf	??___fladd,w
  8249     16C3  07B2               	addwf	___fladd@bexp,f
  8250     16C4                     l3553:
  8251     16C4  0020               	movlb	0	; select bank0
  8252     16C5  0831               	movf	___fladd@aexp,w
  8253     16C6  0232               	subwf	___fladd@bexp,w
  8254     16C7  1C03               	skipc
  8255     16C8  2ECA               	goto	u3491
  8256     16C9  2ECB               	goto	u3490
  8257     16CA                     u3491:
  8258     16CA  2EA9               	goto	l873
  8259     16CB                     u3490:
  8260     16CB                     l871:
  8261     16CB  1B30               	btfsc	___fladd@signs,6
  8262     16CC  2ECE               	goto	u3501
  8263     16CD  2ECF               	goto	u3500
  8264     16CE                     u3501:
  8265     16CE  2F05               	goto	l3579
  8266     16CF                     u3500:
  8267     16CF                     l3555:
  8268     16CF  0832               	movf	___fladd@bexp,w
  8269     16D0  1D03               	btfss	3,2
  8270     16D1  2ED3               	goto	u3511
  8271     16D2  2ED4               	goto	u3510
  8272     16D3                     u3511:
  8273     16D3  2EDD               	goto	l3561
  8274     16D4                     u3510:
  8275     16D4                     l3557:
  8276     16D4  3000               	movlw	0
  8277     16D5  00A3               	movwf	?___fladd+3
  8278     16D6  3000               	movlw	0
  8279     16D7  00A2               	movwf	?___fladd+2
  8280     16D8  3000               	movlw	0
  8281     16D9  00A1               	movwf	?___fladd+1
  8282     16DA  3000               	movlw	0
  8283     16DB  00A0               	movwf	?___fladd
  8284     16DC  2FFF               	goto	l880
  8285     16DD                     l3561:
  8286     16DD  0824               	movf	___fladd@a,w
  8287     16DE  07A0               	addwf	___fladd@b,f
  8288     16DF  0825               	movf	___fladd@a+1,w
  8289     16E0  3DA1               	addwfc	___fladd@b+1,f
  8290     16E1  0826               	movf	___fladd@a+2,w
  8291     16E2  3DA2               	addwfc	___fladd@b+2,f
  8292     16E3  0827               	movf	___fladd@a+3,w
  8293     16E4  3DA3               	addwfc	___fladd@b+3,f
  8294     16E5                     l3563:
  8295     16E5  1C23               	btfss	___fladd@b+3,0
  8296     16E6  2EE8               	goto	u3521
  8297     16E7  2EE9               	goto	u3520
  8298     16E8                     u3521:
  8299     16E8  2F91               	goto	l3613
  8300     16E9                     u3520:
  8301     16E9                     l3565:
  8302     16E9  1C33               	btfss	___fladd@grs,0
  8303     16EA  2EEC               	goto	u3531
  8304     16EB  2EED               	goto	u3530
  8305     16EC                     u3531:
  8306     16EC  2EF1               	goto	l3569
  8307     16ED                     u3530:
  8308     16ED                     l3567:
  8309     16ED  3633               	lsrf	___fladd@grs,w
  8310     16EE  3801               	iorlw	1
  8311     16EF  00B3               	movwf	___fladd@grs
  8312     16F0  2EF3               	goto	l3571
  8313     16F1                     l3569:
  8314     16F1  1003               	clrc
  8315     16F2  0CB3               	rrf	___fladd@grs,f
  8316     16F3                     l3571:
  8317     16F3  1C20               	btfss	___fladd@b,0
  8318     16F4  2EF6               	goto	u3541
  8319     16F5  2EF7               	goto	u3540
  8320     16F6                     u3541:
  8321     16F6  2EF8               	goto	l3575
  8322     16F7                     u3540:
  8323     16F7                     l3573:
  8324     16F7  17B3               	bsf	___fladd@grs,7
  8325     16F8                     l3575:
  8326     16F8  3001               	movlw	1
  8327     16F9  00A8               	movwf	??___fladd
  8328     16FA                     u3555:
  8329     16FA  37A3               	asrf	___fladd@b+3,f
  8330     16FB  0CA2               	rrf	___fladd@b+2,f
  8331     16FC  0CA1               	rrf	___fladd@b+1,f
  8332     16FD  0CA0               	rrf	___fladd@b,f
  8333     16FE  0BA8               	decfsz	??___fladd& (0+127),f
  8334     16FF  2EFA               	goto	u3555
  8335     1700                     l3577:
  8336     1700  3001               	movlw	1
  8337     1701  00A8               	movwf	??___fladd
  8338     1702  0828               	movf	??___fladd,w
  8339     1703  07B2               	addwf	___fladd@bexp,f
  8340     1704  2F91               	goto	l3613
  8341     1705                     l3579:
  8342     1705  0823               	movf	___fladd@b+3,w
  8343     1706  3A80               	xorlw	128
  8344     1707  00A8               	movwf	??___fladd
  8345     1708  0827               	movf	___fladd@a+3,w
  8346     1709  3A80               	xorlw	128
  8347     170A  0228               	subwf	??___fladd,w
  8348     170B  1D03               	skipz
  8349     170C  2F17               	goto	u3563
  8350     170D  0826               	movf	___fladd@a+2,w
  8351     170E  0222               	subwf	___fladd@b+2,w
  8352     170F  1D03               	skipz
  8353     1710  2F17               	goto	u3563
  8354     1711  0825               	movf	___fladd@a+1,w
  8355     1712  0221               	subwf	___fladd@b+1,w
  8356     1713  1D03               	skipz
  8357     1714  2F17               	goto	u3563
  8358     1715  0824               	movf	___fladd@a,w
  8359     1716  0220               	subwf	___fladd@b,w
  8360     1717                     u3563:
  8361     1717  1803               	skipnc
  8362     1718  2F1A               	goto	u3561
  8363     1719  2F1B               	goto	u3560
  8364     171A                     u3561:
  8365     171A  2F53               	goto	l3589
  8366     171B                     u3560:
  8367     171B                     l3581:
  8368     171B  30FF               	movlw	255
  8369     171C  00A8               	movwf	??___fladd
  8370     171D  30FF               	movlw	255
  8371     171E  00A9               	movwf	??___fladd+1
  8372     171F  30FF               	movlw	255
  8373     1720  00AA               	movwf	??___fladd+2
  8374     1721  30FF               	movlw	255
  8375     1722  00AB               	movwf	??___fladd+3
  8376     1723  0820               	movf	___fladd@b,w
  8377     1724  0224               	subwf	___fladd@a,w
  8378     1725  00AC               	movwf	??___fladd+4
  8379     1726  0821               	movf	___fladd@b+1,w
  8380     1727  3B25               	subwfb	___fladd@a+1,w
  8381     1728  00AD               	movwf	??___fladd+5
  8382     1729  0822               	movf	___fladd@b+2,w
  8383     172A  3B26               	subwfb	___fladd@a+2,w
  8384     172B  00AE               	movwf	??___fladd+6
  8385     172C  0823               	movf	___fladd@b+3,w
  8386     172D  3B27               	subwfb	___fladd@a+3,w
  8387     172E  00AF               	movwf	??___fladd+7
  8388     172F  082C               	movf	??___fladd+4,w
  8389     1730  07A8               	addwf	??___fladd,f
  8390     1731  082D               	movf	??___fladd+5,w
  8391     1732  3DA9               	addwfc	??___fladd+1,f
  8392     1733  082E               	movf	??___fladd+6,w
  8393     1734  3DAA               	addwfc	??___fladd+2,f
  8394     1735  082F               	movf	??___fladd+7,w
  8395     1736  3DAB               	addwfc	??___fladd+3,f
  8396     1737  082B               	movf	??___fladd+3,w
  8397     1738  00A3               	movwf	___fladd@b+3
  8398     1739  082A               	movf	??___fladd+2,w
  8399     173A  00A2               	movwf	___fladd@b+2
  8400     173B  0829               	movf	??___fladd+1,w
  8401     173C  00A1               	movwf	___fladd@b+1
  8402     173D  0828               	movf	??___fladd,w
  8403     173E  00A0               	movwf	___fladd@b
  8404     173F                     l3583:
  8405     173F  3080               	movlw	128
  8406     1740  00A8               	movwf	??___fladd
  8407     1741  0828               	movf	??___fladd,w
  8408     1742  06B0               	xorwf	___fladd@signs,f
  8409     1743  09B3               	comf	___fladd@grs,f
  8410     1744  0AB3               	incf	___fladd@grs,f
  8411     1745                     l3585:
  8412     1745  0833               	movf	___fladd@grs,w
  8413     1746  1D03               	btfss	3,2
  8414     1747  2F49               	goto	u3571
  8415     1748  2F4A               	goto	u3570
  8416     1749                     u3571:
  8417     1749  2F5B               	goto	l888
  8418     174A                     u3570:
  8419     174A                     l3587:
  8420     174A  3001               	movlw	1
  8421     174B  07A0               	addwf	___fladd@b,f
  8422     174C  3000               	movlw	0
  8423     174D  3DA1               	addwfc	___fladd@b+1,f
  8424     174E  3000               	movlw	0
  8425     174F  3DA2               	addwfc	___fladd@b+2,f
  8426     1750  3000               	movlw	0
  8427     1751  3DA3               	addwfc	___fladd@b+3,f
  8428     1752  2F5B               	goto	l888
  8429     1753                     l3589:
  8430     1753  0824               	movf	___fladd@a,w
  8431     1754  02A0               	subwf	___fladd@b,f
  8432     1755  0825               	movf	___fladd@a+1,w
  8433     1756  3BA1               	subwfb	___fladd@b+1,f
  8434     1757  0826               	movf	___fladd@a+2,w
  8435     1758  3BA2               	subwfb	___fladd@b+2,f
  8436     1759  0827               	movf	___fladd@a+3,w
  8437     175A  3BA3               	subwfb	___fladd@b+3,f
  8438     175B                     l888:
  8439     175B  0823               	movf	___fladd@b+3,w
  8440     175C  0422               	iorwf	___fladd@b+2,w
  8441     175D  0421               	iorwf	___fladd@b+1,w
  8442     175E  0420               	iorwf	___fladd@b,w
  8443     175F  1D03               	skipz
  8444     1760  2F62               	goto	u3581
  8445     1761  2F63               	goto	u3580
  8446     1762                     u3581:
  8447     1762  2F8D               	goto	l3611
  8448     1763                     u3580:
  8449     1763                     l3591:
  8450     1763  0833               	movf	___fladd@grs,w
  8451     1764  1D03               	btfss	3,2
  8452     1765  2F67               	goto	u3591
  8453     1766  2F68               	goto	u3590
  8454     1767                     u3591:
  8455     1767  2F8D               	goto	l3611
  8456     1768                     u3590:
  8457     1768                     l3593:
  8458     1768  3000               	movlw	0
  8459     1769  00A3               	movwf	?___fladd+3
  8460     176A  3000               	movlw	0
  8461     176B  00A2               	movwf	?___fladd+2
  8462     176C  3000               	movlw	0
  8463     176D  00A1               	movwf	?___fladd+1
  8464     176E  3000               	movlw	0
  8465     176F  00A0               	movwf	?___fladd
  8466     1770  2FFF               	goto	l880
  8467     1771                     l3597:
  8468     1771  3001               	movlw	1
  8469     1772                     u3605:
  8470     1772  35A0               	lslf	___fladd@b,f
  8471     1773  0DA1               	rlf	___fladd@b+1,f
  8472     1774  0DA2               	rlf	___fladd@b+2,f
  8473     1775  0DA3               	rlf	___fladd@b+3,f
  8474     1776  0B89               	decfsz	9,f
  8475     1777  2F72               	goto	u3605
  8476     1778                     l3599:
  8477     1778  1FB3               	btfss	___fladd@grs,7
  8478     1779  2F7B               	goto	u3611
  8479     177A  2F7C               	goto	u3610
  8480     177B                     u3611:
  8481     177B  2F7D               	goto	l892
  8482     177C                     u3610:
  8483     177C                     l3601:
  8484     177C  1420               	bsf	___fladd@b,0
  8485     177D                     l892:
  8486     177D  1C33               	btfss	___fladd@grs,0
  8487     177E  2F80               	goto	u3621
  8488     177F  2F81               	goto	u3620
  8489     1780                     u3621:
  8490     1780  2F84               	goto	l3605
  8491     1781                     u3620:
  8492     1781                     l3603:
  8493     1781  1403               	setc
  8494     1782  0DB3               	rlf	___fladd@grs,f
  8495     1783  2F86               	goto	l3607
  8496     1784                     l3605:
  8497     1784  1003               	clrc
  8498     1785  0DB3               	rlf	___fladd@grs,f
  8499     1786                     l3607:
  8500     1786  0832               	movf	___fladd@bexp,w
  8501     1787  1903               	btfsc	3,2
  8502     1788  2F8A               	goto	u3631
  8503     1789  2F8B               	goto	u3630
  8504     178A                     u3631:
  8505     178A  2F8D               	goto	l3611
  8506     178B                     u3630:
  8507     178B                     l3609:
  8508     178B  3001               	movlw	1
  8509     178C  02B2               	subwf	___fladd@bexp,f
  8510     178D                     l3611:
  8511     178D  1FA2               	btfss	___fladd@b+2,7
  8512     178E  2F90               	goto	u3641
  8513     178F  2F91               	goto	u3640
  8514     1790                     u3641:
  8515     1790  2F71               	goto	l3597
  8516     1791                     u3640:
  8517     1791                     l3613:
  8518     1791  01B1               	clrf	___fladd@aexp
  8519     1792                     l3615:
  8520     1792  1FB3               	btfss	___fladd@grs,7
  8521     1793  2F95               	goto	u3651
  8522     1794  2F96               	goto	u3650
  8523     1795                     u3651:
  8524     1795  2FA4               	goto	l3623
  8525     1796                     u3650:
  8526     1796                     l3617:
  8527     1796  0833               	movf	___fladd@grs,w
  8528     1797  397F               	andlw	127
  8529     1798  1903               	btfsc	3,2
  8530     1799  2F9B               	goto	u3661
  8531     179A  2F9C               	goto	u3660
  8532     179B                     u3661:
  8533     179B  2F9F               	goto	l898
  8534     179C                     u3660:
  8535     179C                     l3619:
  8536     179C  01B1               	clrf	___fladd@aexp
  8537     179D  0AB1               	incf	___fladd@aexp,f
  8538     179E  2FA4               	goto	l3623
  8539     179F                     l898:
  8540     179F  1C20               	btfss	___fladd@b,0
  8541     17A0  2FA2               	goto	u3671
  8542     17A1  2FA3               	goto	u3670
  8543     17A2                     u3671:
  8544     17A2  2FA4               	goto	l3623
  8545     17A3                     u3670:
  8546     17A3  2F9C               	goto	l3619
  8547     17A4                     l3623:
  8548     17A4  0831               	movf	___fladd@aexp,w
  8549     17A5  1903               	btfsc	3,2
  8550     17A6  2FA8               	goto	u3681
  8551     17A7  2FA9               	goto	u3680
  8552     17A8                     u3681:
  8553     17A8  2FD6               	goto	l901
  8554     17A9                     u3680:
  8555     17A9                     l3625:
  8556     17A9  3001               	movlw	1
  8557     17AA  07A0               	addwf	___fladd@b,f
  8558     17AB  3000               	movlw	0
  8559     17AC  3DA1               	addwfc	___fladd@b+1,f
  8560     17AD  3000               	movlw	0
  8561     17AE  3DA2               	addwfc	___fladd@b+2,f
  8562     17AF  3000               	movlw	0
  8563     17B0  3DA3               	addwfc	___fladd@b+3,f
  8564     17B1                     l3627:
  8565     17B1  1C23               	btfss	___fladd@b+3,0
  8566     17B2  2FB4               	goto	u3691
  8567     17B3  2FB5               	goto	u3690
  8568     17B4                     u3691:
  8569     17B4  2FD6               	goto	l901
  8570     17B5                     u3690:
  8571     17B5                     l3629:
  8572     17B5  0820               	movf	___fladd@b,w
  8573     17B6  00A8               	movwf	??___fladd
  8574     17B7  0821               	movf	___fladd@b+1,w
  8575     17B8  00A9               	movwf	??___fladd+1
  8576     17B9  0822               	movf	___fladd@b+2,w
  8577     17BA  00AA               	movwf	??___fladd+2
  8578     17BB  0823               	movf	___fladd@b+3,w
  8579     17BC  00AB               	movwf	??___fladd+3
  8580     17BD  3001               	movlw	1
  8581     17BE  00AC               	movwf	??___fladd+4
  8582     17BF                     u3705:
  8583     17BF  37AB               	asrf	??___fladd+3,f
  8584     17C0  0CAA               	rrf	??___fladd+2,f
  8585     17C1  0CA9               	rrf	??___fladd+1,f
  8586     17C2  0CA8               	rrf	??___fladd,f
  8587     17C3                     u3700:
  8588     17C3  0BAC               	decfsz	??___fladd+4,f
  8589     17C4  2FBF               	goto	u3705
  8590     17C5  082B               	movf	??___fladd+3,w
  8591     17C6  00A3               	movwf	___fladd@b+3
  8592     17C7  082A               	movf	??___fladd+2,w
  8593     17C8  00A2               	movwf	___fladd@b+2
  8594     17C9  0829               	movf	??___fladd+1,w
  8595     17CA  00A1               	movwf	___fladd@b+1
  8596     17CB  0828               	movf	??___fladd,w
  8597     17CC  00A0               	movwf	___fladd@b
  8598     17CD  0A32               	incf	___fladd@bexp,w
  8599     17CE  1903               	btfsc	3,2
  8600     17CF  2FD1               	goto	u3711
  8601     17D0  2FD2               	goto	u3710
  8602     17D1                     u3711:
  8603     17D1  2FD6               	goto	l901
  8604     17D2                     u3710:
  8605     17D2                     l3631:
  8606     17D2  3001               	movlw	1
  8607     17D3  00A8               	movwf	??___fladd
  8608     17D4  0828               	movf	??___fladd,w
  8609     17D5  07B2               	addwf	___fladd@bexp,f
  8610     17D6                     l901:
  8611     17D6  0A32               	incf	___fladd@bexp,w
  8612     17D7  1903               	btfsc	3,2
  8613     17D8  2FDA               	goto	u3721
  8614     17D9  2FDB               	goto	u3720
  8615     17DA                     u3721:
  8616     17DA  2FE0               	goto	l3635
  8617     17DB                     u3720:
  8618     17DB                     l3633:
  8619     17DB  0832               	movf	___fladd@bexp,w
  8620     17DC  1D03               	btfss	3,2
  8621     17DD  2FDF               	goto	u3731
  8622     17DE  2FE0               	goto	u3730
  8623     17DF                     u3731:
  8624     17DF  2FEE               	goto	l3641
  8625     17E0                     u3730:
  8626     17E0                     l3635:
  8627     17E0  3000               	movlw	0
  8628     17E1  00A3               	movwf	___fladd@b+3
  8629     17E2  3000               	movlw	0
  8630     17E3  00A2               	movwf	___fladd@b+2
  8631     17E4  3000               	movlw	0
  8632     17E5  00A1               	movwf	___fladd@b+1
  8633     17E6  3000               	movlw	0
  8634     17E7  00A0               	movwf	___fladd@b
  8635     17E8                     l3637:
  8636     17E8  0832               	movf	___fladd@bexp,w
  8637     17E9  1D03               	btfss	3,2
  8638     17EA  2FEC               	goto	u3741
  8639     17EB  2FED               	goto	u3740
  8640     17EC                     u3741:
  8641     17EC  2FEE               	goto	l3641
  8642     17ED                     u3740:
  8643     17ED                     l3639:
  8644     17ED  01B0               	clrf	___fladd@signs
  8645     17EE                     l3641:
  8646     17EE  1C32               	btfss	___fladd@bexp,0
  8647     17EF  2FF1               	goto	u3751
  8648     17F0  2FF2               	goto	u3750
  8649     17F1                     u3751:
  8650     17F1  2FF4               	goto	l3645
  8651     17F2                     u3750:
  8652     17F2                     l3643:
  8653     17F2  17A2               	bsf	___fladd@b+2,7
  8654     17F3  2FF8               	goto	l909
  8655     17F4                     l3645:
  8656     17F4  307F               	movlw	127
  8657     17F5  00A8               	movwf	??___fladd
  8658     17F6  0828               	movf	??___fladd,w
  8659     17F7  05A2               	andwf	___fladd@b+2,f
  8660     17F8                     l909:
  8661     17F8  3632               	lsrf	___fladd@bexp,w
  8662     17F9  00A3               	movwf	___fladd@b+3
  8663     17FA                     l3647:
  8664     17FA  1FB0               	btfss	___fladd@signs,7
  8665     17FB  2FFD               	goto	u3761
  8666     17FC  2FFE               	goto	u3760
  8667     17FD                     u3761:
  8668     17FD  2FFF               	goto	l910
  8669     17FE                     u3760:
  8670     17FE                     l3649:
  8671     17FE  17A3               	bsf	___fladd@b+3,7
  8672     17FF                     l910:
  8673     17FF                     l880:
  8674     17FF  0008               	return
  8675     1800                     __end_of___fladd:
  8676                           
  8677                           	psect	text15
  8678     198D                     __ptext15:	
  8679 ;; *************** function ___flneg *****************
  8680 ;; Defined at:
  8681 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;  f1              4    0[BANK0 ] unsigned char 
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;		None
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  4    0[BANK0 ] unsigned char 
  8688 ;; Registers used:
  8689 ;;		wreg
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8695 ;;      Params:         0       4       0       0       0       0       0       0
  8696 ;;      Locals:         0       0       0       0       0       0       0       0
  8697 ;;      Temps:          0       0       0       0       0       0       0       0
  8698 ;;      Totals:         0       4       0       0       0       0       0       0
  8699 ;;Total ram usage:        4 bytes
  8700 ;; Hardware stack levels used: 1
  8701 ;; Hardware stack levels required when called: 4
  8702 ;; This function calls:
  8703 ;;		Nothing
  8704 ;; This function is called by:
  8705 ;;		_efgtoa
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709     198D                     ___flneg:	
  8710                           ;psect for function ___flneg
  8711                           
  8712     198D                     l3801:	
  8713                           ;incstack = 0
  8714                           ; Regs used in ___flneg: [wreg]
  8715                           
  8716     198D  0020               	movlb	0	; select bank0
  8717     198E  0823               	movf	___flneg@f1+3,w
  8718     198F  0422               	iorwf	___flneg@f1+2,w
  8719     1990  0421               	iorwf	___flneg@f1+1,w
  8720     1991  0420               	iorwf	___flneg@f1,w
  8721     1992  1903               	skipnz
  8722     1993  2995               	goto	u4121
  8723     1994  2996               	goto	u4120
  8724     1995                     u4121:
  8725     1995  2998               	goto	l3805
  8726     1996                     u4120:
  8727     1996                     l3803:
  8728     1996  3080               	movlw	128
  8729     1997  06A3               	xorwf	___flneg@f1+3,f
  8730     1998                     l3805:
  8731     1998                     l756:
  8732     1998  0008               	return
  8733     1999                     __end_of___flneg:
  8734                           
  8735                           	psect	text16
  8736     04F5                     __ptext16:	
  8737 ;; *************** function ___flmul *****************
  8738 ;; Defined at:
  8739 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  b               4    9[BANK0 ] unsigned char 
  8742 ;;  a               4   13[BANK0 ] unsigned char 
  8743 ;; Auto vars:     Size  Location     Type
  8744 ;;  prod            4   29[BANK0 ] struct .
  8745 ;;  grs             4   23[BANK0 ] unsigned long 
  8746 ;;  temp            2   33[BANK0 ] struct .
  8747 ;;  bexp            1   28[BANK0 ] unsigned char 
  8748 ;;  aexp            1   27[BANK0 ] unsigned char 
  8749 ;;  sign            1   22[BANK0 ] unsigned char 
  8750 ;; Return value:  Size  Location     Type
  8751 ;;                  4    9[BANK0 ] unsigned char 
  8752 ;; Registers used:
  8753 ;;		wreg, status,2, status,0, pclath, cstack
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8759 ;;      Params:         0       8       0       0       0       0       0       0
  8760 ;;      Locals:         0      13       0       0       0       0       0       0
  8761 ;;      Temps:          0       5       0       0       0       0       0       0
  8762 ;;      Totals:         0      26       0       0       0       0       0       0
  8763 ;;Total ram usage:       26 bytes
  8764 ;; Hardware stack levels used: 1
  8765 ;; Hardware stack levels required when called: 5
  8766 ;; This function calls:
  8767 ;;		__Umul8_16
  8768 ;; This function is called by:
  8769 ;;		_efgtoa
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773     04F5                     ___flmul:	
  8774                           ;psect for function ___flmul
  8775                           
  8776     04F5                     l3991:	
  8777                           ;incstack = 0
  8778                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8779                           
  8780     04F5  0020               	movlb	0	; select bank0
  8781     04F6  082C               	movf	___flmul@b+3,w
  8782     04F7  3980               	andlw	128
  8783     04F8  00B6               	movwf	___flmul@sign
  8784     04F9                     l3993:
  8785     04F9  352C               	lslf	___flmul@b+3,w
  8786     04FA  00BC               	movwf	___flmul@bexp
  8787     04FB                     l3995:
  8788     04FB  1FAB               	btfss	___flmul@b+2,7
  8789     04FC  2CFE               	goto	u4521
  8790     04FD  2CFF               	goto	u4520
  8791     04FE                     u4521:
  8792     04FE  2D00               	goto	l3999
  8793     04FF                     u4520:
  8794     04FF                     l3997:
  8795     04FF  143C               	bsf	___flmul@bexp,0
  8796     0500                     l3999:
  8797     0500  083C               	movf	___flmul@bexp,w
  8798     0501  1903               	btfsc	3,2
  8799     0502  2D04               	goto	u4531
  8800     0503  2D05               	goto	u4530
  8801     0504                     u4531:
  8802     0504  2D14               	goto	l4007
  8803     0505                     u4530:
  8804     0505                     l4001:
  8805     0505  0A3C               	incf	___flmul@bexp,w
  8806     0506  1D03               	btfss	3,2
  8807     0507  2D09               	goto	u4541
  8808     0508  2D0A               	goto	u4540
  8809     0509                     u4541:
  8810     0509  2D12               	goto	l4005
  8811     050A                     u4540:
  8812     050A                     l4003:
  8813     050A  3000               	movlw	0
  8814     050B  00AC               	movwf	___flmul@b+3
  8815     050C  3000               	movlw	0
  8816     050D  00AB               	movwf	___flmul@b+2
  8817     050E  3000               	movlw	0
  8818     050F  00AA               	movwf	___flmul@b+1
  8819     0510  3000               	movlw	0
  8820     0511  00A9               	movwf	___flmul@b
  8821     0512                     l4005:
  8822     0512  17AB               	bsf	___flmul@b+2,7
  8823     0513  2D1C               	goto	l4009
  8824     0514                     l4007:
  8825     0514  3000               	movlw	0
  8826     0515  00AC               	movwf	___flmul@b+3
  8827     0516  3000               	movlw	0
  8828     0517  00AB               	movwf	___flmul@b+2
  8829     0518  3000               	movlw	0
  8830     0519  00AA               	movwf	___flmul@b+1
  8831     051A  3000               	movlw	0
  8832     051B  00A9               	movwf	___flmul@b
  8833     051C                     l4009:
  8834     051C  0830               	movf	___flmul@a+3,w
  8835     051D  3980               	andlw	128
  8836     051E  00B1               	movwf	??___flmul
  8837     051F  0831               	movf	??___flmul,w
  8838     0520  06B6               	xorwf	___flmul@sign,f
  8839     0521                     l4011:
  8840     0521  3530               	lslf	___flmul@a+3,w
  8841     0522  00BB               	movwf	___flmul@aexp
  8842     0523                     l4013:
  8843     0523  1FAF               	btfss	___flmul@a+2,7
  8844     0524  2D26               	goto	u4551
  8845     0525  2D27               	goto	u4550
  8846     0526                     u4551:
  8847     0526  2D28               	goto	l4017
  8848     0527                     u4550:
  8849     0527                     l4015:
  8850     0527  143B               	bsf	___flmul@aexp,0
  8851     0528                     l4017:
  8852     0528  083B               	movf	___flmul@aexp,w
  8853     0529  1903               	btfsc	3,2
  8854     052A  2D2C               	goto	u4561
  8855     052B  2D2D               	goto	u4560
  8856     052C                     u4561:
  8857     052C  2D3C               	goto	l4025
  8858     052D                     u4560:
  8859     052D                     l4019:
  8860     052D  0A3B               	incf	___flmul@aexp,w
  8861     052E  1D03               	btfss	3,2
  8862     052F  2D31               	goto	u4571
  8863     0530  2D32               	goto	u4570
  8864     0531                     u4571:
  8865     0531  2D3A               	goto	l4023
  8866     0532                     u4570:
  8867     0532                     l4021:
  8868     0532  3000               	movlw	0
  8869     0533  00B0               	movwf	___flmul@a+3
  8870     0534  3000               	movlw	0
  8871     0535  00AF               	movwf	___flmul@a+2
  8872     0536  3000               	movlw	0
  8873     0537  00AE               	movwf	___flmul@a+1
  8874     0538  3000               	movlw	0
  8875     0539  00AD               	movwf	___flmul@a
  8876     053A                     l4023:
  8877     053A  17AF               	bsf	___flmul@a+2,7
  8878     053B  2D44               	goto	l4027
  8879     053C                     l4025:
  8880     053C  3000               	movlw	0
  8881     053D  00B0               	movwf	___flmul@a+3
  8882     053E  3000               	movlw	0
  8883     053F  00AF               	movwf	___flmul@a+2
  8884     0540  3000               	movlw	0
  8885     0541  00AE               	movwf	___flmul@a+1
  8886     0542  3000               	movlw	0
  8887     0543  00AD               	movwf	___flmul@a
  8888     0544                     l4027:
  8889     0544  083B               	movf	___flmul@aexp,w
  8890     0545  1903               	btfsc	3,2
  8891     0546  2D48               	goto	u4581
  8892     0547  2D49               	goto	u4580
  8893     0548                     u4581:
  8894     0548  2D4E               	goto	l4031
  8895     0549                     u4580:
  8896     0549                     l4029:
  8897     0549  083C               	movf	___flmul@bexp,w
  8898     054A  1D03               	btfss	3,2
  8899     054B  2D4D               	goto	u4591
  8900     054C  2D4E               	goto	u4590
  8901     054D                     u4591:
  8902     054D  2D57               	goto	l4035
  8903     054E                     u4590:
  8904     054E                     l4031:
  8905     054E  3000               	movlw	0
  8906     054F  00AC               	movwf	?___flmul+3
  8907     0550  3000               	movlw	0
  8908     0551  00AB               	movwf	?___flmul+2
  8909     0552  3000               	movlw	0
  8910     0553  00AA               	movwf	?___flmul+1
  8911     0554  3000               	movlw	0
  8912     0555  00A9               	movwf	?___flmul
  8913     0556  2F2F               	goto	l963
  8914     0557                     l4035:
  8915     0557  0829               	movf	___flmul@b,w
  8916     0558  00A0               	movwf	__Umul8_16@multiplicand
  8917     0559  082F               	movf	___flmul@a+2,w
  8918     055A  319A  22EA  3184   	fcall	__Umul8_16
  8919     055D  0020               	movlb	0	; select bank0
  8920     055E  0821               	movf	?__Umul8_16+1,w
  8921     055F  00C2               	movwf	___flmul@temp+1
  8922     0560  0820               	movf	?__Umul8_16,w
  8923     0561  00C1               	movwf	___flmul@temp
  8924     0562                     l4037:
  8925     0562  0841               	movf	___flmul@temp,w
  8926     0563  00B1               	movwf	??___flmul
  8927     0564  01B2               	clrf	??___flmul+1
  8928     0565  01B3               	clrf	??___flmul+2
  8929     0566  01B4               	clrf	??___flmul+3
  8930     0567  0834               	movf	??___flmul+3,w
  8931     0568  00BA               	movwf	___flmul@grs+3
  8932     0569  0833               	movf	??___flmul+2,w
  8933     056A  00B9               	movwf	___flmul@grs+2
  8934     056B  0832               	movf	??___flmul+1,w
  8935     056C  00B8               	movwf	___flmul@grs+1
  8936     056D  0831               	movf	??___flmul,w
  8937     056E  00B7               	movwf	___flmul@grs
  8938     056F                     l4039:
  8939     056F  0842               	movf	___flmul@temp+1,w
  8940     0570  00B1               	movwf	??___flmul
  8941     0571  01B2               	clrf	??___flmul+1
  8942     0572  01B3               	clrf	??___flmul+2
  8943     0573  01B4               	clrf	??___flmul+3
  8944     0574  0834               	movf	??___flmul+3,w
  8945     0575  00C0               	movwf	___flmul@prod+3
  8946     0576  0833               	movf	??___flmul+2,w
  8947     0577  00BF               	movwf	___flmul@prod+2
  8948     0578  0832               	movf	??___flmul+1,w
  8949     0579  00BE               	movwf	___flmul@prod+1
  8950     057A  0831               	movf	??___flmul,w
  8951     057B  00BD               	movwf	___flmul@prod
  8952     057C  082A               	movf	___flmul@b+1,w
  8953     057D  00A0               	movwf	__Umul8_16@multiplicand
  8954     057E  082E               	movf	___flmul@a+1,w
  8955     057F  319A  22EA  3184   	fcall	__Umul8_16
  8956     0582  0020               	movlb	0	; select bank0
  8957     0583  0821               	movf	?__Umul8_16+1,w
  8958     0584  00C2               	movwf	___flmul@temp+1
  8959     0585  0820               	movf	?__Umul8_16,w
  8960     0586  00C1               	movwf	___flmul@temp
  8961     0587                     l4041:
  8962     0587  0841               	movf	___flmul@temp,w
  8963     0588  00B1               	movwf	??___flmul
  8964     0589  01B2               	clrf	??___flmul+1
  8965     058A  01B3               	clrf	??___flmul+2
  8966     058B  01B4               	clrf	??___flmul+3
  8967     058C  0831               	movf	??___flmul,w
  8968     058D  07B7               	addwf	___flmul@grs,f
  8969     058E  0832               	movf	??___flmul+1,w
  8970     058F  3DB8               	addwfc	___flmul@grs+1,f
  8971     0590  0833               	movf	??___flmul+2,w
  8972     0591  3DB9               	addwfc	___flmul@grs+2,f
  8973     0592  0834               	movf	??___flmul+3,w
  8974     0593  3DBA               	addwfc	___flmul@grs+3,f
  8975     0594                     l4043:
  8976     0594  0842               	movf	___flmul@temp+1,w
  8977     0595  00B1               	movwf	??___flmul
  8978     0596  01B2               	clrf	??___flmul+1
  8979     0597  01B3               	clrf	??___flmul+2
  8980     0598  01B4               	clrf	??___flmul+3
  8981     0599  0831               	movf	??___flmul,w
  8982     059A  07BD               	addwf	___flmul@prod,f
  8983     059B  0832               	movf	??___flmul+1,w
  8984     059C  3DBE               	addwfc	___flmul@prod+1,f
  8985     059D  0833               	movf	??___flmul+2,w
  8986     059E  3DBF               	addwfc	___flmul@prod+2,f
  8987     059F  0834               	movf	??___flmul+3,w
  8988     05A0  3DC0               	addwfc	___flmul@prod+3,f
  8989     05A1  082B               	movf	___flmul@b+2,w
  8990     05A2  00A0               	movwf	__Umul8_16@multiplicand
  8991     05A3  082D               	movf	___flmul@a,w
  8992     05A4  319A  22EA  3184   	fcall	__Umul8_16
  8993     05A7  0020               	movlb	0	; select bank0
  8994     05A8  0821               	movf	?__Umul8_16+1,w
  8995     05A9  00C2               	movwf	___flmul@temp+1
  8996     05AA  0820               	movf	?__Umul8_16,w
  8997     05AB  00C1               	movwf	___flmul@temp
  8998     05AC                     l4045:
  8999     05AC  0841               	movf	___flmul@temp,w
  9000     05AD  00B1               	movwf	??___flmul
  9001     05AE  01B2               	clrf	??___flmul+1
  9002     05AF  01B3               	clrf	??___flmul+2
  9003     05B0  01B4               	clrf	??___flmul+3
  9004     05B1  0831               	movf	??___flmul,w
  9005     05B2  07B7               	addwf	___flmul@grs,f
  9006     05B3  0832               	movf	??___flmul+1,w
  9007     05B4  3DB8               	addwfc	___flmul@grs+1,f
  9008     05B5  0833               	movf	??___flmul+2,w
  9009     05B6  3DB9               	addwfc	___flmul@grs+2,f
  9010     05B7  0834               	movf	??___flmul+3,w
  9011     05B8  3DBA               	addwfc	___flmul@grs+3,f
  9012     05B9                     l4047:
  9013     05B9  0842               	movf	___flmul@temp+1,w
  9014     05BA  00B1               	movwf	??___flmul
  9015     05BB  01B2               	clrf	??___flmul+1
  9016     05BC  01B3               	clrf	??___flmul+2
  9017     05BD  01B4               	clrf	??___flmul+3
  9018     05BE  0831               	movf	??___flmul,w
  9019     05BF  07BD               	addwf	___flmul@prod,f
  9020     05C0  0832               	movf	??___flmul+1,w
  9021     05C1  3DBE               	addwfc	___flmul@prod+1,f
  9022     05C2  0833               	movf	??___flmul+2,w
  9023     05C3  3DBF               	addwfc	___flmul@prod+2,f
  9024     05C4  0834               	movf	??___flmul+3,w
  9025     05C5  3DC0               	addwfc	___flmul@prod+3,f
  9026     05C6                     l4049:
  9027     05C6  3008               	movlw	8
  9028     05C7                     u4605:
  9029     05C7  35B7               	lslf	___flmul@grs,f
  9030     05C8  0DB8               	rlf	___flmul@grs+1,f
  9031     05C9  0DB9               	rlf	___flmul@grs+2,f
  9032     05CA  0DBA               	rlf	___flmul@grs+3,f
  9033     05CB  0B89               	decfsz	9,f
  9034     05CC  2DC7               	goto	u4605
  9035     05CD                     l4051:
  9036     05CD  082A               	movf	___flmul@b+1,w
  9037     05CE  00A0               	movwf	__Umul8_16@multiplicand
  9038     05CF  082D               	movf	___flmul@a,w
  9039     05D0  319A  22EA  3184   	fcall	__Umul8_16
  9040     05D3  0020               	movlb	0	; select bank0
  9041     05D4  0821               	movf	?__Umul8_16+1,w
  9042     05D5  00C2               	movwf	___flmul@temp+1
  9043     05D6  0820               	movf	?__Umul8_16,w
  9044     05D7  00C1               	movwf	___flmul@temp
  9045     05D8                     l4053:
  9046     05D8  0841               	movf	___flmul@temp,w
  9047     05D9  07B7               	addwf	___flmul@grs,f
  9048     05DA  0842               	movf	___flmul@temp+1,w
  9049     05DB  3DB8               	addwfc	___flmul@grs+1,f
  9050     05DC  3000               	movlw	0
  9051     05DD  3DB9               	addwfc	___flmul@grs+2,f
  9052     05DE  3DBA               	addwfc	___flmul@grs+3,f
  9053     05DF                     l4055:
  9054     05DF  0829               	movf	___flmul@b,w
  9055     05E0  00A0               	movwf	__Umul8_16@multiplicand
  9056     05E1  082E               	movf	___flmul@a+1,w
  9057     05E2  319A  22EA  3184   	fcall	__Umul8_16
  9058     05E5  0020               	movlb	0	; select bank0
  9059     05E6  0821               	movf	?__Umul8_16+1,w
  9060     05E7  00C2               	movwf	___flmul@temp+1
  9061     05E8  0820               	movf	?__Umul8_16,w
  9062     05E9  00C1               	movwf	___flmul@temp
  9063     05EA                     l4057:
  9064     05EA  0841               	movf	___flmul@temp,w
  9065     05EB  07B7               	addwf	___flmul@grs,f
  9066     05EC  0842               	movf	___flmul@temp+1,w
  9067     05ED  3DB8               	addwfc	___flmul@grs+1,f
  9068     05EE  3000               	movlw	0
  9069     05EF  3DB9               	addwfc	___flmul@grs+2,f
  9070     05F0  3DBA               	addwfc	___flmul@grs+3,f
  9071     05F1                     l4059:
  9072     05F1  3008               	movlw	8
  9073     05F2                     u4615:
  9074     05F2  35B7               	lslf	___flmul@grs,f
  9075     05F3  0DB8               	rlf	___flmul@grs+1,f
  9076     05F4  0DB9               	rlf	___flmul@grs+2,f
  9077     05F5  0DBA               	rlf	___flmul@grs+3,f
  9078     05F6  0B89               	decfsz	9,f
  9079     05F7  2DF2               	goto	u4615
  9080     05F8  0829               	movf	___flmul@b,w
  9081     05F9  00A0               	movwf	__Umul8_16@multiplicand
  9082     05FA  082D               	movf	___flmul@a,w
  9083     05FB  319A  22EA  3184   	fcall	__Umul8_16
  9084     05FE  0020               	movlb	0	; select bank0
  9085     05FF  0821               	movf	?__Umul8_16+1,w
  9086     0600  00C2               	movwf	___flmul@temp+1
  9087     0601  0820               	movf	?__Umul8_16,w
  9088     0602  00C1               	movwf	___flmul@temp
  9089     0603                     l4061:
  9090     0603  0841               	movf	___flmul@temp,w
  9091     0604  07B7               	addwf	___flmul@grs,f
  9092     0605  0842               	movf	___flmul@temp+1,w
  9093     0606  3DB8               	addwfc	___flmul@grs+1,f
  9094     0607  3000               	movlw	0
  9095     0608  3DB9               	addwfc	___flmul@grs+2,f
  9096     0609  3DBA               	addwfc	___flmul@grs+3,f
  9097     060A                     l4063:
  9098     060A  082A               	movf	___flmul@b+1,w
  9099     060B  00A0               	movwf	__Umul8_16@multiplicand
  9100     060C  082F               	movf	___flmul@a+2,w
  9101     060D  319A  22EA  3184   	fcall	__Umul8_16
  9102     0610  0020               	movlb	0	; select bank0
  9103     0611  0821               	movf	?__Umul8_16+1,w
  9104     0612  00C2               	movwf	___flmul@temp+1
  9105     0613  0820               	movf	?__Umul8_16,w
  9106     0614  00C1               	movwf	___flmul@temp
  9107     0615  0841               	movf	___flmul@temp,w
  9108     0616  07BD               	addwf	___flmul@prod,f
  9109     0617  0842               	movf	___flmul@temp+1,w
  9110     0618  3DBE               	addwfc	___flmul@prod+1,f
  9111     0619  3000               	movlw	0
  9112     061A  3DBF               	addwfc	___flmul@prod+2,f
  9113     061B  3DC0               	addwfc	___flmul@prod+3,f
  9114     061C                     l4065:
  9115     061C  082B               	movf	___flmul@b+2,w
  9116     061D  00A0               	movwf	__Umul8_16@multiplicand
  9117     061E  082E               	movf	___flmul@a+1,w
  9118     061F  319A  22EA  3184   	fcall	__Umul8_16
  9119     0622  0020               	movlb	0	; select bank0
  9120     0623  0821               	movf	?__Umul8_16+1,w
  9121     0624  00C2               	movwf	___flmul@temp+1
  9122     0625  0820               	movf	?__Umul8_16,w
  9123     0626  00C1               	movwf	___flmul@temp
  9124     0627                     l4067:
  9125     0627  0841               	movf	___flmul@temp,w
  9126     0628  07BD               	addwf	___flmul@prod,f
  9127     0629  0842               	movf	___flmul@temp+1,w
  9128     062A  3DBE               	addwfc	___flmul@prod+1,f
  9129     062B  3000               	movlw	0
  9130     062C  3DBF               	addwfc	___flmul@prod+2,f
  9131     062D  3DC0               	addwfc	___flmul@prod+3,f
  9132     062E  082B               	movf	___flmul@b+2,w
  9133     062F  00A0               	movwf	__Umul8_16@multiplicand
  9134     0630  082F               	movf	___flmul@a+2,w
  9135     0631  319A  22EA  3184   	fcall	__Umul8_16
  9136     0634  0020               	movlb	0	; select bank0
  9137     0635  0821               	movf	?__Umul8_16+1,w
  9138     0636  00C2               	movwf	___flmul@temp+1
  9139     0637  0820               	movf	?__Umul8_16,w
  9140     0638  00C1               	movwf	___flmul@temp
  9141     0639                     l4069:
  9142     0639  0841               	movf	___flmul@temp,w
  9143     063A  00B1               	movwf	??___flmul
  9144     063B  0842               	movf	___flmul@temp+1,w
  9145     063C  00B2               	movwf	??___flmul+1
  9146     063D  01B3               	clrf	??___flmul+2
  9147     063E  01B4               	clrf	??___flmul+3
  9148     063F  3008               	movlw	8
  9149     0640                     u4625:
  9150     0640  35B1               	lslf	??___flmul,f
  9151     0641  0DB2               	rlf	??___flmul+1,f
  9152     0642  0DB3               	rlf	??___flmul+2,f
  9153     0643  0DB4               	rlf	??___flmul+3,f
  9154     0644                     u4620:
  9155     0644  0B89               	decfsz	9,f
  9156     0645  2E40               	goto	u4625
  9157     0646  0831               	movf	??___flmul,w
  9158     0647  07BD               	addwf	___flmul@prod,f
  9159     0648  0832               	movf	??___flmul+1,w
  9160     0649  3DBE               	addwfc	___flmul@prod+1,f
  9161     064A  0833               	movf	??___flmul+2,w
  9162     064B  3DBF               	addwfc	___flmul@prod+2,f
  9163     064C  0834               	movf	??___flmul+3,w
  9164     064D  3DC0               	addwfc	___flmul@prod+3,f
  9165     064E                     l4071:
  9166     064E  0837               	movf	___flmul@grs,w
  9167     064F  00B1               	movwf	??___flmul
  9168     0650  0838               	movf	___flmul@grs+1,w
  9169     0651  00B2               	movwf	??___flmul+1
  9170     0652  0839               	movf	___flmul@grs+2,w
  9171     0653  00B3               	movwf	??___flmul+2
  9172     0654  083A               	movf	___flmul@grs+3,w
  9173     0655  00B4               	movwf	??___flmul+3
  9174     0656  3018               	movlw	24
  9175     0657                     u4635:
  9176     0657  36B4               	lsrf	??___flmul+3,f
  9177     0658  0CB3               	rrf	??___flmul+2,f
  9178     0659  0CB2               	rrf	??___flmul+1,f
  9179     065A  0CB1               	rrf	??___flmul,f
  9180     065B                     u4630:
  9181     065B  0B89               	decfsz	9,f
  9182     065C  2E57               	goto	u4635
  9183     065D  0831               	movf	??___flmul,w
  9184     065E  07BD               	addwf	___flmul@prod,f
  9185     065F  0832               	movf	??___flmul+1,w
  9186     0660  3DBE               	addwfc	___flmul@prod+1,f
  9187     0661  0833               	movf	??___flmul+2,w
  9188     0662  3DBF               	addwfc	___flmul@prod+2,f
  9189     0663  0834               	movf	??___flmul+3,w
  9190     0664  3DC0               	addwfc	___flmul@prod+3,f
  9191     0665                     l4073:
  9192     0665  3008               	movlw	8
  9193     0666                     u4645:
  9194     0666  35B7               	lslf	___flmul@grs,f
  9195     0667  0DB8               	rlf	___flmul@grs+1,f
  9196     0668  0DB9               	rlf	___flmul@grs+2,f
  9197     0669  0DBA               	rlf	___flmul@grs+3,f
  9198     066A  0B89               	decfsz	9,f
  9199     066B  2E66               	goto	u4645
  9200     066C                     l4075:
  9201     066C  083C               	movf	___flmul@bexp,w
  9202     066D  073B               	addwf	___flmul@aexp,w
  9203     066E  00B1               	movwf	??___flmul
  9204     066F  01B2               	clrf	??___flmul+1
  9205     0670  0DB2               	rlf	??___flmul+1,f
  9206     0671  0831               	movf	??___flmul,w
  9207     0672  3E82               	addlw	130
  9208     0673  00C1               	movwf	___flmul@temp
  9209     0674  30FF               	movlw	255
  9210     0675  3D32               	addwfc	??___flmul+1,w
  9211     0676  00C2               	movwf	___flmul@temp+1
  9212     0677  2E8F               	goto	l4087
  9213     0678                     l4077:
  9214     0678  3001               	movlw	1
  9215     0679                     u4655:
  9216     0679  35BD               	lslf	___flmul@prod,f
  9217     067A  0DBE               	rlf	___flmul@prod+1,f
  9218     067B  0DBF               	rlf	___flmul@prod+2,f
  9219     067C  0DC0               	rlf	___flmul@prod+3,f
  9220     067D  0B89               	decfsz	9,f
  9221     067E  2E79               	goto	u4655
  9222     067F                     l4079:
  9223     067F  1FBA               	btfss	___flmul@grs+3,7
  9224     0680  2E82               	goto	u4661
  9225     0681  2E83               	goto	u4660
  9226     0682                     u4661:
  9227     0682  2E84               	goto	l4083
  9228     0683                     u4660:
  9229     0683                     l4081:
  9230     0683  143D               	bsf	___flmul@prod,0
  9231     0684                     l4083:
  9232     0684  3001               	movlw	1
  9233     0685                     u4675:
  9234     0685  35B7               	lslf	___flmul@grs,f
  9235     0686  0DB8               	rlf	___flmul@grs+1,f
  9236     0687  0DB9               	rlf	___flmul@grs+2,f
  9237     0688  0DBA               	rlf	___flmul@grs+3,f
  9238     0689  0B89               	decfsz	9,f
  9239     068A  2E85               	goto	u4675
  9240     068B                     l4085:
  9241     068B  30FF               	movlw	255
  9242     068C  07C1               	addwf	___flmul@temp,f
  9243     068D  30FF               	movlw	255
  9244     068E  3DC2               	addwfc	___flmul@temp+1,f
  9245     068F                     l4087:
  9246     068F  1FBF               	btfss	___flmul@prod+2,7
  9247     0690  2E92               	goto	u4681
  9248     0691  2E93               	goto	u4680
  9249     0692                     u4681:
  9250     0692  2E78               	goto	l4077
  9251     0693                     u4680:
  9252     0693                     l4089:
  9253     0693  01BB               	clrf	___flmul@aexp
  9254     0694                     l4091:
  9255     0694  1FBA               	btfss	___flmul@grs+3,7
  9256     0695  2E97               	goto	u4691
  9257     0696  2E98               	goto	u4690
  9258     0697                     u4691:
  9259     0697  2EB4               	goto	l4099
  9260     0698                     u4690:
  9261     0698                     l4093:
  9262     0698  30FF               	movlw	255
  9263     0699  0537               	andwf	___flmul@grs,w
  9264     069A  00B1               	movwf	??___flmul
  9265     069B  30FF               	movlw	255
  9266     069C  0538               	andwf	___flmul@grs+1,w
  9267     069D  00B2               	movwf	??___flmul+1
  9268     069E  30FF               	movlw	255
  9269     069F  0539               	andwf	___flmul@grs+2,w
  9270     06A0  00B3               	movwf	??___flmul+2
  9271     06A1  307F               	movlw	127
  9272     06A2  053A               	andwf	___flmul@grs+3,w
  9273     06A3  00B4               	movwf	??___flmul+3
  9274     06A4  0834               	movf	??___flmul+3,w
  9275     06A5  0433               	iorwf	??___flmul+2,w
  9276     06A6  0432               	iorwf	??___flmul+1,w
  9277     06A7  0431               	iorwf	??___flmul,w
  9278     06A8  1903               	skipnz
  9279     06A9  2EAB               	goto	u4701
  9280     06AA  2EAC               	goto	u4700
  9281     06AB                     u4701:
  9282     06AB  2EAF               	goto	l969
  9283     06AC                     u4700:
  9284     06AC                     l4095:
  9285     06AC  01BB               	clrf	___flmul@aexp
  9286     06AD  0ABB               	incf	___flmul@aexp,f
  9287     06AE  2EB4               	goto	l4099
  9288     06AF                     l969:
  9289     06AF  1C3D               	btfss	___flmul@prod,0
  9290     06B0  2EB2               	goto	u4711
  9291     06B1  2EB3               	goto	u4710
  9292     06B2                     u4711:
  9293     06B2  2EB4               	goto	l4099
  9294     06B3                     u4710:
  9295     06B3  2EAC               	goto	l4095
  9296     06B4                     l4099:
  9297     06B4  083B               	movf	___flmul@aexp,w
  9298     06B5  1903               	btfsc	3,2
  9299     06B6  2EB8               	goto	u4721
  9300     06B7  2EB9               	goto	u4720
  9301     06B8                     u4721:
  9302     06B8  2EE1               	goto	l4109
  9303     06B9                     u4720:
  9304     06B9                     l4101:
  9305     06B9  3001               	movlw	1
  9306     06BA  07BD               	addwf	___flmul@prod,f
  9307     06BB  3000               	movlw	0
  9308     06BC  3DBE               	addwfc	___flmul@prod+1,f
  9309     06BD  3000               	movlw	0
  9310     06BE  3DBF               	addwfc	___flmul@prod+2,f
  9311     06BF  3000               	movlw	0
  9312     06C0  3DC0               	addwfc	___flmul@prod+3,f
  9313     06C1                     l4103:
  9314     06C1  1C40               	btfss	___flmul@prod+3,0
  9315     06C2  2EC4               	goto	u4731
  9316     06C3  2EC5               	goto	u4730
  9317     06C4                     u4731:
  9318     06C4  2EE1               	goto	l4109
  9319     06C5                     u4730:
  9320     06C5                     l4105:
  9321     06C5  083D               	movf	___flmul@prod,w
  9322     06C6  00B1               	movwf	??___flmul
  9323     06C7  083E               	movf	___flmul@prod+1,w
  9324     06C8  00B2               	movwf	??___flmul+1
  9325     06C9  083F               	movf	___flmul@prod+2,w
  9326     06CA  00B3               	movwf	??___flmul+2
  9327     06CB  0840               	movf	___flmul@prod+3,w
  9328     06CC  00B4               	movwf	??___flmul+3
  9329     06CD  3001               	movlw	1
  9330     06CE  00B5               	movwf	??___flmul+4
  9331     06CF                     u4745:
  9332     06CF  37B4               	asrf	??___flmul+3,f
  9333     06D0  0CB3               	rrf	??___flmul+2,f
  9334     06D1  0CB2               	rrf	??___flmul+1,f
  9335     06D2  0CB1               	rrf	??___flmul,f
  9336     06D3                     u4740:
  9337     06D3  0BB5               	decfsz	??___flmul+4,f
  9338     06D4  2ECF               	goto	u4745
  9339     06D5  0834               	movf	??___flmul+3,w
  9340     06D6  00C0               	movwf	___flmul@prod+3
  9341     06D7  0833               	movf	??___flmul+2,w
  9342     06D8  00BF               	movwf	___flmul@prod+2
  9343     06D9  0832               	movf	??___flmul+1,w
  9344     06DA  00BE               	movwf	___flmul@prod+1
  9345     06DB  0831               	movf	??___flmul,w
  9346     06DC  00BD               	movwf	___flmul@prod
  9347     06DD                     l4107:
  9348     06DD  3001               	movlw	1
  9349     06DE  07C1               	addwf	___flmul@temp,f
  9350     06DF  3000               	movlw	0
  9351     06E0  3DC2               	addwfc	___flmul@temp+1,f
  9352     06E1                     l4109:
  9353     06E1  0842               	movf	___flmul@temp+1,w
  9354     06E2  3A80               	xorlw	128
  9355     06E3  00B1               	movwf	??___flmul
  9356     06E4  3080               	movlw	128
  9357     06E5  0231               	subwf	??___flmul,w
  9358     06E6  1D03               	skipz
  9359     06E7  2EEA               	goto	u4755
  9360     06E8  30FF               	movlw	255
  9361     06E9  0241               	subwf	___flmul@temp,w
  9362     06EA                     u4755:
  9363     06EA  1C03               	skipc
  9364     06EB  2EED               	goto	u4751
  9365     06EC  2EEE               	goto	u4750
  9366     06ED                     u4751:
  9367     06ED  2EF8               	goto	l4113
  9368     06EE                     u4750:
  9369     06EE                     l4111:
  9370     06EE  307F               	movlw	127
  9371     06EF  0020               	movlb	0	; select bank0
  9372     06F0  00C0               	movwf	___flmul@prod+3
  9373     06F1  3080               	movlw	128
  9374     06F2  00BF               	movwf	___flmul@prod+2
  9375     06F3  3000               	movlw	0
  9376     06F4  00BE               	movwf	___flmul@prod+1
  9377     06F5  3000               	movlw	0
  9378     06F6  00BD               	movwf	___flmul@prod
  9379     06F7  2F23               	goto	l975
  9380     06F8                     l4113:
  9381     06F8  0020               	movlb	0	; select bank0
  9382     06F9  0842               	movf	___flmul@temp+1,w
  9383     06FA  3A80               	xorlw	128
  9384     06FB  00B1               	movwf	??___flmul
  9385     06FC  3080               	movlw	128
  9386     06FD  0231               	subwf	??___flmul,w
  9387     06FE  1D03               	skipz
  9388     06FF  2F02               	goto	u4765
  9389     0700  3001               	movlw	1
  9390     0701  0241               	subwf	___flmul@temp,w
  9391     0702                     u4765:
  9392     0702  1803               	skipnc
  9393     0703  2F05               	goto	u4761
  9394     0704  2F06               	goto	u4760
  9395     0705                     u4761:
  9396     0705  2F11               	goto	l4119
  9397     0706                     u4760:
  9398     0706                     l4115:
  9399     0706  3000               	movlw	0
  9400     0707  0020               	movlb	0	; select bank0
  9401     0708  00C0               	movwf	___flmul@prod+3
  9402     0709  3000               	movlw	0
  9403     070A  00BF               	movwf	___flmul@prod+2
  9404     070B  3000               	movlw	0
  9405     070C  00BE               	movwf	___flmul@prod+1
  9406     070D  3000               	movlw	0
  9407     070E  00BD               	movwf	___flmul@prod
  9408     070F                     l4117:
  9409     070F  01B6               	clrf	___flmul@sign
  9410     0710  2F23               	goto	l975
  9411     0711                     l4119:
  9412     0711  0020               	movlb	0	; select bank0
  9413     0712  0841               	movf	___flmul@temp,w
  9414     0713  00BC               	movwf	___flmul@bexp
  9415     0714  30FF               	movlw	255
  9416     0715  05BD               	andwf	___flmul@prod,f
  9417     0716  30FF               	movlw	255
  9418     0717  05BE               	andwf	___flmul@prod+1,f
  9419     0718  307F               	movlw	127
  9420     0719  05BF               	andwf	___flmul@prod+2,f
  9421     071A  3000               	movlw	0
  9422     071B  05C0               	andwf	___flmul@prod+3,f
  9423     071C                     l4121:
  9424     071C  1C3C               	btfss	___flmul@bexp,0
  9425     071D  2F1F               	goto	u4771
  9426     071E  2F20               	goto	u4770
  9427     071F                     u4771:
  9428     071F  2F21               	goto	l4125
  9429     0720                     u4770:
  9430     0720                     l4123:
  9431     0720  17BF               	bsf	___flmul@prod+2,7
  9432     0721                     l4125:
  9433     0721  363C               	lsrf	___flmul@bexp,w
  9434     0722  00C0               	movwf	___flmul@prod+3
  9435     0723                     l975:
  9436     0723  0836               	movf	___flmul@sign,w
  9437     0724  00B1               	movwf	??___flmul
  9438     0725  0831               	movf	??___flmul,w
  9439     0726  04C0               	iorwf	___flmul@prod+3,f
  9440     0727                     l4127:
  9441     0727  0840               	movf	___flmul@prod+3,w
  9442     0728  00AC               	movwf	?___flmul+3
  9443     0729  083F               	movf	___flmul@prod+2,w
  9444     072A  00AB               	movwf	?___flmul+2
  9445     072B  083E               	movf	___flmul@prod+1,w
  9446     072C  00AA               	movwf	?___flmul+1
  9447     072D  083D               	movf	___flmul@prod,w
  9448     072E  00A9               	movwf	?___flmul
  9449     072F                     l963:
  9450     072F  0008               	return
  9451     0730                     __end_of___flmul:
  9452                           
  9453                           	psect	text17
  9454     1AEA                     __ptext17:	
  9455 ;; *************** function __Umul8_16 *****************
  9456 ;; Defined at:
  9457 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8_16.c"
  9458 ;; Parameters:    Size  Location     Type
  9459 ;;  multiplier      1    wreg     unsigned char 
  9460 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9461 ;; Auto vars:     Size  Location     Type
  9462 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9463 ;;  word_mpld       2    6[BANK0 ] unsigned short 
  9464 ;;  product         2    4[BANK0 ] unsigned short 
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  2    0[BANK0 ] unsigned int 
  9467 ;; Registers used:
  9468 ;;		wreg, status,2, status,0
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9474 ;;      Params:         0       2       0       0       0       0       0       0
  9475 ;;      Locals:         0       5       0       0       0       0       0       0
  9476 ;;      Temps:          0       2       0       0       0       0       0       0
  9477 ;;      Totals:         0       9       0       0       0       0       0       0
  9478 ;;Total ram usage:        9 bytes
  9479 ;; Hardware stack levels used: 1
  9480 ;; Hardware stack levels required when called: 4
  9481 ;; This function calls:
  9482 ;;		Nothing
  9483 ;; This function is called by:
  9484 ;;		___flmul
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488     1AEA                     __Umul8_16:	
  9489                           ;psect for function __Umul8_16
  9490                           
  9491                           
  9492                           ;incstack = 0
  9493                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9494                           ;__Umul8_16@multiplier stored from wreg
  9495     1AEA  0020               	movlb	0	; select bank0
  9496     1AEB  00A8               	movwf	__Umul8_16@multiplier
  9497     1AEC                     l3651:
  9498     1AEC  01A4               	clrf	__Umul8_16@product
  9499     1AED  01A5               	clrf	__Umul8_16@product+1
  9500     1AEE                     l3653:
  9501     1AEE  0820               	movf	__Umul8_16@multiplicand,w
  9502     1AEF  00A2               	movwf	??__Umul8_16
  9503     1AF0  01A3               	clrf	??__Umul8_16+1
  9504     1AF1  0822               	movf	??__Umul8_16,w
  9505     1AF2  00A6               	movwf	__Umul8_16@word_mpld
  9506     1AF3  0823               	movf	??__Umul8_16+1,w
  9507     1AF4  00A7               	movwf	__Umul8_16@word_mpld+1
  9508     1AF5                     l3655:
  9509     1AF5  1C28               	btfss	__Umul8_16@multiplier,0
  9510     1AF6  2AF8               	goto	u3771
  9511     1AF7  2AF9               	goto	u3770
  9512     1AF8                     u3771:
  9513     1AF8  2AFD               	goto	l982
  9514     1AF9                     u3770:
  9515     1AF9                     l3657:
  9516     1AF9  0826               	movf	__Umul8_16@word_mpld,w
  9517     1AFA  07A4               	addwf	__Umul8_16@product,f
  9518     1AFB  0827               	movf	__Umul8_16@word_mpld+1,w
  9519     1AFC  3DA5               	addwfc	__Umul8_16@product+1,f
  9520     1AFD                     l982:
  9521     1AFD  3001               	movlw	1
  9522     1AFE                     u3785:
  9523     1AFE  35A6               	lslf	__Umul8_16@word_mpld,f
  9524     1AFF  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  9525     1B00  0B89               	decfsz	9,f
  9526     1B01  2AFE               	goto	u3785
  9527     1B02  1003               	clrc
  9528     1B03  0CA8               	rrf	__Umul8_16@multiplier,f
  9529     1B04                     l3659:
  9530     1B04  0828               	movf	__Umul8_16@multiplier,w
  9531     1B05  1D03               	btfss	3,2
  9532     1B06  2B08               	goto	u3791
  9533     1B07  2B09               	goto	u3790
  9534     1B08                     u3791:
  9535     1B08  2AF5               	goto	l3655
  9536     1B09                     u3790:
  9537     1B09                     l3661:
  9538     1B09  0825               	movf	__Umul8_16@product+1,w
  9539     1B0A  00A1               	movwf	?__Umul8_16+1
  9540     1B0B  0824               	movf	__Umul8_16@product,w
  9541     1B0C  00A0               	movwf	?__Umul8_16
  9542     1B0D                     l984:
  9543     1B0D  0008               	return
  9544     1B0E                     __end_of__Umul8_16:
  9545                           
  9546                           	psect	text18
  9547     1003                     __ptext18:	
  9548 ;; *************** function ___flge *****************
  9549 ;; Defined at:
  9550 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;  ff1             4   35[BANK0 ] unsigned int 
  9553 ;;  ff2             4   39[BANK0 ] unsigned int 
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;		None
  9556 ;; Return value:  Size  Location     Type
  9557 ;;		None               void
  9558 ;; Registers used:
  9559 ;;		wreg, status,2, status,0
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9565 ;;      Params:         0       8       0       0       0       0       0       0
  9566 ;;      Locals:         0       0       0       0       0       0       0       0
  9567 ;;      Temps:          0       4       0       0       0       0       0       0
  9568 ;;      Totals:         0      12       0       0       0       0       0       0
  9569 ;;Total ram usage:       12 bytes
  9570 ;; Hardware stack levels used: 1
  9571 ;; Hardware stack levels required when called: 4
  9572 ;; This function calls:
  9573 ;;		Nothing
  9574 ;; This function is called by:
  9575 ;;		_efgtoa
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579     1003                     ___flge:	
  9580                           ;psect for function ___flge
  9581                           
  9582     1003                     l3781:	
  9583                           ;incstack = 0
  9584                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9585                           
  9586     1003  3000               	movlw	0
  9587     1004  0020               	movlb	0	; select bank0
  9588     1005  0543               	andwf	___flge@ff1,w
  9589     1006  00CB               	movwf	??___flge
  9590     1007  3000               	movlw	0
  9591     1008  0544               	andwf	___flge@ff1+1,w
  9592     1009  00CC               	movwf	??___flge+1
  9593     100A  3080               	movlw	128
  9594     100B  0545               	andwf	___flge@ff1+2,w
  9595     100C  00CD               	movwf	??___flge+2
  9596     100D  307F               	movlw	127
  9597     100E  0546               	andwf	___flge@ff1+3,w
  9598     100F  00CE               	movwf	??___flge+3
  9599     1010  084E               	movf	??___flge+3,w
  9600     1011  044D               	iorwf	??___flge+2,w
  9601     1012  044C               	iorwf	??___flge+1,w
  9602     1013  044B               	iorwf	??___flge,w
  9603     1014  1D03               	skipz
  9604     1015  2817               	goto	u4071
  9605     1016  2818               	goto	u4070
  9606     1017                     u4071:
  9607     1017  2820               	goto	l744
  9608     1018                     u4070:
  9609     1018                     l3783:
  9610     1018  3000               	movlw	0
  9611     1019  00C6               	movwf	___flge@ff1+3
  9612     101A  3000               	movlw	0
  9613     101B  00C5               	movwf	___flge@ff1+2
  9614     101C  3000               	movlw	0
  9615     101D  00C4               	movwf	___flge@ff1+1
  9616     101E  3000               	movlw	0
  9617     101F  00C3               	movwf	___flge@ff1
  9618     1020                     l744:
  9619     1020  3000               	movlw	0
  9620     1021  0547               	andwf	___flge@ff2,w
  9621     1022  00CB               	movwf	??___flge
  9622     1023  3000               	movlw	0
  9623     1024  0548               	andwf	___flge@ff2+1,w
  9624     1025  00CC               	movwf	??___flge+1
  9625     1026  3080               	movlw	128
  9626     1027  0549               	andwf	___flge@ff2+2,w
  9627     1028  00CD               	movwf	??___flge+2
  9628     1029  307F               	movlw	127
  9629     102A  054A               	andwf	___flge@ff2+3,w
  9630     102B  00CE               	movwf	??___flge+3
  9631     102C  084E               	movf	??___flge+3,w
  9632     102D  044D               	iorwf	??___flge+2,w
  9633     102E  044C               	iorwf	??___flge+1,w
  9634     102F  044B               	iorwf	??___flge,w
  9635     1030  1D03               	skipz
  9636     1031  2833               	goto	u4081
  9637     1032  2834               	goto	u4080
  9638     1033                     u4081:
  9639     1033  283C               	goto	l3787
  9640     1034                     u4080:
  9641     1034                     l3785:
  9642     1034  3000               	movlw	0
  9643     1035  00CA               	movwf	___flge@ff2+3
  9644     1036  3000               	movlw	0
  9645     1037  00C9               	movwf	___flge@ff2+2
  9646     1038  3000               	movlw	0
  9647     1039  00C8               	movwf	___flge@ff2+1
  9648     103A  3000               	movlw	0
  9649     103B  00C7               	movwf	___flge@ff2
  9650     103C                     l3787:
  9651     103C  1FC6               	btfss	___flge@ff1+3,7
  9652     103D  283F               	goto	u4091
  9653     103E  2840               	goto	u4090
  9654     103F                     u4091:
  9655     103F  2858               	goto	l3791
  9656     1040                     u4090:
  9657     1040                     l3789:
  9658     1040  3000               	movlw	0
  9659     1041  00CB               	movwf	??___flge
  9660     1042  3000               	movlw	0
  9661     1043  00CC               	movwf	??___flge+1
  9662     1044  3000               	movlw	0
  9663     1045  00CD               	movwf	??___flge+2
  9664     1046  3080               	movlw	128
  9665     1047  00CE               	movwf	??___flge+3
  9666     1048  0843               	movf	___flge@ff1,w
  9667     1049  02CB               	subwf	??___flge,f
  9668     104A  0844               	movf	___flge@ff1+1,w
  9669     104B  3BCC               	subwfb	??___flge+1,f
  9670     104C  0845               	movf	___flge@ff1+2,w
  9671     104D  3BCD               	subwfb	??___flge+2,f
  9672     104E  0846               	movf	___flge@ff1+3,w
  9673     104F  3BCE               	subwfb	??___flge+3,f
  9674     1050  084E               	movf	??___flge+3,w
  9675     1051  00C6               	movwf	___flge@ff1+3
  9676     1052  084D               	movf	??___flge+2,w
  9677     1053  00C5               	movwf	___flge@ff1+2
  9678     1054  084C               	movf	??___flge+1,w
  9679     1055  00C4               	movwf	___flge@ff1+1
  9680     1056  084B               	movf	??___flge,w
  9681     1057  00C3               	movwf	___flge@ff1
  9682     1058                     l3791:
  9683     1058  1FCA               	btfss	___flge@ff2+3,7
  9684     1059  285B               	goto	u4101
  9685     105A  285C               	goto	u4100
  9686     105B                     u4101:
  9687     105B  2874               	goto	l747
  9688     105C                     u4100:
  9689     105C                     l3793:
  9690     105C  3000               	movlw	0
  9691     105D  00CB               	movwf	??___flge
  9692     105E  3000               	movlw	0
  9693     105F  00CC               	movwf	??___flge+1
  9694     1060  3000               	movlw	0
  9695     1061  00CD               	movwf	??___flge+2
  9696     1062  3080               	movlw	128
  9697     1063  00CE               	movwf	??___flge+3
  9698     1064  0847               	movf	___flge@ff2,w
  9699     1065  02CB               	subwf	??___flge,f
  9700     1066  0848               	movf	___flge@ff2+1,w
  9701     1067  3BCC               	subwfb	??___flge+1,f
  9702     1068  0849               	movf	___flge@ff2+2,w
  9703     1069  3BCD               	subwfb	??___flge+2,f
  9704     106A  084A               	movf	___flge@ff2+3,w
  9705     106B  3BCE               	subwfb	??___flge+3,f
  9706     106C  084E               	movf	??___flge+3,w
  9707     106D  00CA               	movwf	___flge@ff2+3
  9708     106E  084D               	movf	??___flge+2,w
  9709     106F  00C9               	movwf	___flge@ff2+2
  9710     1070  084C               	movf	??___flge+1,w
  9711     1071  00C8               	movwf	___flge@ff2+1
  9712     1072  084B               	movf	??___flge,w
  9713     1073  00C7               	movwf	___flge@ff2
  9714     1074                     l747:
  9715     1074  3080               	movlw	128
  9716     1075  06C6               	xorwf	___flge@ff1+3,f
  9717     1076  3080               	movlw	128
  9718     1077  06CA               	xorwf	___flge@ff2+3,f
  9719     1078  084A               	movf	___flge@ff2+3,w
  9720     1079  0246               	subwf	___flge@ff1+3,w
  9721     107A  1D03               	skipz
  9722     107B  2886               	goto	u4115
  9723     107C  0849               	movf	___flge@ff2+2,w
  9724     107D  0245               	subwf	___flge@ff1+2,w
  9725     107E  1D03               	skipz
  9726     107F  2886               	goto	u4115
  9727     1080  0848               	movf	___flge@ff2+1,w
  9728     1081  0244               	subwf	___flge@ff1+1,w
  9729     1082  1D03               	skipz
  9730     1083  2886               	goto	u4115
  9731     1084  0847               	movf	___flge@ff2,w
  9732     1085  0243               	subwf	___flge@ff1,w
  9733     1086                     u4115:
  9734     1086  1803               	skipnc
  9735     1087  2889               	goto	u4111
  9736     1088  288A               	goto	u4110
  9737     1089                     u4111:
  9738     1089  288C               	goto	l3797
  9739     108A                     u4110:
  9740     108A                     l3795:
  9741     108A  1003               	clrc
  9742     108B  288D               	goto	l752
  9743     108C                     l3797:
  9744     108C  1403               	setc
  9745     108D                     l752:
  9746     108D  0008               	return
  9747     108E                     __end_of___flge:
  9748                           
  9749                           	psect	text19
  9750     1C13                     __ptext19:	
  9751 ;; *************** function ___fleq *****************
  9752 ;; Defined at:
  9753 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  ff1             4    0[BANK0 ] unsigned int 
  9756 ;;  ff2             4    4[BANK0 ] unsigned int 
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;		None
  9759 ;; Return value:  Size  Location     Type
  9760 ;;		None               void
  9761 ;; Registers used:
  9762 ;;		wreg, status,2, status,0
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9768 ;;      Params:         0       8       0       0       0       0       0       0
  9769 ;;      Locals:         0       0       0       0       0       0       0       0
  9770 ;;      Temps:          0       4       0       0       0       0       0       0
  9771 ;;      Totals:         0      12       0       0       0       0       0       0
  9772 ;;Total ram usage:       12 bytes
  9773 ;; Hardware stack levels used: 1
  9774 ;; Hardware stack levels required when called: 4
  9775 ;; This function calls:
  9776 ;;		Nothing
  9777 ;; This function is called by:
  9778 ;;		_efgtoa
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782     1C13                     ___fleq:	
  9783                           ;psect for function ___fleq
  9784                           
  9785     1C13                     l3769:	
  9786                           ;incstack = 0
  9787                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9788                           
  9789     1C13  3000               	movlw	0
  9790     1C14  0020               	movlb	0	; select bank0
  9791     1C15  0520               	andwf	___fleq@ff1,w
  9792     1C16  00A8               	movwf	??___fleq
  9793     1C17  3000               	movlw	0
  9794     1C18  0521               	andwf	___fleq@ff1+1,w
  9795     1C19  00A9               	movwf	??___fleq+1
  9796     1C1A  3080               	movlw	128
  9797     1C1B  0522               	andwf	___fleq@ff1+2,w
  9798     1C1C  00AA               	movwf	??___fleq+2
  9799     1C1D  307F               	movlw	127
  9800     1C1E  0523               	andwf	___fleq@ff1+3,w
  9801     1C1F  00AB               	movwf	??___fleq+3
  9802     1C20  082B               	movf	??___fleq+3,w
  9803     1C21  042A               	iorwf	??___fleq+2,w
  9804     1C22  0429               	iorwf	??___fleq+1,w
  9805     1C23  0428               	iorwf	??___fleq,w
  9806     1C24  1D03               	skipz
  9807     1C25  2C27               	goto	u4041
  9808     1C26  2C28               	goto	u4040
  9809     1C27                     u4041:
  9810     1C27  2C30               	goto	l735
  9811     1C28                     u4040:
  9812     1C28                     l3771:
  9813     1C28  3000               	movlw	0
  9814     1C29  00A3               	movwf	___fleq@ff1+3
  9815     1C2A  3000               	movlw	0
  9816     1C2B  00A2               	movwf	___fleq@ff1+2
  9817     1C2C  3000               	movlw	0
  9818     1C2D  00A1               	movwf	___fleq@ff1+1
  9819     1C2E  3000               	movlw	0
  9820     1C2F  00A0               	movwf	___fleq@ff1
  9821     1C30                     l735:
  9822     1C30  3000               	movlw	0
  9823     1C31  0524               	andwf	___fleq@ff2,w
  9824     1C32  00A8               	movwf	??___fleq
  9825     1C33  3000               	movlw	0
  9826     1C34  0525               	andwf	___fleq@ff2+1,w
  9827     1C35  00A9               	movwf	??___fleq+1
  9828     1C36  3080               	movlw	128
  9829     1C37  0526               	andwf	___fleq@ff2+2,w
  9830     1C38  00AA               	movwf	??___fleq+2
  9831     1C39  307F               	movlw	127
  9832     1C3A  0527               	andwf	___fleq@ff2+3,w
  9833     1C3B  00AB               	movwf	??___fleq+3
  9834     1C3C  082B               	movf	??___fleq+3,w
  9835     1C3D  042A               	iorwf	??___fleq+2,w
  9836     1C3E  0429               	iorwf	??___fleq+1,w
  9837     1C3F  0428               	iorwf	??___fleq,w
  9838     1C40  1D03               	skipz
  9839     1C41  2C43               	goto	u4051
  9840     1C42  2C44               	goto	u4050
  9841     1C43                     u4051:
  9842     1C43  2C4C               	goto	l736
  9843     1C44                     u4050:
  9844     1C44                     l3773:
  9845     1C44  3000               	movlw	0
  9846     1C45  00A7               	movwf	___fleq@ff2+3
  9847     1C46  3000               	movlw	0
  9848     1C47  00A6               	movwf	___fleq@ff2+2
  9849     1C48  3000               	movlw	0
  9850     1C49  00A5               	movwf	___fleq@ff2+1
  9851     1C4A  3000               	movlw	0
  9852     1C4B  00A4               	movwf	___fleq@ff2
  9853     1C4C                     l736:
  9854     1C4C  0827               	movf	___fleq@ff2+3,w
  9855     1C4D  0623               	xorwf	___fleq@ff1+3,w
  9856     1C4E  1D03               	skipz
  9857     1C4F  2C5A               	goto	u4065
  9858     1C50  0826               	movf	___fleq@ff2+2,w
  9859     1C51  0622               	xorwf	___fleq@ff1+2,w
  9860     1C52  1D03               	skipz
  9861     1C53  2C5A               	goto	u4065
  9862     1C54  0825               	movf	___fleq@ff2+1,w
  9863     1C55  0621               	xorwf	___fleq@ff1+1,w
  9864     1C56  1D03               	skipz
  9865     1C57  2C5A               	goto	u4065
  9866     1C58  0824               	movf	___fleq@ff2,w
  9867     1C59  0620               	xorwf	___fleq@ff1,w
  9868     1C5A                     u4065:
  9869     1C5A  1903               	skipnz
  9870     1C5B  2C5D               	goto	u4061
  9871     1C5C  2C5E               	goto	u4060
  9872     1C5D                     u4061:
  9873     1C5D  2C60               	goto	l3777
  9874     1C5E                     u4060:
  9875     1C5E                     l3775:
  9876     1C5E  1003               	clrc
  9877     1C5F  2C61               	goto	l741
  9878     1C60                     l3777:
  9879     1C60  1403               	setc
  9880     1C61                     l741:
  9881     1C61  0008               	return
  9882     1C62                     __end_of___fleq:
  9883                           
  9884                           	psect	text20
  9885     144E                     __ptext20:	
  9886 ;; *************** function ___fldiv *****************
  9887 ;; Defined at:
  9888 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;  a               4   20[BANK0 ] unsigned int 
  9891 ;;  b               4   24[BANK0 ] unsigned int 
  9892 ;; Auto vars:     Size  Location     Type
  9893 ;;  grs             4   40[BANK0 ] unsigned long 
  9894 ;;  rem             4   33[BANK0 ] unsigned long 
  9895 ;;  new_exp         2   38[BANK0 ] short 
  9896 ;;  aexp            1   45[BANK0 ] unsigned char 
  9897 ;;  bexp            1   44[BANK0 ] unsigned char 
  9898 ;;  sign            1   37[BANK0 ] unsigned char 
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  4   20[BANK0 ] unsigned char 
  9901 ;; Registers used:
  9902 ;;		wreg, status,2, status,0
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 0/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9908 ;;      Params:         0       8       0       0       0       0       0       0
  9909 ;;      Locals:         0      13       0       0       0       0       0       0
  9910 ;;      Temps:          0       5       0       0       0       0       0       0
  9911 ;;      Totals:         0      26       0       0       0       0       0       0
  9912 ;;Total ram usage:       26 bytes
  9913 ;; Hardware stack levels used: 1
  9914 ;; Hardware stack levels required when called: 4
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_main
  9919 ;;		_efgtoa
  9920 ;; This function uses a non-reentrant model
  9921 ;;
  9922                           
  9923     144E                     ___fldiv:	
  9924                           ;psect for function ___fldiv
  9925                           
  9926     144E                     l3851:	
  9927                           ;incstack = 0
  9928                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9929                           
  9930     144E  0020               	movlb	0	; select bank0
  9931     144F  083B               	movf	___fldiv@b+3,w
  9932     1450  3980               	andlw	128
  9933     1451  00C5               	movwf	___fldiv@sign
  9934     1452                     l3853:
  9935     1452  353B               	lslf	___fldiv@b+3,w
  9936     1453  00CC               	movwf	___fldiv@bexp
  9937     1454                     l3855:
  9938     1454  1FBA               	btfss	___fldiv@b+2,7
  9939     1455  2C57               	goto	u4231
  9940     1456  2C58               	goto	u4230
  9941     1457                     u4231:
  9942     1457  2C59               	goto	l3859
  9943     1458                     u4230:
  9944     1458                     l3857:
  9945     1458  144C               	bsf	___fldiv@bexp,0
  9946     1459                     l3859:
  9947     1459  084C               	movf	___fldiv@bexp,w
  9948     145A  1903               	btfsc	3,2
  9949     145B  2C5D               	goto	u4241
  9950     145C  2C5E               	goto	u4240
  9951     145D                     u4241:
  9952     145D  2C6E               	goto	l3869
  9953     145E                     u4240:
  9954     145E                     l3861:
  9955     145E  0A4C               	incf	___fldiv@bexp,w
  9956     145F  1D03               	btfss	3,2
  9957     1460  2C62               	goto	u4251
  9958     1461  2C63               	goto	u4250
  9959     1462                     u4251:
  9960     1462  2C6B               	goto	l3865
  9961     1463                     u4250:
  9962     1463                     l3863:
  9963     1463  3000               	movlw	0
  9964     1464  00BB               	movwf	___fldiv@b+3
  9965     1465  3000               	movlw	0
  9966     1466  00BA               	movwf	___fldiv@b+2
  9967     1467  3000               	movlw	0
  9968     1468  00B9               	movwf	___fldiv@b+1
  9969     1469  3000               	movlw	0
  9970     146A  00B8               	movwf	___fldiv@b
  9971     146B                     l3865:
  9972     146B  17BA               	bsf	___fldiv@b+2,7
  9973     146C                     l3867:
  9974     146C  01BB               	clrf	___fldiv@b+3
  9975     146D  2C76               	goto	l3871
  9976     146E                     l3869:
  9977     146E  3000               	movlw	0
  9978     146F  00BB               	movwf	___fldiv@b+3
  9979     1470  3000               	movlw	0
  9980     1471  00BA               	movwf	___fldiv@b+2
  9981     1472  3000               	movlw	0
  9982     1473  00B9               	movwf	___fldiv@b+1
  9983     1474  3000               	movlw	0
  9984     1475  00B8               	movwf	___fldiv@b
  9985     1476                     l3871:
  9986     1476  0837               	movf	___fldiv@a+3,w
  9987     1477  3980               	andlw	128
  9988     1478  00BC               	movwf	??___fldiv
  9989     1479  083C               	movf	??___fldiv,w
  9990     147A  06C5               	xorwf	___fldiv@sign,f
  9991     147B                     l3873:
  9992     147B  3537               	lslf	___fldiv@a+3,w
  9993     147C  00CD               	movwf	___fldiv@aexp
  9994     147D                     l3875:
  9995     147D  1FB6               	btfss	___fldiv@a+2,7
  9996     147E  2C80               	goto	u4261
  9997     147F  2C81               	goto	u4260
  9998     1480                     u4261:
  9999     1480  2C82               	goto	l3879
 10000     1481                     u4260:
 10001     1481                     l3877:
 10002     1481  144D               	bsf	___fldiv@aexp,0
 10003     1482                     l3879:
 10004     1482  084D               	movf	___fldiv@aexp,w
 10005     1483  1903               	btfsc	3,2
 10006     1484  2C86               	goto	u4271
 10007     1485  2C87               	goto	u4270
 10008     1486                     u4271:
 10009     1486  2C97               	goto	l3889
 10010     1487                     u4270:
 10011     1487                     l3881:
 10012     1487  0A4D               	incf	___fldiv@aexp,w
 10013     1488  1D03               	btfss	3,2
 10014     1489  2C8B               	goto	u4281
 10015     148A  2C8C               	goto	u4280
 10016     148B                     u4281:
 10017     148B  2C94               	goto	l3885
 10018     148C                     u4280:
 10019     148C                     l3883:
 10020     148C  3000               	movlw	0
 10021     148D  00B7               	movwf	___fldiv@a+3
 10022     148E  3000               	movlw	0
 10023     148F  00B6               	movwf	___fldiv@a+2
 10024     1490  3000               	movlw	0
 10025     1491  00B5               	movwf	___fldiv@a+1
 10026     1492  3000               	movlw	0
 10027     1493  00B4               	movwf	___fldiv@a
 10028     1494                     l3885:
 10029     1494  17B6               	bsf	___fldiv@a+2,7
 10030     1495                     l3887:
 10031     1495  01B7               	clrf	___fldiv@a+3
 10032     1496  2C9F               	goto	l923
 10033     1497                     l3889:
 10034     1497  3000               	movlw	0
 10035     1498  00B7               	movwf	___fldiv@a+3
 10036     1499  3000               	movlw	0
 10037     149A  00B6               	movwf	___fldiv@a+2
 10038     149B  3000               	movlw	0
 10039     149C  00B5               	movwf	___fldiv@a+1
 10040     149D  3000               	movlw	0
 10041     149E  00B4               	movwf	___fldiv@a
 10042     149F                     l923:
 10043     149F  0837               	movf	___fldiv@a+3,w
 10044     14A0  0436               	iorwf	___fldiv@a+2,w
 10045     14A1  0435               	iorwf	___fldiv@a+1,w
 10046     14A2  0434               	iorwf	___fldiv@a,w
 10047     14A3  1D03               	skipz
 10048     14A4  2CA6               	goto	u4291
 10049     14A5  2CA7               	goto	u4290
 10050     14A6                     u4291:
 10051     14A6  2CC0               	goto	l3899
 10052     14A7                     u4290:
 10053     14A7                     l3891:
 10054     14A7  3000               	movlw	0
 10055     14A8  00BB               	movwf	___fldiv@b+3
 10056     14A9  3000               	movlw	0
 10057     14AA  00BA               	movwf	___fldiv@b+2
 10058     14AB  3000               	movlw	0
 10059     14AC  00B9               	movwf	___fldiv@b+1
 10060     14AD  3000               	movlw	0
 10061     14AE  00B8               	movwf	___fldiv@b
 10062     14AF  3080               	movlw	128
 10063     14B0  04BA               	iorwf	___fldiv@b+2,f
 10064     14B1  307F               	movlw	127
 10065     14B2  04BB               	iorwf	___fldiv@b+3,f
 10066     14B3                     l3893:
 10067     14B3  0845               	movf	___fldiv@sign,w
 10068     14B4  00BC               	movwf	??___fldiv
 10069     14B5  083C               	movf	??___fldiv,w
 10070     14B6  04BB               	iorwf	___fldiv@b+3,f
 10071     14B7                     l3895:
 10072     14B7  083B               	movf	___fldiv@b+3,w
 10073     14B8  00B7               	movwf	?___fldiv+3
 10074     14B9  083A               	movf	___fldiv@b+2,w
 10075     14BA  00B6               	movwf	?___fldiv+2
 10076     14BB  0839               	movf	___fldiv@b+1,w
 10077     14BC  00B5               	movwf	?___fldiv+1
 10078     14BD  0838               	movf	___fldiv@b,w
 10079     14BE  00B4               	movwf	?___fldiv
 10080     14BF  2DF7               	goto	l925
 10081     14C0                     l3899:
 10082     14C0  084C               	movf	___fldiv@bexp,w
 10083     14C1  1D03               	btfss	3,2
 10084     14C2  2CC4               	goto	u4301
 10085     14C3  2CC5               	goto	u4300
 10086     14C4                     u4301:
 10087     14C4  2CCE               	goto	l3905
 10088     14C5                     u4300:
 10089     14C5                     l3901:
 10090     14C5  3000               	movlw	0
 10091     14C6  00B7               	movwf	?___fldiv+3
 10092     14C7  3000               	movlw	0
 10093     14C8  00B6               	movwf	?___fldiv+2
 10094     14C9  3000               	movlw	0
 10095     14CA  00B5               	movwf	?___fldiv+1
 10096     14CB  3000               	movlw	0
 10097     14CC  00B4               	movwf	?___fldiv
 10098     14CD  2DF7               	goto	l925
 10099     14CE                     l3905:
 10100     14CE  084C               	movf	___fldiv@bexp,w
 10101     14CF  00BC               	movwf	??___fldiv
 10102     14D0  01BD               	clrf	??___fldiv+1
 10103     14D1  083D               	movf	??___fldiv+1,w
 10104     14D2  00BF               	movwf	??___fldiv+3
 10105     14D3  084D               	movf	___fldiv@aexp,w
 10106     14D4  023C               	subwf	??___fldiv,w
 10107     14D5  00BE               	movwf	??___fldiv+2
 10108     14D6  1C03               	skipc
 10109     14D7  03BF               	decf	??___fldiv+3,f
 10110     14D8  083E               	movf	??___fldiv+2,w
 10111     14D9  3E7F               	addlw	127
 10112     14DA  00C6               	movwf	___fldiv@new_exp
 10113     14DB  3000               	movlw	0
 10114     14DC  3D3F               	addwfc	??___fldiv+3,w
 10115     14DD  00C7               	movwf	___fldiv@new_exp+1
 10116     14DE                     l3907:
 10117     14DE  083B               	movf	___fldiv@b+3,w
 10118     14DF  00C4               	movwf	___fldiv@rem+3
 10119     14E0  083A               	movf	___fldiv@b+2,w
 10120     14E1  00C3               	movwf	___fldiv@rem+2
 10121     14E2  0839               	movf	___fldiv@b+1,w
 10122     14E3  00C2               	movwf	___fldiv@rem+1
 10123     14E4  0838               	movf	___fldiv@b,w
 10124     14E5  00C1               	movwf	___fldiv@rem
 10125     14E6                     l3909:
 10126     14E6  3000               	movlw	0
 10127     14E7  00BB               	movwf	___fldiv@b+3
 10128     14E8  3000               	movlw	0
 10129     14E9  00BA               	movwf	___fldiv@b+2
 10130     14EA  3000               	movlw	0
 10131     14EB  00B9               	movwf	___fldiv@b+1
 10132     14EC  3000               	movlw	0
 10133     14ED  00B8               	movwf	___fldiv@b
 10134     14EE                     l3911:
 10135     14EE  3000               	movlw	0
 10136     14EF  00CB               	movwf	___fldiv@grs+3
 10137     14F0  3000               	movlw	0
 10138     14F1  00CA               	movwf	___fldiv@grs+2
 10139     14F2  3000               	movlw	0
 10140     14F3  00C9               	movwf	___fldiv@grs+1
 10141     14F4  3000               	movlw	0
 10142     14F5  00C8               	movwf	___fldiv@grs
 10143     14F6                     l3913:
 10144     14F6  01CD               	clrf	___fldiv@aexp
 10145     14F7  2D36               	goto	l3933
 10146     14F8                     l3915:
 10147     14F8  084D               	movf	___fldiv@aexp,w
 10148     14F9  1903               	btfsc	3,2
 10149     14FA  2CFC               	goto	u4311
 10150     14FB  2CFD               	goto	u4310
 10151     14FC                     u4311:
 10152     14FC  2D17               	goto	l3925
 10153     14FD                     u4310:
 10154     14FD                     l3917:
 10155     14FD  3001               	movlw	1
 10156     14FE                     u4325:
 10157     14FE  35C1               	lslf	___fldiv@rem,f
 10158     14FF  0DC2               	rlf	___fldiv@rem+1,f
 10159     1500  0DC3               	rlf	___fldiv@rem+2,f
 10160     1501  0DC4               	rlf	___fldiv@rem+3,f
 10161     1502  0B89               	decfsz	9,f
 10162     1503  2CFE               	goto	u4325
 10163     1504  3001               	movlw	1
 10164     1505                     u4335:
 10165     1505  35B8               	lslf	___fldiv@b,f
 10166     1506  0DB9               	rlf	___fldiv@b+1,f
 10167     1507  0DBA               	rlf	___fldiv@b+2,f
 10168     1508  0DBB               	rlf	___fldiv@b+3,f
 10169     1509  0B89               	decfsz	9,f
 10170     150A  2D05               	goto	u4335
 10171     150B                     l3919:
 10172     150B  1FCB               	btfss	___fldiv@grs+3,7
 10173     150C  2D0E               	goto	u4341
 10174     150D  2D0F               	goto	u4340
 10175     150E                     u4341:
 10176     150E  2D10               	goto	l3923
 10177     150F                     u4340:
 10178     150F                     l3921:
 10179     150F  1438               	bsf	___fldiv@b,0
 10180     1510                     l3923:
 10181     1510  3001               	movlw	1
 10182     1511                     u4355:
 10183     1511  35C8               	lslf	___fldiv@grs,f
 10184     1512  0DC9               	rlf	___fldiv@grs+1,f
 10185     1513  0DCA               	rlf	___fldiv@grs+2,f
 10186     1514  0DCB               	rlf	___fldiv@grs+3,f
 10187     1515  0B89               	decfsz	9,f
 10188     1516  2D11               	goto	u4355
 10189     1517                     l3925:
 10190     1517  0837               	movf	___fldiv@a+3,w
 10191     1518  0244               	subwf	___fldiv@rem+3,w
 10192     1519  1D03               	skipz
 10193     151A  2D25               	goto	u4365
 10194     151B  0836               	movf	___fldiv@a+2,w
 10195     151C  0243               	subwf	___fldiv@rem+2,w
 10196     151D  1D03               	skipz
 10197     151E  2D25               	goto	u4365
 10198     151F  0835               	movf	___fldiv@a+1,w
 10199     1520  0242               	subwf	___fldiv@rem+1,w
 10200     1521  1D03               	skipz
 10201     1522  2D25               	goto	u4365
 10202     1523  0834               	movf	___fldiv@a,w
 10203     1524  0241               	subwf	___fldiv@rem,w
 10204     1525                     u4365:
 10205     1525  1C03               	skipc
 10206     1526  2D28               	goto	u4361
 10207     1527  2D29               	goto	u4360
 10208     1528                     u4361:
 10209     1528  2D32               	goto	l3931
 10210     1529                     u4360:
 10211     1529                     l3927:
 10212     1529  174B               	bsf	___fldiv@grs+3,6
 10213     152A                     l3929:
 10214     152A  0834               	movf	___fldiv@a,w
 10215     152B  02C1               	subwf	___fldiv@rem,f
 10216     152C  0835               	movf	___fldiv@a+1,w
 10217     152D  3BC2               	subwfb	___fldiv@rem+1,f
 10218     152E  0836               	movf	___fldiv@a+2,w
 10219     152F  3BC3               	subwfb	___fldiv@rem+2,f
 10220     1530  0837               	movf	___fldiv@a+3,w
 10221     1531  3BC4               	subwfb	___fldiv@rem+3,f
 10222     1532                     l3931:
 10223     1532  3001               	movlw	1
 10224     1533  00BC               	movwf	??___fldiv
 10225     1534  083C               	movf	??___fldiv,w
 10226     1535  07CD               	addwf	___fldiv@aexp,f
 10227     1536                     l3933:
 10228     1536  301A               	movlw	26
 10229     1537  024D               	subwf	___fldiv@aexp,w
 10230     1538  1C03               	skipc
 10231     1539  2D3B               	goto	u4371
 10232     153A  2D3C               	goto	u4370
 10233     153B                     u4371:
 10234     153B  2CF8               	goto	l3915
 10235     153C                     u4370:
 10236     153C                     l3935:
 10237     153C  0844               	movf	___fldiv@rem+3,w
 10238     153D  0443               	iorwf	___fldiv@rem+2,w
 10239     153E  0442               	iorwf	___fldiv@rem+1,w
 10240     153F  0441               	iorwf	___fldiv@rem,w
 10241     1540  1903               	skipnz
 10242     1541  2D43               	goto	u4381
 10243     1542  2D44               	goto	u4380
 10244     1543                     u4381:
 10245     1543  2D5D               	goto	l3949
 10246     1544                     u4380:
 10247     1544                     l3937:
 10248     1544  1448               	bsf	___fldiv@grs,0
 10249     1545  2D5D               	goto	l3949
 10250     1546                     l3939:
 10251     1546  3001               	movlw	1
 10252     1547                     u4395:
 10253     1547  35B8               	lslf	___fldiv@b,f
 10254     1548  0DB9               	rlf	___fldiv@b+1,f
 10255     1549  0DBA               	rlf	___fldiv@b+2,f
 10256     154A  0DBB               	rlf	___fldiv@b+3,f
 10257     154B  0B89               	decfsz	9,f
 10258     154C  2D47               	goto	u4395
 10259     154D                     l3941:
 10260     154D  1FCB               	btfss	___fldiv@grs+3,7
 10261     154E  2D50               	goto	u4401
 10262     154F  2D51               	goto	u4400
 10263     1550                     u4401:
 10264     1550  2D52               	goto	l3945
 10265     1551                     u4400:
 10266     1551                     l3943:
 10267     1551  1438               	bsf	___fldiv@b,0
 10268     1552                     l3945:
 10269     1552  3001               	movlw	1
 10270     1553                     u4415:
 10271     1553  35C8               	lslf	___fldiv@grs,f
 10272     1554  0DC9               	rlf	___fldiv@grs+1,f
 10273     1555  0DCA               	rlf	___fldiv@grs+2,f
 10274     1556  0DCB               	rlf	___fldiv@grs+3,f
 10275     1557  0B89               	decfsz	9,f
 10276     1558  2D53               	goto	u4415
 10277     1559                     l3947:
 10278     1559  30FF               	movlw	255
 10279     155A  07C6               	addwf	___fldiv@new_exp,f
 10280     155B  30FF               	movlw	255
 10281     155C  3DC7               	addwfc	___fldiv@new_exp+1,f
 10282     155D                     l3949:
 10283     155D  1FBA               	btfss	___fldiv@b+2,7
 10284     155E  2D60               	goto	u4421
 10285     155F  2D61               	goto	u4420
 10286     1560                     u4421:
 10287     1560  2D46               	goto	l3939
 10288     1561                     u4420:
 10289     1561                     l3951:
 10290     1561  01CD               	clrf	___fldiv@aexp
 10291     1562                     l3953:
 10292     1562  1FCB               	btfss	___fldiv@grs+3,7
 10293     1563  2D65               	goto	u4431
 10294     1564  2D66               	goto	u4430
 10295     1565                     u4431:
 10296     1565  2D82               	goto	l3961
 10297     1566                     u4430:
 10298     1566                     l3955:
 10299     1566  30FF               	movlw	255
 10300     1567  0548               	andwf	___fldiv@grs,w
 10301     1568  00BC               	movwf	??___fldiv
 10302     1569  30FF               	movlw	255
 10303     156A  0549               	andwf	___fldiv@grs+1,w
 10304     156B  00BD               	movwf	??___fldiv+1
 10305     156C  30FF               	movlw	255
 10306     156D  054A               	andwf	___fldiv@grs+2,w
 10307     156E  00BE               	movwf	??___fldiv+2
 10308     156F  307F               	movlw	127
 10309     1570  054B               	andwf	___fldiv@grs+3,w
 10310     1571  00BF               	movwf	??___fldiv+3
 10311     1572  083F               	movf	??___fldiv+3,w
 10312     1573  043E               	iorwf	??___fldiv+2,w
 10313     1574  043D               	iorwf	??___fldiv+1,w
 10314     1575  043C               	iorwf	??___fldiv,w
 10315     1576  1903               	skipnz
 10316     1577  2D79               	goto	u4441
 10317     1578  2D7A               	goto	u4440
 10318     1579                     u4441:
 10319     1579  2D7D               	goto	l939
 10320     157A                     u4440:
 10321     157A                     l3957:
 10322     157A  01CD               	clrf	___fldiv@aexp
 10323     157B  0ACD               	incf	___fldiv@aexp,f
 10324     157C  2D82               	goto	l3961
 10325     157D                     l939:
 10326     157D  1C38               	btfss	___fldiv@b,0
 10327     157E  2D80               	goto	u4451
 10328     157F  2D81               	goto	u4450
 10329     1580                     u4451:
 10330     1580  2D82               	goto	l3961
 10331     1581                     u4450:
 10332     1581  2D7A               	goto	l3957
 10333     1582                     l3961:
 10334     1582  084D               	movf	___fldiv@aexp,w
 10335     1583  1903               	btfsc	3,2
 10336     1584  2D86               	goto	u4461
 10337     1585  2D87               	goto	u4460
 10338     1586                     u4461:
 10339     1586  2DAF               	goto	l3971
 10340     1587                     u4460:
 10341     1587                     l3963:
 10342     1587  3001               	movlw	1
 10343     1588  07B8               	addwf	___fldiv@b,f
 10344     1589  3000               	movlw	0
 10345     158A  3DB9               	addwfc	___fldiv@b+1,f
 10346     158B  3000               	movlw	0
 10347     158C  3DBA               	addwfc	___fldiv@b+2,f
 10348     158D  3000               	movlw	0
 10349     158E  3DBB               	addwfc	___fldiv@b+3,f
 10350     158F                     l3965:
 10351     158F  1C3B               	btfss	___fldiv@b+3,0
 10352     1590  2D92               	goto	u4471
 10353     1591  2D93               	goto	u4470
 10354     1592                     u4471:
 10355     1592  2DAF               	goto	l3971
 10356     1593                     u4470:
 10357     1593                     l3967:
 10358     1593  0838               	movf	___fldiv@b,w
 10359     1594  00BC               	movwf	??___fldiv
 10360     1595  0839               	movf	___fldiv@b+1,w
 10361     1596  00BD               	movwf	??___fldiv+1
 10362     1597  083A               	movf	___fldiv@b+2,w
 10363     1598  00BE               	movwf	??___fldiv+2
 10364     1599  083B               	movf	___fldiv@b+3,w
 10365     159A  00BF               	movwf	??___fldiv+3
 10366     159B  3001               	movlw	1
 10367     159C  00C0               	movwf	??___fldiv+4
 10368     159D                     u4485:
 10369     159D  37BF               	asrf	??___fldiv+3,f
 10370     159E  0CBE               	rrf	??___fldiv+2,f
 10371     159F  0CBD               	rrf	??___fldiv+1,f
 10372     15A0  0CBC               	rrf	??___fldiv,f
 10373     15A1                     u4480:
 10374     15A1  0BC0               	decfsz	??___fldiv+4,f
 10375     15A2  2D9D               	goto	u4485
 10376     15A3  083F               	movf	??___fldiv+3,w
 10377     15A4  00BB               	movwf	___fldiv@b+3
 10378     15A5  083E               	movf	??___fldiv+2,w
 10379     15A6  00BA               	movwf	___fldiv@b+2
 10380     15A7  083D               	movf	??___fldiv+1,w
 10381     15A8  00B9               	movwf	___fldiv@b+1
 10382     15A9  083C               	movf	??___fldiv,w
 10383     15AA  00B8               	movwf	___fldiv@b
 10384     15AB                     l3969:
 10385     15AB  3001               	movlw	1
 10386     15AC  07C6               	addwf	___fldiv@new_exp,f
 10387     15AD  3000               	movlw	0
 10388     15AE  3DC7               	addwfc	___fldiv@new_exp+1,f
 10389     15AF                     l3971:
 10390     15AF  0847               	movf	___fldiv@new_exp+1,w
 10391     15B0  3A80               	xorlw	128
 10392     15B1  00BC               	movwf	??___fldiv
 10393     15B2  3080               	movlw	128
 10394     15B3  023C               	subwf	??___fldiv,w
 10395     15B4  1D03               	skipz
 10396     15B5  2DB8               	goto	u4495
 10397     15B6  30FF               	movlw	255
 10398     15B7  0246               	subwf	___fldiv@new_exp,w
 10399     15B8                     u4495:
 10400     15B8  1C03               	skipc
 10401     15B9  2DBB               	goto	u4491
 10402     15BA  2DBC               	goto	u4490
 10403     15BB                     u4491:
 10404     15BB  2DC9               	goto	l944
 10405     15BC                     u4490:
 10406     15BC                     l3973:
 10407     15BC  30FF               	movlw	255
 10408     15BD  0020               	movlb	0	; select bank0
 10409     15BE  00C6               	movwf	___fldiv@new_exp
 10410     15BF  3000               	movlw	0
 10411     15C0  00C7               	movwf	___fldiv@new_exp+1
 10412     15C1  3000               	movlw	0
 10413     15C2  00BB               	movwf	___fldiv@b+3
 10414     15C3  3000               	movlw	0
 10415     15C4  00BA               	movwf	___fldiv@b+2
 10416     15C5  3000               	movlw	0
 10417     15C6  00B9               	movwf	___fldiv@b+1
 10418     15C7  3000               	movlw	0
 10419     15C8  00B8               	movwf	___fldiv@b
 10420     15C9                     l944:
 10421     15C9  0020               	movlb	0	; select bank0
 10422     15CA  0847               	movf	___fldiv@new_exp+1,w
 10423     15CB  3A80               	xorlw	128
 10424     15CC  00BC               	movwf	??___fldiv
 10425     15CD  3080               	movlw	128
 10426     15CE  023C               	subwf	??___fldiv,w
 10427     15CF  1D03               	skipz
 10428     15D0  2DD3               	goto	u4505
 10429     15D1  3001               	movlw	1
 10430     15D2  0246               	subwf	___fldiv@new_exp,w
 10431     15D3                     u4505:
 10432     15D3  1803               	skipnc
 10433     15D4  2DD6               	goto	u4501
 10434     15D5  2DD7               	goto	u4500
 10435     15D6                     u4501:
 10436     15D6  2DE3               	goto	l945
 10437     15D7                     u4500:
 10438     15D7                     l3975:
 10439     15D7  0020               	movlb	0	; select bank0
 10440     15D8  01C6               	clrf	___fldiv@new_exp
 10441     15D9  01C7               	clrf	___fldiv@new_exp+1
 10442     15DA                     l3977:
 10443     15DA  3000               	movlw	0
 10444     15DB  00BB               	movwf	___fldiv@b+3
 10445     15DC  3000               	movlw	0
 10446     15DD  00BA               	movwf	___fldiv@b+2
 10447     15DE  3000               	movlw	0
 10448     15DF  00B9               	movwf	___fldiv@b+1
 10449     15E0  3000               	movlw	0
 10450     15E1  00B8               	movwf	___fldiv@b
 10451     15E2                     l3979:
 10452     15E2  01C5               	clrf	___fldiv@sign
 10453     15E3                     l945:
 10454     15E3  0020               	movlb	0	; select bank0
 10455     15E4  0846               	movf	___fldiv@new_exp,w
 10456     15E5  00CC               	movwf	___fldiv@bexp
 10457     15E6                     l3981:
 10458     15E6  1C4C               	btfss	___fldiv@bexp,0
 10459     15E7  2DE9               	goto	u4511
 10460     15E8  2DEA               	goto	u4510
 10461     15E9                     u4511:
 10462     15E9  2DEC               	goto	l3985
 10463     15EA                     u4510:
 10464     15EA                     l3983:
 10465     15EA  17BA               	bsf	___fldiv@b+2,7
 10466     15EB  2DF0               	goto	l947
 10467     15EC                     l3985:
 10468     15EC  307F               	movlw	127
 10469     15ED  00BC               	movwf	??___fldiv
 10470     15EE  083C               	movf	??___fldiv,w
 10471     15EF  05BA               	andwf	___fldiv@b+2,f
 10472     15F0                     l947:
 10473     15F0  364C               	lsrf	___fldiv@bexp,w
 10474     15F1  00BB               	movwf	___fldiv@b+3
 10475     15F2  0845               	movf	___fldiv@sign,w
 10476     15F3  00BC               	movwf	??___fldiv
 10477     15F4  083C               	movf	??___fldiv,w
 10478     15F5  04BB               	iorwf	___fldiv@b+3,f
 10479     15F6  2CB7               	goto	l3895
 10480     15F7                     l925:
 10481     15F7  0008               	return
 10482     15F8                     __end_of___fldiv:
 10483                           
 10484                           	psect	text21
 10485     108E                     __ptext21:	
 10486 ;; *************** function _dtoa *****************
 10487 ;; Defined at:
 10488 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 10489 ;; Parameters:    Size  Location     Type
 10490 ;;  fp              1    wreg     PTR struct _IO_FILE
 10491 ;;		 -> sprintf@f(11), 
 10492 ;;  d               2   22[BANK0 ] int 
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 10495 ;;		 -> sprintf@f(11), 
 10496 ;;  i               2   33[BANK0 ] int 
 10497 ;;  w               2   30[BANK0 ] int 
 10498 ;;  p               2   28[BANK0 ] int 
 10499 ;;  s               1   32[BANK0 ] unsigned char 
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  1    wreg      void 
 10502 ;; Registers used:
 10503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10509 ;;      Params:         0       2       0       0       0       0       0       0
 10510 ;;      Locals:         0      10       0       0       0       0       0       0
 10511 ;;      Temps:          0       1       0       0       0       0       0       0
 10512 ;;      Totals:         0      13       0       0       0       0       0       0
 10513 ;;Total ram usage:       13 bytes
 10514 ;; Hardware stack levels used: 1
 10515 ;; Hardware stack levels required when called: 8
 10516 ;; This function calls:
 10517 ;;		___awdiv
 10518 ;;		___awmod
 10519 ;;		_abs
 10520 ;;		_pad
 10521 ;; This function is called by:
 10522 ;;		_vfpfcnvrt
 10523 ;; This function uses a non-reentrant model
 10524 ;;
 10525                           
 10526     108E                     _dtoa:	
 10527                           ;psect for function _dtoa
 10528                           
 10529                           
 10530                           ;incstack = 0
 10531                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10532                           ;dtoa@fp stored from wreg
 10533     108E  0020               	movlb	0	; select bank0
 10534     108F  00BB               	movwf	dtoa@fp
 10535     1090                     l4241:
 10536                           
 10537                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 10538     1090  1BB7               	btfsc	dtoa@d+1,7
 10539     1091  2893               	goto	u5071
 10540     1092  2895               	goto	u5070
 10541     1093                     u5071:
 10542     1093  3001               	movlw	1
 10543     1094  2896               	goto	u5080
 10544     1095                     u5070:
 10545     1095  3000               	movlw	0
 10546     1096                     u5080:
 10547     1096  00C0               	movwf	dtoa@s
 10548     1097                     l4243:
 10549                           
 10550                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
 10551     1097  0022               	movlb	2	; select bank2
 10552     1098  1BAF               	btfsc	(_prec+1)^(0+256),7
 10553     1099  289B               	goto	u5091
 10554     109A  289C               	goto	u5090
 10555     109B                     u5091:
 10556     109B  28A1               	goto	l4247
 10557     109C                     u5090:
 10558     109C                     l4245:
 10559                           
 10560                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
 10561     109C  30FD               	movlw	253
 10562     109D  0020               	movlb	0	; select bank0
 10563     109E  00B8               	movwf	??_dtoa
 10564     109F  0838               	movf	??_dtoa,w
 10565     10A0  05FC               	andwf	_flags,f
 10566     10A1                     l4247:
 10567                           
 10568                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 10569     10A1  0022               	movlb	2	; select bank2
 10570     10A2  1FAF               	btfss	(_prec+1)^(0+256),7
 10571     10A3  28A5               	goto	u5101
 10572     10A4  28A6               	goto	u5100
 10573     10A5                     u5101:
 10574     10A5  28AC               	goto	l4251
 10575     10A6                     u5100:
 10576     10A6                     l4249:
 10577     10A6  3001               	movlw	1
 10578     10A7  0020               	movlb	0	; select bank0
 10579     10A8  00BC               	movwf	dtoa@p
 10580     10A9  3000               	movlw	0
 10581     10AA  00BD               	movwf	dtoa@p+1
 10582     10AB  28B3               	goto	l1069
 10583     10AC                     l4251:
 10584     10AC  082F               	movf	(_prec+1)^(0+256),w
 10585     10AD  0020               	movlb	0	; select bank0
 10586     10AE  00BD               	movwf	dtoa@p+1
 10587     10AF  0022               	movlb	2	; select bank2
 10588     10B0  082E               	movf	_prec^(0+256),w
 10589     10B1  0020               	movlb	0	; select bank0
 10590     10B2  00BC               	movwf	dtoa@p
 10591     10B3                     l1069:
 10592                           
 10593                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 10594     10B3  0022               	movlb	2	; select bank2
 10595     10B4  082D               	movf	(_width+1)^(0+256),w
 10596     10B5  0020               	movlb	0	; select bank0
 10597     10B6  00BF               	movwf	dtoa@w+1
 10598     10B7  0022               	movlb	2	; select bank2
 10599     10B8  082C               	movf	_width^(0+256),w
 10600     10B9  0020               	movlb	0	; select bank0
 10601     10BA  00BE               	movwf	dtoa@w
 10602     10BB                     l4253:
 10603                           
 10604                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
 10605     10BB  0840               	movf	dtoa@s,w
 10606     10BC  1903               	btfsc	3,2
 10607     10BD  28BF               	goto	u5111
 10608     10BE  28C0               	goto	u5110
 10609     10BF                     u5111:
 10610     10BF  28D4               	goto	l1070
 10611     10C0                     u5110:
 10612     10C0                     l4255:
 10613                           
 10614                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
 10615     10C0  30FF               	movlw	255
 10616     10C1  07BE               	addwf	dtoa@w,f
 10617     10C2  30FF               	movlw	255
 10618     10C3  3DBF               	addwfc	dtoa@w+1,f
 10619     10C4                     l4257:
 10620                           
 10621                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 10622     10C4  0840               	movf	dtoa@s,w
 10623     10C5  1D03               	btfss	3,2
 10624     10C6  28C8               	goto	u5121
 10625     10C7  28C9               	goto	u5120
 10626     10C8                     u5121:
 10627     10C8  28CE               	goto	l4261
 10628     10C9                     u5120:
 10629     10C9                     l4259:
 10630     10C9  302B               	movlw	43
 10631     10CA  00B9               	movwf	_dtoa$1339
 10632     10CB  3000               	movlw	0
 10633     10CC  00BA               	movwf	_dtoa$1339+1
 10634     10CD  28D2               	goto	l1074
 10635     10CE                     l4261:
 10636     10CE  302D               	movlw	45
 10637     10CF  00B9               	movwf	_dtoa$1339
 10638     10D0  3000               	movlw	0
 10639     10D1  00BA               	movwf	_dtoa$1339+1
 10640     10D2                     l1074:
 10641     10D2  0839               	movf	_dtoa$1339,w
 10642     10D3  00C0               	movwf	dtoa@s
 10643     10D4                     l1070:	
 10644                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 543:     }
 10645                           
 10646                           
 10647                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 10648     10D4  304F               	movlw	79
 10649     10D5  00C1               	movwf	dtoa@i
 10650     10D6  3000               	movlw	0
 10651     10D7  00C2               	movwf	dtoa@i+1
 10652     10D8                     l4263:
 10653                           
 10654                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 10655     10D8  0024               	movlb	4	; select bank4
 10656     10D9  01EF               	clrf	(_dbuf^(0+512)+79)
 10657                           
 10658                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 10659     10DA  2914               	goto	l4275
 10660     10DB                     l4265:
 10661                           
 10662                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
 10663     10DB  30FF               	movlw	255
 10664     10DC  0020               	movlb	0	; select bank0
 10665     10DD  07C1               	addwf	dtoa@i,f
 10666     10DE  30FF               	movlw	255
 10667     10DF  3DC2               	addwfc	dtoa@i+1,f
 10668     10E0                     l4267:
 10669                           
 10670                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 10671     10E0  0841               	movf	dtoa@i,w
 10672     10E1  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10673     10E2  0086               	movwf	6
 10674     10E3  3002               	movlw	2	; select bank4/5
 10675     10E4  0087               	movwf	7
 10676     10E5  300A               	movlw	10
 10677     10E6  00A0               	movwf	___awmod@divisor
 10678     10E7  3000               	movlw	0
 10679     10E8  00A1               	movwf	___awmod@divisor+1
 10680     10E9  0837               	movf	dtoa@d+1,w
 10681     10EA  00A3               	movwf	___awmod@dividend+1
 10682     10EB  0836               	movf	dtoa@d,w
 10683     10EC  00A2               	movwf	___awmod@dividend
 10684     10ED  319C  24B3  3190   	fcall	___awmod
 10685     10F0  0020               	movlb	0	; select bank0
 10686     10F1  0821               	movf	?___awmod+1,w
 10687     10F2  00A8               	movwf	abs@a+1
 10688     10F3  0820               	movf	?___awmod,w
 10689     10F4  00A7               	movwf	abs@a
 10690     10F5  3199  2199  3190   	fcall	_abs
 10691     10F8  0020               	movlb	0	; select bank0
 10692     10F9  0827               	movf	?_abs,w
 10693     10FA  3E30               	addlw	48
 10694     10FB  0081               	movwf	1
 10695     10FC                     l4269:
 10696                           
 10697                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 567:         --p;
 10698     10FC  30FF               	movlw	255
 10699     10FD  07BC               	addwf	dtoa@p,f
 10700     10FE  30FF               	movlw	255
 10701     10FF  3DBD               	addwfc	dtoa@p+1,f
 10702     1100                     l4271:
 10703                           
 10704                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
 10705     1100  30FF               	movlw	255
 10706     1101  07BE               	addwf	dtoa@w,f
 10707     1102  30FF               	movlw	255
 10708     1103  3DBF               	addwfc	dtoa@w+1,f
 10709     1104                     l4273:
 10710                           
 10711                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 10712     1104  300A               	movlw	10
 10713     1105  00A0               	movwf	___awdiv@divisor
 10714     1106  3000               	movlw	0
 10715     1107  00A1               	movwf	___awdiv@divisor+1
 10716     1108  0837               	movf	dtoa@d+1,w
 10717     1109  00A3               	movwf	___awdiv@dividend+1
 10718     110A  0836               	movf	dtoa@d,w
 10719     110B  00A2               	movwf	___awdiv@dividend
 10720     110C  319D  2560  3190   	fcall	___awdiv
 10721     110F  0020               	movlb	0	; select bank0
 10722     1110  0821               	movf	?___awdiv+1,w
 10723     1111  00B7               	movwf	dtoa@d+1
 10724     1112  0820               	movf	?___awdiv,w
 10725     1113  00B6               	movwf	dtoa@d
 10726     1114                     l4275:
 10727                           
 10728                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 10729     1114  0020               	movlb	0	; select bank0
 10730     1115  0842               	movf	dtoa@i+1,w
 10731     1116  3A80               	xorlw	128
 10732     1117  00B8               	movwf	??_dtoa
 10733     1118  3080               	movlw	128
 10734     1119  0238               	subwf	??_dtoa,w
 10735     111A  1D03               	skipz
 10736     111B  291E               	goto	u5135
 10737     111C  3001               	movlw	1
 10738     111D  0241               	subwf	dtoa@i,w
 10739     111E                     u5135:
 10740     111E  1C03               	skipc
 10741     111F  2921               	goto	u5131
 10742     1120  2922               	goto	u5130
 10743     1121                     u5131:
 10744     1121  2948               	goto	l4285
 10745     1122                     u5130:
 10746     1122                     l4277:
 10747     1122  0020               	movlb	0	; select bank0
 10748     1123  0836               	movf	dtoa@d,w
 10749     1124  0437               	iorwf	dtoa@d+1,w
 10750     1125  1D03               	btfss	3,2
 10751     1126  2928               	goto	u5141
 10752     1127  2929               	goto	u5140
 10753     1128                     u5141:
 10754     1128  28DB               	goto	l4265
 10755     1129                     u5140:
 10756     1129                     l4279:
 10757     1129  083D               	movf	dtoa@p+1,w
 10758     112A  3A80               	xorlw	128
 10759     112B  00B8               	movwf	??_dtoa
 10760     112C  3080               	movlw	128
 10761     112D  0238               	subwf	??_dtoa,w
 10762     112E  1D03               	skipz
 10763     112F  2932               	goto	u5155
 10764     1130  3001               	movlw	1
 10765     1131  023C               	subwf	dtoa@p,w
 10766     1132                     u5155:
 10767     1132  1803               	skipnc
 10768     1133  2935               	goto	u5151
 10769     1134  2936               	goto	u5150
 10770     1135                     u5151:
 10771     1135  28DB               	goto	l4265
 10772     1136                     u5150:
 10773     1136                     l4281:
 10774     1136  0020               	movlb	0	; select bank0
 10775     1137  083F               	movf	dtoa@w+1,w
 10776     1138  3A80               	xorlw	128
 10777     1139  00B8               	movwf	??_dtoa
 10778     113A  3080               	movlw	128
 10779     113B  0238               	subwf	??_dtoa,w
 10780     113C  1D03               	skipz
 10781     113D  2940               	goto	u5165
 10782     113E  3001               	movlw	1
 10783     113F  023E               	subwf	dtoa@w,w
 10784     1140                     u5165:
 10785     1140  1C03               	skipc
 10786     1141  2943               	goto	u5161
 10787     1142  2944               	goto	u5160
 10788     1143                     u5161:
 10789     1143  2948               	goto	l4285
 10790     1144                     u5160:
 10791     1144                     l4283:
 10792     1144  18FC               	btfsc	_flags,1
 10793     1145  2947               	goto	u5171
 10794     1146  2948               	goto	u5170
 10795     1147                     u5171:
 10796     1147  28DB               	goto	l4265
 10797     1148                     u5170:
 10798     1148                     l4285:
 10799                           
 10800                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 10801     1148  0020               	movlb	0	; select bank0
 10802     1149  0840               	movf	dtoa@s,w
 10803     114A  1903               	btfsc	3,2
 10804     114B  294D               	goto	u5181
 10805     114C  294E               	goto	u5180
 10806     114D                     u5181:
 10807     114D  2959               	goto	l4291
 10808     114E                     u5180:
 10809     114E                     l4287:
 10810                           
 10811                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
 10812     114E  30FF               	movlw	255
 10813     114F  07C1               	addwf	dtoa@i,f
 10814     1150  30FF               	movlw	255
 10815     1151  3DC2               	addwfc	dtoa@i+1,f
 10816     1152                     l4289:
 10817                           
 10818                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 10819     1152  0841               	movf	dtoa@i,w
 10820     1153  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10821     1154  0086               	movwf	6
 10822     1155  3002               	movlw	2	; select bank4/5
 10823     1156  0087               	movwf	7
 10824     1157  0840               	movf	dtoa@s,w
 10825     1158  0081               	movwf	1
 10826     1159                     l4291:
 10827                           
 10828                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 10829     1159  0841               	movf	dtoa@i,w
 10830     115A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10831     115B  00AF               	movwf	pad@buf
 10832     115C  083F               	movf	dtoa@w+1,w
 10833     115D  00B1               	movwf	pad@p+1
 10834     115E  083E               	movf	dtoa@w,w
 10835     115F  00B0               	movwf	pad@p
 10836     1160  083B               	movf	dtoa@fp,w
 10837     1161  319B  23E3  3190   	fcall	_pad
 10838     1164                     l1083:
 10839     1164  0008               	return
 10840     1165                     __end_of_dtoa:
 10841                           
 10842                           	psect	text22
 10843     1BE3                     __ptext22:	
 10844 ;; *************** function _pad *****************
 10845 ;; Defined at:
 10846 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;  fp              1    wreg     PTR struct _IO_FILE
 10849 ;;		 -> sprintf@f(11), 
 10850 ;;  buf             1   15[BANK0 ] PTR unsigned char 
 10851 ;;		 -> dbuf(80), 
 10852 ;;  p               2   16[BANK0 ] int 
 10853 ;; Auto vars:     Size  Location     Type
 10854 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
 10855 ;;		 -> sprintf@f(11), 
 10856 ;;  i               2   19[BANK0 ] int 
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      void 
 10859 ;; Registers used:
 10860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10866 ;;      Params:         0       3       0       0       0       0       0       0
 10867 ;;      Locals:         0       3       0       0       0       0       0       0
 10868 ;;      Temps:          0       1       0       0       0       0       0       0
 10869 ;;      Totals:         0       7       0       0       0       0       0       0
 10870 ;;Total ram usage:        7 bytes
 10871 ;; Hardware stack levels used: 1
 10872 ;; Hardware stack levels required when called: 7
 10873 ;; This function calls:
 10874 ;;		_fputc
 10875 ;;		_fputs
 10876 ;; This function is called by:
 10877 ;;		_dtoa
 10878 ;;		_efgtoa
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           
 10882     1BE3                     _pad:	
 10883                           ;psect for function _pad
 10884                           
 10885                           
 10886                           ;incstack = 0
 10887                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10888                           ;pad@fp stored from wreg
 10889     1BE3  0020               	movlb	0	; select bank0
 10890     1BE4  00B5               	movwf	pad@fp
 10891     1BE5                     l4131:
 10892                           
 10893                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 10894     1BE5  1FB1               	btfss	pad@p+1,7
 10895     1BE6  2BE8               	goto	u4781
 10896     1BE7  2BE9               	goto	u4780
 10897     1BE8                     u4781:
 10898     1BE8  2BEB               	goto	l1058
 10899     1BE9                     u4780:
 10900     1BE9                     l4133:
 10901                           
 10902                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 10903     1BE9  01B0               	clrf	pad@p
 10904     1BEA  01B1               	clrf	pad@p+1
 10905     1BEB                     l1058:	
 10906                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 207:  }
 10907                           
 10908                           
 10909                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 10910     1BEB  01B3               	clrf	pad@i
 10911     1BEC  01B4               	clrf	pad@i+1
 10912                           
 10913                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 10914     1BED  2BFD               	goto	l4139
 10915     1BEE                     l4135:
 10916                           
 10917                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 10918     1BEE  3020               	movlw	32
 10919     1BEF  0020               	movlb	0	; select bank0
 10920     1BF0  00A0               	movwf	fputc@c
 10921     1BF1  3000               	movlw	0
 10922     1BF2  00A1               	movwf	fputc@c+1
 10923     1BF3  0835               	movf	pad@fp,w
 10924     1BF4  00A2               	movwf	fputc@fp
 10925     1BF5  319D  2507  319B   	fcall	_fputc
 10926     1BF8                     l4137:
 10927                           
 10928                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
 10929     1BF8  3001               	movlw	1
 10930     1BF9  0020               	movlb	0	; select bank0
 10931     1BFA  07B3               	addwf	pad@i,f
 10932     1BFB  3000               	movlw	0
 10933     1BFC  3DB4               	addwfc	pad@i+1,f
 10934     1BFD                     l4139:
 10935                           
 10936                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 10937     1BFD  0834               	movf	pad@i+1,w
 10938     1BFE  3A80               	xorlw	128
 10939     1BFF  00B2               	movwf	??_pad
 10940     1C00  0831               	movf	pad@p+1,w
 10941     1C01  3A80               	xorlw	128
 10942     1C02  0232               	subwf	??_pad,w
 10943     1C03  1D03               	skipz
 10944     1C04  2C07               	goto	u4795
 10945     1C05  0830               	movf	pad@p,w
 10946     1C06  0233               	subwf	pad@i,w
 10947     1C07                     u4795:
 10948     1C07  1C03               	skipc
 10949     1C08  2C0A               	goto	u4791
 10950     1C09  2C0B               	goto	u4790
 10951     1C0A                     u4791:
 10952     1C0A  2BEE               	goto	l4135
 10953     1C0B                     u4790:
 10954     1C0B                     l4141:
 10955                           
 10956                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 10957     1C0B  0020               	movlb	0	; select bank0
 10958     1C0C  0835               	movf	pad@fp,w
 10959     1C0D  00A8               	movwf	fputs@fp
 10960     1C0E  082F               	movf	pad@buf,w
 10961     1C0F  3187  27DB  319B   	fcall	_fputs
 10962     1C12                     l1062:
 10963     1C12  0008               	return
 10964     1C13                     __end_of_pad:
 10965                           
 10966                           	psect	text23
 10967     07DB                     __ptext23:	
 10968 ;; *************** function _fputs *****************
 10969 ;; Defined at:
 10970 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;  s               1    wreg     PTR const unsigned char 
 10973 ;;		 -> dbuf(80), 
 10974 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
 10975 ;;		 -> sprintf@f(11), 
 10976 ;; Auto vars:     Size  Location     Type
 10977 ;;  s               1   14[BANK0 ] PTR const unsigned char 
 10978 ;;		 -> dbuf(80), 
 10979 ;;  i               2   12[BANK0 ] int 
 10980 ;;  c               1   11[BANK0 ] unsigned char 
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  2    8[BANK0 ] int 
 10983 ;; Registers used:
 10984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10985 ;; Tracked objects:
 10986 ;;		On entry : 0/0
 10987 ;;		On exit  : 0/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10990 ;;      Params:         0       1       0       0       0       0       0       0
 10991 ;;      Locals:         0       4       0       0       0       0       0       0
 10992 ;;      Temps:          0       2       0       0       0       0       0       0
 10993 ;;      Totals:         0       7       0       0       0       0       0       0
 10994 ;;Total ram usage:        7 bytes
 10995 ;; Hardware stack levels used: 1
 10996 ;; Hardware stack levels required when called: 6
 10997 ;; This function calls:
 10998 ;;		_fputc
 10999 ;; This function is called by:
 11000 ;;		_pad
 11001 ;; This function uses a non-reentrant model
 11002 ;;
 11003                           
 11004     07DB                     _fputs:	
 11005                           ;psect for function _fputs
 11006                           
 11007                           
 11008                           ;incstack = 0
 11009                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11010                           ;fputs@s stored from wreg
 11011     07DB  0020               	movlb	0	; select bank0
 11012     07DC  00AE               	movwf	fputs@s
 11013     07DD                     l3665:
 11014     07DD  01AC               	clrf	fputs@i
 11015     07DE  01AD               	clrf	fputs@i+1
 11016     07DF  2FF1               	goto	l3671
 11017     07E0                     l3667:
 11018     07E0  082B               	movf	fputs@c,w
 11019     07E1  00A9               	movwf	??_fputs
 11020     07E2  01AA               	clrf	??_fputs+1
 11021     07E3  0829               	movf	??_fputs,w
 11022     07E4  00A0               	movwf	fputc@c
 11023     07E5  082A               	movf	??_fputs+1,w
 11024     07E6  00A1               	movwf	fputc@c+1
 11025     07E7  0828               	movf	fputs@fp,w
 11026     07E8  00A2               	movwf	fputc@fp
 11027     07E9  319D  2507  3187   	fcall	_fputc
 11028     07EC                     l3669:
 11029     07EC  3001               	movlw	1
 11030     07ED  0020               	movlb	0	; select bank0
 11031     07EE  07AC               	addwf	fputs@i,f
 11032     07EF  3000               	movlw	0
 11033     07F0  3DAD               	addwfc	fputs@i+1,f
 11034     07F1                     l3671:
 11035     07F1  082C               	movf	fputs@i,w
 11036     07F2  072E               	addwf	fputs@s,w
 11037     07F3  00A9               	movwf	??_fputs
 11038     07F4  0829               	movf	??_fputs,w
 11039     07F5  0086               	movwf	6
 11040     07F6  3002               	movlw	2	; select bank4/5
 11041     07F7  0087               	movwf	7
 11042     07F8  0801               	movf	1,w
 11043     07F9  00AB               	movwf	fputs@c
 11044     07FA  082B               	movf	fputs@c,w
 11045     07FB  1D03               	btfss	3,2
 11046     07FC  2FFE               	goto	u3801
 11047     07FD  2FFF               	goto	u3800
 11048     07FE                     u3801:
 11049     07FE  2FE0               	goto	l3667
 11050     07FF                     u3800:
 11051     07FF                     l1250:
 11052     07FF  0008               	return
 11053     0800                     __end_of_fputs:
 11054                           
 11055                           	psect	text24
 11056     1D07                     __ptext24:	
 11057 ;; *************** function _fputc *****************
 11058 ;; Defined at:
 11059 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
 11060 ;; Parameters:    Size  Location     Type
 11061 ;;  c               2    0[BANK0 ] int 
 11062 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
 11063 ;;		 -> sprintf@f(11), 
 11064 ;; Auto vars:     Size  Location     Type
 11065 ;;		None
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  2    0[BANK0 ] int 
 11068 ;; Registers used:
 11069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11075 ;;      Params:         0       3       0       0       0       0       0       0
 11076 ;;      Locals:         0       0       0       0       0       0       0       0
 11077 ;;      Temps:          0       5       0       0       0       0       0       0
 11078 ;;      Totals:         0       8       0       0       0       0       0       0
 11079 ;;Total ram usage:        8 bytes
 11080 ;; Hardware stack levels used: 1
 11081 ;; Hardware stack levels required when called: 5
 11082 ;; This function calls:
 11083 ;;		_putch
 11084 ;; This function is called by:
 11085 ;;		_pad
 11086 ;;		_vfpfcnvrt
 11087 ;;		_fputs
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091     1D07                     _fputc:	
 11092                           ;psect for function _fputc
 11093                           
 11094     1D07                     l3441:	
 11095                           ;incstack = 0
 11096                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11097                           
 11098     1D07  0020               	movlb	0	; select bank0
 11099     1D08  0822               	movf	fputc@fp,w
 11100     1D09  1903               	btfsc	3,2
 11101     1D0A  2D0C               	goto	u3301
 11102     1D0B  2D0D               	goto	u3300
 11103     1D0C                     u3301:
 11104     1D0C  2D12               	goto	l3445
 11105     1D0D                     u3300:
 11106     1D0D                     l3443:
 11107     1D0D  0822               	movf	fputc@fp,w
 11108     1D0E  1D03               	btfss	3,2
 11109     1D0F  2D11               	goto	u3311
 11110     1D10  2D12               	goto	u3310
 11111     1D11                     u3311:
 11112     1D11  2D17               	goto	l3447
 11113     1D12                     u3310:
 11114     1D12                     l3445:
 11115     1D12  0820               	movf	fputc@c,w
 11116     1D13  3180  2003  319D   	fcall	_putch
 11117     1D16  2D5F               	goto	l1242
 11118     1D17                     l3447:
 11119     1D17  0822               	movf	fputc@fp,w
 11120     1D18  3E09               	addlw	9
 11121     1D19  0086               	movwf	6
 11122     1D1A  3001               	movlw	1	; select bank2/3
 11123     1D1B  0087               	movwf	7
 11124     1D1C  0016               	moviw fsr1++
 11125     1D1D  0401               	iorwf	1,w
 11126     1D1E  1903               	btfsc	3,2
 11127     1D1F  2D21               	goto	u3321
 11128     1D20  2D22               	goto	u3320
 11129     1D21                     u3321:
 11130     1D21  2D42               	goto	l3451
 11131     1D22                     u3320:
 11132     1D22                     l3449:
 11133     1D22  0822               	movf	fputc@fp,w
 11134     1D23  3E09               	addlw	9
 11135     1D24  0086               	movwf	6
 11136     1D25  3001               	movlw	1	; select bank2/3
 11137     1D26  0087               	movwf	7
 11138     1D27  3F40               	moviw [0]fsr1
 11139     1D28  00A3               	movwf	??_fputc
 11140     1D29  3F41               	moviw [1]fsr1
 11141     1D2A  00A4               	movwf	??_fputc+1
 11142     1D2B  0822               	movf	fputc@fp,w
 11143     1D2C  3E02               	addlw	2
 11144     1D2D  0086               	movwf	6
 11145     1D2E  3001               	movlw	1	; select bank2/3
 11146     1D2F  0087               	movwf	7
 11147     1D30  3F40               	moviw [0]fsr1
 11148     1D31  00A5               	movwf	??_fputc+2
 11149     1D32  3F41               	moviw [1]fsr1
 11150     1D33  00A6               	movwf	??_fputc+3
 11151     1D34  0826               	movf	??_fputc+3,w
 11152     1D35  3A80               	xorlw	128
 11153     1D36  00A7               	movwf	??_fputc+4
 11154     1D37  0824               	movf	??_fputc+1,w
 11155     1D38  3A80               	xorlw	128
 11156     1D39  0227               	subwf	??_fputc+4,w
 11157     1D3A  1D03               	skipz
 11158     1D3B  2D3E               	goto	u3335
 11159     1D3C  0823               	movf	??_fputc,w
 11160     1D3D  0225               	subwf	??_fputc+2,w
 11161     1D3E                     u3335:
 11162     1D3E  1803               	skipnc
 11163     1D3F  2D41               	goto	u3331
 11164     1D40  2D42               	goto	u3330
 11165     1D41                     u3331:
 11166     1D41  2D5F               	goto	l1242
 11167     1D42                     u3330:
 11168     1D42                     l3451:
 11169     1D42  0020               	movlb	0	; select bank0
 11170     1D43  0822               	movf	fputc@fp,w
 11171     1D44  0086               	movwf	6
 11172     1D45  3001               	movlw	1	; select bank2/3
 11173     1D46  0087               	movwf	7
 11174     1D47  0822               	movf	fputc@fp,w
 11175     1D48  3E02               	addlw	2
 11176     1D49  0084               	movwf	4
 11177     1D4A  3001               	movlw	1	; select bank2/3
 11178     1D4B  0085               	movwf	5
 11179     1D4C  0800               	movf	0,w
 11180     1D4D  0701               	addwf	1,w
 11181     1D4E  00A3               	movwf	??_fputc
 11182     1D4F  0823               	movf	??_fputc,w
 11183     1D50  0086               	movwf	6
 11184     1D51  3001               	movlw	1	; select bank2/3
 11185     1D52  0087               	movwf	7
 11186     1D53  0820               	movf	fputc@c,w
 11187     1D54  0081               	movwf	1
 11188     1D55                     l3453:
 11189     1D55  0822               	movf	fputc@fp,w
 11190     1D56  3E02               	addlw	2
 11191     1D57  0086               	movwf	6
 11192     1D58  3001               	movlw	1	; select bank2/3
 11193     1D59  0087               	movwf	7
 11194     1D5A  3001               	movlw	1
 11195     1D5B  0781               	addwf	1,f
 11196     1D5C  3141               	addfsr 1,1
 11197     1D5D  1803               	skipnc
 11198     1D5E  0A81               	incf	1,f
 11199     1D5F                     l1242:
 11200     1D5F  0008               	return
 11201     1D60                     __end_of_fputc:
 11202                           
 11203                           	psect	text25
 11204     0003                     __ptext25:	
 11205 ;; *************** function _putch *****************
 11206 ;; Defined at:
 11207 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;  c               1    wreg     unsigned char 
 11210 ;; Auto vars:     Size  Location     Type
 11211 ;;  c               1    0[COMMON] unsigned char 
 11212 ;; Return value:  Size  Location     Type
 11213 ;;                  1    wreg      void 
 11214 ;; Registers used:
 11215 ;;		wreg
 11216 ;; Tracked objects:
 11217 ;;		On entry : 0/0
 11218 ;;		On exit  : 0/0
 11219 ;;		Unchanged: 0/0
 11220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11221 ;;      Params:         0       0       0       0       0       0       0       0
 11222 ;;      Locals:         0       0       0       0       0       0       0       0
 11223 ;;      Temps:          0       0       0       0       0       0       0       0
 11224 ;;      Totals:         0       0       0       0       0       0       0       0
 11225 ;;Total ram usage:        0 bytes
 11226 ;; Hardware stack levels used: 1
 11227 ;; Hardware stack levels required when called: 4
 11228 ;; This function calls:
 11229 ;;		Nothing
 11230 ;; This function is called by:
 11231 ;;		_fputc
 11232 ;; This function uses a non-reentrant model
 11233 ;;
 11234                           
 11235     0003                     _putch:	
 11236                           ;psect for function _putch
 11237                           
 11238     0003                     l1253:	
 11239                           ;incstack = 0
 11240                           ; Regs used in _putch: [wreg]
 11241                           
 11242     0003  0008               	return
 11243     0004                     __end_of_putch:
 11244                           
 11245                           	psect	text26
 11246     1999                     __ptext26:	
 11247 ;; *************** function _abs *****************
 11248 ;; Defined at:
 11249 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
 11250 ;; Parameters:    Size  Location     Type
 11251 ;;  a               2    7[BANK0 ] int 
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;		None
 11254 ;; Return value:  Size  Location     Type
 11255 ;;                  2    7[BANK0 ] int 
 11256 ;; Registers used:
 11257 ;;		wreg, status,2, status,0
 11258 ;; Tracked objects:
 11259 ;;		On entry : 0/0
 11260 ;;		On exit  : 0/0
 11261 ;;		Unchanged: 0/0
 11262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11263 ;;      Params:         0       2       0       0       0       0       0       0
 11264 ;;      Locals:         0       0       0       0       0       0       0       0
 11265 ;;      Temps:          0       2       0       0       0       0       0       0
 11266 ;;      Totals:         0       4       0       0       0       0       0       0
 11267 ;;Total ram usage:        4 bytes
 11268 ;; Hardware stack levels used: 1
 11269 ;; Hardware stack levels required when called: 4
 11270 ;; This function calls:
 11271 ;;		Nothing
 11272 ;; This function is called by:
 11273 ;;		_dtoa
 11274 ;; This function uses a non-reentrant model
 11275 ;;
 11276                           
 11277     1999                     _abs:	
 11278                           ;psect for function _abs
 11279                           
 11280     1999                     l4143:	
 11281                           ;incstack = 0
 11282                           ; Regs used in _abs: [wreg+status,2+status,0]
 11283                           
 11284     1999  0020               	movlb	0	; select bank0
 11285     199A  1BA8               	btfsc	abs@a+1,7
 11286     199B  299D               	goto	u4801
 11287     199C  299E               	goto	u4800
 11288     199D                     u4801:
 11289     199D  299F               	goto	l4147
 11290     199E                     u4800:
 11291     199E                     l4145:
 11292     199E  29AA               	goto	l1204
 11293     199F                     l4147:
 11294     199F  0927               	comf	abs@a,w
 11295     19A0  00A9               	movwf	??_abs
 11296     19A1  0928               	comf	abs@a+1,w
 11297     19A2  00AA               	movwf	??_abs+1
 11298     19A3  0AA9               	incf	??_abs,f
 11299     19A4  1903               	skipnz
 11300     19A5  0AAA               	incf	??_abs+1,f
 11301     19A6  0829               	movf	??_abs,w
 11302     19A7  00A7               	movwf	?_abs
 11303     19A8  082A               	movf	??_abs+1,w
 11304     19A9  00A8               	movwf	?_abs+1
 11305     19AA                     l1204:
 11306     19AA  0008               	return
 11307     19AB                     __end_of_abs:
 11308                           
 11309                           	psect	text27
 11310     1CB3                     __ptext27:	
 11311 ;; *************** function ___awmod *****************
 11312 ;; Defined at:
 11313 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;  divisor         2    0[BANK0 ] int 
 11316 ;;  dividend        2    2[BANK0 ] int 
 11317 ;; Auto vars:     Size  Location     Type
 11318 ;;  sign            1    6[BANK0 ] unsigned char 
 11319 ;;  counter         1    5[BANK0 ] unsigned char 
 11320 ;; Return value:  Size  Location     Type
 11321 ;;                  2    0[BANK0 ] int 
 11322 ;; Registers used:
 11323 ;;		wreg, status,2, status,0
 11324 ;; Tracked objects:
 11325 ;;		On entry : 0/0
 11326 ;;		On exit  : 0/0
 11327 ;;		Unchanged: 0/0
 11328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11329 ;;      Params:         0       4       0       0       0       0       0       0
 11330 ;;      Locals:         0       2       0       0       0       0       0       0
 11331 ;;      Temps:          0       1       0       0       0       0       0       0
 11332 ;;      Totals:         0       7       0       0       0       0       0       0
 11333 ;;Total ram usage:        7 bytes
 11334 ;; Hardware stack levels used: 1
 11335 ;; Hardware stack levels required when called: 4
 11336 ;; This function calls:
 11337 ;;		Nothing
 11338 ;; This function is called by:
 11339 ;;		_dtoa
 11340 ;; This function uses a non-reentrant model
 11341 ;;
 11342                           
 11343     1CB3                     ___awmod:	
 11344                           ;psect for function ___awmod
 11345                           
 11346     1CB3                     l3731:	
 11347                           ;incstack = 0
 11348                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11349                           
 11350     1CB3  0020               	movlb	0	; select bank0
 11351     1CB4  01A6               	clrf	___awmod@sign
 11352     1CB5                     l3733:
 11353     1CB5  1FA3               	btfss	___awmod@dividend+1,7
 11354     1CB6  2CB8               	goto	u3951
 11355     1CB7  2CB9               	goto	u3950
 11356     1CB8                     u3951:
 11357     1CB8  2CC0               	goto	l3739
 11358     1CB9                     u3950:
 11359     1CB9                     l3735:
 11360     1CB9  09A2               	comf	___awmod@dividend,f
 11361     1CBA  09A3               	comf	___awmod@dividend+1,f
 11362     1CBB  0AA2               	incf	___awmod@dividend,f
 11363     1CBC  1903               	skipnz
 11364     1CBD  0AA3               	incf	___awmod@dividend+1,f
 11365     1CBE                     l3737:
 11366     1CBE  01A6               	clrf	___awmod@sign
 11367     1CBF  0AA6               	incf	___awmod@sign,f
 11368     1CC0                     l3739:
 11369     1CC0  1FA1               	btfss	___awmod@divisor+1,7
 11370     1CC1  2CC3               	goto	u3961
 11371     1CC2  2CC4               	goto	u3960
 11372     1CC3                     u3961:
 11373     1CC3  2CC9               	goto	l3743
 11374     1CC4                     u3960:
 11375     1CC4                     l3741:
 11376     1CC4  09A0               	comf	___awmod@divisor,f
 11377     1CC5  09A1               	comf	___awmod@divisor+1,f
 11378     1CC6  0AA0               	incf	___awmod@divisor,f
 11379     1CC7  1903               	skipnz
 11380     1CC8  0AA1               	incf	___awmod@divisor+1,f
 11381     1CC9                     l3743:
 11382     1CC9  0820               	movf	___awmod@divisor,w
 11383     1CCA  0421               	iorwf	___awmod@divisor+1,w
 11384     1CCB  1903               	btfsc	3,2
 11385     1CCC  2CCE               	goto	u3971
 11386     1CCD  2CCF               	goto	u3970
 11387     1CCE                     u3971:
 11388     1CCE  2CF8               	goto	l3761
 11389     1CCF                     u3970:
 11390     1CCF                     l3745:
 11391     1CCF  01A5               	clrf	___awmod@counter
 11392     1CD0  0AA5               	incf	___awmod@counter,f
 11393     1CD1  2CDB               	goto	l3751
 11394     1CD2                     l3747:
 11395     1CD2  3001               	movlw	1
 11396     1CD3                     u3985:
 11397     1CD3  35A0               	lslf	___awmod@divisor,f
 11398     1CD4  0DA1               	rlf	___awmod@divisor+1,f
 11399     1CD5  0B89               	decfsz	9,f
 11400     1CD6  2CD3               	goto	u3985
 11401     1CD7                     l3749:
 11402     1CD7  3001               	movlw	1
 11403     1CD8  00A4               	movwf	??___awmod
 11404     1CD9  0824               	movf	??___awmod,w
 11405     1CDA  07A5               	addwf	___awmod@counter,f
 11406     1CDB                     l3751:
 11407     1CDB  1FA1               	btfss	___awmod@divisor+1,7
 11408     1CDC  2CDE               	goto	u3991
 11409     1CDD  2CDF               	goto	u3990
 11410     1CDE                     u3991:
 11411     1CDE  2CD2               	goto	l3747
 11412     1CDF                     u3990:
 11413     1CDF                     l3753:
 11414     1CDF  0821               	movf	___awmod@divisor+1,w
 11415     1CE0  0223               	subwf	___awmod@dividend+1,w
 11416     1CE1  1D03               	skipz
 11417     1CE2  2CE5               	goto	u4005
 11418     1CE3  0820               	movf	___awmod@divisor,w
 11419     1CE4  0222               	subwf	___awmod@dividend,w
 11420     1CE5                     u4005:
 11421     1CE5  1C03               	skipc
 11422     1CE6  2CE8               	goto	u4001
 11423     1CE7  2CE9               	goto	u4000
 11424     1CE8                     u4001:
 11425     1CE8  2CED               	goto	l3757
 11426     1CE9                     u4000:
 11427     1CE9                     l3755:
 11428     1CE9  0820               	movf	___awmod@divisor,w
 11429     1CEA  02A2               	subwf	___awmod@dividend,f
 11430     1CEB  0821               	movf	___awmod@divisor+1,w
 11431     1CEC  3BA3               	subwfb	___awmod@dividend+1,f
 11432     1CED                     l3757:
 11433     1CED  3001               	movlw	1
 11434     1CEE                     u4015:
 11435     1CEE  36A1               	lsrf	___awmod@divisor+1,f
 11436     1CEF  0CA0               	rrf	___awmod@divisor,f
 11437     1CF0  0B89               	decfsz	9,f
 11438     1CF1  2CEE               	goto	u4015
 11439     1CF2                     l3759:
 11440     1CF2  3001               	movlw	1
 11441     1CF3  02A5               	subwf	___awmod@counter,f
 11442     1CF4  1D03               	btfss	3,2
 11443     1CF5  2CF7               	goto	u4021
 11444     1CF6  2CF8               	goto	u4020
 11445     1CF7                     u4021:
 11446     1CF7  2CDF               	goto	l3753
 11447     1CF8                     u4020:
 11448     1CF8                     l3761:
 11449     1CF8  0826               	movf	___awmod@sign,w
 11450     1CF9  1903               	btfsc	3,2
 11451     1CFA  2CFC               	goto	u4031
 11452     1CFB  2CFD               	goto	u4030
 11453     1CFC                     u4031:
 11454     1CFC  2D02               	goto	l3765
 11455     1CFD                     u4030:
 11456     1CFD                     l3763:
 11457     1CFD  09A2               	comf	___awmod@dividend,f
 11458     1CFE  09A3               	comf	___awmod@dividend+1,f
 11459     1CFF  0AA2               	incf	___awmod@dividend,f
 11460     1D00  1903               	skipnz
 11461     1D01  0AA3               	incf	___awmod@dividend+1,f
 11462     1D02                     l3765:
 11463     1D02  0823               	movf	___awmod@dividend+1,w
 11464     1D03  00A1               	movwf	?___awmod+1
 11465     1D04  0822               	movf	___awmod@dividend,w
 11466     1D05  00A0               	movwf	?___awmod
 11467     1D06                     l732:
 11468     1D06  0008               	return
 11469     1D07                     __end_of___awmod:
 11470                           
 11471                           	psect	text28
 11472     1D60                     __ptext28:	
 11473 ;; *************** function ___awdiv *****************
 11474 ;; Defined at:
 11475 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;  divisor         2    0[BANK0 ] int 
 11478 ;;  dividend        2    2[BANK0 ] int 
 11479 ;; Auto vars:     Size  Location     Type
 11480 ;;  quotient        2    7[BANK0 ] int 
 11481 ;;  sign            1    6[BANK0 ] unsigned char 
 11482 ;;  counter         1    5[BANK0 ] unsigned char 
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  2    0[BANK0 ] int 
 11485 ;; Registers used:
 11486 ;;		wreg, status,2, status,0
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/0
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11492 ;;      Params:         0       4       0       0       0       0       0       0
 11493 ;;      Locals:         0       4       0       0       0       0       0       0
 11494 ;;      Temps:          0       1       0       0       0       0       0       0
 11495 ;;      Totals:         0       9       0       0       0       0       0       0
 11496 ;;Total ram usage:        9 bytes
 11497 ;; Hardware stack levels used: 1
 11498 ;; Hardware stack levels required when called: 4
 11499 ;; This function calls:
 11500 ;;		Nothing
 11501 ;; This function is called by:
 11502 ;;		_dtoa
 11503 ;; This function uses a non-reentrant model
 11504 ;;
 11505                           
 11506     1D60                     ___awdiv:	
 11507                           ;psect for function ___awdiv
 11508                           
 11509     1D60                     l3687:	
 11510                           ;incstack = 0
 11511                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11512                           
 11513     1D60  0020               	movlb	0	; select bank0
 11514     1D61  01A6               	clrf	___awdiv@sign
 11515     1D62                     l3689:
 11516     1D62  1FA1               	btfss	___awdiv@divisor+1,7
 11517     1D63  2D65               	goto	u3851
 11518     1D64  2D66               	goto	u3850
 11519     1D65                     u3851:
 11520     1D65  2D6D               	goto	l3695
 11521     1D66                     u3850:
 11522     1D66                     l3691:
 11523     1D66  09A0               	comf	___awdiv@divisor,f
 11524     1D67  09A1               	comf	___awdiv@divisor+1,f
 11525     1D68  0AA0               	incf	___awdiv@divisor,f
 11526     1D69  1903               	skipnz
 11527     1D6A  0AA1               	incf	___awdiv@divisor+1,f
 11528     1D6B                     l3693:
 11529     1D6B  01A6               	clrf	___awdiv@sign
 11530     1D6C  0AA6               	incf	___awdiv@sign,f
 11531     1D6D                     l3695:
 11532     1D6D  1FA3               	btfss	___awdiv@dividend+1,7
 11533     1D6E  2D70               	goto	u3861
 11534     1D6F  2D71               	goto	u3860
 11535     1D70                     u3861:
 11536     1D70  2D7A               	goto	l3701
 11537     1D71                     u3860:
 11538     1D71                     l3697:
 11539     1D71  09A2               	comf	___awdiv@dividend,f
 11540     1D72  09A3               	comf	___awdiv@dividend+1,f
 11541     1D73  0AA2               	incf	___awdiv@dividend,f
 11542     1D74  1903               	skipnz
 11543     1D75  0AA3               	incf	___awdiv@dividend+1,f
 11544     1D76                     l3699:
 11545     1D76  3001               	movlw	1
 11546     1D77  00A4               	movwf	??___awdiv
 11547     1D78  0824               	movf	??___awdiv,w
 11548     1D79  06A6               	xorwf	___awdiv@sign,f
 11549     1D7A                     l3701:
 11550     1D7A  01A7               	clrf	___awdiv@quotient
 11551     1D7B  01A8               	clrf	___awdiv@quotient+1
 11552     1D7C                     l3703:
 11553     1D7C  0820               	movf	___awdiv@divisor,w
 11554     1D7D  0421               	iorwf	___awdiv@divisor+1,w
 11555     1D7E  1903               	btfsc	3,2
 11556     1D7F  2D81               	goto	u3871
 11557     1D80  2D82               	goto	u3870
 11558     1D81                     u3871:
 11559     1D81  2DB1               	goto	l3723
 11560     1D82                     u3870:
 11561     1D82                     l3705:
 11562     1D82  01A5               	clrf	___awdiv@counter
 11563     1D83  0AA5               	incf	___awdiv@counter,f
 11564     1D84  2D8E               	goto	l3711
 11565     1D85                     l3707:
 11566     1D85  3001               	movlw	1
 11567     1D86                     u3885:
 11568     1D86  35A0               	lslf	___awdiv@divisor,f
 11569     1D87  0DA1               	rlf	___awdiv@divisor+1,f
 11570     1D88  0B89               	decfsz	9,f
 11571     1D89  2D86               	goto	u3885
 11572     1D8A                     l3709:
 11573     1D8A  3001               	movlw	1
 11574     1D8B  00A4               	movwf	??___awdiv
 11575     1D8C  0824               	movf	??___awdiv,w
 11576     1D8D  07A5               	addwf	___awdiv@counter,f
 11577     1D8E                     l3711:
 11578     1D8E  1FA1               	btfss	___awdiv@divisor+1,7
 11579     1D8F  2D91               	goto	u3891
 11580     1D90  2D92               	goto	u3890
 11581     1D91                     u3891:
 11582     1D91  2D85               	goto	l3707
 11583     1D92                     u3890:
 11584     1D92                     l3713:
 11585     1D92  3001               	movlw	1
 11586     1D93                     u3905:
 11587     1D93  35A7               	lslf	___awdiv@quotient,f
 11588     1D94  0DA8               	rlf	___awdiv@quotient+1,f
 11589     1D95  0B89               	decfsz	9,f
 11590     1D96  2D93               	goto	u3905
 11591     1D97  0821               	movf	___awdiv@divisor+1,w
 11592     1D98  0223               	subwf	___awdiv@dividend+1,w
 11593     1D99  1D03               	skipz
 11594     1D9A  2D9D               	goto	u3915
 11595     1D9B  0820               	movf	___awdiv@divisor,w
 11596     1D9C  0222               	subwf	___awdiv@dividend,w
 11597     1D9D                     u3915:
 11598     1D9D  1C03               	skipc
 11599     1D9E  2DA0               	goto	u3911
 11600     1D9F  2DA1               	goto	u3910
 11601     1DA0                     u3911:
 11602     1DA0  2DA6               	goto	l3719
 11603     1DA1                     u3910:
 11604     1DA1                     l3715:
 11605     1DA1  0820               	movf	___awdiv@divisor,w
 11606     1DA2  02A2               	subwf	___awdiv@dividend,f
 11607     1DA3  0821               	movf	___awdiv@divisor+1,w
 11608     1DA4  3BA3               	subwfb	___awdiv@dividend+1,f
 11609     1DA5                     l3717:
 11610     1DA5  1427               	bsf	___awdiv@quotient,0
 11611     1DA6                     l3719:
 11612     1DA6  3001               	movlw	1
 11613     1DA7                     u3925:
 11614     1DA7  36A1               	lsrf	___awdiv@divisor+1,f
 11615     1DA8  0CA0               	rrf	___awdiv@divisor,f
 11616     1DA9  0B89               	decfsz	9,f
 11617     1DAA  2DA7               	goto	u3925
 11618     1DAB                     l3721:
 11619     1DAB  3001               	movlw	1
 11620     1DAC  02A5               	subwf	___awdiv@counter,f
 11621     1DAD  1D03               	btfss	3,2
 11622     1DAE  2DB0               	goto	u3931
 11623     1DAF  2DB1               	goto	u3930
 11624     1DB0                     u3931:
 11625     1DB0  2D92               	goto	l3713
 11626     1DB1                     u3930:
 11627     1DB1                     l3723:
 11628     1DB1  0826               	movf	___awdiv@sign,w
 11629     1DB2  1903               	btfsc	3,2
 11630     1DB3  2DB5               	goto	u3941
 11631     1DB4  2DB6               	goto	u3940
 11632     1DB5                     u3941:
 11633     1DB5  2DBB               	goto	l3727
 11634     1DB6                     u3940:
 11635     1DB6                     l3725:
 11636     1DB6  09A7               	comf	___awdiv@quotient,f
 11637     1DB7  09A8               	comf	___awdiv@quotient+1,f
 11638     1DB8  0AA7               	incf	___awdiv@quotient,f
 11639     1DB9  1903               	skipnz
 11640     1DBA  0AA8               	incf	___awdiv@quotient+1,f
 11641     1DBB                     l3727:
 11642     1DBB  0828               	movf	___awdiv@quotient+1,w
 11643     1DBC  00A1               	movwf	?___awdiv+1
 11644     1DBD  0827               	movf	___awdiv@quotient,w
 11645     1DBE  00A0               	movwf	?___awdiv
 11646     1DBF                     l719:
 11647     1DBF  0008               	return
 11648     1DC0                     __end_of___awdiv:
 11649                           
 11650                           	psect	text29
 11651     0730                     __ptext29:	
 11652 ;; *************** function ___xxtofl *****************
 11653 ;; Defined at:
 11654 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 11655 ;; Parameters:    Size  Location     Type
 11656 ;;  sign            1    wreg     unsigned char 
 11657 ;;  val             4    6[BANK0 ] long 
 11658 ;; Auto vars:     Size  Location     Type
 11659 ;;  sign            1   14[BANK0 ] unsigned char 
 11660 ;;  arg             4   16[BANK0 ] unsigned long 
 11661 ;;  exp             1   15[BANK0 ] unsigned char 
 11662 ;; Return value:  Size  Location     Type
 11663 ;;                  4    6[BANK0 ] unsigned char 
 11664 ;; Registers used:
 11665 ;;		wreg, status,2, status,0
 11666 ;; Tracked objects:
 11667 ;;		On entry : 0/0
 11668 ;;		On exit  : 0/0
 11669 ;;		Unchanged: 0/0
 11670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11671 ;;      Params:         0       4       0       0       0       0       0       0
 11672 ;;      Locals:         0       6       0       0       0       0       0       0
 11673 ;;      Temps:          0       4       0       0       0       0       0       0
 11674 ;;      Totals:         0      14       0       0       0       0       0       0
 11675 ;;Total ram usage:       14 bytes
 11676 ;; Hardware stack levels used: 1
 11677 ;; Hardware stack levels required when called: 4
 11678 ;; This function calls:
 11679 ;;		Nothing
 11680 ;; This function is called by:
 11681 ;;		_main
 11682 ;; This function uses a non-reentrant model
 11683 ;;
 11684                           
 11685     0730                     ___xxtofl:	
 11686                           ;psect for function ___xxtofl
 11687                           
 11688                           
 11689                           ;incstack = 0
 11690                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11691                           ;___xxtofl@sign stored from wreg
 11692     0730  0020               	movlb	0	; select bank0
 11693     0731  00AE               	movwf	___xxtofl@sign
 11694     0732                     l4895:
 11695     0732  082E               	movf	___xxtofl@sign,w
 11696     0733  1903               	btfsc	3,2
 11697     0734  2F36               	goto	u6041
 11698     0735  2F37               	goto	u6040
 11699     0736                     u6041:
 11700     0736  2F4B               	goto	l4901
 11701     0737                     u6040:
 11702     0737                     l4897:
 11703     0737  1FA9               	btfss	___xxtofl@val+3,7
 11704     0738  2F3A               	goto	u6051
 11705     0739  2F3B               	goto	u6050
 11706     073A                     u6051:
 11707     073A  2F4B               	goto	l4901
 11708     073B                     u6050:
 11709     073B                     l4899:
 11710     073B  0926               	comf	___xxtofl@val,w
 11711     073C  00B0               	movwf	___xxtofl@arg
 11712     073D  0927               	comf	___xxtofl@val+1,w
 11713     073E  00B1               	movwf	___xxtofl@arg+1
 11714     073F  0928               	comf	___xxtofl@val+2,w
 11715     0740  00B2               	movwf	___xxtofl@arg+2
 11716     0741  0929               	comf	___xxtofl@val+3,w
 11717     0742  00B3               	movwf	___xxtofl@arg+3
 11718     0743  0AB0               	incf	___xxtofl@arg,f
 11719     0744  1903               	skipnz
 11720     0745  0AB1               	incf	___xxtofl@arg+1,f
 11721     0746  1903               	skipnz
 11722     0747  0AB2               	incf	___xxtofl@arg+2,f
 11723     0748  1903               	skipnz
 11724     0749  0AB3               	incf	___xxtofl@arg+3,f
 11725     074A  2F53               	goto	l1007
 11726     074B                     l4901:
 11727     074B  0829               	movf	___xxtofl@val+3,w
 11728     074C  00B3               	movwf	___xxtofl@arg+3
 11729     074D  0828               	movf	___xxtofl@val+2,w
 11730     074E  00B2               	movwf	___xxtofl@arg+2
 11731     074F  0827               	movf	___xxtofl@val+1,w
 11732     0750  00B1               	movwf	___xxtofl@arg+1
 11733     0751  0826               	movf	___xxtofl@val,w
 11734     0752  00B0               	movwf	___xxtofl@arg
 11735     0753                     l1007:
 11736     0753  0829               	movf	___xxtofl@val+3,w
 11737     0754  0428               	iorwf	___xxtofl@val+2,w
 11738     0755  0427               	iorwf	___xxtofl@val+1,w
 11739     0756  0426               	iorwf	___xxtofl@val,w
 11740     0757  1D03               	skipz
 11741     0758  2F5A               	goto	u6061
 11742     0759  2F5B               	goto	u6060
 11743     075A                     u6061:
 11744     075A  2F64               	goto	l4907
 11745     075B                     u6060:
 11746     075B                     l4903:
 11747     075B  3000               	movlw	0
 11748     075C  00A9               	movwf	?___xxtofl+3
 11749     075D  3000               	movlw	0
 11750     075E  00A8               	movwf	?___xxtofl+2
 11751     075F  3000               	movlw	0
 11752     0760  00A7               	movwf	?___xxtofl+1
 11753     0761  3000               	movlw	0
 11754     0762  00A6               	movwf	?___xxtofl
 11755     0763  2FDA               	goto	l1009
 11756     0764                     l4907:
 11757     0764  3096               	movlw	150
 11758     0765  00AF               	movwf	___xxtofl@exp
 11759     0766  2F72               	goto	l4911
 11760     0767                     l4909:
 11761     0767  3001               	movlw	1
 11762     0768  00AA               	movwf	??___xxtofl
 11763     0769  082A               	movf	??___xxtofl,w
 11764     076A  07AF               	addwf	___xxtofl@exp,f
 11765     076B  3001               	movlw	1
 11766     076C                     u6075:
 11767     076C  36B3               	lsrf	___xxtofl@arg+3,f
 11768     076D  0CB2               	rrf	___xxtofl@arg+2,f
 11769     076E  0CB1               	rrf	___xxtofl@arg+1,f
 11770     076F  0CB0               	rrf	___xxtofl@arg,f
 11771     0770  0B89               	decfsz	9,f
 11772     0771  2F6C               	goto	u6075
 11773     0772                     l4911:
 11774     0772  30FE               	movlw	254
 11775     0773  0533               	andwf	___xxtofl@arg+3,w
 11776     0774  1D03               	btfss	3,2
 11777     0775  2F77               	goto	u6081
 11778     0776  2F78               	goto	u6080
 11779     0777                     u6081:
 11780     0777  2F67               	goto	l4909
 11781     0778                     u6080:
 11782     0778  2F8C               	goto	l1013
 11783     0779                     l4913:
 11784     0779  3001               	movlw	1
 11785     077A  00AA               	movwf	??___xxtofl
 11786     077B  082A               	movf	??___xxtofl,w
 11787     077C  07AF               	addwf	___xxtofl@exp,f
 11788     077D                     l4915:
 11789     077D  3001               	movlw	1
 11790     077E  07B0               	addwf	___xxtofl@arg,f
 11791     077F  3000               	movlw	0
 11792     0780  3DB1               	addwfc	___xxtofl@arg+1,f
 11793     0781  3000               	movlw	0
 11794     0782  3DB2               	addwfc	___xxtofl@arg+2,f
 11795     0783  3000               	movlw	0
 11796     0784  3DB3               	addwfc	___xxtofl@arg+3,f
 11797     0785                     l4917:
 11798     0785  3001               	movlw	1
 11799     0786                     u6095:
 11800     0786  36B3               	lsrf	___xxtofl@arg+3,f
 11801     0787  0CB2               	rrf	___xxtofl@arg+2,f
 11802     0788  0CB1               	rrf	___xxtofl@arg+1,f
 11803     0789  0CB0               	rrf	___xxtofl@arg,f
 11804     078A  0B89               	decfsz	9,f
 11805     078B  2F86               	goto	u6095
 11806     078C                     l1013:
 11807     078C  30FF               	movlw	255
 11808     078D  0533               	andwf	___xxtofl@arg+3,w
 11809     078E  1D03               	btfss	3,2
 11810     078F  2F91               	goto	u6101
 11811     0790  2F92               	goto	u6100
 11812     0791                     u6101:
 11813     0791  2F79               	goto	l4913
 11814     0792                     u6100:
 11815     0792  2F9C               	goto	l4921
 11816     0793                     l4919:
 11817     0793  3001               	movlw	1
 11818     0794  02AF               	subwf	___xxtofl@exp,f
 11819     0795  3001               	movlw	1
 11820     0796                     u6115:
 11821     0796  35B0               	lslf	___xxtofl@arg,f
 11822     0797  0DB1               	rlf	___xxtofl@arg+1,f
 11823     0798  0DB2               	rlf	___xxtofl@arg+2,f
 11824     0799  0DB3               	rlf	___xxtofl@arg+3,f
 11825     079A  0B89               	decfsz	9,f
 11826     079B  2F96               	goto	u6115
 11827     079C                     l4921:
 11828     079C  1BB2               	btfsc	___xxtofl@arg+2,7
 11829     079D  2F9F               	goto	u6121
 11830     079E  2FA0               	goto	u6120
 11831     079F                     u6121:
 11832     079F  2FA6               	goto	l1020
 11833     07A0                     u6120:
 11834     07A0                     l4923:
 11835     07A0  3002               	movlw	2
 11836     07A1  022F               	subwf	___xxtofl@exp,w
 11837     07A2  1803               	skipnc
 11838     07A3  2FA5               	goto	u6131
 11839     07A4  2FA6               	goto	u6130
 11840     07A5                     u6131:
 11841     07A5  2F93               	goto	l4919
 11842     07A6                     u6130:
 11843     07A6                     l1020:
 11844     07A6  182F               	btfsc	___xxtofl@exp,0
 11845     07A7  2FA9               	goto	u6141
 11846     07A8  2FAA               	goto	u6140
 11847     07A9                     u6141:
 11848     07A9  2FB2               	goto	l1021
 11849     07AA                     u6140:
 11850     07AA                     l4925:
 11851     07AA  30FF               	movlw	255
 11852     07AB  05B0               	andwf	___xxtofl@arg,f
 11853     07AC  30FF               	movlw	255
 11854     07AD  05B1               	andwf	___xxtofl@arg+1,f
 11855     07AE  307F               	movlw	127
 11856     07AF  05B2               	andwf	___xxtofl@arg+2,f
 11857     07B0  30FF               	movlw	255
 11858     07B1  05B3               	andwf	___xxtofl@arg+3,f
 11859     07B2                     l1021:
 11860     07B2  1003               	clrc
 11861     07B3  0CAF               	rrf	___xxtofl@exp,f
 11862     07B4                     l4927:
 11863     07B4  082F               	movf	___xxtofl@exp,w
 11864     07B5  00AA               	movwf	??___xxtofl
 11865     07B6  01AB               	clrf	??___xxtofl+1
 11866     07B7  01AC               	clrf	??___xxtofl+2
 11867     07B8  01AD               	clrf	??___xxtofl+3
 11868     07B9  3018               	movlw	24
 11869     07BA                     u6155:
 11870     07BA  35AA               	lslf	??___xxtofl,f
 11871     07BB  0DAB               	rlf	??___xxtofl+1,f
 11872     07BC  0DAC               	rlf	??___xxtofl+2,f
 11873     07BD  0DAD               	rlf	??___xxtofl+3,f
 11874     07BE                     u6150:
 11875     07BE  0B89               	decfsz	9,f
 11876     07BF  2FBA               	goto	u6155
 11877     07C0  082A               	movf	??___xxtofl,w
 11878     07C1  04B0               	iorwf	___xxtofl@arg,f
 11879     07C2  082B               	movf	??___xxtofl+1,w
 11880     07C3  04B1               	iorwf	___xxtofl@arg+1,f
 11881     07C4  082C               	movf	??___xxtofl+2,w
 11882     07C5  04B2               	iorwf	___xxtofl@arg+2,f
 11883     07C6  082D               	movf	??___xxtofl+3,w
 11884     07C7  04B3               	iorwf	___xxtofl@arg+3,f
 11885     07C8                     l4929:
 11886     07C8  082E               	movf	___xxtofl@sign,w
 11887     07C9  1903               	btfsc	3,2
 11888     07CA  2FCC               	goto	u6161
 11889     07CB  2FCD               	goto	u6160
 11890     07CC                     u6161:
 11891     07CC  2FD2               	goto	l4935
 11892     07CD                     u6160:
 11893     07CD                     l4931:
 11894     07CD  1FA9               	btfss	___xxtofl@val+3,7
 11895     07CE  2FD0               	goto	u6171
 11896     07CF  2FD1               	goto	u6170
 11897     07D0                     u6171:
 11898     07D0  2FD2               	goto	l4935
 11899     07D1                     u6170:
 11900     07D1                     l4933:
 11901     07D1  17B3               	bsf	___xxtofl@arg+3,7
 11902     07D2                     l4935:
 11903     07D2  0833               	movf	___xxtofl@arg+3,w
 11904     07D3  00A9               	movwf	?___xxtofl+3
 11905     07D4  0832               	movf	___xxtofl@arg+2,w
 11906     07D5  00A8               	movwf	?___xxtofl+2
 11907     07D6  0831               	movf	___xxtofl@arg+1,w
 11908     07D7  00A7               	movwf	?___xxtofl+1
 11909     07D8  0830               	movf	___xxtofl@arg,w
 11910     07D9  00A6               	movwf	?___xxtofl
 11911     07DA                     l1009:
 11912     07DA  0008               	return
 11913     07DB                     __end_of___xxtofl:
 11914                           
 11915                           	psect	text30
 11916     1A25                     __ptext30:	
 11917 ;; *************** function _Lcd_Write_String *****************
 11918 ;; Defined at:
 11919 ;;		line 104 in file "lcd.c"
 11920 ;; Parameters:    Size  Location     Type
 11921 ;;  a               2    5[BANK0 ] PTR const unsigned char 
 11922 ;;		 -> STR_17(17), STR_16(15), STR_15(14), STR_14(15), 
 11923 ;;		 -> STR_13(9), STR_12(7), STR_11(9), STR_10(7), 
 11924 ;;		 -> STR_9(15), STR_8(16), STR_7(17), STR_6(2), 
 11925 ;;		 -> STR_4(2), buffer(20), STR_1(15), 
 11926 ;; Auto vars:     Size  Location     Type
 11927 ;;  i               2    8[BANK0 ] int 
 11928 ;; Return value:  Size  Location     Type
 11929 ;;                  1    wreg      void 
 11930 ;; Registers used:
 11931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11932 ;; Tracked objects:
 11933 ;;		On entry : 0/0
 11934 ;;		On exit  : 0/0
 11935 ;;		Unchanged: 0/0
 11936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11937 ;;      Params:         0       2       0       0       0       0       0       0
 11938 ;;      Locals:         0       2       0       0       0       0       0       0
 11939 ;;      Temps:          0       1       0       0       0       0       0       0
 11940 ;;      Totals:         0       5       0       0       0       0       0       0
 11941 ;;Total ram usage:        5 bytes
 11942 ;; Hardware stack levels used: 1
 11943 ;; Hardware stack levels required when called: 6
 11944 ;; This function calls:
 11945 ;;		_Lcd_Write_Char
 11946 ;; This function is called by:
 11947 ;;		_main
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           
 11951     1A25                     _Lcd_Write_String:	
 11952                           ;psect for function _Lcd_Write_String
 11953                           
 11954     1A25                     l4781:	
 11955                           ;incstack = 0
 11956                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11957                           
 11958                           
 11959                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
 11960     1A25  0020               	movlb	0	; select bank0
 11961     1A26  01A8               	clrf	Lcd_Write_String@i
 11962     1A27  01A9               	clrf	Lcd_Write_String@i+1
 11963     1A28  2A38               	goto	l4787
 11964     1A29                     l4783:
 11965                           
 11966                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
 11967     1A29  0825               	movf	Lcd_Write_String@a,w
 11968     1A2A  0728               	addwf	Lcd_Write_String@i,w
 11969     1A2B  0084               	movwf	4
 11970     1A2C  0826               	movf	Lcd_Write_String@a+1,w
 11971     1A2D  3D29               	addwfc	Lcd_Write_String@i+1,w
 11972     1A2E  0085               	movwf	5
 11973     1A2F  0800               	movf	0,w	;code access
 11974     1A30  319B  2388  319A   	fcall	_Lcd_Write_Char
 11975     1A33                     l4785:
 11976     1A33  3001               	movlw	1
 11977     1A34  0020               	movlb	0	; select bank0
 11978     1A35  07A8               	addwf	Lcd_Write_String@i,f
 11979     1A36  3000               	movlw	0
 11980     1A37  3DA9               	addwfc	Lcd_Write_String@i+1,f
 11981     1A38                     l4787:
 11982     1A38  0825               	movf	Lcd_Write_String@a,w
 11983     1A39  0728               	addwf	Lcd_Write_String@i,w
 11984     1A3A  0084               	movwf	4
 11985     1A3B  0826               	movf	Lcd_Write_String@a+1,w
 11986     1A3C  3D29               	addwfc	Lcd_Write_String@i+1,w
 11987     1A3D  0085               	movwf	5
 11988     1A3E  0012               	moviw fsr0++
 11989     1A3F  1D03               	btfss	3,2
 11990     1A40  2A42               	goto	u5771
 11991     1A41  2A43               	goto	u5770
 11992     1A42                     u5771:
 11993     1A42  2A29               	goto	l4783
 11994     1A43                     u5770:
 11995     1A43                     l404:
 11996     1A43  0008               	return
 11997     1A44                     __end_of_Lcd_Write_String:
 11998                           
 11999                           	psect	text31
 12000     1B88                     __ptext31:	
 12001 ;; *************** function _Lcd_Write_Char *****************
 12002 ;; Defined at:
 12003 ;;		line 88 in file "lcd.c"
 12004 ;; Parameters:    Size  Location     Type
 12005 ;;  a               1    wreg     unsigned char 
 12006 ;; Auto vars:     Size  Location     Type
 12007 ;;  a               1    4[BANK0 ] unsigned char 
 12008 ;;  y               1    3[BANK0 ] unsigned char 
 12009 ;;  temp            1    2[BANK0 ] unsigned char 
 12010 ;; Return value:  Size  Location     Type
 12011 ;;                  1    wreg      void 
 12012 ;; Registers used:
 12013 ;;		wreg, status,2, status,0, pclath, cstack
 12014 ;; Tracked objects:
 12015 ;;		On entry : 0/0
 12016 ;;		On exit  : 0/0
 12017 ;;		Unchanged: 0/0
 12018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12019 ;;      Params:         0       0       0       0       0       0       0       0
 12020 ;;      Locals:         0       3       0       0       0       0       0       0
 12021 ;;      Temps:          0       1       0       0       0       0       0       0
 12022 ;;      Totals:         0       4       0       0       0       0       0       0
 12023 ;;Total ram usage:        4 bytes
 12024 ;; Hardware stack levels used: 1
 12025 ;; Hardware stack levels required when called: 5
 12026 ;; This function calls:
 12027 ;;		_Lcd_Port
 12028 ;; This function is called by:
 12029 ;;		_Lcd_Write_String
 12030 ;; This function uses a non-reentrant model
 12031 ;;
 12032                           
 12033     1B88                     _Lcd_Write_Char:	
 12034                           ;psect for function _Lcd_Write_Char
 12035                           
 12036                           
 12037                           ;incstack = 0
 12038                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12039                           ;Lcd_Write_Char@a stored from wreg
 12040     1B88  0020               	movlb	0	; select bank0
 12041     1B89  00A4               	movwf	Lcd_Write_Char@a
 12042     1B8A                     l4653:
 12043                           
 12044                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
 12045     1B8A  0824               	movf	Lcd_Write_Char@a,w
 12046     1B8B  390F               	andlw	15
 12047     1B8C  00A2               	movwf	Lcd_Write_Char@temp
 12048                           
 12049                           ;lcd.c: 92:     y = a&0xF0;
 12050     1B8D  0824               	movf	Lcd_Write_Char@a,w
 12051     1B8E  39F0               	andlw	240
 12052     1B8F  00A3               	movwf	Lcd_Write_Char@y
 12053     1B90                     l4655:
 12054                           
 12055                           ;lcd.c: 93:     LATCbits.LATC1 = 1;
 12056     1B90  0022               	movlb	2	; select bank2
 12057     1B91  148E               	bsf	14,1	;volatile
 12058     1B92                     l4657:
 12059                           
 12060                           ;lcd.c: 94:     Lcd_Port(y>>4);
 12061     1B92  0020               	movlb	0	; select bank0
 12062     1B93  0823               	movf	Lcd_Write_Char@y,w
 12063     1B94  00A1               	movwf	??_Lcd_Write_Char
 12064     1B95  3004               	movlw	4
 12065     1B96                     u5665:
 12066     1B96  36A1               	lsrf	??_Lcd_Write_Char,f
 12067     1B97  0B89               	decfsz	9,f
 12068     1B98  2B96               	goto	u5665
 12069     1B99  0821               	movf	??_Lcd_Write_Char,w
 12070     1B9A  319B  235E  319B   	fcall	_Lcd_Port
 12071     1B9D                     l4659:
 12072                           
 12073                           ;lcd.c: 95:     LATCbits.LATC0 = 1;
 12074     1B9D  0022               	movlb	2	; select bank2
 12075     1B9E  140E               	bsf	14,0	;volatile
 12076     1B9F                     l4661:
 12077                           
 12078                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 12079     1B9F  300D               	movlw	13
 12080     1BA0                     u6607:
 12081     1BA0  0B89               	decfsz	9,f
 12082     1BA1  2BA0               	goto	u6607
 12083     1BA2  0000               	nop
 12084     1BA3                     l4663:
 12085                           
 12086                           ;lcd.c: 97:     LATCbits.LATC0 = 0;
 12087     1BA3  0022               	movlb	2	; select bank2
 12088     1BA4  100E               	bcf	14,0	;volatile
 12089     1BA5                     l4665:
 12090                           
 12091                           ;lcd.c: 98:     Lcd_Port(temp);
 12092     1BA5  0020               	movlb	0	; select bank0
 12093     1BA6  0822               	movf	Lcd_Write_Char@temp,w
 12094     1BA7  319B  235E  319B   	fcall	_Lcd_Port
 12095     1BAA                     l4667:
 12096                           
 12097                           ;lcd.c: 99:     LATCbits.LATC0 = 1;
 12098     1BAA  0022               	movlb	2	; select bank2
 12099     1BAB  140E               	bsf	14,0	;volatile
 12100     1BAC                     l4669:
 12101                           
 12102                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 12103     1BAC  300D               	movlw	13
 12104     1BAD                     u6617:
 12105     1BAD  0B89               	decfsz	9,f
 12106     1BAE  2BAD               	goto	u6617
 12107     1BAF  0000               	nop
 12108     1BB0                     l4671:
 12109                           
 12110                           ;lcd.c: 101:     LATCbits.LATC0 = 0;
 12111     1BB0  0022               	movlb	2	; select bank2
 12112     1BB1  100E               	bcf	14,0	;volatile
 12113     1BB2                     l398:
 12114     1BB2  0008               	return
 12115     1BB3                     __end_of_Lcd_Write_Char:
 12116                           
 12117                           	psect	text32
 12118     1F07                     __ptext32:	
 12119 ;; *************** function _Lcd_Set_Cursor *****************
 12120 ;; Defined at:
 12121 ;;		line 26 in file "lcd.c"
 12122 ;; Parameters:    Size  Location     Type
 12123 ;;  a               1    wreg     unsigned char 
 12124 ;;  b               1    3[BANK0 ] unsigned char 
 12125 ;; Auto vars:     Size  Location     Type
 12126 ;;  a               1    5[BANK0 ] unsigned char 
 12127 ;;  temp            1    8[BANK0 ] unsigned char 
 12128 ;;  y               1    7[BANK0 ] unsigned char 
 12129 ;;  z               1    6[BANK0 ] unsigned char 
 12130 ;; Return value:  Size  Location     Type
 12131 ;;                  1    wreg      void 
 12132 ;; Registers used:
 12133 ;;		wreg, status,2, status,0, pclath, cstack
 12134 ;; Tracked objects:
 12135 ;;		On entry : 0/0
 12136 ;;		On exit  : 0/0
 12137 ;;		Unchanged: 0/0
 12138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12139 ;;      Params:         0       1       0       0       0       0       0       0
 12140 ;;      Locals:         0       4       0       0       0       0       0       0
 12141 ;;      Temps:          0       1       0       0       0       0       0       0
 12142 ;;      Totals:         0       6       0       0       0       0       0       0
 12143 ;;Total ram usage:        6 bytes
 12144 ;; Hardware stack levels used: 1
 12145 ;; Hardware stack levels required when called: 6
 12146 ;; This function calls:
 12147 ;;		_Lcd_Cmd
 12148 ;; This function is called by:
 12149 ;;		_main
 12150 ;; This function uses a non-reentrant model
 12151 ;;
 12152                           
 12153     1F07                     _Lcd_Set_Cursor:	
 12154                           ;psect for function _Lcd_Set_Cursor
 12155                           
 12156                           
 12157                           ;incstack = 0
 12158                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 12159                           ;Lcd_Set_Cursor@a stored from wreg
 12160     1F07  0020               	movlb	0	; select bank0
 12161     1F08  00A5               	movwf	Lcd_Set_Cursor@a
 12162     1F09                     l4741:
 12163                           
 12164                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
 12165     1F09  0325               	decf	Lcd_Set_Cursor@a,w
 12166     1F0A  1D03               	btfss	3,2
 12167     1F0B  2F0D               	goto	u5691
 12168     1F0C  2F0E               	goto	u5690
 12169     1F0D                     u5691:
 12170     1F0D  2F26               	goto	l4751
 12171     1F0E                     u5690:
 12172     1F0E                     l4743:
 12173                           
 12174                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
 12175     1F0E  0823               	movf	Lcd_Set_Cursor@b,w
 12176     1F0F  3E7F               	addlw	127
 12177     1F10  00A8               	movwf	Lcd_Set_Cursor@temp
 12178                           
 12179                           ;lcd.c: 32:         z = temp>>4;
 12180     1F11  0828               	movf	Lcd_Set_Cursor@temp,w
 12181     1F12  00A4               	movwf	??_Lcd_Set_Cursor
 12182     1F13  3004               	movlw	4
 12183     1F14                     u5705:
 12184     1F14  36A4               	lsrf	??_Lcd_Set_Cursor,f
 12185     1F15  0B89               	decfsz	9,f
 12186     1F16  2F14               	goto	u5705
 12187     1F17  0824               	movf	??_Lcd_Set_Cursor,w
 12188     1F18  00A6               	movwf	Lcd_Set_Cursor@z
 12189     1F19                     l4745:
 12190                           
 12191                           ;lcd.c: 33:         y = temp & 0x0F;
 12192     1F19  0828               	movf	Lcd_Set_Cursor@temp,w
 12193     1F1A  390F               	andlw	15
 12194     1F1B  00A7               	movwf	Lcd_Set_Cursor@y
 12195     1F1C                     l4747:
 12196                           
 12197                           ;lcd.c: 34:         Lcd_Cmd(z);
 12198     1F1C  0826               	movf	Lcd_Set_Cursor@z,w
 12199     1F1D  3199  21D5  319F   	fcall	_Lcd_Cmd
 12200     1F20                     l4749:
 12201                           
 12202                           ;lcd.c: 35:         Lcd_Cmd(y);
 12203     1F20  0020               	movlb	0	; select bank0
 12204     1F21  0827               	movf	Lcd_Set_Cursor@y,w
 12205     1F22  3199  21D5  319F   	fcall	_Lcd_Cmd
 12206                           
 12207                           ;lcd.c: 36:     }
 12208     1F25  2F80               	goto	l392
 12209     1F26                     l4751:
 12210     1F26  3002               	movlw	2
 12211     1F27  0625               	xorwf	Lcd_Set_Cursor@a,w
 12212     1F28  1D03               	btfss	3,2
 12213     1F29  2F2B               	goto	u5711
 12214     1F2A  2F2C               	goto	u5710
 12215     1F2B                     u5711:
 12216     1F2B  2F44               	goto	l4761
 12217     1F2C                     u5710:
 12218     1F2C                     l4753:
 12219                           
 12220                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
 12221     1F2C  0823               	movf	Lcd_Set_Cursor@b,w
 12222     1F2D  3EBF               	addlw	191
 12223     1F2E  00A8               	movwf	Lcd_Set_Cursor@temp
 12224                           
 12225                           ;lcd.c: 40:         z = temp>>4;
 12226     1F2F  0828               	movf	Lcd_Set_Cursor@temp,w
 12227     1F30  00A4               	movwf	??_Lcd_Set_Cursor
 12228     1F31  3004               	movlw	4
 12229     1F32                     u5725:
 12230     1F32  36A4               	lsrf	??_Lcd_Set_Cursor,f
 12231     1F33  0B89               	decfsz	9,f
 12232     1F34  2F32               	goto	u5725
 12233     1F35  0824               	movf	??_Lcd_Set_Cursor,w
 12234     1F36  00A6               	movwf	Lcd_Set_Cursor@z
 12235     1F37                     l4755:
 12236                           
 12237                           ;lcd.c: 41:         y = temp & 0x0F;
 12238     1F37  0828               	movf	Lcd_Set_Cursor@temp,w
 12239     1F38  390F               	andlw	15
 12240     1F39  00A7               	movwf	Lcd_Set_Cursor@y
 12241     1F3A                     l4757:
 12242                           
 12243                           ;lcd.c: 42:         Lcd_Cmd(z);
 12244     1F3A  0826               	movf	Lcd_Set_Cursor@z,w
 12245     1F3B  3199  21D5  319F   	fcall	_Lcd_Cmd
 12246     1F3E                     l4759:
 12247                           
 12248                           ;lcd.c: 43:         Lcd_Cmd(y);
 12249     1F3E  0020               	movlb	0	; select bank0
 12250     1F3F  0827               	movf	Lcd_Set_Cursor@y,w
 12251     1F40  3199  21D5  319F   	fcall	_Lcd_Cmd
 12252                           
 12253                           ;lcd.c: 44:     }
 12254     1F43  2F80               	goto	l392
 12255     1F44                     l4761:
 12256     1F44  3003               	movlw	3
 12257     1F45  0625               	xorwf	Lcd_Set_Cursor@a,w
 12258     1F46  1D03               	btfss	3,2
 12259     1F47  2F49               	goto	u5731
 12260     1F48  2F4A               	goto	u5730
 12261     1F49                     u5731:
 12262     1F49  2F62               	goto	l4771
 12263     1F4A                     u5730:
 12264     1F4A                     l4763:
 12265                           
 12266                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
 12267     1F4A  0823               	movf	Lcd_Set_Cursor@b,w
 12268     1F4B  3E93               	addlw	147
 12269     1F4C  00A8               	movwf	Lcd_Set_Cursor@temp
 12270                           
 12271                           ;lcd.c: 48:         z = temp>>4;
 12272     1F4D  0828               	movf	Lcd_Set_Cursor@temp,w
 12273     1F4E  00A4               	movwf	??_Lcd_Set_Cursor
 12274     1F4F  3004               	movlw	4
 12275     1F50                     u5745:
 12276     1F50  36A4               	lsrf	??_Lcd_Set_Cursor,f
 12277     1F51  0B89               	decfsz	9,f
 12278     1F52  2F50               	goto	u5745
 12279     1F53  0824               	movf	??_Lcd_Set_Cursor,w
 12280     1F54  00A6               	movwf	Lcd_Set_Cursor@z
 12281     1F55                     l4765:
 12282                           
 12283                           ;lcd.c: 49:         y = temp & 0x0F;
 12284     1F55  0828               	movf	Lcd_Set_Cursor@temp,w
 12285     1F56  390F               	andlw	15
 12286     1F57  00A7               	movwf	Lcd_Set_Cursor@y
 12287     1F58                     l4767:
 12288                           
 12289                           ;lcd.c: 50:         Lcd_Cmd(z);
 12290     1F58  0826               	movf	Lcd_Set_Cursor@z,w
 12291     1F59  3199  21D5  319F   	fcall	_Lcd_Cmd
 12292     1F5C                     l4769:
 12293                           
 12294                           ;lcd.c: 51:         Lcd_Cmd(y);
 12295     1F5C  0020               	movlb	0	; select bank0
 12296     1F5D  0827               	movf	Lcd_Set_Cursor@y,w
 12297     1F5E  3199  21D5  319F   	fcall	_Lcd_Cmd
 12298                           
 12299                           ;lcd.c: 52:     }
 12300     1F61  2F80               	goto	l392
 12301     1F62                     l4771:
 12302     1F62  3004               	movlw	4
 12303     1F63  0625               	xorwf	Lcd_Set_Cursor@a,w
 12304     1F64  1D03               	btfss	3,2
 12305     1F65  2F67               	goto	u5751
 12306     1F66  2F68               	goto	u5750
 12307     1F67                     u5751:
 12308     1F67  2F80               	goto	l388
 12309     1F68                     u5750:
 12310     1F68                     l4773:
 12311                           
 12312                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
 12313     1F68  0823               	movf	Lcd_Set_Cursor@b,w
 12314     1F69  3ED3               	addlw	211
 12315     1F6A  00A8               	movwf	Lcd_Set_Cursor@temp
 12316                           
 12317                           ;lcd.c: 56:         z = temp>>4;
 12318     1F6B  0828               	movf	Lcd_Set_Cursor@temp,w
 12319     1F6C  00A4               	movwf	??_Lcd_Set_Cursor
 12320     1F6D  3004               	movlw	4
 12321     1F6E                     u5765:
 12322     1F6E  36A4               	lsrf	??_Lcd_Set_Cursor,f
 12323     1F6F  0B89               	decfsz	9,f
 12324     1F70  2F6E               	goto	u5765
 12325     1F71  0824               	movf	??_Lcd_Set_Cursor,w
 12326     1F72  00A6               	movwf	Lcd_Set_Cursor@z
 12327     1F73                     l4775:
 12328                           
 12329                           ;lcd.c: 57:         y = temp & 0x0F;
 12330     1F73  0828               	movf	Lcd_Set_Cursor@temp,w
 12331     1F74  390F               	andlw	15
 12332     1F75  00A7               	movwf	Lcd_Set_Cursor@y
 12333     1F76                     l4777:
 12334                           
 12335                           ;lcd.c: 58:         Lcd_Cmd(z);
 12336     1F76  0826               	movf	Lcd_Set_Cursor@z,w
 12337     1F77  3199  21D5  319F   	fcall	_Lcd_Cmd
 12338     1F7A                     l4779:
 12339                           
 12340                           ;lcd.c: 59:         Lcd_Cmd(y);
 12341     1F7A  0020               	movlb	0	; select bank0
 12342     1F7B  0827               	movf	Lcd_Set_Cursor@y,w
 12343     1F7C  3199  21D5  319F   	fcall	_Lcd_Cmd
 12344     1F7F  2F80               	goto	l392
 12345     1F80                     l388:
 12346     1F80                     l392:
 12347     1F80  0008               	return
 12348     1F81                     __end_of_Lcd_Set_Cursor:
 12349                           
 12350                           	psect	text33
 12351     1C62                     __ptext33:	
 12352 ;; *************** function _Lcd_Init *****************
 12353 ;; Defined at:
 12354 ;;		line 63 in file "lcd.c"
 12355 ;; Parameters:    Size  Location     Type
 12356 ;;		None
 12357 ;; Auto vars:     Size  Location     Type
 12358 ;;		None
 12359 ;; Return value:  Size  Location     Type
 12360 ;;                  1    wreg      void 
 12361 ;; Registers used:
 12362 ;;		wreg, status,2, status,0, pclath, cstack
 12363 ;; Tracked objects:
 12364 ;;		On entry : 0/0
 12365 ;;		On exit  : 0/0
 12366 ;;		Unchanged: 0/0
 12367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12368 ;;      Params:         0       0       0       0       0       0       0       0
 12369 ;;      Locals:         0       0       0       0       0       0       0       0
 12370 ;;      Temps:          0       1       0       0       0       0       0       0
 12371 ;;      Totals:         0       1       0       0       0       0       0       0
 12372 ;;Total ram usage:        1 bytes
 12373 ;; Hardware stack levels used: 1
 12374 ;; Hardware stack levels required when called: 7
 12375 ;; This function calls:
 12376 ;;		_Lcd_Clear
 12377 ;;		_Lcd_Cmd
 12378 ;;		_Lcd_Port
 12379 ;; This function is called by:
 12380 ;;		_main
 12381 ;; This function uses a non-reentrant model
 12382 ;;
 12383                           
 12384     1C62                     _Lcd_Init:	
 12385                           ;psect for function _Lcd_Init
 12386                           
 12387     1C62                     l4729:	
 12388                           ;incstack = 0
 12389                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 12390                           
 12391                           
 12392                           ;lcd.c: 65:  TRISCbits.TRISC1 = 0;
 12393     1C62  0021               	movlb	1	; select bank1
 12394     1C63  108E               	bcf	14,1	;volatile
 12395                           
 12396                           ;lcd.c: 66:  TRISCbits.TRISC0 = 0;
 12397     1C64  100E               	bcf	14,0	;volatile
 12398                           
 12399                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
 12400     1C65  120F               	bcf	15,4	;volatile
 12401                           
 12402                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
 12403     1C66  128F               	bcf	15,5	;volatile
 12404                           
 12405                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
 12406     1C67  130F               	bcf	15,6	;volatile
 12407                           
 12408                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
 12409     1C68  138F               	bcf	15,7	;volatile
 12410     1C69                     l4731:
 12411                           
 12412                           ;lcd.c: 71:     Lcd_Port(0x00);
 12413     1C69  3000               	movlw	0
 12414     1C6A  319B  235E  319C   	fcall	_Lcd_Port
 12415     1C6D                     l4733:
 12416                           
 12417                           ;lcd.c: 72:     _delay((unsigned long)((20)*(4000000/4000.0)));
 12418     1C6D  301A               	movlw	26
 12419     1C6E  0020               	movlb	0	; select bank0
 12420     1C6F  00A3               	movwf	??_Lcd_Init
 12421     1C70  30F8               	movlw	248
 12422     1C71                     u6627:
 12423     1C71  0B89               	decfsz	9,f
 12424     1C72  2C71               	goto	u6627
 12425     1C73  0BA3               	decfsz	??_Lcd_Init,f
 12426     1C74  2C71               	goto	u6627
 12427     1C75  0000               	nop
 12428     1C76                     l4735:
 12429                           
 12430                           ;lcd.c: 73:     Lcd_Cmd(0x03);
 12431     1C76  3003               	movlw	3
 12432     1C77  3199  21D5  319C   	fcall	_Lcd_Cmd
 12433                           
 12434                           ;lcd.c: 74:     _delay((unsigned long)((5)*(4000000/4000.0)));
 12435     1C7A  3007               	movlw	7
 12436     1C7B  0020               	movlb	0	; select bank0
 12437     1C7C  00A3               	movwf	??_Lcd_Init
 12438     1C7D  307D               	movlw	125
 12439     1C7E                     u6637:
 12440     1C7E  0B89               	decfsz	9,f
 12441     1C7F  2C7E               	goto	u6637
 12442     1C80  0BA3               	decfsz	??_Lcd_Init,f
 12443     1C81  2C7E               	goto	u6637
 12444     1C82                     l4737:
 12445                           
 12446                           ;lcd.c: 75:     Lcd_Cmd(0x03);
 12447     1C82  3003               	movlw	3
 12448     1C83  3199  21D5  319C   	fcall	_Lcd_Cmd
 12449     1C86                     l4739:
 12450                           
 12451                           ;lcd.c: 76:     _delay((unsigned long)((11)*(4000000/4000.0)));
 12452     1C86  300F               	movlw	15
 12453     1C87  0020               	movlb	0	; select bank0
 12454     1C88  00A3               	movwf	??_Lcd_Init
 12455     1C89  3047               	movlw	71
 12456     1C8A                     u6647:
 12457     1C8A  0B89               	decfsz	9,f
 12458     1C8B  2C8A               	goto	u6647
 12459     1C8C  0BA3               	decfsz	??_Lcd_Init,f
 12460     1C8D  2C8A               	goto	u6647
 12461     1C8E  3200               	nop2
 12462                           
 12463                           ;lcd.c: 77:     Lcd_Cmd(0x03);
 12464     1C8F  3003               	movlw	3
 12465     1C90  3199  21D5  319C   	fcall	_Lcd_Cmd
 12466                           
 12467                           ;lcd.c: 78:     Lcd_Cmd(0x02);
 12468     1C93  3002               	movlw	2
 12469     1C94  3199  21D5  319C   	fcall	_Lcd_Cmd
 12470                           
 12471                           ;lcd.c: 79:     Lcd_Cmd(0x02);
 12472     1C97  3002               	movlw	2
 12473     1C98  3199  21D5  319C   	fcall	_Lcd_Cmd
 12474                           
 12475                           ;lcd.c: 80:     Lcd_Cmd(0x08);
 12476     1C9B  3008               	movlw	8
 12477     1C9C  3199  21D5  319C   	fcall	_Lcd_Cmd
 12478                           
 12479                           ;lcd.c: 81:     Lcd_Cmd(0x00);
 12480     1C9F  3000               	movlw	0
 12481     1CA0  3199  21D5  319C   	fcall	_Lcd_Cmd
 12482                           
 12483                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
 12484     1CA3  300C               	movlw	12
 12485     1CA4  3199  21D5  319C   	fcall	_Lcd_Cmd
 12486                           
 12487                           ;lcd.c: 83:     Lcd_Cmd(0x00);
 12488     1CA7  3000               	movlw	0
 12489     1CA8  3199  21D5  319C   	fcall	_Lcd_Cmd
 12490                           
 12491                           ;lcd.c: 84:     Lcd_Cmd(0x06);
 12492     1CAB  3006               	movlw	6
 12493     1CAC  3199  21D5  319C   	fcall	_Lcd_Cmd
 12494                           
 12495                           ;lcd.c: 85:     Lcd_Clear();
 12496     1CAF  3199  2184  319C   	fcall	_Lcd_Clear
 12497     1CB2                     l395:
 12498     1CB2  0008               	return
 12499     1CB3                     __end_of_Lcd_Init:
 12500                           
 12501                           	psect	text34
 12502     1984                     __ptext34:	
 12503 ;; *************** function _Lcd_Clear *****************
 12504 ;; Defined at:
 12505 ;;		line 20 in file "lcd.c"
 12506 ;; Parameters:    Size  Location     Type
 12507 ;;		None
 12508 ;; Auto vars:     Size  Location     Type
 12509 ;;		None
 12510 ;; Return value:  Size  Location     Type
 12511 ;;                  1    wreg      void 
 12512 ;; Registers used:
 12513 ;;		wreg, status,2, status,0, pclath, cstack
 12514 ;; Tracked objects:
 12515 ;;		On entry : 0/0
 12516 ;;		On exit  : 0/0
 12517 ;;		Unchanged: 0/0
 12518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12519 ;;      Params:         0       0       0       0       0       0       0       0
 12520 ;;      Locals:         0       0       0       0       0       0       0       0
 12521 ;;      Temps:          0       0       0       0       0       0       0       0
 12522 ;;      Totals:         0       0       0       0       0       0       0       0
 12523 ;;Total ram usage:        0 bytes
 12524 ;; Hardware stack levels used: 1
 12525 ;; Hardware stack levels required when called: 6
 12526 ;; This function calls:
 12527 ;;		_Lcd_Cmd
 12528 ;; This function is called by:
 12529 ;;		_main
 12530 ;;		_Lcd_Init
 12531 ;; This function uses a non-reentrant model
 12532 ;;
 12533                           
 12534     1984                     _Lcd_Clear:	
 12535                           ;psect for function _Lcd_Clear
 12536                           
 12537     1984                     l4651:	
 12538                           ;incstack = 0
 12539                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 12540                           
 12541                           
 12542                           ;lcd.c: 22:     Lcd_Cmd(0);
 12543     1984  3000               	movlw	0
 12544     1985  3199  21D5  3199   	fcall	_Lcd_Cmd
 12545                           
 12546                           ;lcd.c: 23:     Lcd_Cmd(1);
 12547     1988  3001               	movlw	1
 12548     1989  3199  21D5  3199   	fcall	_Lcd_Cmd
 12549     198C                     l382:
 12550     198C  0008               	return
 12551     198D                     __end_of_Lcd_Clear:
 12552                           
 12553                           	psect	text35
 12554     19D5                     __ptext35:	
 12555 ;; *************** function _Lcd_Cmd *****************
 12556 ;; Defined at:
 12557 ;;		line 11 in file "lcd.c"
 12558 ;; Parameters:    Size  Location     Type
 12559 ;;  a               1    wreg     unsigned char 
 12560 ;; Auto vars:     Size  Location     Type
 12561 ;;  a               1    2[BANK0 ] unsigned char 
 12562 ;; Return value:  Size  Location     Type
 12563 ;;                  1    wreg      void 
 12564 ;; Registers used:
 12565 ;;		wreg, status,2, status,0, pclath, cstack
 12566 ;; Tracked objects:
 12567 ;;		On entry : 0/0
 12568 ;;		On exit  : 0/0
 12569 ;;		Unchanged: 0/0
 12570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12571 ;;      Params:         0       0       0       0       0       0       0       0
 12572 ;;      Locals:         0       1       0       0       0       0       0       0
 12573 ;;      Temps:          0       1       0       0       0       0       0       0
 12574 ;;      Totals:         0       2       0       0       0       0       0       0
 12575 ;;Total ram usage:        2 bytes
 12576 ;; Hardware stack levels used: 1
 12577 ;; Hardware stack levels required when called: 5
 12578 ;; This function calls:
 12579 ;;		_Lcd_Port
 12580 ;; This function is called by:
 12581 ;;		_Lcd_Clear
 12582 ;;		_Lcd_Set_Cursor
 12583 ;;		_Lcd_Init
 12584 ;;		_Lcd_Shift_Right
 12585 ;;		_Lcd_Shift_Left
 12586 ;;		_Lcd_Blink
 12587 ;;		_Lcd_NoBlink
 12588 ;; This function uses a non-reentrant model
 12589 ;;
 12590                           
 12591     19D5                     _Lcd_Cmd:	
 12592                           ;psect for function _Lcd_Cmd
 12593                           
 12594                           
 12595                           ;incstack = 0
 12596                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12597                           ;Lcd_Cmd@a stored from wreg
 12598     19D5  0020               	movlb	0	; select bank0
 12599     19D6  00A2               	movwf	Lcd_Cmd@a
 12600     19D7                     l4527:
 12601                           
 12602                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATCbits.LATC1 = 0;
 12603     19D7  0022               	movlb	2	; select bank2
 12604     19D8  108E               	bcf	14,1	;volatile
 12605     19D9                     l4529:
 12606                           
 12607                           ;lcd.c: 14:     Lcd_Port(a);
 12608     19D9  0020               	movlb	0	; select bank0
 12609     19DA  0822               	movf	Lcd_Cmd@a,w
 12610     19DB  319B  235E  3199   	fcall	_Lcd_Port
 12611     19DE                     l4531:
 12612                           
 12613                           ;lcd.c: 15:     LATCbits.LATC0 = 1;
 12614     19DE  0022               	movlb	2	; select bank2
 12615     19DF  140E               	bsf	14,0	;volatile
 12616     19E0                     l4533:
 12617                           
 12618                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
 12619     19E0  3006               	movlw	6
 12620     19E1  0020               	movlb	0	; select bank0
 12621     19E2  00A1               	movwf	??_Lcd_Cmd
 12622     19E3  3030               	movlw	48
 12623     19E4                     u6657:
 12624     19E4  0B89               	decfsz	9,f
 12625     19E5  29E4               	goto	u6657
 12626     19E6  0BA1               	decfsz	??_Lcd_Cmd,f
 12627     19E7  29E4               	goto	u6657
 12628     19E8  0000               	nop
 12629     19E9                     l4535:
 12630                           
 12631                           ;lcd.c: 17:     LATCbits.LATC0 = 0;
 12632     19E9  0022               	movlb	2	; select bank2
 12633     19EA  100E               	bcf	14,0	;volatile
 12634     19EB                     l379:
 12635     19EB  0008               	return
 12636     19EC                     __end_of_Lcd_Cmd:
 12637                           
 12638                           	psect	text36
 12639     1B5E                     __ptext36:	
 12640 ;; *************** function _Lcd_Port *****************
 12641 ;; Defined at:
 12642 ;;		line 3 in file "lcd.c"
 12643 ;; Parameters:    Size  Location     Type
 12644 ;;  a               1    wreg     unsigned char 
 12645 ;; Auto vars:     Size  Location     Type
 12646 ;;  a               1    0[BANK0 ] unsigned char 
 12647 ;; Return value:  Size  Location     Type
 12648 ;;                  1    wreg      void 
 12649 ;; Registers used:
 12650 ;;		wreg
 12651 ;; Tracked objects:
 12652 ;;		On entry : 0/0
 12653 ;;		On exit  : 0/0
 12654 ;;		Unchanged: 0/0
 12655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12656 ;;      Params:         0       0       0       0       0       0       0       0
 12657 ;;      Locals:         0       1       0       0       0       0       0       0
 12658 ;;      Temps:          0       0       0       0       0       0       0       0
 12659 ;;      Totals:         0       1       0       0       0       0       0       0
 12660 ;;Total ram usage:        1 bytes
 12661 ;; Hardware stack levels used: 1
 12662 ;; Hardware stack levels required when called: 4
 12663 ;; This function calls:
 12664 ;;		Nothing
 12665 ;; This function is called by:
 12666 ;;		_Lcd_Cmd
 12667 ;;		_Lcd_Init
 12668 ;;		_Lcd_Write_Char
 12669 ;; This function uses a non-reentrant model
 12670 ;;
 12671                           
 12672     1B5E                     _Lcd_Port:	
 12673                           ;psect for function _Lcd_Port
 12674                           
 12675                           
 12676                           ;incstack = 0
 12677                           ; Regs used in _Lcd_Port: [wreg]
 12678                           ;Lcd_Port@a stored from wreg
 12679     1B5E  0020               	movlb	0	; select bank0
 12680     1B5F  00A0               	movwf	Lcd_Port@a
 12681     1B60                     l4225:
 12682                           
 12683                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LATD4 = 1
      +                          ) : (LATDbits.LATD4 = 0);
 12684     1B60  1C20               	btfss	Lcd_Port@a,0
 12685     1B61  2B63               	goto	u5031
 12686     1B62  2B64               	goto	u5030
 12687     1B63                     u5031:
 12688     1B63  2B67               	goto	l361
 12689     1B64                     u5030:
 12690     1B64                     l4227:
 12691     1B64  0022               	movlb	2	; select bank2
 12692     1B65  160F               	bsf	15,4	;volatile
 12693     1B66  2B69               	goto	l4229
 12694     1B67                     l361:
 12695     1B67  0022               	movlb	2	; select bank2
 12696     1B68  120F               	bcf	15,4	;volatile
 12697     1B69                     l4229:
 12698                           
 12699                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LATD5 = 1) : (LATDbits.LATD5 = 0);
 12700     1B69  0020               	movlb	0	; select bank0
 12701     1B6A  1CA0               	btfss	Lcd_Port@a,1
 12702     1B6B  2B6D               	goto	u5041
 12703     1B6C  2B6E               	goto	u5040
 12704     1B6D                     u5041:
 12705     1B6D  2B71               	goto	l365
 12706     1B6E                     u5040:
 12707     1B6E                     l4231:
 12708     1B6E  0022               	movlb	2	; select bank2
 12709     1B6F  168F               	bsf	15,5	;volatile
 12710     1B70  2B73               	goto	l4233
 12711     1B71                     l365:
 12712     1B71  0022               	movlb	2	; select bank2
 12713     1B72  128F               	bcf	15,5	;volatile
 12714     1B73                     l4233:
 12715                           
 12716                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LATD6 = 1) : (LATDbits.LATD6 = 0);
 12717     1B73  0020               	movlb	0	; select bank0
 12718     1B74  1D20               	btfss	Lcd_Port@a,2
 12719     1B75  2B77               	goto	u5051
 12720     1B76  2B78               	goto	u5050
 12721     1B77                     u5051:
 12722     1B77  2B7B               	goto	l369
 12723     1B78                     u5050:
 12724     1B78                     l4235:
 12725     1B78  0022               	movlb	2	; select bank2
 12726     1B79  170F               	bsf	15,6	;volatile
 12727     1B7A  2B7D               	goto	l4237
 12728     1B7B                     l369:
 12729     1B7B  0022               	movlb	2	; select bank2
 12730     1B7C  130F               	bcf	15,6	;volatile
 12731     1B7D                     l4237:
 12732                           
 12733                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LATD7 = 1) : (LATDbits.LATD7 = 0);
 12734     1B7D  0020               	movlb	0	; select bank0
 12735     1B7E  1DA0               	btfss	Lcd_Port@a,3
 12736     1B7F  2B81               	goto	u5061
 12737     1B80  2B82               	goto	u5060
 12738     1B81                     u5061:
 12739     1B81  2B85               	goto	l373
 12740     1B82                     u5060:
 12741     1B82                     l4239:
 12742     1B82  0022               	movlb	2	; select bank2
 12743     1B83  178F               	bsf	15,7	;volatile
 12744     1B84  2B87               	goto	l376
 12745     1B85                     l373:
 12746     1B85  0022               	movlb	2	; select bank2
 12747     1B86  138F               	bcf	15,7	;volatile
 12748     1B87                     l376:
 12749     1B87  0008               	return
 12750     1B88                     __end_of_Lcd_Port:
 12751                           
 12752                           	psect	text37
 12753     1000                     __ptext37:	
 12754 ;; *************** function _ADC_StartConversion *****************
 12755 ;; Defined at:
 12756 ;;		line 93 in file "mcc_generated_files/adc.c"
 12757 ;; Parameters:    Size  Location     Type
 12758 ;;		None
 12759 ;; Auto vars:     Size  Location     Type
 12760 ;;		None
 12761 ;; Return value:  Size  Location     Type
 12762 ;;                  1    wreg      void 
 12763 ;; Registers used:
 12764 ;;		None
 12765 ;; Tracked objects:
 12766 ;;		On entry : 0/0
 12767 ;;		On exit  : 0/0
 12768 ;;		Unchanged: 0/0
 12769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12770 ;;      Params:         0       0       0       0       0       0       0       0
 12771 ;;      Locals:         0       0       0       0       0       0       0       0
 12772 ;;      Temps:          0       0       0       0       0       0       0       0
 12773 ;;      Totals:         0       0       0       0       0       0       0       0
 12774 ;;Total ram usage:        0 bytes
 12775 ;; Hardware stack levels used: 1
 12776 ;; Hardware stack levels required when called: 4
 12777 ;; This function calls:
 12778 ;;		Nothing
 12779 ;; This function is called by:
 12780 ;;		_main
 12781 ;; This function uses a non-reentrant model
 12782 ;;
 12783                           
 12784     1000                     _ADC_StartConversion:	
 12785                           ;psect for function _ADC_StartConversion
 12786                           
 12787     1000                     l4719:	
 12788                           ;incstack = 0
 12789                           ; Regs used in _ADC_StartConversion: []
 12790                           
 12791                           
 12792                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
 12793     1000  0021               	movlb	1	; select bank1
 12794     1001  149D               	bsf	29,1	;volatile
 12795     1002                     l23:
 12796     1002  0008               	return
 12797     1003                     __end_of_ADC_StartConversion:
 12798                           
 12799                           	psect	text38
 12800     195A                     __ptext38:	
 12801 ;; *************** function _ADC_IsConversionDone *****************
 12802 ;; Defined at:
 12803 ;;		line 100 in file "mcc_generated_files/adc.c"
 12804 ;; Parameters:    Size  Location     Type
 12805 ;;		None
 12806 ;; Auto vars:     Size  Location     Type
 12807 ;;		None
 12808 ;; Return value:  Size  Location     Type
 12809 ;;                  1    wreg      _Bool 
 12810 ;; Registers used:
 12811 ;;		wreg, status,0
 12812 ;; Tracked objects:
 12813 ;;		On entry : 0/0
 12814 ;;		On exit  : 0/0
 12815 ;;		Unchanged: 0/0
 12816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12817 ;;      Params:         0       0       0       0       0       0       0       0
 12818 ;;      Locals:         0       0       0       0       0       0       0       0
 12819 ;;      Temps:          0       0       0       0       0       0       0       0
 12820 ;;      Totals:         0       0       0       0       0       0       0       0
 12821 ;;Total ram usage:        0 bytes
 12822 ;; Hardware stack levels used: 1
 12823 ;; Hardware stack levels required when called: 4
 12824 ;; This function calls:
 12825 ;;		Nothing
 12826 ;; This function is called by:
 12827 ;;		_main
 12828 ;; This function uses a non-reentrant model
 12829 ;;
 12830                           
 12831     195A                     _ADC_IsConversionDone:	
 12832                           ;psect for function _ADC_IsConversionDone
 12833                           
 12834     195A                     l4721:	
 12835                           ;incstack = 0
 12836                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
 12837                           
 12838                           
 12839                           ;mcc_generated_files/adc.c: 103:    return ((_Bool)(!ADCON0bits.GO_nDONE));
 12840     195A  1003               	clrc
 12841     195B  0021               	movlb	1	; select bank1
 12842     195C  1C9D               	btfss	29,1	;volatile
 12843     195D  1403               	setc
 12844     195E  3000               	movlw	0
 12845     195F  3D09               	addwfc	9,w
 12846     1960                     l26:
 12847     1960  0008               	return
 12848     1961                     __end_of_ADC_IsConversionDone:
 12849                           
 12850                           	psect	text39
 12851     1961                     __ptext39:	
 12852 ;; *************** function _ADC_Initialize *****************
 12853 ;; Defined at:
 12854 ;;		line 67 in file "mcc_generated_files/adc.c"
 12855 ;; Parameters:    Size  Location     Type
 12856 ;;		None
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;		None
 12859 ;; Return value:  Size  Location     Type
 12860 ;;                  1    wreg      void 
 12861 ;; Registers used:
 12862 ;;		wreg, status,2
 12863 ;; Tracked objects:
 12864 ;;		On entry : 0/0
 12865 ;;		On exit  : 0/0
 12866 ;;		Unchanged: 0/0
 12867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12868 ;;      Params:         0       0       0       0       0       0       0       0
 12869 ;;      Locals:         0       0       0       0       0       0       0       0
 12870 ;;      Temps:          0       0       0       0       0       0       0       0
 12871 ;;      Totals:         0       0       0       0       0       0       0       0
 12872 ;;Total ram usage:        0 bytes
 12873 ;; Hardware stack levels used: 1
 12874 ;; Hardware stack levels required when called: 4
 12875 ;; This function calls:
 12876 ;;		Nothing
 12877 ;; This function is called by:
 12878 ;;		_main
 12879 ;;		_SYSTEM_Initialize
 12880 ;; This function uses a non-reentrant model
 12881 ;;
 12882                           
 12883     1961                     _ADC_Initialize:	
 12884                           ;psect for function _ADC_Initialize
 12885                           
 12886     1961                     l4713:	
 12887                           ;incstack = 0
 12888                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12889                           
 12890                           
 12891                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xC0;
 12892     1961  30C0               	movlw	192
 12893     1962  0021               	movlb	1	; select bank1
 12894     1963  009E               	movwf	30	;volatile
 12895     1964                     l4715:
 12896                           
 12897                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
 12898     1964  019B               	clrf	27	;volatile
 12899     1965                     l4717:
 12900                           
 12901                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
 12902     1965  019C               	clrf	28	;volatile
 12903                           
 12904                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
 12905     1966  3001               	movlw	1
 12906     1967  009D               	movwf	29	;volatile
 12907     1968                     l17:
 12908     1968  0008               	return
 12909     1969                     __end_of_ADC_Initialize:
 12910                           
 12911                           	psect	text40
 12912     197B                     __ptext40:	
 12913 ;; *************** function _ADC_GetConversionResult *****************
 12914 ;; Defined at:
 12915 ;;		line 106 in file "mcc_generated_files/adc.c"
 12916 ;; Parameters:    Size  Location     Type
 12917 ;;		None
 12918 ;; Auto vars:     Size  Location     Type
 12919 ;;		None
 12920 ;; Return value:  Size  Location     Type
 12921 ;;                  2    0[BANK0 ] unsigned short 
 12922 ;; Registers used:
 12923 ;;		wreg
 12924 ;; Tracked objects:
 12925 ;;		On entry : 0/0
 12926 ;;		On exit  : 0/0
 12927 ;;		Unchanged: 0/0
 12928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12929 ;;      Params:         0       2       0       0       0       0       0       0
 12930 ;;      Locals:         0       0       0       0       0       0       0       0
 12931 ;;      Temps:          0       0       0       0       0       0       0       0
 12932 ;;      Totals:         0       2       0       0       0       0       0       0
 12933 ;;Total ram usage:        2 bytes
 12934 ;; Hardware stack levels used: 1
 12935 ;; Hardware stack levels required when called: 4
 12936 ;; This function calls:
 12937 ;;		Nothing
 12938 ;; This function is called by:
 12939 ;;		_main
 12940 ;; This function uses a non-reentrant model
 12941 ;;
 12942                           
 12943     197B                     _ADC_GetConversionResult:	
 12944                           ;psect for function _ADC_GetConversionResult
 12945                           
 12946     197B                     l4725:	
 12947                           ;incstack = 0
 12948                           ; Regs used in _ADC_GetConversionResult: [wreg]
 12949                           
 12950                           
 12951                           ;mcc_generated_files/adc.c: 109:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12952     197B  0021               	movlb	1	; select bank1
 12953     197C  081C               	movf	28,w	;volatile
 12954     197D  0020               	movlb	0	; select bank0
 12955     197E  00A1               	movwf	?_ADC_GetConversionResult+1
 12956     197F  0021               	movlb	1	; select bank1
 12957     1980  081B               	movf	27,w	;volatile
 12958     1981  0020               	movlb	0	; select bank0
 12959     1982  00A0               	movwf	?_ADC_GetConversionResult
 12960     1983                     l29:
 12961     1983  0008               	return
 12962     1984                     __end_of_ADC_GetConversionResult:
 12963                           
 12964                           	psect	intentry
 12965     0004                     __pintentry:	
 12966 ;; *************** function _IOC *****************
 12967 ;; Defined at:
 12968 ;;		line 171 in file "main.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;		None
 12971 ;; Auto vars:     Size  Location     Type
 12972 ;;		None
 12973 ;; Return value:  Size  Location     Type
 12974 ;;                  1    wreg      void 
 12975 ;; Registers used:
 12976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12977 ;; Tracked objects:
 12978 ;;		On entry : 0/0
 12979 ;;		On exit  : 0/0
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12982 ;;      Params:         0       0       0       0       0       0       0       0
 12983 ;;      Locals:         0       0       0       0       0       0       0       0
 12984 ;;      Temps:          2       0       0       0       0       0       0       0
 12985 ;;      Totals:         2       0       0       0       0       0       0       0
 12986 ;;Total ram usage:        2 bytes
 12987 ;; Hardware stack levels used: 1
 12988 ;; Hardware stack levels required when called: 3
 12989 ;; This function calls:
 12990 ;;		_Keypad_Get_Char
 12991 ;;		_Keypad_Init
 12992 ;;		_strcmp
 12993 ;;		i1_Lcd_Clear
 12994 ;;		i1_Lcd_Set_Cursor
 12995 ;;		i1_Lcd_Write_Char
 12996 ;;		i1_Lcd_Write_String
 12997 ;; This function is called by:
 12998 ;;		Interrupt level 1
 12999 ;; This function uses a non-reentrant model
 13000 ;;
 13001                           
 13002     0004                     _IOC:
 13003                           
 13004                           ;incstack = 0
 13005     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13006                           
 13007                           ; Regs used in _IOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13008     0005  3180               	pagesel	$
 13009     0006                     i1l5141:
 13010                           
 13011                           ;main.c: 172:     Keypad_Init();
 13012     0006  3199  2169  3180   	fcall	_Keypad_Init
 13013     0009                     i1l5143:
 13014                           
 13015                           ;main.c: 173:     Lcd_Clear();
 13016     0009  3199  2172  3180   	fcall	i1_Lcd_Clear
 13017     000C                     i1l5145:
 13018                           
 13019                           ;main.c: 174:     LATAbits.LATA3 = 0;
 13020     000C  0022               	movlb	2	; select bank2
 13021     000D  118C               	bcf	12,3	;volatile
 13022                           
 13023                           ;main.c: 175:     _delay((unsigned long)((500)*(4000000/4000.0)));
 13024     000E  3003               	movlw	3
 13025     000F  00FB               	movwf	??_IOC+1
 13026     0010  308A               	movlw	138
 13027     0011  00FA               	movwf	??_IOC
 13028     0012  3056               	movlw	86
 13029     0013                     u666_27:
 13030     0013  0B89               	decfsz	9,f
 13031     0014  2813               	goto	u666_27
 13032     0015  0BFA               	decfsz	??_IOC,f
 13033     0016  2813               	goto	u666_27
 13034     0017  0BFB               	decfsz	??_IOC+1,f
 13035     0018  2813               	goto	u666_27
 13036                           
 13037                           ;main.c: 177:     while(IOCBF != 0) {
 13038     0019  2A2C               	goto	i1l5347
 13039     001A                     i1l5147:
 13040                           
 13041                           ;main.c: 180:                 Lcd_Set_Cursor(1,1);
 13042     001A  01F3               	clrf	i1Lcd_Set_Cursor@b
 13043     001B  0AF3               	incf	i1Lcd_Set_Cursor@b,f
 13044     001C  3001               	movlw	1
 13045     001D  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13046     0020                     i1l5149:
 13047                           
 13048                           ;main.c: 181:                 Lcd_Write_String("1:INGRESAR CLAVE");
 13049     0020  3011               	movlw	low (STR_7| (0+32768))
 13050     0021  00F5               	movwf	i1Lcd_Write_String@a
 13051     0022  3098               	movlw	high (STR_7| (0+32768))
 13052     0023  00F6               	movwf	i1Lcd_Write_String@a+1
 13053     0024  319A  2208  3180   	fcall	i1_Lcd_Write_String
 13054     0027                     i1l5151:
 13055                           
 13056                           ;main.c: 182:                 Lcd_Set_Cursor(2,1);
 13057     0027  01F3               	clrf	i1Lcd_Set_Cursor@b
 13058     0028  0AF3               	incf	i1Lcd_Set_Cursor@b,f
 13059     0029  3002               	movlw	2
 13060     002A  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13061                           
 13062                           ;main.c: 183:                 Lcd_Write_String("2:CAMBIAR CLAVE");
 13063     002D  3022               	movlw	low (STR_8| (0+32768))
 13064     002E  00F5               	movwf	i1Lcd_Write_String@a
 13065     002F  3098               	movlw	high (STR_8| (0+32768))
 13066     0030  00F6               	movwf	i1Lcd_Write_String@a+1
 13067     0031  319A  2208  3180   	fcall	i1_Lcd_Write_String
 13068     0034                     i1l5153:
 13069                           
 13070                           ;main.c: 185:                 tecla = Keypad_Get_Char();
 13071     0034  3191  2165  3180   	fcall	_Keypad_Get_Char
 13072     0037  00FD               	movwf	_tecla
 13073     0038                     i1l5155:
 13074                           
 13075                           ;main.c: 186:                 if(tecla != 0) {
 13076     0038  087D               	movf	_tecla,w
 13077     0039  1903               	btfsc	3,2
 13078     003A  283C               	goto	u648_21
 13079     003B  283D               	goto	u648_20
 13080     003C                     u648_21:
 13081     003C  2A2C               	goto	i1l5347
 13082     003D                     u648_20:
 13083     003D  284E               	goto	i1l5167
 13084     003E                     i1l5159:
 13085                           
 13086                           ;main.c: 189:                             estado = 1;
 13087     003E  3001               	movlw	1
 13088     003F  0022               	movlb	2	; select bank2
 13089     0040  00B0               	movwf	_estado^(0+256)
 13090     0041  3000               	movlw	0
 13091     0042  00B1               	movwf	(_estado^(0+256)+1)
 13092                           
 13093                           ;main.c: 190:                             break;
 13094     0043  285E               	goto	i1l5169
 13095     0044                     i1l5161:
 13096                           
 13097                           ;main.c: 192:                             estado = 2;
 13098     0044  3002               	movlw	2
 13099     0045  0022               	movlb	2	; select bank2
 13100     0046  00B0               	movwf	_estado^(0+256)
 13101     0047  3000               	movlw	0
 13102     0048  00B1               	movwf	(_estado^(0+256)+1)
 13103                           
 13104                           ;main.c: 193:                             break;
 13105     0049  285E               	goto	i1l5169
 13106     004A                     i1l5163:
 13107                           
 13108                           ;main.c: 195:                             estado = 0;
 13109     004A  0022               	movlb	2	; select bank2
 13110     004B  01B0               	clrf	_estado^(0+256)
 13111     004C  01B1               	clrf	(_estado+1)^(0+256)
 13112                           
 13113                           ;main.c: 196:                             break;
 13114     004D  285E               	goto	i1l5169
 13115     004E                     i1l5167:
 13116     004E  087D               	movf	_tecla,w
 13117     004F  00FA               	movwf	??_IOC
 13118     0050  01FB               	clrf	??_IOC+1
 13119                           
 13120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13121                           ; Switch size 1, requested type "simple"
 13122                           ; Number of cases is 1, Range of values is 0 to 0
 13123                           ; switch strategies available:
 13124                           ; Name         Instructions Cycles
 13125                           ; simple_byte            4     3 (average)
 13126                           ; direct_byte            8     6 (fixed)
 13127                           ; jumptable            260     6 (fixed)
 13128                           ;	Chosen strategy is simple_byte
 13129     0051  087B               	movf	??_IOC+1,w
 13130     0052  3A00               	xorlw	0	; case 0
 13131     0053  1903               	skipnz
 13132     0054  2856               	goto	i1l5541
 13133     0055  284A               	goto	i1l5163
 13134     0056                     i1l5541:
 13135                           
 13136                           ; Switch size 1, requested type "simple"
 13137                           ; Number of cases is 2, Range of values is 49 to 50
 13138                           ; switch strategies available:
 13139                           ; Name         Instructions Cycles
 13140                           ; simple_byte            7     4 (average)
 13141                           ; direct_byte           13     9 (fixed)
 13142                           ; jumptable            263     9 (fixed)
 13143                           ;	Chosen strategy is simple_byte
 13144     0056  087A               	movf	??_IOC,w
 13145     0057  3A31               	xorlw	49	; case 49
 13146     0058  1903               	skipnz
 13147     0059  283E               	goto	i1l5159
 13148     005A  3A03               	xorlw	3	; case 50
 13149     005B  1903               	skipnz
 13150     005C  2844               	goto	i1l5161
 13151     005D  284A               	goto	i1l5163
 13152     005E                     i1l5169:
 13153                           
 13154                           ;main.c: 198:                     Lcd_Clear();
 13155     005E  3199  2172  3180   	fcall	i1_Lcd_Clear
 13156     0061  2A2C               	goto	i1l5347
 13157     0062                     i1l5171:
 13158                           
 13159                           ;main.c: 202:                 Lcd_Set_Cursor(1,1);
 13160     0062  01F3               	clrf	i1Lcd_Set_Cursor@b
 13161     0063  0AF3               	incf	i1Lcd_Set_Cursor@b,f
 13162     0064  3001               	movlw	1
 13163     0065  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13164     0068                     i1l5173:
 13165                           
 13166                           ;main.c: 203:                 Lcd_Write_String("INGRESAR CLAVE");
 13167     0068  3013               	movlw	low ((STR_7+2)| (0+32768))
 13168     0069  00F5               	movwf	i1Lcd_Write_String@a
 13169     006A  3098               	movlw	high ((STR_7+2)| (0+32768))
 13170     006B  00F6               	movwf	i1Lcd_Write_String@a+1
 13171     006C  319A  2208  3180   	fcall	i1_Lcd_Write_String
 13172                           
 13173                           ;main.c: 205:                 while(cont_key < 4)
 13174     006F  2891               	goto	i1l5187
 13175     0070                     i1l5175:
 13176                           
 13177                           ;main.c: 206:                 {;main.c: 207:                     tecla = Keypad_Get_Char
      +                          ();
 13178     0070  3191  2165  3180   	fcall	_Keypad_Get_Char
 13179     0073  00FD               	movwf	_tecla
 13180     0074                     i1l5177:
 13181                           
 13182                           ;main.c: 208:                     if(tecla != 0)
 13183     0074  087D               	movf	_tecla,w
 13184     0075  1903               	btfsc	3,2
 13185     0076  2878               	goto	u649_21
 13186     0077  2879               	goto	u649_20
 13187     0078                     u649_21:
 13188     0078  2891               	goto	i1l5187
 13189     0079                     u649_20:
 13190     0079                     i1l5179:
 13191                           
 13192                           ;main.c: 209:                     {;main.c: 210:                         clave[cont_key]
      +                           = tecla;
 13193     0079  0022               	movlb	2	; select bank2
 13194     007A  0832               	movf	_cont_key^(0+256),w
 13195     007B  3E38               	addlw	(low (_clave| (0+256)))& (0+255)
 13196     007C  0086               	movwf	6
 13197     007D  3001               	movlw	1	; select bank2/3
 13198     007E  0087               	movwf	7
 13199     007F  087D               	movf	_tecla,w
 13200     0080  0081               	movwf	1
 13201     0081                     i1l5181:
 13202                           
 13203                           ;main.c: 211:                         Lcd_Set_Cursor(2,7+cont_key);
 13204     0081  0832               	movf	_cont_key^(0+256),w
 13205     0082  3E07               	addlw	7
 13206     0083  00F3               	movwf	i1Lcd_Set_Cursor@b
 13207     0084  3002               	movlw	2
 13208     0085  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13209     0088                     i1l5183:
 13210                           
 13211                           ;main.c: 212:                         Lcd_Write_Char('*');
 13212     0088  302A               	movlw	42
 13213     0089  319B  230E  3180   	fcall	i1_Lcd_Write_Char
 13214     008C                     i1l5185:
 13215                           
 13216                           ;main.c: 213:                         cont_key++;
 13217     008C  3001               	movlw	1
 13218     008D  0022               	movlb	2	; select bank2
 13219     008E  07B2               	addwf	_cont_key^(0+256),f
 13220     008F  3000               	movlw	0
 13221     0090  3DB3               	addwfc	(_cont_key+1)^(0+256),f
 13222     0091                     i1l5187:
 13223                           
 13224                           ;main.c: 205:                 while(cont_key < 4)
 13225     0091  0022               	movlb	2	; select bank2
 13226     0092  0833               	movf	(_cont_key+1)^(0+256),w
 13227     0093  3A80               	xorlw	128
 13228     0094  00FA               	movwf	??_IOC
 13229     0095  3080               	movlw	128
 13230     0096  027A               	subwf	??_IOC,w
 13231     0097  1D03               	skipz
 13232     0098  289B               	goto	u650_25
 13233     0099  3004               	movlw	4
 13234     009A  0232               	subwf	_cont_key^(0+256),w
 13235     009B                     u650_25:
 13236     009B  1C03               	skipc
 13237     009C  289E               	goto	u650_21
 13238     009D  289F               	goto	u650_20
 13239     009E                     u650_21:
 13240     009E  2870               	goto	i1l5175
 13241     009F                     u650_20:
 13242     009F                     i1l5189:
 13243                           
 13244                           ;main.c: 219:                 _delay((unsigned long)((200)*(4000000/4000.0)));
 13245     009F  3002               	movlw	2
 13246     00A0  00FB               	movwf	??_IOC+1
 13247     00A1  3004               	movlw	4
 13248     00A2  00FA               	movwf	??_IOC
 13249     00A3  30BA               	movlw	186
 13250     00A4                     u667_27:
 13251     00A4  0B89               	decfsz	9,f
 13252     00A5  28A4               	goto	u667_27
 13253     00A6  0BFA               	decfsz	??_IOC,f
 13254     00A7  28A4               	goto	u667_27
 13255     00A8  0BFB               	decfsz	??_IOC+1,f
 13256     00A9  28A4               	goto	u667_27
 13257     00AA  3200               	nop2
 13258                           
 13259                           ;main.c: 220:                 WPUB = 0b11111110;
 13260     00AB  30FE               	movlw	254
 13261     00AC  0024               	movlb	4	; select bank4
 13262     00AD  008D               	movwf	13	;volatile
 13263     00AE                     i1l5191:
 13264                           
 13265                           ;main.c: 221:                 Lcd_Clear();
 13266     00AE  3199  2172  3180   	fcall	i1_Lcd_Clear
 13267     00B1                     i1l5193:
 13268                           
 13269                           ;main.c: 222:                 LATAbits.LATA3 = 1;
 13270     00B1  0022               	movlb	2	; select bank2
 13271     00B2  158C               	bsf	12,3	;volatile
 13272     00B3                     i1l5195:
 13273                           
 13274                           ;main.c: 224:                 if(!strcmp(clave, clave_enter))
 13275     00B3  305E               	movlw	(low (_clave_enter| (0+256)))& (0+255)
 13276     00B4  00F0               	movwf	strcmp@r
 13277     00B5  3038               	movlw	(low (_clave| (0+256)))& (0+255)
 13278     00B6  319B  23B3  3180   	fcall	_strcmp
 13279     00B9  0870               	movf	?_strcmp,w
 13280     00BA  0471               	iorwf	?_strcmp+1,w
 13281     00BB  1D03               	btfss	3,2
 13282     00BC  28BE               	goto	u651_21
 13283     00BD  28BF               	goto	u651_20
 13284     00BE                     u651_21:
 13285     00BE  28E8               	goto	i1l5209
 13286     00BF                     u651_20:
 13287     00BF                     i1l5197:
 13288                           
 13289                           ;main.c: 225:                 {;main.c: 226:                     Lcd_Set_Cursor(1,6);
 13290     00BF  3006               	movlw	6
 13291     00C0  00F3               	movwf	i1Lcd_Set_Cursor@b
 13292     00C1  3001               	movlw	1
 13293     00C2  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13294     00C5                     i1l5199:
 13295                           
 13296                           ;main.c: 227:                     Lcd_Write_String("ACCESO");
 13297     00C5  3078               	movlw	low (STR_10| (0+32768))
 13298     00C6  00F5               	movwf	i1Lcd_Write_String@a
 13299     00C7  3098               	movlw	high (STR_10| (0+32768))
 13300     00C8  00F6               	movwf	i1Lcd_Write_String@a+1
 13301     00C9  319A  2208  3180   	fcall	i1_Lcd_Write_String
 13302     00CC                     i1l5201:
 13303                           
 13304                           ;main.c: 228:                     Lcd_Set_Cursor(2,5);
 13305     00CC  3005               	movlw	5
 13306     00CD  00F3               	movwf	i1Lcd_Set_Cursor@b
 13307     00CE  3002               	movlw	2
 13308     00CF  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13309                           
 13310                           ;main.c: 229:                     Lcd_Write_String("APROBADO");
 13311     00D2  305F               	movlw	low (STR_11| (0+32768))
 13312     00D3  00F5               	movwf	i1Lcd_Write_String@a
 13313     00D4  3098               	movlw	high (STR_11| (0+32768))
 13314     00D5  00F6               	movwf	i1Lcd_Write_String@a+1
 13315     00D6  319A  2208  3180   	fcall	i1_Lcd_Write_String
 13316     00D9                     i1l5203:
 13317                           
 13318                           ;main.c: 230:                     LATAbits.LATA2 = 0;
 13319     00D9  0022               	movlb	2	; select bank2
 13320     00DA  110C               	bcf	12,2	;volatile
 13321     00DB                     i1l5205:
 13322                           
 13323                           ;main.c: 231:                     LATCbits.LATC5 = 0;
 13324     00DB  128E               	bcf	14,5	;volatile
 13325     00DC                     i1l5207:
 13326                           
 13327                           ;main.c: 232:                     _delay((unsigned long)((15000)*(4000000/4000.0)));
 13328     00DC  304D               	movlw	77
 13329     00DD  00FB               	movwf	??_IOC+1
 13330     00DE  3019               	movlw	25
 13331     00DF  00FA               	movwf	??_IOC
 13332     00E0  3050               	movlw	80
 13333     00E1                     u668_27:
 13334     00E1  0B89               	decfsz	9,f
 13335     00E2  28E1               	goto	u668_27
 13336     00E3  0BFA               	decfsz	??_IOC,f
 13337     00E4  28E1               	goto	u668_27
 13338     00E5  0BFB               	decfsz	??_IOC+1,f
 13339     00E6  28E1               	goto	u668_27
 13340                           
 13341                           ;main.c: 233:                 }
 13342     00E7  2912               	goto	i1l5223
 13343     00E8                     i1l5209:
 13344                           
 13345                           ;main.c: 235:                 {;main.c: 236:                     Lcd_Set_Cursor(1,6);
 13346     00E8  3006               	movlw	6
 13347     00E9  00F3               	movwf	i1Lcd_Set_Cursor@b
 13348     00EA  3001               	movlw	1
 13349     00EB  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13350     00EE                     i1l5211:
 13351                           
 13352                           ;main.c: 237:                     Lcd_Write_String("ACCESO");
 13353     00EE  3078               	movlw	low (STR_10| (0+32768))
 13354     00EF  00F5               	movwf	i1Lcd_Write_String@a
 13355     00F0  3098               	movlw	high (STR_10| (0+32768))
 13356     00F1  00F6               	movwf	i1Lcd_Write_String@a+1
 13357     00F2  319A  2208  3180   	fcall	i1_Lcd_Write_String
 13358     00F5                     i1l5213:
 13359                           
 13360                           ;main.c: 238:                     Lcd_Set_Cursor(2,5);
 13361     00F5  3005               	movlw	5
 13362     00F6  00F3               	movwf	i1Lcd_Set_Cursor@b
 13363     00F7  3002               	movlw	2
 13364     00F8  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13365                           
 13366                           ;main.c: 239:                     Lcd_Write_String("DENEGADO");
 13367     00FB  3068               	movlw	low (STR_13| (0+32768))
 13368     00FC  00F5               	movwf	i1Lcd_Write_String@a
 13369     00FD  3098               	movlw	high (STR_13| (0+32768))
 13370     00FE  00F6               	movwf	i1Lcd_Write_String@a+1
 13371     00FF  319A  2208  3180   	fcall	i1_Lcd_Write_String
 13372     0102                     i1l5215:
 13373                           
 13374                           ;main.c: 240:                     LATAbits.LATA1 = 0;
 13375     0102  0022               	movlb	2	; select bank2
 13376     0103  108C               	bcf	12,1	;volatile
 13377     0104                     i1l5217:
 13378                           
 13379                           ;main.c: 241:                     LATCbits.LATC2 = 1;
 13380     0104  150E               	bsf	14,2	;volatile
 13381     0105                     i1l5219:
 13382                           
 13383                           ;main.c: 242:                     LATCbits.LATC5 = 1;
 13384     0105  168E               	bsf	14,5	;volatile
 13385     0106                     i1l5221:
 13386                           
 13387                           ;main.c: 243:                     _delay((unsigned long)((5000)*(4000000/4000.0)));
 13388     0106  301A               	movlw	26
 13389     0107  00FB               	movwf	??_IOC+1
 13390     0108  305E               	movlw	94
 13391     0109  00FA               	movwf	??_IOC
 13392     010A  306E               	movlw	110
 13393     010B                     u669_27:
 13394     010B  0B89               	decfsz	9,f
 13395     010C  290B               	goto	u669_27
 13396     010D  0BFA               	decfsz	??_IOC,f
 13397     010E  290B               	goto	u669_27
 13398     010F  0BFB               	decfsz	??_IOC+1,f
 13399     0110  290B               	goto	u669_27
 13400     0111  3200               	nop2
 13401     0112                     i1l5223:
 13402                           
 13403                           ;main.c: 245:                 cont_key = 0;
 13404     0112  0022               	movlb	2	; select bank2
 13405     0113  01B2               	clrf	_cont_key^(0+256)
 13406     0114  01B3               	clrf	(_cont_key+1)^(0+256)
 13407     0115                     i1l5225:
 13408                           
 13409                           ;main.c: 246:                 estado = 0;
 13410     0115  01B0               	clrf	_estado^(0+256)
 13411     0116  01B1               	clrf	(_estado+1)^(0+256)
 13412     0117                     i1l5227:
 13413                           
 13414                           ;main.c: 247:                 Lcd_Clear();
 13415     0117  3199  2172  3180   	fcall	i1_Lcd_Clear
 13416     011A                     i1l5229:
 13417                           
 13418                           ;main.c: 248:                 LATAbits.LATA2 = 1;
 13419     011A  0022               	movlb	2	; select bank2
 13420     011B  150C               	bsf	12,2	;volatile
 13421     011C                     i1l5231:
 13422                           
 13423                           ;main.c: 249:                 LATAbits.LATA1 = 1;
 13424     011C  148C               	bsf	12,1	;volatile
 13425     011D                     i1l5233:
 13426                           
 13427                           ;main.c: 250:                 LATCbits.LATC2 = 0;
 13428     011D  110E               	bcf	14,2	;volatile
 13429     011E                     i1l5235:
 13430                           
 13431                           ;main.c: 251:                 LATCbits.LATC5 = 1;
 13432     011E  168E               	bsf	14,5	;volatile
 13433     011F                     i1l5237:
 13434                           
 13435                           ;main.c: 254:                 LATBbits.LATB1 = 0;
 13436     011F  108D               	bcf	13,1	;volatile
 13437     0120                     i1l5239:
 13438                           
 13439                           ;main.c: 255:                 LATBbits.LATB2 = 0;
 13440     0120  110D               	bcf	13,2	;volatile
 13441     0121                     i1l5241:
 13442                           
 13443                           ;main.c: 256:                 LATBbits.LATB3 = 0;
 13444     0121  118D               	bcf	13,3	;volatile
 13445     0122                     i1l5243:
 13446                           
 13447                           ;main.c: 259:                 WPUB = 0b00001110;
 13448     0122  300E               	movlw	14
 13449     0123  0024               	movlb	4	; select bank4
 13450     0124  008D               	movwf	13	;volatile
 13451     0125                     i1l5245:
 13452                           
 13453                           ;main.c: 261:                 IOCBF = 0;
 13454     0125  0027               	movlb	7	; select bank7
 13455     0126  0196               	clrf	22	;volatile
 13456                           
 13457                           ;main.c: 262:                 break;
 13458     0127  2A2C               	goto	i1l5347
 13459     0128                     i1l5247:
 13460                           
 13461                           ;main.c: 264:                 Lcd_Set_Cursor(1,1);
 13462     0128  01F3               	clrf	i1Lcd_Set_Cursor@b
 13463     0129  0AF3               	incf	i1Lcd_Set_Cursor@b,f
 13464     012A  3001               	movlw	1
 13465     012B  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13466     012E                     i1l5249:
 13467                           
 13468                           ;main.c: 265:                 Lcd_Write_String("INGRESAR CLAVE");
 13469     012E  3013               	movlw	low ((STR_7+2)| (0+32768))
 13470     012F  00F5               	movwf	i1Lcd_Write_String@a
 13471     0130  3098               	movlw	high ((STR_7+2)| (0+32768))
 13472     0131  00F6               	movwf	i1Lcd_Write_String@a+1
 13473     0132  319A  2208  3180   	fcall	i1_Lcd_Write_String
 13474                           
 13475                           ;main.c: 267:                 while(cont_key < 4)
 13476     0135  2957               	goto	i1l5263
 13477     0136                     i1l5251:
 13478                           
 13479                           ;main.c: 268:                 {;main.c: 269:                     tecla = Keypad_Get_Char
      +                          ();
 13480     0136  3191  2165  3180   	fcall	_Keypad_Get_Char
 13481     0139  00FD               	movwf	_tecla
 13482     013A                     i1l5253:
 13483                           
 13484                           ;main.c: 270:                     if(tecla != 0)
 13485     013A  087D               	movf	_tecla,w
 13486     013B  1903               	btfsc	3,2
 13487     013C  293E               	goto	u652_21
 13488     013D  293F               	goto	u652_20
 13489     013E                     u652_21:
 13490     013E  2957               	goto	i1l5263
 13491     013F                     u652_20:
 13492     013F                     i1l5255:
 13493                           
 13494                           ;main.c: 271:                     {;main.c: 272:                         clave[cont_key]
      +                           = tecla;
 13495     013F  0022               	movlb	2	; select bank2
 13496     0140  0832               	movf	_cont_key^(0+256),w
 13497     0141  3E38               	addlw	(low (_clave| (0+256)))& (0+255)
 13498     0142  0086               	movwf	6
 13499     0143  3001               	movlw	1	; select bank2/3
 13500     0144  0087               	movwf	7
 13501     0145  087D               	movf	_tecla,w
 13502     0146  0081               	movwf	1
 13503     0147                     i1l5257:
 13504                           
 13505                           ;main.c: 273:                         Lcd_Set_Cursor(2,7+cont_key);
 13506     0147  0832               	movf	_cont_key^(0+256),w
 13507     0148  3E07               	addlw	7
 13508     0149  00F3               	movwf	i1Lcd_Set_Cursor@b
 13509     014A  3002               	movlw	2
 13510     014B  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13511     014E                     i1l5259:
 13512                           
 13513                           ;main.c: 274:                         Lcd_Write_Char('*');
 13514     014E  302A               	movlw	42
 13515     014F  319B  230E  3180   	fcall	i1_Lcd_Write_Char
 13516     0152                     i1l5261:
 13517                           
 13518                           ;main.c: 275:                         cont_key++;
 13519     0152  3001               	movlw	1
 13520     0153  0022               	movlb	2	; select bank2
 13521     0154  07B2               	addwf	_cont_key^(0+256),f
 13522     0155  3000               	movlw	0
 13523     0156  3DB3               	addwfc	(_cont_key+1)^(0+256),f
 13524     0157                     i1l5263:
 13525                           
 13526                           ;main.c: 267:                 while(cont_key < 4)
 13527     0157  0022               	movlb	2	; select bank2
 13528     0158  0833               	movf	(_cont_key+1)^(0+256),w
 13529     0159  3A80               	xorlw	128
 13530     015A  00FA               	movwf	??_IOC
 13531     015B  3080               	movlw	128
 13532     015C  027A               	subwf	??_IOC,w
 13533     015D  1D03               	skipz
 13534     015E  2961               	goto	u653_25
 13535     015F  3004               	movlw	4
 13536     0160  0232               	subwf	_cont_key^(0+256),w
 13537     0161                     u653_25:
 13538     0161  1C03               	skipc
 13539     0162  2964               	goto	u653_21
 13540     0163  2965               	goto	u653_20
 13541     0164                     u653_21:
 13542     0164  2936               	goto	i1l5251
 13543     0165                     u653_20:
 13544     0165                     i1l5265:
 13545                           
 13546                           ;main.c: 278:                 _delay((unsigned long)((200)*(4000000/4000.0)));
 13547     0165  3002               	movlw	2
 13548     0166  00FB               	movwf	??_IOC+1
 13549     0167  3004               	movlw	4
 13550     0168  00FA               	movwf	??_IOC
 13551     0169  30BA               	movlw	186
 13552     016A                     u670_27:
 13553     016A  0B89               	decfsz	9,f
 13554     016B  296A               	goto	u670_27
 13555     016C  0BFA               	decfsz	??_IOC,f
 13556     016D  296A               	goto	u670_27
 13557     016E  0BFB               	decfsz	??_IOC+1,f
 13558     016F  296A               	goto	u670_27
 13559     0170  3200               	nop2
 13560                           
 13561                           ;main.c: 279:                 WPUB = 0b11111110;
 13562     0171  30FE               	movlw	254
 13563     0172  0024               	movlb	4	; select bank4
 13564     0173  008D               	movwf	13	;volatile
 13565     0174                     i1l5267:
 13566                           
 13567                           ;main.c: 280:                 Lcd_Clear();
 13568     0174  3199  2172  3180   	fcall	i1_Lcd_Clear
 13569     0177                     i1l5269:
 13570                           
 13571                           ;main.c: 282:                 if(!strcmp(clave, clave_enter))
 13572     0177  305E               	movlw	(low (_clave_enter| (0+256)))& (0+255)
 13573     0178  00F0               	movwf	strcmp@r
 13574     0179  3038               	movlw	(low (_clave| (0+256)))& (0+255)
 13575     017A  319B  23B3  3180   	fcall	_strcmp
 13576     017D  0870               	movf	?_strcmp,w
 13577     017E  0471               	iorwf	?_strcmp+1,w
 13578     017F  1D03               	btfss	3,2
 13579     0180  2982               	goto	u654_21
 13580     0181  2983               	goto	u654_20
 13581     0182                     u654_21:
 13582     0182  29F4               	goto	i1l5307
 13583     0183                     u654_20:
 13584     0183                     i1l5271:
 13585                           
 13586                           ;main.c: 283:                 {;main.c: 284:                     Lcd_Set_Cursor(1,1);
 13587     0183  01F3               	clrf	i1Lcd_Set_Cursor@b
 13588     0184  0AF3               	incf	i1Lcd_Set_Cursor@b,f
 13589     0185  3001               	movlw	1
 13590     0186  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13591     0189                     i1l5273:
 13592                           
 13593                           ;main.c: 285:                     Lcd_Write_String("CAMBIAR CLAVE");
 13594     0189  3024               	movlw	low ((STR_8+2)| (0+32768))
 13595     018A  00F5               	movwf	i1Lcd_Write_String@a
 13596     018B  3098               	movlw	high ((STR_8+2)| (0+32768))
 13597     018C  00F6               	movwf	i1Lcd_Write_String@a+1
 13598     018D  319A  2208  3180   	fcall	i1_Lcd_Write_String
 13599     0190                     i1l5275:
 13600                           
 13601                           ;main.c: 286:                     cont_key = 0;
 13602     0190  0022               	movlb	2	; select bank2
 13603     0191  01B2               	clrf	_cont_key^(0+256)
 13604     0192  01B3               	clrf	(_cont_key+1)^(0+256)
 13605     0193                     i1l5277:
 13606                           
 13607                           ;main.c: 288:                     WPUB = 0b00001110;
 13608     0193  300E               	movlw	14
 13609     0194  0024               	movlb	4	; select bank4
 13610     0195  008D               	movwf	13	;volatile
 13611                           
 13612                           ;main.c: 290:                     while(cont_key < 4) {
 13613     0196  29B8               	goto	i1l5291
 13614     0197                     i1l5279:
 13615                           
 13616                           ;main.c: 291:                         tecla = Keypad_Get_Char();
 13617     0197  3191  2165  3180   	fcall	_Keypad_Get_Char
 13618     019A  00FD               	movwf	_tecla
 13619     019B                     i1l5281:
 13620                           
 13621                           ;main.c: 292:                         if (tecla != 0) {
 13622     019B  087D               	movf	_tecla,w
 13623     019C  1903               	btfsc	3,2
 13624     019D  299F               	goto	u655_21
 13625     019E  29A0               	goto	u655_20
 13626     019F                     u655_21:
 13627     019F  29B8               	goto	i1l5291
 13628     01A0                     u655_20:
 13629     01A0                     i1l5283:
 13630                           
 13631                           ;main.c: 293:                             clave_enter[cont_key] = tecla;
 13632     01A0  0022               	movlb	2	; select bank2
 13633     01A1  0832               	movf	_cont_key^(0+256),w
 13634     01A2  3E5E               	addlw	(low (_clave_enter| (0+256)))& (0+255)
 13635     01A3  0086               	movwf	6
 13636     01A4  3001               	movlw	1	; select bank2/3
 13637     01A5  0087               	movwf	7
 13638     01A6  087D               	movf	_tecla,w
 13639     01A7  0081               	movwf	1
 13640     01A8                     i1l5285:
 13641                           
 13642                           ;main.c: 294:                             Lcd_Set_Cursor(2,7+cont_key);
 13643     01A8  0832               	movf	_cont_key^(0+256),w
 13644     01A9  3E07               	addlw	7
 13645     01AA  00F3               	movwf	i1Lcd_Set_Cursor@b
 13646     01AB  3002               	movlw	2
 13647     01AC  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13648     01AF                     i1l5287:
 13649                           
 13650                           ;main.c: 295:                             Lcd_Write_Char('*');
 13651     01AF  302A               	movlw	42
 13652     01B0  319B  230E  3180   	fcall	i1_Lcd_Write_Char
 13653     01B3                     i1l5289:
 13654                           
 13655                           ;main.c: 296:                             cont_key++;
 13656     01B3  3001               	movlw	1
 13657     01B4  0022               	movlb	2	; select bank2
 13658     01B5  07B2               	addwf	_cont_key^(0+256),f
 13659     01B6  3000               	movlw	0
 13660     01B7  3DB3               	addwfc	(_cont_key+1)^(0+256),f
 13661     01B8                     i1l5291:
 13662                           
 13663                           ;main.c: 290:                     while(cont_key < 4) {
 13664     01B8  0022               	movlb	2	; select bank2
 13665     01B9  0833               	movf	(_cont_key+1)^(0+256),w
 13666     01BA  3A80               	xorlw	128
 13667     01BB  00FA               	movwf	??_IOC
 13668     01BC  3080               	movlw	128
 13669     01BD  027A               	subwf	??_IOC,w
 13670     01BE  1D03               	skipz
 13671     01BF  29C2               	goto	u656_25
 13672     01C0  3004               	movlw	4
 13673     01C1  0232               	subwf	_cont_key^(0+256),w
 13674     01C2                     u656_25:
 13675     01C2  1C03               	skipc
 13676     01C3  29C5               	goto	u656_21
 13677     01C4  29C6               	goto	u656_20
 13678     01C5                     u656_21:
 13679     01C5  2997               	goto	i1l5279
 13680     01C6                     u656_20:
 13681     01C6                     i1l5293:
 13682                           
 13683                           ;main.c: 299:                     _delay((unsigned long)((200)*(4000000/4000.0)));
 13684     01C6  3002               	movlw	2
 13685     01C7  00FB               	movwf	??_IOC+1
 13686     01C8  3004               	movlw	4
 13687     01C9  00FA               	movwf	??_IOC
 13688     01CA  30BA               	movlw	186
 13689     01CB                     u671_27:
 13690     01CB  0B89               	decfsz	9,f
 13691     01CC  29CB               	goto	u671_27
 13692     01CD  0BFA               	decfsz	??_IOC,f
 13693     01CE  29CB               	goto	u671_27
 13694     01CF  0BFB               	decfsz	??_IOC+1,f
 13695     01D0  29CB               	goto	u671_27
 13696     01D1  3200               	nop2
 13697                           
 13698                           ;main.c: 300:                     WPUB = 0b11111110;
 13699     01D2  30FE               	movlw	254
 13700     01D3  0024               	movlb	4	; select bank4
 13701     01D4  008D               	movwf	13	;volatile
 13702     01D5                     i1l5295:
 13703                           
 13704                           ;main.c: 301:                     Lcd_Clear();
 13705     01D5  3199  2172  3180   	fcall	i1_Lcd_Clear
 13706     01D8                     i1l5297:
 13707                           
 13708                           ;main.c: 303:                     Lcd_Set_Cursor(1,1);
 13709     01D8  01F3               	clrf	i1Lcd_Set_Cursor@b
 13710     01D9  0AF3               	incf	i1Lcd_Set_Cursor@b,f
 13711     01DA  3001               	movlw	1
 13712     01DB  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13713     01DE                     i1l5299:
 13714                           
 13715                           ;main.c: 304:                     Lcd_Write_String("CLAVE CAMBIADA");
 13716     01DE  3041               	movlw	low (STR_16| (0+32768))
 13717     01DF  00F5               	movwf	i1Lcd_Write_String@a
 13718     01E0  3098               	movlw	high (STR_16| (0+32768))
 13719     01E1  00F6               	movwf	i1Lcd_Write_String@a+1
 13720     01E2  319A  2208  3180   	fcall	i1_Lcd_Write_String
 13721     01E5                     i1l5301:
 13722                           
 13723                           ;main.c: 305:                     LATAbits.LATA2 = 0;
 13724     01E5  0022               	movlb	2	; select bank2
 13725     01E6  110C               	bcf	12,2	;volatile
 13726     01E7                     i1l5303:
 13727                           
 13728                           ;main.c: 306:                     LATAbits.LATA3 = 1;
 13729     01E7  158C               	bsf	12,3	;volatile
 13730     01E8                     i1l5305:
 13731                           
 13732                           ;main.c: 307:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
 13733     01E8  3010               	movlw	16
 13734     01E9  00FB               	movwf	??_IOC+1
 13735     01EA  3039               	movlw	57
 13736     01EB  00FA               	movwf	??_IOC
 13737     01EC  300E               	movlw	14
 13738     01ED                     u672_27:
 13739     01ED  0B89               	decfsz	9,f
 13740     01EE  29ED               	goto	u672_27
 13741     01EF  0BFA               	decfsz	??_IOC,f
 13742     01F0  29ED               	goto	u672_27
 13743     01F1  0BFB               	decfsz	??_IOC+1,f
 13744     01F2  29ED               	goto	u672_27
 13745                           
 13746                           ;main.c: 308:                 } else {
 13747     01F3  2A06               	goto	i1l5319
 13748     01F4                     i1l5307:
 13749                           
 13750                           ;main.c: 309:                     Lcd_Set_Cursor(1,1);
 13751     01F4  01F3               	clrf	i1Lcd_Set_Cursor@b
 13752     01F5  0AF3               	incf	i1Lcd_Set_Cursor@b,f
 13753     01F6  3001               	movlw	1
 13754     01F7  319E  2692  3180   	fcall	i1_Lcd_Set_Cursor
 13755     01FA                     i1l5309:
 13756                           
 13757                           ;main.c: 310:                     Lcd_Write_String("CLAVE INCORRECTA");
 13758     01FA  3000               	movlw	low (STR_17| (0+32768))
 13759     01FB  00F5               	movwf	i1Lcd_Write_String@a
 13760     01FC  3098               	movlw	high (STR_17| (0+32768))
 13761     01FD  00F6               	movwf	i1Lcd_Write_String@a+1
 13762     01FE  319A  2208  3180   	fcall	i1_Lcd_Write_String
 13763     0201                     i1l5311:
 13764                           
 13765                           ;main.c: 311:                     LATCbits.LATC2 = 1;
 13766     0201  0022               	movlb	2	; select bank2
 13767     0202  150E               	bsf	14,2	;volatile
 13768     0203                     i1l5313:
 13769                           
 13770                           ;main.c: 312:                     LATAbits.LATA1 = 0;
 13771     0203  108C               	bcf	12,1	;volatile
 13772     0204                     i1l5315:
 13773                           
 13774                           ;main.c: 313:                     LATAbits.LATA3 = 1;
 13775     0204  158C               	bsf	12,3	;volatile
 13776     0205  29E8               	goto	i1l5305
 13777     0206                     i1l5319:
 13778                           
 13779                           ;main.c: 316:                 cont_key = 0;
 13780     0206  0022               	movlb	2	; select bank2
 13781     0207  01B2               	clrf	_cont_key^(0+256)
 13782     0208  01B3               	clrf	(_cont_key+1)^(0+256)
 13783     0209                     i1l5321:
 13784                           
 13785                           ;main.c: 317:                 estado = 0;
 13786     0209  01B0               	clrf	_estado^(0+256)
 13787     020A  01B1               	clrf	(_estado+1)^(0+256)
 13788     020B                     i1l5323:
 13789                           
 13790                           ;main.c: 318:                 Lcd_Clear();
 13791     020B  3199  2172  3180   	fcall	i1_Lcd_Clear
 13792     020E                     i1l5325:
 13793                           
 13794                           ;main.c: 320:                 LATBbits.LATB1 = 0;
 13795     020E  0022               	movlb	2	; select bank2
 13796     020F  108D               	bcf	13,1	;volatile
 13797     0210                     i1l5327:
 13798                           
 13799                           ;main.c: 321:                 LATBbits.LATB2 = 0;
 13800     0210  110D               	bcf	13,2	;volatile
 13801     0211                     i1l5329:
 13802                           
 13803                           ;main.c: 322:                 LATBbits.LATB3 = 0;
 13804     0211  118D               	bcf	13,3	;volatile
 13805     0212                     i1l5331:
 13806                           
 13807                           ;main.c: 324:                 WPUB = 0b00001110;
 13808     0212  300E               	movlw	14
 13809     0213  0024               	movlb	4	; select bank4
 13810     0214  008D               	movwf	13	;volatile
 13811     0215                     i1l5333:
 13812                           
 13813                           ;main.c: 325:                 LATAbits.LATA3 = 1;
 13814     0215  0022               	movlb	2	; select bank2
 13815     0216  158C               	bsf	12,3	;volatile
 13816     0217                     i1l5335:
 13817                           
 13818                           ;main.c: 326:                 LATAbits.LATA1 = 1;
 13819     0217  148C               	bsf	12,1	;volatile
 13820     0218                     i1l5337:
 13821                           
 13822                           ;main.c: 327:                 LATAbits.LATA2 = 1;
 13823     0218  150C               	bsf	12,2	;volatile
 13824     0219                     i1l5339:
 13825                           
 13826                           ;main.c: 328:                 LATCbits.LATC2 = 0;
 13827     0219  110E               	bcf	14,2	;volatile
 13828     021A  2925               	goto	i1l5245
 13829     021B                     i1l5345:
 13830                           
 13831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13832                           ; Switch size 1, requested type "simple"
 13833                           ; Number of cases is 1, Range of values is 0 to 0
 13834                           ; switch strategies available:
 13835                           ; Name         Instructions Cycles
 13836                           ; simple_byte            4     3 (average)
 13837                           ; direct_byte            8     6 (fixed)
 13838                           ; jumptable            260     6 (fixed)
 13839                           ;	Chosen strategy is simple_byte
 13840     021B  0022               	movlb	2	; select bank2
 13841     021C  0831               	movf	(_estado+1)^(0+256),w
 13842     021D  3A00               	xorlw	0	; case 0
 13843     021E  1903               	skipnz
 13844     021F  2A21               	goto	i1l5543
 13845     0220  2A2C               	goto	i1l5347
 13846     0221                     i1l5543:
 13847                           
 13848                           ; Switch size 1, requested type "simple"
 13849                           ; Number of cases is 3, Range of values is 0 to 2
 13850                           ; switch strategies available:
 13851                           ; Name         Instructions Cycles
 13852                           ; simple_byte           10     6 (average)
 13853                           ; direct_byte           12     6 (fixed)
 13854                           ; jumptable            260     6 (fixed)
 13855                           ;	Chosen strategy is simple_byte
 13856     0221  0830               	movf	_estado^(0+256),w
 13857     0222  3A00               	xorlw	0	; case 0
 13858     0223  1903               	skipnz
 13859     0224  281A               	goto	i1l5147
 13860     0225  3A01               	xorlw	1	; case 1
 13861     0226  1903               	skipnz
 13862     0227  2862               	goto	i1l5171
 13863     0228  3A03               	xorlw	3	; case 2
 13864     0229  1903               	skipnz
 13865     022A  2928               	goto	i1l5247
 13866     022B  2A2C               	goto	i1l5347
 13867     022C                     i1l5347:
 13868                           
 13869                           ;main.c: 177:     while(IOCBF != 0) {
 13870     022C  0027               	movlb	7	; select bank7
 13871     022D  0816               	movf	22,w	;volatile
 13872     022E  1D03               	btfss	3,2
 13873     022F  2A31               	goto	u657_21
 13874     0230  2A32               	goto	u657_20
 13875     0231                     u657_21:
 13876     0231  2A1B               	goto	i1l5345
 13877     0232                     u657_20:
 13878     0232                     i1l286:
 13879                           
 13880                           ;main.c: 334:     LATAbits.LATA3 = 1;
 13881     0232  0022               	movlb	2	; select bank2
 13882     0233  158C               	bsf	12,3	;volatile
 13883                           
 13884                           ;main.c: 335:     INTCONbits.IOCIF = 0;
 13885     0234  100B               	bcf	11,0	;volatile
 13886     0235                     i1l287:
 13887     0235  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13888     0236  0009               	retfie
 13889     0237                     __end_of_IOC:
 13890                           
 13891                           	psect	text42
 13892     1A08                     __ptext42:	
 13893 ;; *************** function i1_Lcd_Write_String *****************
 13894 ;; Defined at:
 13895 ;;		line 104 in file "lcd.c"
 13896 ;; Parameters:    Size  Location     Type
 13897 ;;  a               2    5[COMMON] PTR const unsigned char 
 13898 ;;		 -> STR_17(17), STR_16(15), STR_15(14), STR_14(15), 
 13899 ;;		 -> STR_13(9), STR_12(7), STR_11(9), STR_10(7), 
 13900 ;;		 -> STR_9(15), STR_8(16), STR_7(17), STR_6(2), 
 13901 ;;		 -> STR_4(2), buffer(20), STR_1(15), 
 13902 ;; Auto vars:     Size  Location     Type
 13903 ;;  i               2    8[COMMON] int 
 13904 ;; Return value:  Size  Location     Type
 13905 ;;                  1    wreg      void 
 13906 ;; Registers used:
 13907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13908 ;; Tracked objects:
 13909 ;;		On entry : 0/0
 13910 ;;		On exit  : 0/0
 13911 ;;		Unchanged: 0/0
 13912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13913 ;;      Params:         2       0       0       0       0       0       0       0
 13914 ;;      Locals:         2       0       0       0       0       0       0       0
 13915 ;;      Temps:          1       0       0       0       0       0       0       0
 13916 ;;      Totals:         5       0       0       0       0       0       0       0
 13917 ;;Total ram usage:        5 bytes
 13918 ;; Hardware stack levels used: 1
 13919 ;; Hardware stack levels required when called: 2
 13920 ;; This function calls:
 13921 ;;		i1_Lcd_Write_Char
 13922 ;; This function is called by:
 13923 ;;		_IOC
 13924 ;; This function uses a non-reentrant model
 13925 ;;
 13926                           
 13927     1A08                     i1_Lcd_Write_String:	
 13928                           ;psect for function i1_Lcd_Write_String
 13929                           
 13930     1A08                     i1l4981:	
 13931                           ;incstack = 0
 13932                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13933                           
 13934                           
 13935                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
 13936     1A08  01F8               	clrf	i1Lcd_Write_String@i
 13937     1A09  01F9               	clrf	i1Lcd_Write_String@i+1
 13938     1A0A  2A19               	goto	i1l4987
 13939     1A0B                     i1l4983:
 13940                           
 13941                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
 13942     1A0B  0875               	movf	i1Lcd_Write_String@a,w
 13943     1A0C  0778               	addwf	i1Lcd_Write_String@i,w
 13944     1A0D  0084               	movwf	4
 13945     1A0E  0876               	movf	i1Lcd_Write_String@a+1,w
 13946     1A0F  3D79               	addwfc	i1Lcd_Write_String@i+1,w
 13947     1A10  0085               	movwf	5
 13948     1A11  0800               	movf	0,w	;code access
 13949     1A12  319B  230E  319A   	fcall	i1_Lcd_Write_Char
 13950     1A15                     i1l4985:
 13951     1A15  3001               	movlw	1
 13952     1A16  07F8               	addwf	i1Lcd_Write_String@i,f
 13953     1A17  3000               	movlw	0
 13954     1A18  3DF9               	addwfc	i1Lcd_Write_String@i+1,f
 13955     1A19                     i1l4987:
 13956     1A19  0875               	movf	i1Lcd_Write_String@a,w
 13957     1A1A  0778               	addwf	i1Lcd_Write_String@i,w
 13958     1A1B  0084               	movwf	4
 13959     1A1C  0876               	movf	i1Lcd_Write_String@a+1,w
 13960     1A1D  3D79               	addwfc	i1Lcd_Write_String@i+1,w
 13961     1A1E  0085               	movwf	5
 13962     1A1F  0012               	moviw fsr0++
 13963     1A20  1D03               	btfss	3,2
 13964     1A21  2A23               	goto	u626_21
 13965     1A22  2A24               	goto	u626_20
 13966     1A23                     u626_21:
 13967     1A23  2A0B               	goto	i1l4983
 13968     1A24                     u626_20:
 13969     1A24                     i1l404:
 13970     1A24  0008               	return
 13971     1A25                     __end_ofi1_Lcd_Write_String:
 13972                           
 13973                           	psect	text43
 13974     1B0E                     __ptext43:	
 13975 ;; *************** function i1_Lcd_Write_Char *****************
 13976 ;; Defined at:
 13977 ;;		line 88 in file "lcd.c"
 13978 ;; Parameters:    Size  Location     Type
 13979 ;;  a               1    wreg     unsigned char 
 13980 ;; Auto vars:     Size  Location     Type
 13981 ;;  a               1    4[COMMON] unsigned char 
 13982 ;;  y               1    3[COMMON] unsigned char 
 13983 ;;  temp            1    2[COMMON] unsigned char 
 13984 ;; Return value:  Size  Location     Type
 13985 ;;                  1    wreg      void 
 13986 ;; Registers used:
 13987 ;;		wreg, status,2, status,0, pclath, cstack
 13988 ;; Tracked objects:
 13989 ;;		On entry : 0/0
 13990 ;;		On exit  : 0/0
 13991 ;;		Unchanged: 0/0
 13992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13993 ;;      Params:         0       0       0       0       0       0       0       0
 13994 ;;      Locals:         3       0       0       0       0       0       0       0
 13995 ;;      Temps:          1       0       0       0       0       0       0       0
 13996 ;;      Totals:         4       0       0       0       0       0       0       0
 13997 ;;Total ram usage:        4 bytes
 13998 ;; Hardware stack levels used: 1
 13999 ;; Hardware stack levels required when called: 1
 14000 ;; This function calls:
 14001 ;;		i1_Lcd_Port
 14002 ;; This function is called by:
 14003 ;;		_IOC
 14004 ;;		i1_Lcd_Write_String
 14005 ;; This function uses a non-reentrant model
 14006 ;;
 14007                           
 14008     1B0E                     i1_Lcd_Write_Char:	
 14009                           ;psect for function i1_Lcd_Write_Char
 14010                           
 14011                           
 14012                           ;incstack = 0
 14013                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 14014                           ;i1Lcd_Write_Char@a stored from wreg
 14015     1B0E  00F4               	movwf	i1Lcd_Write_Char@a
 14016     1B0F                     i1l4693:
 14017                           
 14018                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
 14019     1B0F  0874               	movf	i1Lcd_Write_Char@a,w
 14020     1B10  390F               	andlw	15
 14021     1B11  00F2               	movwf	i1Lcd_Write_Char@temp
 14022                           
 14023                           ;lcd.c: 92:     y = a&0xF0;
 14024     1B12  0874               	movf	i1Lcd_Write_Char@a,w
 14025     1B13  39F0               	andlw	240
 14026     1B14  00F3               	movwf	i1Lcd_Write_Char@y
 14027     1B15                     i1l4695:
 14028                           
 14029                           ;lcd.c: 93:     LATCbits.LATC1 = 1;
 14030     1B15  0022               	movlb	2	; select bank2
 14031     1B16  148E               	bsf	14,1	;volatile
 14032     1B17                     i1l4697:
 14033                           
 14034                           ;lcd.c: 94:     Lcd_Port(y>>4);
 14035     1B17  0873               	movf	i1Lcd_Write_Char@y,w
 14036     1B18  00F1               	movwf	??i1_Lcd_Write_Char
 14037     1B19  3004               	movlw	4
 14038     1B1A                     u568_25:
 14039     1B1A  36F1               	lsrf	??i1_Lcd_Write_Char,f
 14040     1B1B  0B89               	decfsz	9,f
 14041     1B1C  2B1A               	goto	u568_25
 14042     1B1D  0871               	movf	??i1_Lcd_Write_Char,w
 14043     1B1E  319A  2244  319B   	fcall	i1_Lcd_Port
 14044     1B21                     i1l4699:
 14045                           
 14046                           ;lcd.c: 95:     LATCbits.LATC0 = 1;
 14047     1B21  0022               	movlb	2	; select bank2
 14048     1B22  140E               	bsf	14,0	;volatile
 14049     1B23                     i1l4701:
 14050                           
 14051                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 14052     1B23  300D               	movlw	13
 14053     1B24                     u673_27:
 14054     1B24  0B89               	decfsz	9,f
 14055     1B25  2B24               	goto	u673_27
 14056     1B26  0000               	nop
 14057     1B27                     i1l4703:
 14058                           
 14059                           ;lcd.c: 97:     LATCbits.LATC0 = 0;
 14060     1B27  0022               	movlb	2	; select bank2
 14061     1B28  100E               	bcf	14,0	;volatile
 14062     1B29                     i1l4705:
 14063                           
 14064                           ;lcd.c: 98:     Lcd_Port(temp);
 14065     1B29  0872               	movf	i1Lcd_Write_Char@temp,w
 14066     1B2A  319A  2244  319B   	fcall	i1_Lcd_Port
 14067     1B2D                     i1l4707:
 14068                           
 14069                           ;lcd.c: 99:     LATCbits.LATC0 = 1;
 14070     1B2D  0022               	movlb	2	; select bank2
 14071     1B2E  140E               	bsf	14,0	;volatile
 14072     1B2F                     i1l4709:
 14073                           
 14074                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 14075     1B2F  300D               	movlw	13
 14076     1B30                     u674_27:
 14077     1B30  0B89               	decfsz	9,f
 14078     1B31  2B30               	goto	u674_27
 14079     1B32  0000               	nop
 14080     1B33                     i1l4711:
 14081                           
 14082                           ;lcd.c: 101:     LATCbits.LATC0 = 0;
 14083     1B33  0022               	movlb	2	; select bank2
 14084     1B34  100E               	bcf	14,0	;volatile
 14085     1B35                     i1l398:
 14086     1B35  0008               	return
 14087     1B36                     __end_ofi1_Lcd_Write_Char:
 14088                           
 14089                           	psect	text44
 14090     1E92                     __ptext44:	
 14091 ;; *************** function i1_Lcd_Set_Cursor *****************
 14092 ;; Defined at:
 14093 ;;		line 26 in file "lcd.c"
 14094 ;; Parameters:    Size  Location     Type
 14095 ;;  a               1    wreg     unsigned char 
 14096 ;;  b               1    3[COMMON] unsigned char 
 14097 ;; Auto vars:     Size  Location     Type
 14098 ;;  a               1    5[COMMON] unsigned char 
 14099 ;;  temp            1    8[COMMON] unsigned char 
 14100 ;;  y               1    7[COMMON] unsigned char 
 14101 ;;  z               1    6[COMMON] unsigned char 
 14102 ;; Return value:  Size  Location     Type
 14103 ;;                  1    wreg      void 
 14104 ;; Registers used:
 14105 ;;		wreg, status,2, status,0, pclath, cstack
 14106 ;; Tracked objects:
 14107 ;;		On entry : 0/0
 14108 ;;		On exit  : 0/0
 14109 ;;		Unchanged: 0/0
 14110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14111 ;;      Params:         1       0       0       0       0       0       0       0
 14112 ;;      Locals:         4       0       0       0       0       0       0       0
 14113 ;;      Temps:          1       0       0       0       0       0       0       0
 14114 ;;      Totals:         6       0       0       0       0       0       0       0
 14115 ;;Total ram usage:        6 bytes
 14116 ;; Hardware stack levels used: 1
 14117 ;; Hardware stack levels required when called: 2
 14118 ;; This function calls:
 14119 ;;		i1_Lcd_Cmd
 14120 ;; This function is called by:
 14121 ;;		_IOC
 14122 ;; This function uses a non-reentrant model
 14123 ;;
 14124                           
 14125     1E92                     i1_Lcd_Set_Cursor:	
 14126                           ;psect for function i1_Lcd_Set_Cursor
 14127                           
 14128                           
 14129                           ;incstack = 0
 14130                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 14131                           ;i1Lcd_Set_Cursor@a stored from wreg
 14132     1E92  00F5               	movwf	i1Lcd_Set_Cursor@a
 14133     1E93                     i1l4941:
 14134                           
 14135                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
 14136     1E93  0375               	decf	i1Lcd_Set_Cursor@a,w
 14137     1E94  1D03               	btfss	3,2
 14138     1E95  2E97               	goto	u618_21
 14139     1E96  2E98               	goto	u618_20
 14140     1E97                     u618_21:
 14141     1E97  2EAF               	goto	i1l4951
 14142     1E98                     u618_20:
 14143     1E98                     i1l4943:
 14144                           
 14145                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
 14146     1E98  0873               	movf	i1Lcd_Set_Cursor@b,w
 14147     1E99  3E7F               	addlw	127
 14148     1E9A  00F8               	movwf	i1Lcd_Set_Cursor@temp
 14149                           
 14150                           ;lcd.c: 32:         z = temp>>4;
 14151     1E9B  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14152     1E9C  00F4               	movwf	??i1_Lcd_Set_Cursor
 14153     1E9D  3004               	movlw	4
 14154     1E9E                     u619_25:
 14155     1E9E  36F4               	lsrf	??i1_Lcd_Set_Cursor,f
 14156     1E9F  0B89               	decfsz	9,f
 14157     1EA0  2E9E               	goto	u619_25
 14158     1EA1  0874               	movf	??i1_Lcd_Set_Cursor,w
 14159     1EA2  00F6               	movwf	i1Lcd_Set_Cursor@z
 14160     1EA3                     i1l4945:
 14161                           
 14162                           ;lcd.c: 33:         y = temp & 0x0F;
 14163     1EA3  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14164     1EA4  390F               	andlw	15
 14165     1EA5  00F7               	movwf	i1Lcd_Set_Cursor@y
 14166     1EA6                     i1l4947:
 14167                           
 14168                           ;lcd.c: 34:         Lcd_Cmd(z);
 14169     1EA6  0876               	movf	i1Lcd_Set_Cursor@z,w
 14170     1EA7  3199  21AB  319E   	fcall	i1_Lcd_Cmd
 14171     1EAA                     i1l4949:
 14172                           
 14173                           ;lcd.c: 35:         Lcd_Cmd(y);
 14174     1EAA  0877               	movf	i1Lcd_Set_Cursor@y,w
 14175     1EAB  3199  21AB  319E   	fcall	i1_Lcd_Cmd
 14176                           
 14177                           ;lcd.c: 36:     }
 14178     1EAE  2F06               	goto	i1l392
 14179     1EAF                     i1l4951:
 14180     1EAF  3002               	movlw	2
 14181     1EB0  0675               	xorwf	i1Lcd_Set_Cursor@a,w
 14182     1EB1  1D03               	btfss	3,2
 14183     1EB2  2EB4               	goto	u620_21
 14184     1EB3  2EB5               	goto	u620_20
 14185     1EB4                     u620_21:
 14186     1EB4  2ECC               	goto	i1l4961
 14187     1EB5                     u620_20:
 14188     1EB5                     i1l4953:
 14189                           
 14190                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
 14191     1EB5  0873               	movf	i1Lcd_Set_Cursor@b,w
 14192     1EB6  3EBF               	addlw	191
 14193     1EB7  00F8               	movwf	i1Lcd_Set_Cursor@temp
 14194                           
 14195                           ;lcd.c: 40:         z = temp>>4;
 14196     1EB8  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14197     1EB9  00F4               	movwf	??i1_Lcd_Set_Cursor
 14198     1EBA  3004               	movlw	4
 14199     1EBB                     u621_25:
 14200     1EBB  36F4               	lsrf	??i1_Lcd_Set_Cursor,f
 14201     1EBC  0B89               	decfsz	9,f
 14202     1EBD  2EBB               	goto	u621_25
 14203     1EBE  0874               	movf	??i1_Lcd_Set_Cursor,w
 14204     1EBF  00F6               	movwf	i1Lcd_Set_Cursor@z
 14205     1EC0                     i1l4955:
 14206                           
 14207                           ;lcd.c: 41:         y = temp & 0x0F;
 14208     1EC0  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14209     1EC1  390F               	andlw	15
 14210     1EC2  00F7               	movwf	i1Lcd_Set_Cursor@y
 14211     1EC3                     i1l4957:
 14212                           
 14213                           ;lcd.c: 42:         Lcd_Cmd(z);
 14214     1EC3  0876               	movf	i1Lcd_Set_Cursor@z,w
 14215     1EC4  3199  21AB  319E   	fcall	i1_Lcd_Cmd
 14216     1EC7                     i1l4959:
 14217                           
 14218                           ;lcd.c: 43:         Lcd_Cmd(y);
 14219     1EC7  0877               	movf	i1Lcd_Set_Cursor@y,w
 14220     1EC8  3199  21AB  319E   	fcall	i1_Lcd_Cmd
 14221                           
 14222                           ;lcd.c: 44:     }
 14223     1ECB  2F06               	goto	i1l392
 14224     1ECC                     i1l4961:
 14225     1ECC  3003               	movlw	3
 14226     1ECD  0675               	xorwf	i1Lcd_Set_Cursor@a,w
 14227     1ECE  1D03               	btfss	3,2
 14228     1ECF  2ED1               	goto	u622_21
 14229     1ED0  2ED2               	goto	u622_20
 14230     1ED1                     u622_21:
 14231     1ED1  2EE9               	goto	i1l4971
 14232     1ED2                     u622_20:
 14233     1ED2                     i1l4963:
 14234                           
 14235                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
 14236     1ED2  0873               	movf	i1Lcd_Set_Cursor@b,w
 14237     1ED3  3E93               	addlw	147
 14238     1ED4  00F8               	movwf	i1Lcd_Set_Cursor@temp
 14239                           
 14240                           ;lcd.c: 48:         z = temp>>4;
 14241     1ED5  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14242     1ED6  00F4               	movwf	??i1_Lcd_Set_Cursor
 14243     1ED7  3004               	movlw	4
 14244     1ED8                     u623_25:
 14245     1ED8  36F4               	lsrf	??i1_Lcd_Set_Cursor,f
 14246     1ED9  0B89               	decfsz	9,f
 14247     1EDA  2ED8               	goto	u623_25
 14248     1EDB  0874               	movf	??i1_Lcd_Set_Cursor,w
 14249     1EDC  00F6               	movwf	i1Lcd_Set_Cursor@z
 14250     1EDD                     i1l4965:
 14251                           
 14252                           ;lcd.c: 49:         y = temp & 0x0F;
 14253     1EDD  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14254     1EDE  390F               	andlw	15
 14255     1EDF  00F7               	movwf	i1Lcd_Set_Cursor@y
 14256     1EE0                     i1l4967:
 14257                           
 14258                           ;lcd.c: 50:         Lcd_Cmd(z);
 14259     1EE0  0876               	movf	i1Lcd_Set_Cursor@z,w
 14260     1EE1  3199  21AB  319E   	fcall	i1_Lcd_Cmd
 14261     1EE4                     i1l4969:
 14262                           
 14263                           ;lcd.c: 51:         Lcd_Cmd(y);
 14264     1EE4  0877               	movf	i1Lcd_Set_Cursor@y,w
 14265     1EE5  3199  21AB  319E   	fcall	i1_Lcd_Cmd
 14266                           
 14267                           ;lcd.c: 52:     }
 14268     1EE8  2F06               	goto	i1l392
 14269     1EE9                     i1l4971:
 14270     1EE9  3004               	movlw	4
 14271     1EEA  0675               	xorwf	i1Lcd_Set_Cursor@a,w
 14272     1EEB  1D03               	btfss	3,2
 14273     1EEC  2EEE               	goto	u624_21
 14274     1EED  2EEF               	goto	u624_20
 14275     1EEE                     u624_21:
 14276     1EEE  2F06               	goto	i1l388
 14277     1EEF                     u624_20:
 14278     1EEF                     i1l4973:
 14279                           
 14280                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
 14281     1EEF  0873               	movf	i1Lcd_Set_Cursor@b,w
 14282     1EF0  3ED3               	addlw	211
 14283     1EF1  00F8               	movwf	i1Lcd_Set_Cursor@temp
 14284                           
 14285                           ;lcd.c: 56:         z = temp>>4;
 14286     1EF2  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14287     1EF3  00F4               	movwf	??i1_Lcd_Set_Cursor
 14288     1EF4  3004               	movlw	4
 14289     1EF5                     u625_25:
 14290     1EF5  36F4               	lsrf	??i1_Lcd_Set_Cursor,f
 14291     1EF6  0B89               	decfsz	9,f
 14292     1EF7  2EF5               	goto	u625_25
 14293     1EF8  0874               	movf	??i1_Lcd_Set_Cursor,w
 14294     1EF9  00F6               	movwf	i1Lcd_Set_Cursor@z
 14295     1EFA                     i1l4975:
 14296                           
 14297                           ;lcd.c: 57:         y = temp & 0x0F;
 14298     1EFA  0878               	movf	i1Lcd_Set_Cursor@temp,w
 14299     1EFB  390F               	andlw	15
 14300     1EFC  00F7               	movwf	i1Lcd_Set_Cursor@y
 14301     1EFD                     i1l4977:
 14302                           
 14303                           ;lcd.c: 58:         Lcd_Cmd(z);
 14304     1EFD  0876               	movf	i1Lcd_Set_Cursor@z,w
 14305     1EFE  3199  21AB  319E   	fcall	i1_Lcd_Cmd
 14306     1F01                     i1l4979:
 14307                           
 14308                           ;lcd.c: 59:         Lcd_Cmd(y);
 14309     1F01  0877               	movf	i1Lcd_Set_Cursor@y,w
 14310     1F02  3199  21AB  319E   	fcall	i1_Lcd_Cmd
 14311     1F05  2F06               	goto	i1l392
 14312     1F06                     i1l388:
 14313     1F06                     i1l392:
 14314     1F06  0008               	return
 14315     1F07                     __end_ofi1_Lcd_Set_Cursor:
 14316                           
 14317                           	psect	text45
 14318     1972                     __ptext45:	
 14319 ;; *************** function i1_Lcd_Clear *****************
 14320 ;; Defined at:
 14321 ;;		line 20 in file "lcd.c"
 14322 ;; Parameters:    Size  Location     Type
 14323 ;;		None
 14324 ;; Auto vars:     Size  Location     Type
 14325 ;;		None
 14326 ;; Return value:  Size  Location     Type
 14327 ;;                  1    wreg      void 
 14328 ;; Registers used:
 14329 ;;		wreg, status,2, status,0, pclath, cstack
 14330 ;; Tracked objects:
 14331 ;;		On entry : 0/0
 14332 ;;		On exit  : 0/0
 14333 ;;		Unchanged: 0/0
 14334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14335 ;;      Params:         0       0       0       0       0       0       0       0
 14336 ;;      Locals:         0       0       0       0       0       0       0       0
 14337 ;;      Temps:          0       0       0       0       0       0       0       0
 14338 ;;      Totals:         0       0       0       0       0       0       0       0
 14339 ;;Total ram usage:        0 bytes
 14340 ;; Hardware stack levels used: 1
 14341 ;; Hardware stack levels required when called: 2
 14342 ;; This function calls:
 14343 ;;		i1_Lcd_Cmd
 14344 ;; This function is called by:
 14345 ;;		_IOC
 14346 ;; This function uses a non-reentrant model
 14347 ;;
 14348                           
 14349     1972                     i1_Lcd_Clear:	
 14350                           ;psect for function i1_Lcd_Clear
 14351                           
 14352     1972                     i1l4939:	
 14353                           ;incstack = 0
 14354                           ; Regs used in i1_Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 14355                           
 14356                           
 14357                           ;lcd.c: 22:     Lcd_Cmd(0);
 14358     1972  3000               	movlw	0
 14359     1973  3199  21AB  3199   	fcall	i1_Lcd_Cmd
 14360                           
 14361                           ;lcd.c: 23:     Lcd_Cmd(1);
 14362     1976  3001               	movlw	1
 14363     1977  3199  21AB  3199   	fcall	i1_Lcd_Cmd
 14364     197A                     i1l382:
 14365     197A  0008               	return
 14366     197B                     __end_ofi1_Lcd_Clear:
 14367                           
 14368                           	psect	text46
 14369     19AB                     __ptext46:	
 14370 ;; *************** function i1_Lcd_Cmd *****************
 14371 ;; Defined at:
 14372 ;;		line 11 in file "lcd.c"
 14373 ;; Parameters:    Size  Location     Type
 14374 ;;  a               1    wreg     unsigned char 
 14375 ;; Auto vars:     Size  Location     Type
 14376 ;;  a               1    2[COMMON] unsigned char 
 14377 ;; Return value:  Size  Location     Type
 14378 ;;                  1    wreg      void 
 14379 ;; Registers used:
 14380 ;;		wreg, status,2, status,0, pclath, cstack
 14381 ;; Tracked objects:
 14382 ;;		On entry : 0/0
 14383 ;;		On exit  : 0/0
 14384 ;;		Unchanged: 0/0
 14385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14386 ;;      Params:         0       0       0       0       0       0       0       0
 14387 ;;      Locals:         1       0       0       0       0       0       0       0
 14388 ;;      Temps:          1       0       0       0       0       0       0       0
 14389 ;;      Totals:         2       0       0       0       0       0       0       0
 14390 ;;Total ram usage:        2 bytes
 14391 ;; Hardware stack levels used: 1
 14392 ;; Hardware stack levels required when called: 1
 14393 ;; This function calls:
 14394 ;;		i1_Lcd_Port
 14395 ;; This function is called by:
 14396 ;;		i1_Lcd_Clear
 14397 ;;		i1_Lcd_Set_Cursor
 14398 ;; This function uses a non-reentrant model
 14399 ;;
 14400                           
 14401     19AB                     i1_Lcd_Cmd:	
 14402                           ;psect for function i1_Lcd_Cmd
 14403                           
 14404                           
 14405                           ;incstack = 0
 14406                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 14407                           ;i1Lcd_Cmd@a stored from wreg
 14408     19AB  00F2               	movwf	i1Lcd_Cmd@a
 14409     19AC                     i1l4683:
 14410                           
 14411                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATCbits.LATC1 = 0;
 14412     19AC  0022               	movlb	2	; select bank2
 14413     19AD  108E               	bcf	14,1	;volatile
 14414     19AE                     i1l4685:
 14415                           
 14416                           ;lcd.c: 14:     Lcd_Port(a);
 14417     19AE  0872               	movf	i1Lcd_Cmd@a,w
 14418     19AF  319A  2244  3199   	fcall	i1_Lcd_Port
 14419     19B2                     i1l4687:
 14420                           
 14421                           ;lcd.c: 15:     LATCbits.LATC0 = 1;
 14422     19B2  0022               	movlb	2	; select bank2
 14423     19B3  140E               	bsf	14,0	;volatile
 14424     19B4                     i1l4689:
 14425                           
 14426                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
 14427     19B4  3006               	movlw	6
 14428     19B5  00F1               	movwf	??i1_Lcd_Cmd
 14429     19B6  3030               	movlw	48
 14430     19B7                     u675_27:
 14431     19B7  0B89               	decfsz	9,f
 14432     19B8  29B7               	goto	u675_27
 14433     19B9  0BF1               	decfsz	??i1_Lcd_Cmd,f
 14434     19BA  29B7               	goto	u675_27
 14435     19BB  3200               	nop2
 14436     19BC                     i1l4691:
 14437                           
 14438                           ;lcd.c: 17:     LATCbits.LATC0 = 0;
 14439     19BC  0022               	movlb	2	; select bank2
 14440     19BD  100E               	bcf	14,0	;volatile
 14441     19BE                     i1l379:
 14442     19BE  0008               	return
 14443     19BF                     __end_ofi1_Lcd_Cmd:
 14444                           
 14445                           	psect	text47
 14446     1A44                     __ptext47:	
 14447 ;; *************** function i1_Lcd_Port *****************
 14448 ;; Defined at:
 14449 ;;		line 3 in file "lcd.c"
 14450 ;; Parameters:    Size  Location     Type
 14451 ;;  a               1    wreg     unsigned char 
 14452 ;; Auto vars:     Size  Location     Type
 14453 ;;  a               1    0[COMMON] unsigned char 
 14454 ;; Return value:  Size  Location     Type
 14455 ;;                  1    wreg      void 
 14456 ;; Registers used:
 14457 ;;		wreg
 14458 ;; Tracked objects:
 14459 ;;		On entry : 0/0
 14460 ;;		On exit  : 0/0
 14461 ;;		Unchanged: 0/0
 14462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14463 ;;      Params:         0       0       0       0       0       0       0       0
 14464 ;;      Locals:         1       0       0       0       0       0       0       0
 14465 ;;      Temps:          0       0       0       0       0       0       0       0
 14466 ;;      Totals:         1       0       0       0       0       0       0       0
 14467 ;;Total ram usage:        1 bytes
 14468 ;; Hardware stack levels used: 1
 14469 ;; This function calls:
 14470 ;;		Nothing
 14471 ;; This function is called by:
 14472 ;;		i1_Lcd_Cmd
 14473 ;;		i1_Lcd_Write_Char
 14474 ;; This function uses a non-reentrant model
 14475 ;;
 14476                           
 14477     1A44                     i1_Lcd_Port:	
 14478                           ;psect for function i1_Lcd_Port
 14479                           
 14480                           
 14481                           ;incstack = 0
 14482                           ; Regs used in i1_Lcd_Port: [wreg]
 14483                           ;i1Lcd_Port@a stored from wreg
 14484     1A44  00F0               	movwf	i1Lcd_Port@a
 14485     1A45                     i1l4635:
 14486                           
 14487                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LATD4 = 1
      +                          ) : (LATDbits.LATD4 = 0);
 14488     1A45  1C70               	btfss	i1Lcd_Port@a,0
 14489     1A46  2A48               	goto	u562_21
 14490     1A47  2A49               	goto	u562_20
 14491     1A48                     u562_21:
 14492     1A48  2A4C               	goto	i1l361
 14493     1A49                     u562_20:
 14494     1A49                     i1l4637:
 14495     1A49  0022               	movlb	2	; select bank2
 14496     1A4A  160F               	bsf	15,4	;volatile
 14497     1A4B  2A4E               	goto	i1l4639
 14498     1A4C                     i1l361:
 14499     1A4C  0022               	movlb	2	; select bank2
 14500     1A4D  120F               	bcf	15,4	;volatile
 14501     1A4E                     i1l4639:
 14502                           
 14503                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LATD5 = 1) : (LATDbits.LATD5 = 0);
 14504     1A4E  1CF0               	btfss	i1Lcd_Port@a,1
 14505     1A4F  2A51               	goto	u563_21
 14506     1A50  2A52               	goto	u563_20
 14507     1A51                     u563_21:
 14508     1A51  2A54               	goto	i1l365
 14509     1A52                     u563_20:
 14510     1A52                     i1l4641:
 14511     1A52  168F               	bsf	15,5	;volatile
 14512     1A53  2A55               	goto	i1l4643
 14513     1A54                     i1l365:
 14514     1A54  128F               	bcf	15,5	;volatile
 14515     1A55                     i1l4643:
 14516                           
 14517                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LATD6 = 1) : (LATDbits.LATD6 = 0);
 14518     1A55  1D70               	btfss	i1Lcd_Port@a,2
 14519     1A56  2A58               	goto	u564_21
 14520     1A57  2A59               	goto	u564_20
 14521     1A58                     u564_21:
 14522     1A58  2A5B               	goto	i1l369
 14523     1A59                     u564_20:
 14524     1A59                     i1l4645:
 14525     1A59  170F               	bsf	15,6	;volatile
 14526     1A5A  2A5C               	goto	i1l4647
 14527     1A5B                     i1l369:
 14528     1A5B  130F               	bcf	15,6	;volatile
 14529     1A5C                     i1l4647:
 14530                           
 14531                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LATD7 = 1) : (LATDbits.LATD7 = 0);
 14532     1A5C  1DF0               	btfss	i1Lcd_Port@a,3
 14533     1A5D  2A5F               	goto	u565_21
 14534     1A5E  2A60               	goto	u565_20
 14535     1A5F                     u565_21:
 14536     1A5F  2A62               	goto	i1l373
 14537     1A60                     u565_20:
 14538     1A60                     i1l4649:
 14539     1A60  178F               	bsf	15,7	;volatile
 14540     1A61  2A63               	goto	i1l376
 14541     1A62                     i1l373:
 14542     1A62  138F               	bcf	15,7	;volatile
 14543     1A63                     i1l376:
 14544     1A63  0008               	return
 14545     1A64                     __end_ofi1_Lcd_Port:
 14546                           
 14547                           	psect	text48
 14548     1BB3                     __ptext48:	
 14549 ;; *************** function _strcmp *****************
 14550 ;; Defined at:
 14551 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcmp.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;  l               1    wreg     PTR const unsigned char 
 14554 ;;		 -> clave(5), 
 14555 ;;  r               1    0[COMMON] PTR const unsigned char 
 14556 ;;		 -> clave_enter(5), 
 14557 ;; Auto vars:     Size  Location     Type
 14558 ;;  l               1    3[COMMON] PTR const unsigned char 
 14559 ;;		 -> clave(5), 
 14560 ;; Return value:  Size  Location     Type
 14561 ;;                  2    0[COMMON] int 
 14562 ;; Registers used:
 14563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14564 ;; Tracked objects:
 14565 ;;		On entry : 0/0
 14566 ;;		On exit  : 0/0
 14567 ;;		Unchanged: 0/0
 14568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14569 ;;      Params:         2       0       0       0       0       0       0       0
 14570 ;;      Locals:         1       0       0       0       0       0       0       0
 14571 ;;      Temps:          1       0       0       0       0       0       0       0
 14572 ;;      Totals:         4       0       0       0       0       0       0       0
 14573 ;;Total ram usage:        4 bytes
 14574 ;; Hardware stack levels used: 1
 14575 ;; This function calls:
 14576 ;;		Nothing
 14577 ;; This function is called by:
 14578 ;;		_IOC
 14579 ;; This function uses a non-reentrant model
 14580 ;;
 14581                           
 14582     1BB3                     _strcmp:	
 14583                           ;psect for function _strcmp
 14584                           
 14585                           
 14586                           ;incstack = 0
 14587                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0]
 14588                           ;strcmp@l stored from wreg
 14589     1BB3  00F3               	movwf	strcmp@l
 14590     1BB4                     i1l4881:
 14591     1BB4  2BBD               	goto	i1l4887
 14592     1BB5                     i1l4883:
 14593     1BB5  3001               	movlw	1
 14594     1BB6  00F2               	movwf	??_strcmp
 14595     1BB7  0872               	movf	??_strcmp,w
 14596     1BB8  07F3               	addwf	strcmp@l,f
 14597     1BB9                     i1l4885:
 14598     1BB9  3001               	movlw	1
 14599     1BBA  00F2               	movwf	??_strcmp
 14600     1BBB  0872               	movf	??_strcmp,w
 14601     1BBC  07F0               	addwf	strcmp@r,f
 14602     1BBD                     i1l4887:
 14603     1BBD  0870               	movf	strcmp@r,w
 14604     1BBE  0086               	movwf	6
 14605     1BBF  3001               	movlw	1	; select bank2/3
 14606     1BC0  0087               	movwf	7
 14607     1BC1  0873               	movf	strcmp@l,w
 14608     1BC2  0084               	movwf	4
 14609     1BC3  3001               	movlw	1	; select bank2/3
 14610     1BC4  0085               	movwf	5
 14611     1BC5  0800               	movf	0,w
 14612     1BC6  0601               	xorwf	1,w
 14613     1BC7  1D03               	skipz
 14614     1BC8  2BCA               	goto	u602_21
 14615     1BC9  2BCB               	goto	u602_20
 14616     1BCA                     u602_21:
 14617     1BCA  2BD4               	goto	i1l4891
 14618     1BCB                     u602_20:
 14619     1BCB                     i1l4889:
 14620     1BCB  0873               	movf	strcmp@l,w
 14621     1BCC  0086               	movwf	6
 14622     1BCD  3001               	movlw	1	; select bank2/3
 14623     1BCE  0087               	movwf	7
 14624     1BCF  0801               	movf	1,w
 14625     1BD0  1D03               	btfss	3,2
 14626     1BD1  2BD3               	goto	u603_21
 14627     1BD2  2BD4               	goto	u603_20
 14628     1BD3                     u603_21:
 14629     1BD3  2BB5               	goto	i1l4883
 14630     1BD4                     u603_20:
 14631     1BD4                     i1l4891:
 14632     1BD4  0873               	movf	strcmp@l,w
 14633     1BD5  0086               	movwf	6
 14634     1BD6  3001               	movlw	1	; select bank2/3
 14635     1BD7  0087               	movwf	7
 14636     1BD8  0870               	movf	strcmp@r,w
 14637     1BD9  0084               	movwf	4
 14638     1BDA  3001               	movlw	1	; select bank2/3
 14639     1BDB  0085               	movwf	5
 14640     1BDC  0800               	movf	0,w
 14641     1BDD  0201               	subwf	1,w
 14642     1BDE  00F0               	movwf	?_strcmp
 14643     1BDF  01F1               	clrf	?_strcmp+1
 14644     1BE0  1C03               	skipc
 14645     1BE1  03F1               	decf	?_strcmp+1,f
 14646     1BE2                     i1l1261:
 14647     1BE2  0008               	return
 14648     1BE3                     __end_of_strcmp:
 14649                           
 14650                           	psect	text49
 14651     1969                     __ptext49:	
 14652 ;; *************** function _Keypad_Init *****************
 14653 ;; Defined at:
 14654 ;;		line 3 in file "kbd4x3.c"
 14655 ;; Parameters:    Size  Location     Type
 14656 ;;		None
 14657 ;; Auto vars:     Size  Location     Type
 14658 ;;		None
 14659 ;; Return value:  Size  Location     Type
 14660 ;;                  1    wreg      void 
 14661 ;; Registers used:
 14662 ;;		None
 14663 ;; Tracked objects:
 14664 ;;		On entry : 0/0
 14665 ;;		On exit  : 0/0
 14666 ;;		Unchanged: 0/0
 14667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14668 ;;      Params:         0       0       0       0       0       0       0       0
 14669 ;;      Locals:         0       0       0       0       0       0       0       0
 14670 ;;      Temps:          0       0       0       0       0       0       0       0
 14671 ;;      Totals:         0       0       0       0       0       0       0       0
 14672 ;;Total ram usage:        0 bytes
 14673 ;; Hardware stack levels used: 1
 14674 ;; This function calls:
 14675 ;;		Nothing
 14676 ;; This function is called by:
 14677 ;;		_IOC
 14678 ;; This function uses a non-reentrant model
 14679 ;;
 14680                           
 14681     1969                     _Keypad_Init:	
 14682                           ;psect for function _Keypad_Init
 14683                           
 14684     1969                     i1l4801:	
 14685                           ;incstack = 0
 14686                           ; Regs used in _Keypad_Init: []
 14687                           
 14688                           
 14689                           ;kbd4x3.c: 5:     TRISBbits.TRISB4 = 1;
 14690     1969  0021               	movlb	1	; select bank1
 14691     196A  160D               	bsf	13,4	;volatile
 14692                           
 14693                           ;kbd4x3.c: 6:     TRISBbits.TRISB5 = 1;
 14694     196B  168D               	bsf	13,5	;volatile
 14695                           
 14696                           ;kbd4x3.c: 7:     TRISBbits.TRISB6 = 1;
 14697     196C  170D               	bsf	13,6	;volatile
 14698                           
 14699                           ;kbd4x3.c: 8:     TRISBbits.TRISB7 = 1;
 14700     196D  178D               	bsf	13,7	;volatile
 14701                           
 14702                           ;kbd4x3.c: 9:     TRISBbits.TRISB1 = 0;
 14703     196E  108D               	bcf	13,1	;volatile
 14704                           
 14705                           ;kbd4x3.c: 10:     TRISBbits.TRISB2 = 0;
 14706     196F  110D               	bcf	13,2	;volatile
 14707                           
 14708                           ;kbd4x3.c: 11:     TRISBbits.TRISB3 = 0;
 14709     1970  118D               	bcf	13,3	;volatile
 14710     1971                     i1l296:
 14711     1971  0008               	return
 14712     1972                     __end_of_Keypad_Init:
 14713                           
 14714                           	psect	text50
 14715     1165                     __ptext50:	
 14716 ;; *************** function _Keypad_Get_Char *****************
 14717 ;; Defined at:
 14718 ;;		line 14 in file "kbd4x3.c"
 14719 ;; Parameters:    Size  Location     Type
 14720 ;;		None
 14721 ;; Auto vars:     Size  Location     Type
 14722 ;;		None
 14723 ;; Return value:  Size  Location     Type
 14724 ;;                  1    wreg      unsigned char 
 14725 ;; Registers used:
 14726 ;;		wreg
 14727 ;; Tracked objects:
 14728 ;;		On entry : 0/0
 14729 ;;		On exit  : 0/0
 14730 ;;		Unchanged: 0/0
 14731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14732 ;;      Params:         0       0       0       0       0       0       0       0
 14733 ;;      Locals:         0       0       0       0       0       0       0       0
 14734 ;;      Temps:          1       0       0       0       0       0       0       0
 14735 ;;      Totals:         1       0       0       0       0       0       0       0
 14736 ;;Total ram usage:        1 bytes
 14737 ;; Hardware stack levels used: 1
 14738 ;; This function calls:
 14739 ;;		Nothing
 14740 ;; This function is called by:
 14741 ;;		_IOC
 14742 ;; This function uses a non-reentrant model
 14743 ;;
 14744                           
 14745     1165                     _Keypad_Get_Char:	
 14746                           ;psect for function _Keypad_Get_Char
 14747                           
 14748     1165                     i1l4803:	
 14749                           ;incstack = 0
 14750                           ; Regs used in _Keypad_Get_Char: [wreg]
 14751                           
 14752                           
 14753                           ;kbd4x3.c: 16:     PORTBbits.RB1 = 1;
 14754     1165  0020               	movlb	0	; select bank0
 14755     1166  148D               	bsf	13,1	;volatile
 14756                           
 14757                           ;kbd4x3.c: 17:     PORTBbits.RB2 = 0;
 14758     1167  110D               	bcf	13,2	;volatile
 14759                           
 14760                           ;kbd4x3.c: 18:     PORTBbits.RB3 = 0;
 14761     1168  118D               	bcf	13,3	;volatile
 14762                           
 14763                           ;kbd4x3.c: 19:     if(PORTBbits.RB4 == 1){
 14764     1169  1E0D               	btfss	13,4	;volatile
 14765     116A  296C               	goto	u578_21
 14766     116B  296D               	goto	u578_20
 14767     116C                     u578_21:
 14768     116C  2983               	goto	i1l299
 14769     116D                     u578_20:
 14770     116D                     i1l4805:
 14771                           
 14772                           ;kbd4x3.c: 20:         _delay((unsigned long)((2)*(4000000/4000.0)));
 14773     116D  3003               	movlw	3
 14774     116E  00F0               	movwf	??_Keypad_Get_Char
 14775     116F  3098               	movlw	152
 14776     1170                     u676_27:
 14777     1170  0B89               	decfsz	9,f
 14778     1171  2970               	goto	u676_27
 14779     1172  0BF0               	decfsz	??_Keypad_Get_Char,f
 14780     1173  2970               	goto	u676_27
 14781     1174                     i1l300:	
 14782                           ;kbd4x3.c: 21:         while(PORTBbits.RB4 == 1);
 14783                           
 14784     1174  0020               	movlb	0	; select bank0
 14785     1175  1A0D               	btfsc	13,4	;volatile
 14786     1176  2978               	goto	u579_21
 14787     1177  2979               	goto	u579_20
 14788     1178                     u579_21:
 14789     1178  2974               	goto	i1l300
 14790     1179                     u579_20:
 14791     1179                     i1l4807:
 14792                           
 14793                           ;kbd4x3.c: 22:         _delay((unsigned long)((5)*(4000000/4000.0)));
 14794     1179  3007               	movlw	7
 14795     117A  00F0               	movwf	??_Keypad_Get_Char
 14796     117B  307D               	movlw	125
 14797     117C                     u677_27:
 14798     117C  0B89               	decfsz	9,f
 14799     117D  297C               	goto	u677_27
 14800     117E  0BF0               	decfsz	??_Keypad_Get_Char,f
 14801     117F  297C               	goto	u677_27
 14802     1180  0000               	nop
 14803                           
 14804                           ;kbd4x3.c: 23:         return '1';
 14805     1181  3031               	movlw	49
 14806     1182  2AA8               	goto	i1l303
 14807     1183                     i1l299:	
 14808                           ;kbd4x3.c: 24:     }
 14809                           
 14810                           
 14811                           ;kbd4x3.c: 25:     if(PORTBbits.RB5 == 1){
 14812     1183  1E8D               	btfss	13,5	;volatile
 14813     1184  2986               	goto	u580_21
 14814     1185  2987               	goto	u580_20
 14815     1186                     u580_21:
 14816     1186  299D               	goto	i1l304
 14817     1187                     u580_20:
 14818     1187                     i1l4811:
 14819                           
 14820                           ;kbd4x3.c: 26:         _delay((unsigned long)((2)*(4000000/4000.0)));
 14821     1187  3003               	movlw	3
 14822     1188  00F0               	movwf	??_Keypad_Get_Char
 14823     1189  3098               	movlw	152
 14824     118A                     u678_27:
 14825     118A  0B89               	decfsz	9,f
 14826     118B  298A               	goto	u678_27
 14827     118C  0BF0               	decfsz	??_Keypad_Get_Char,f
 14828     118D  298A               	goto	u678_27
 14829     118E                     i1l305:	
 14830                           ;kbd4x3.c: 27:         while(PORTBbits.RB5 == 1);
 14831                           
 14832     118E  0020               	movlb	0	; select bank0
 14833     118F  1A8D               	btfsc	13,5	;volatile
 14834     1190  2992               	goto	u581_21
 14835     1191  2993               	goto	u581_20
 14836     1192                     u581_21:
 14837     1192  298E               	goto	i1l305
 14838     1193                     u581_20:
 14839     1193                     i1l4813:
 14840                           
 14841                           ;kbd4x3.c: 28:         _delay((unsigned long)((5)*(4000000/4000.0)));
 14842     1193  3007               	movlw	7
 14843     1194  00F0               	movwf	??_Keypad_Get_Char
 14844     1195  307D               	movlw	125
 14845     1196                     u679_27:
 14846     1196  0B89               	decfsz	9,f
 14847     1197  2996               	goto	u679_27
 14848     1198  0BF0               	decfsz	??_Keypad_Get_Char,f
 14849     1199  2996               	goto	u679_27
 14850     119A  0000               	nop
 14851                           
 14852                           ;kbd4x3.c: 29:         return '4';
 14853     119B  3034               	movlw	52
 14854     119C  2AA8               	goto	i1l303
 14855     119D                     i1l304:	
 14856                           ;kbd4x3.c: 30:     }
 14857                           
 14858                           
 14859                           ;kbd4x3.c: 31:     if(PORTBbits.RB6 == 1){
 14860     119D  1F0D               	btfss	13,6	;volatile
 14861     119E  29A0               	goto	u582_21
 14862     119F  29A1               	goto	u582_20
 14863     11A0                     u582_21:
 14864     11A0  29B7               	goto	i1l308
 14865     11A1                     u582_20:
 14866     11A1                     i1l4817:
 14867                           
 14868                           ;kbd4x3.c: 32:         _delay((unsigned long)((2)*(4000000/4000.0)));
 14869     11A1  3003               	movlw	3
 14870     11A2  00F0               	movwf	??_Keypad_Get_Char
 14871     11A3  3098               	movlw	152
 14872     11A4                     u680_27:
 14873     11A4  0B89               	decfsz	9,f
 14874     11A5  29A4               	goto	u680_27
 14875     11A6  0BF0               	decfsz	??_Keypad_Get_Char,f
 14876     11A7  29A4               	goto	u680_27
 14877     11A8                     i1l309:	
 14878                           ;kbd4x3.c: 33:         while(PORTBbits.RB6 == 1);
 14879                           
 14880     11A8  0020               	movlb	0	; select bank0
 14881     11A9  1B0D               	btfsc	13,6	;volatile
 14882     11AA  29AC               	goto	u583_21
 14883     11AB  29AD               	goto	u583_20
 14884     11AC                     u583_21:
 14885     11AC  29A8               	goto	i1l309
 14886     11AD                     u583_20:
 14887     11AD                     i1l4819:
 14888                           
 14889                           ;kbd4x3.c: 34:         _delay((unsigned long)((5)*(4000000/4000.0)));
 14890     11AD  3007               	movlw	7
 14891     11AE  00F0               	movwf	??_Keypad_Get_Char
 14892     11AF  307D               	movlw	125
 14893     11B0                     u681_27:
 14894     11B0  0B89               	decfsz	9,f
 14895     11B1  29B0               	goto	u681_27
 14896     11B2  0BF0               	decfsz	??_Keypad_Get_Char,f
 14897     11B3  29B0               	goto	u681_27
 14898     11B4  0000               	nop
 14899                           
 14900                           ;kbd4x3.c: 35:         return '7';
 14901     11B5  3037               	movlw	55
 14902     11B6  2AA8               	goto	i1l303
 14903     11B7                     i1l308:	
 14904                           ;kbd4x3.c: 36:     }
 14905                           
 14906                           
 14907                           ;kbd4x3.c: 37:     if(PORTBbits.RB7 == 1){
 14908     11B7  1F8D               	btfss	13,7	;volatile
 14909     11B8  29BA               	goto	u584_21
 14910     11B9  29BB               	goto	u584_20
 14911     11BA                     u584_21:
 14912     11BA  29D1               	goto	i1l312
 14913     11BB                     u584_20:
 14914     11BB                     i1l4823:
 14915                           
 14916                           ;kbd4x3.c: 38:         _delay((unsigned long)((2)*(4000000/4000.0)));
 14917     11BB  3003               	movlw	3
 14918     11BC  00F0               	movwf	??_Keypad_Get_Char
 14919     11BD  3098               	movlw	152
 14920     11BE                     u682_27:
 14921     11BE  0B89               	decfsz	9,f
 14922     11BF  29BE               	goto	u682_27
 14923     11C0  0BF0               	decfsz	??_Keypad_Get_Char,f
 14924     11C1  29BE               	goto	u682_27
 14925     11C2                     i1l313:	
 14926                           ;kbd4x3.c: 39:         while(PORTBbits.RB7 == 1);
 14927                           
 14928     11C2  0020               	movlb	0	; select bank0
 14929     11C3  1B8D               	btfsc	13,7	;volatile
 14930     11C4  29C6               	goto	u585_21
 14931     11C5  29C7               	goto	u585_20
 14932     11C6                     u585_21:
 14933     11C6  29C2               	goto	i1l313
 14934     11C7                     u585_20:
 14935     11C7                     i1l4825:
 14936                           
 14937                           ;kbd4x3.c: 40:         _delay((unsigned long)((5)*(4000000/4000.0)));
 14938     11C7  3007               	movlw	7
 14939     11C8  00F0               	movwf	??_Keypad_Get_Char
 14940     11C9  307D               	movlw	125
 14941     11CA                     u683_27:
 14942     11CA  0B89               	decfsz	9,f
 14943     11CB  29CA               	goto	u683_27
 14944     11CC  0BF0               	decfsz	??_Keypad_Get_Char,f
 14945     11CD  29CA               	goto	u683_27
 14946     11CE  0000               	nop
 14947                           
 14948                           ;kbd4x3.c: 41:         return '*';
 14949     11CF  302A               	movlw	42
 14950     11D0  2AA8               	goto	i1l303
 14951     11D1                     i1l312:	
 14952                           ;kbd4x3.c: 42:     }
 14953                           
 14954                           
 14955                           ;kbd4x3.c: 44:     PORTBbits.RB1 = 0;
 14956     11D1  108D               	bcf	13,1	;volatile
 14957                           
 14958                           ;kbd4x3.c: 45:     PORTBbits.RB2 = 1;
 14959     11D2  150D               	bsf	13,2	;volatile
 14960                           
 14961                           ;kbd4x3.c: 46:     PORTBbits.RB3 = 0;
 14962     11D3  118D               	bcf	13,3	;volatile
 14963                           
 14964                           ;kbd4x3.c: 47:     if(PORTBbits.RB4 == 1){
 14965     11D4  1E0D               	btfss	13,4	;volatile
 14966     11D5  29D7               	goto	u586_21
 14967     11D6  29D8               	goto	u586_20
 14968     11D7                     u586_21:
 14969     11D7  29EE               	goto	i1l316
 14970     11D8                     u586_20:
 14971     11D8                     i1l4829:
 14972                           
 14973                           ;kbd4x3.c: 48:         _delay((unsigned long)((2)*(4000000/4000.0)));
 14974     11D8  3003               	movlw	3
 14975     11D9  00F0               	movwf	??_Keypad_Get_Char
 14976     11DA  3098               	movlw	152
 14977     11DB                     u684_27:
 14978     11DB  0B89               	decfsz	9,f
 14979     11DC  29DB               	goto	u684_27
 14980     11DD  0BF0               	decfsz	??_Keypad_Get_Char,f
 14981     11DE  29DB               	goto	u684_27
 14982     11DF                     i1l317:	
 14983                           ;kbd4x3.c: 49:         while(PORTBbits.RB4 == 1);
 14984                           
 14985     11DF  0020               	movlb	0	; select bank0
 14986     11E0  1A0D               	btfsc	13,4	;volatile
 14987     11E1  29E3               	goto	u587_21
 14988     11E2  29E4               	goto	u587_20
 14989     11E3                     u587_21:
 14990     11E3  29DF               	goto	i1l317
 14991     11E4                     u587_20:
 14992     11E4                     i1l4831:
 14993                           
 14994                           ;kbd4x3.c: 50:         _delay((unsigned long)((5)*(4000000/4000.0)));
 14995     11E4  3007               	movlw	7
 14996     11E5  00F0               	movwf	??_Keypad_Get_Char
 14997     11E6  307D               	movlw	125
 14998     11E7                     u685_27:
 14999     11E7  0B89               	decfsz	9,f
 15000     11E8  29E7               	goto	u685_27
 15001     11E9  0BF0               	decfsz	??_Keypad_Get_Char,f
 15002     11EA  29E7               	goto	u685_27
 15003     11EB  0000               	nop
 15004                           
 15005                           ;kbd4x3.c: 51:         return '2';
 15006     11EC  3032               	movlw	50
 15007     11ED  2AA8               	goto	i1l303
 15008     11EE                     i1l316:	
 15009                           ;kbd4x3.c: 52:     }
 15010                           
 15011                           
 15012                           ;kbd4x3.c: 53:     if(PORTBbits.RB5 == 1){
 15013     11EE  1E8D               	btfss	13,5	;volatile
 15014     11EF  29F1               	goto	u588_21
 15015     11F0  29F2               	goto	u588_20
 15016     11F1                     u588_21:
 15017     11F1  2A08               	goto	i1l320
 15018     11F2                     u588_20:
 15019     11F2                     i1l4835:
 15020                           
 15021                           ;kbd4x3.c: 54:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15022     11F2  3003               	movlw	3
 15023     11F3  00F0               	movwf	??_Keypad_Get_Char
 15024     11F4  3098               	movlw	152
 15025     11F5                     u686_27:
 15026     11F5  0B89               	decfsz	9,f
 15027     11F6  29F5               	goto	u686_27
 15028     11F7  0BF0               	decfsz	??_Keypad_Get_Char,f
 15029     11F8  29F5               	goto	u686_27
 15030     11F9                     i1l321:	
 15031                           ;kbd4x3.c: 55:         while(PORTBbits.RB5 == 1);
 15032                           
 15033     11F9  0020               	movlb	0	; select bank0
 15034     11FA  1A8D               	btfsc	13,5	;volatile
 15035     11FB  29FD               	goto	u589_21
 15036     11FC  29FE               	goto	u589_20
 15037     11FD                     u589_21:
 15038     11FD  29F9               	goto	i1l321
 15039     11FE                     u589_20:
 15040     11FE                     i1l4837:
 15041                           
 15042                           ;kbd4x3.c: 56:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15043     11FE  3007               	movlw	7
 15044     11FF  00F0               	movwf	??_Keypad_Get_Char
 15045     1200  307D               	movlw	125
 15046     1201                     u687_27:
 15047     1201  0B89               	decfsz	9,f
 15048     1202  2A01               	goto	u687_27
 15049     1203  0BF0               	decfsz	??_Keypad_Get_Char,f
 15050     1204  2A01               	goto	u687_27
 15051     1205  0000               	nop
 15052                           
 15053                           ;kbd4x3.c: 57:         return '5';
 15054     1206  3035               	movlw	53
 15055     1207  2AA8               	goto	i1l303
 15056     1208                     i1l320:	
 15057                           ;kbd4x3.c: 58:     }
 15058                           
 15059                           
 15060                           ;kbd4x3.c: 59:     if(PORTBbits.RB6 == 1){
 15061     1208  1F0D               	btfss	13,6	;volatile
 15062     1209  2A0B               	goto	u590_21
 15063     120A  2A0C               	goto	u590_20
 15064     120B                     u590_21:
 15065     120B  2A22               	goto	i1l324
 15066     120C                     u590_20:
 15067     120C                     i1l4841:
 15068                           
 15069                           ;kbd4x3.c: 60:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15070     120C  3003               	movlw	3
 15071     120D  00F0               	movwf	??_Keypad_Get_Char
 15072     120E  3098               	movlw	152
 15073     120F                     u688_27:
 15074     120F  0B89               	decfsz	9,f
 15075     1210  2A0F               	goto	u688_27
 15076     1211  0BF0               	decfsz	??_Keypad_Get_Char,f
 15077     1212  2A0F               	goto	u688_27
 15078     1213                     i1l325:	
 15079                           ;kbd4x3.c: 61:         while(PORTBbits.RB6 == 1);
 15080                           
 15081     1213  0020               	movlb	0	; select bank0
 15082     1214  1B0D               	btfsc	13,6	;volatile
 15083     1215  2A17               	goto	u591_21
 15084     1216  2A18               	goto	u591_20
 15085     1217                     u591_21:
 15086     1217  2A13               	goto	i1l325
 15087     1218                     u591_20:
 15088     1218                     i1l4843:
 15089                           
 15090                           ;kbd4x3.c: 62:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15091     1218  3007               	movlw	7
 15092     1219  00F0               	movwf	??_Keypad_Get_Char
 15093     121A  307D               	movlw	125
 15094     121B                     u689_27:
 15095     121B  0B89               	decfsz	9,f
 15096     121C  2A1B               	goto	u689_27
 15097     121D  0BF0               	decfsz	??_Keypad_Get_Char,f
 15098     121E  2A1B               	goto	u689_27
 15099     121F  0000               	nop
 15100                           
 15101                           ;kbd4x3.c: 63:         return '8';
 15102     1220  3038               	movlw	56
 15103     1221  2AA8               	goto	i1l303
 15104     1222                     i1l324:	
 15105                           ;kbd4x3.c: 64:     }
 15106                           
 15107                           
 15108                           ;kbd4x3.c: 65:     if(PORTBbits.RB7 == 1){
 15109     1222  1F8D               	btfss	13,7	;volatile
 15110     1223  2A25               	goto	u592_21
 15111     1224  2A26               	goto	u592_20
 15112     1225                     u592_21:
 15113     1225  2A3C               	goto	i1l328
 15114     1226                     u592_20:
 15115     1226                     i1l4847:
 15116                           
 15117                           ;kbd4x3.c: 66:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15118     1226  3003               	movlw	3
 15119     1227  00F0               	movwf	??_Keypad_Get_Char
 15120     1228  3098               	movlw	152
 15121     1229                     u690_27:
 15122     1229  0B89               	decfsz	9,f
 15123     122A  2A29               	goto	u690_27
 15124     122B  0BF0               	decfsz	??_Keypad_Get_Char,f
 15125     122C  2A29               	goto	u690_27
 15126     122D                     i1l329:	
 15127                           ;kbd4x3.c: 67:         while(PORTBbits.RB7 == 1);
 15128                           
 15129     122D  0020               	movlb	0	; select bank0
 15130     122E  1B8D               	btfsc	13,7	;volatile
 15131     122F  2A31               	goto	u593_21
 15132     1230  2A32               	goto	u593_20
 15133     1231                     u593_21:
 15134     1231  2A2D               	goto	i1l329
 15135     1232                     u593_20:
 15136     1232                     i1l4849:
 15137                           
 15138                           ;kbd4x3.c: 68:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15139     1232  3007               	movlw	7
 15140     1233  00F0               	movwf	??_Keypad_Get_Char
 15141     1234  307D               	movlw	125
 15142     1235                     u691_27:
 15143     1235  0B89               	decfsz	9,f
 15144     1236  2A35               	goto	u691_27
 15145     1237  0BF0               	decfsz	??_Keypad_Get_Char,f
 15146     1238  2A35               	goto	u691_27
 15147     1239  0000               	nop
 15148                           
 15149                           ;kbd4x3.c: 69:         return '0';
 15150     123A  3030               	movlw	48
 15151     123B  2AA8               	goto	i1l303
 15152     123C                     i1l328:	
 15153                           ;kbd4x3.c: 70:     }
 15154                           
 15155                           
 15156                           ;kbd4x3.c: 72:     PORTBbits.RB1 = 0;
 15157     123C  108D               	bcf	13,1	;volatile
 15158                           
 15159                           ;kbd4x3.c: 73:     PORTBbits.RB2 = 0;
 15160     123D  110D               	bcf	13,2	;volatile
 15161                           
 15162                           ;kbd4x3.c: 74:     PORTBbits.RB3 = 1;
 15163     123E  158D               	bsf	13,3	;volatile
 15164                           
 15165                           ;kbd4x3.c: 75:     if(PORTBbits.RB4 == 1){
 15166     123F  1E0D               	btfss	13,4	;volatile
 15167     1240  2A42               	goto	u594_21
 15168     1241  2A43               	goto	u594_20
 15169     1242                     u594_21:
 15170     1242  2A59               	goto	i1l332
 15171     1243                     u594_20:
 15172     1243                     i1l4853:
 15173                           
 15174                           ;kbd4x3.c: 76:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15175     1243  3003               	movlw	3
 15176     1244  00F0               	movwf	??_Keypad_Get_Char
 15177     1245  3098               	movlw	152
 15178     1246                     u692_27:
 15179     1246  0B89               	decfsz	9,f
 15180     1247  2A46               	goto	u692_27
 15181     1248  0BF0               	decfsz	??_Keypad_Get_Char,f
 15182     1249  2A46               	goto	u692_27
 15183     124A                     i1l333:	
 15184                           ;kbd4x3.c: 77:         while(PORTBbits.RB4 == 1);
 15185                           
 15186     124A  0020               	movlb	0	; select bank0
 15187     124B  1A0D               	btfsc	13,4	;volatile
 15188     124C  2A4E               	goto	u595_21
 15189     124D  2A4F               	goto	u595_20
 15190     124E                     u595_21:
 15191     124E  2A4A               	goto	i1l333
 15192     124F                     u595_20:
 15193     124F                     i1l4855:
 15194                           
 15195                           ;kbd4x3.c: 78:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15196     124F  3007               	movlw	7
 15197     1250  00F0               	movwf	??_Keypad_Get_Char
 15198     1251  307D               	movlw	125
 15199     1252                     u693_27:
 15200     1252  0B89               	decfsz	9,f
 15201     1253  2A52               	goto	u693_27
 15202     1254  0BF0               	decfsz	??_Keypad_Get_Char,f
 15203     1255  2A52               	goto	u693_27
 15204     1256  0000               	nop
 15205                           
 15206                           ;kbd4x3.c: 79:         return '3';
 15207     1257  3033               	movlw	51
 15208     1258  2AA8               	goto	i1l303
 15209     1259                     i1l332:	
 15210                           ;kbd4x3.c: 80:     }
 15211                           
 15212                           
 15213                           ;kbd4x3.c: 81:     if(PORTBbits.RB5 == 1){
 15214     1259  1E8D               	btfss	13,5	;volatile
 15215     125A  2A5C               	goto	u596_21
 15216     125B  2A5D               	goto	u596_20
 15217     125C                     u596_21:
 15218     125C  2A73               	goto	i1l336
 15219     125D                     u596_20:
 15220     125D                     i1l4859:
 15221                           
 15222                           ;kbd4x3.c: 82:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15223     125D  3003               	movlw	3
 15224     125E  00F0               	movwf	??_Keypad_Get_Char
 15225     125F  3098               	movlw	152
 15226     1260                     u694_27:
 15227     1260  0B89               	decfsz	9,f
 15228     1261  2A60               	goto	u694_27
 15229     1262  0BF0               	decfsz	??_Keypad_Get_Char,f
 15230     1263  2A60               	goto	u694_27
 15231     1264                     i1l337:	
 15232                           ;kbd4x3.c: 83:         while(PORTBbits.RB5 == 1);
 15233                           
 15234     1264  0020               	movlb	0	; select bank0
 15235     1265  1A8D               	btfsc	13,5	;volatile
 15236     1266  2A68               	goto	u597_21
 15237     1267  2A69               	goto	u597_20
 15238     1268                     u597_21:
 15239     1268  2A64               	goto	i1l337
 15240     1269                     u597_20:
 15241     1269                     i1l4861:
 15242                           
 15243                           ;kbd4x3.c: 84:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15244     1269  3007               	movlw	7
 15245     126A  00F0               	movwf	??_Keypad_Get_Char
 15246     126B  307D               	movlw	125
 15247     126C                     u695_27:
 15248     126C  0B89               	decfsz	9,f
 15249     126D  2A6C               	goto	u695_27
 15250     126E  0BF0               	decfsz	??_Keypad_Get_Char,f
 15251     126F  2A6C               	goto	u695_27
 15252     1270  0000               	nop
 15253                           
 15254                           ;kbd4x3.c: 85:         return '6';
 15255     1271  3036               	movlw	54
 15256     1272  2AA8               	goto	i1l303
 15257     1273                     i1l336:	
 15258                           ;kbd4x3.c: 86:     }
 15259                           
 15260                           
 15261                           ;kbd4x3.c: 87:     if(PORTBbits.RB6 == 1){
 15262     1273  1F0D               	btfss	13,6	;volatile
 15263     1274  2A76               	goto	u598_21
 15264     1275  2A77               	goto	u598_20
 15265     1276                     u598_21:
 15266     1276  2A8D               	goto	i1l340
 15267     1277                     u598_20:
 15268     1277                     i1l4865:
 15269                           
 15270                           ;kbd4x3.c: 88:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15271     1277  3003               	movlw	3
 15272     1278  00F0               	movwf	??_Keypad_Get_Char
 15273     1279  3098               	movlw	152
 15274     127A                     u696_27:
 15275     127A  0B89               	decfsz	9,f
 15276     127B  2A7A               	goto	u696_27
 15277     127C  0BF0               	decfsz	??_Keypad_Get_Char,f
 15278     127D  2A7A               	goto	u696_27
 15279     127E                     i1l341:	
 15280                           ;kbd4x3.c: 89:         while(PORTBbits.RB6 == 1);
 15281                           
 15282     127E  0020               	movlb	0	; select bank0
 15283     127F  1B0D               	btfsc	13,6	;volatile
 15284     1280  2A82               	goto	u599_21
 15285     1281  2A83               	goto	u599_20
 15286     1282                     u599_21:
 15287     1282  2A7E               	goto	i1l341
 15288     1283                     u599_20:
 15289     1283                     i1l4867:
 15290                           
 15291                           ;kbd4x3.c: 90:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15292     1283  3007               	movlw	7
 15293     1284  00F0               	movwf	??_Keypad_Get_Char
 15294     1285  307D               	movlw	125
 15295     1286                     u697_27:
 15296     1286  0B89               	decfsz	9,f
 15297     1287  2A86               	goto	u697_27
 15298     1288  0BF0               	decfsz	??_Keypad_Get_Char,f
 15299     1289  2A86               	goto	u697_27
 15300     128A  0000               	nop
 15301                           
 15302                           ;kbd4x3.c: 91:         return '9';
 15303     128B  3039               	movlw	57
 15304     128C  2AA8               	goto	i1l303
 15305     128D                     i1l340:	
 15306                           ;kbd4x3.c: 92:     }
 15307                           
 15308                           
 15309                           ;kbd4x3.c: 93:     if(PORTBbits.RB7 == 1){
 15310     128D  1F8D               	btfss	13,7	;volatile
 15311     128E  2A90               	goto	u600_21
 15312     128F  2A91               	goto	u600_20
 15313     1290                     u600_21:
 15314     1290  2AA7               	goto	i1l4877
 15315     1291                     u600_20:
 15316     1291                     i1l4871:
 15317                           
 15318                           ;kbd4x3.c: 94:         _delay((unsigned long)((2)*(4000000/4000.0)));
 15319     1291  3003               	movlw	3
 15320     1292  00F0               	movwf	??_Keypad_Get_Char
 15321     1293  3098               	movlw	152
 15322     1294                     u698_27:
 15323     1294  0B89               	decfsz	9,f
 15324     1295  2A94               	goto	u698_27
 15325     1296  0BF0               	decfsz	??_Keypad_Get_Char,f
 15326     1297  2A94               	goto	u698_27
 15327     1298                     i1l345:	
 15328                           ;kbd4x3.c: 95:         while(PORTBbits.RB7 == 1);
 15329                           
 15330     1298  0020               	movlb	0	; select bank0
 15331     1299  1B8D               	btfsc	13,7	;volatile
 15332     129A  2A9C               	goto	u601_21
 15333     129B  2A9D               	goto	u601_20
 15334     129C                     u601_21:
 15335     129C  2A98               	goto	i1l345
 15336     129D                     u601_20:
 15337     129D                     i1l4873:
 15338                           
 15339                           ;kbd4x3.c: 96:         _delay((unsigned long)((5)*(4000000/4000.0)));
 15340     129D  3007               	movlw	7
 15341     129E  00F0               	movwf	??_Keypad_Get_Char
 15342     129F  307D               	movlw	125
 15343     12A0                     u699_27:
 15344     12A0  0B89               	decfsz	9,f
 15345     12A1  2AA0               	goto	u699_27
 15346     12A2  0BF0               	decfsz	??_Keypad_Get_Char,f
 15347     12A3  2AA0               	goto	u699_27
 15348     12A4  0000               	nop
 15349                           
 15350                           ;kbd4x3.c: 97:         return '#';
 15351     12A5  3023               	movlw	35
 15352     12A6  2AA8               	goto	i1l303
 15353     12A7                     i1l4877:
 15354                           
 15355                           ;kbd4x3.c: 99:     return 0;
 15356     12A7  3000               	movlw	0
 15357     12A8                     i1l303:
 15358     12A8  0008               	return
 15359     12A9                     __end_of_Keypad_Get_Char:
 15360     007E                     btemp	set	126	;btemp
 15361     007E                     int$flags	set	126
 15362     007E                     wtemp0	set	126
 15363                           
 15364                           	psect	config
 15365                           
 15366                           ;Config register CONFIG1 @ 0x8007
 15367                           ;	Oscillator Selection
 15368                           ;	FOSC = XT, XT Oscillator, Crystal/resonator connected between OSC1 and OSC2 pins
 15369                           ;	Watchdog Timer Enable
 15370                           ;	WDTE = OFF, WDT disabled
 15371                           ;	Power-up Timer Enable
 15372                           ;	PWRTE = OFF, PWRT disabled
 15373                           ;	MCLR Pin Function Select
 15374                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 15375                           ;	Flash Program Memory Code Protection
 15376                           ;	CP = OFF, Program memory code protection is disabled
 15377                           ;	Data Memory Code Protection
 15378                           ;	CPD = OFF, Data memory code protection is disabled
 15379                           ;	Brown-out Reset Enable
 15380                           ;	BOREN = OFF, Brown-out Reset disabled
 15381                           ;	Clock Out Enable
 15382                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 15383                           ;	Internal/External Switchover
 15384                           ;	IESO = ON, Internal/External Switchover mode is enabled
 15385                           ;	Fail-Safe Clock Monitor Enable
 15386                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 15387     8007                     	org	32775
 15388     8007  39E1               	dw	14817
 15389                           
 15390                           ;Config register CONFIG2 @ 0x8008
 15391                           ;	Flash Memory Self-Write Protection
 15392                           ;	WRT = OFF, Write protection off
 15393                           ;	Voltage Regulator Capacitor Enable
 15394                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 15395                           ;	PLL Enable
 15396                           ;	PLLEN = OFF, 4x PLL disabled
 15397                           ;	Stack Overflow/Underflow Reset Enable
 15398                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 15399                           ;	Brown-out Reset Voltage Selection
 15400                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 15401                           ;	Low-Voltage Programming Enable
 15402                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 15403     8008                     	org	32776
 15404     8008  1EFF               	dw	7935

Data Sizes:
    Strings     137
    Constant    0
    Data        5
    BSS         134
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     80      80
    BANK1            80     79      80
    BANK2            80     31      67
    BANK3            80      0      20
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK3[20]), STR_1(CODE[15]), STR_10(CODE[7]), STR_11(CODE[9]), 
		 -> STR_12(CODE[7]), STR_13(CODE[9]), STR_14(CODE[15]), STR_15(CODE[14]), 
		 -> STR_16(CODE[15]), STR_17(CODE[17]), STR_4(CODE[2]), STR_6(CODE[2]), 
		 -> STR_7(CODE[17]), STR_8(CODE[16]), STR_9(CODE[15]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1229$buffer	PTR unsigned char  size(2) Largest target is 0

    S1229$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_3(CODE[7]), STR_5(CODE[7]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK3[20]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> clave(BANK2[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> clave_enter(BANK2[5]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_18(CODE[4]), STR_21(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_3(CODE[7]), STR_5(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_3(CODE[7]), STR_5(CODE[7]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_3(CODE[7]), STR_5(CODE[7]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _IOC in COMMON

    _IOC->i1_Lcd_Write_String
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->__Umul8_16
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___xxtofl->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _IOC in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _IOC in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_sprintf

Critical Paths under _IOC in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IOC in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IOC in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IOC in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IOC in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   32912
                                             77 BANK1      2     2      0
                                             13 BANK2     18    18      0
            _ADC_GetConversionResult
                     _ADC_Initialize
               _ADC_IsConversionDone
                _ADC_StartConversion
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                             ___wmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             30    16     14   26183
                                             62 BANK1     15     1     14
                                              0 BANK2     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3   25651
                                             77 BANK0      3     0      3
                                             58 BANK1      4     4      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           15    13      2   25329
                                             75 BANK0      2     0      2
                                             45 BANK1     13    13      0
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2     837
                                              6 BANK0      9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              55    50      5   18860
                                             66 BANK0      9     4      5
                                              0 BANK1     45    45      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     4      2     291
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               8     5      3     328
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (5) _labs                                                 4     0      4     294
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             46 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2637
                                             35 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2288
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3177
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             35 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    2185
                                             20 BANK0     26    18      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13    11      2    4006
                                             22 BANK0     13    11      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     4      3    2445
                                             15 BANK0      7     4      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     888
                                              8 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              6 BANK0     14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2    1274
                                              5 BANK0      5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1806
                                              3 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     308
                                              3 BANK0      1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _IOC                                                  2     2      0    2186
                                             10 COMMON     2     2      0
                    _Keypad_Get_Char
                        _Keypad_Init
                             _strcmp
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                   i1_Lcd_Write_Char
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (10) i1_Lcd_Write_String                                  5     3      2     554
                                              5 COMMON     5     3      2
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (11) i1_Lcd_Write_Char                                    4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (10) i1_Lcd_Set_Cursor                                    6     5      1    1014
                                              3 COMMON     6     5      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (10) i1_Lcd_Clear                                         0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (11) i1_Lcd_Cmd                                           2     2      0     110
                                              1 COMMON     2     2      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (12) i1_Lcd_Port                                          1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _strcmp                                              4     2      2     330
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _Keypad_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Keypad_Get_Char                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_Initialize
   _ADC_IsConversionDone
   _ADC_StartConversion
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___wmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 _IOC (ROOT)
   _Keypad_Get_Char
   _Keypad_Init
   _strcmp
   i1_Lcd_Clear
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
   i1_Lcd_Write_Char
     i1_Lcd_Port
   i1_Lcd_Write_String
     i1_Lcd_Write_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     155       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4F      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     1F      43      10       83.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      14      12       25.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     155      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan 29 15:14:36 2025

                   ___fldiv@aexp 004D                     ___fldiv@bexp 004C                     ___fldiv@sign 0045  
                    _SSPSTATbits 0214                               l23 1002                               l17 1968  
                             l26 1960                               l29 1983                     ___awdiv@sign 0026  
            ___wmul@multiplicand 0022              __Umul8_16@word_mpld 0026                              l200 0326  
                            l203 032C                              l212 0339                              l221 0348  
                            l230 035C                              l214 033D                              l206 0330  
                            l223 034C                              l215 033E                              l224 034D  
                            l241 0379                              l233 0366                              l209 0335  
                            l242 037A                              l218 0344                              l235 036A  
                            l227 0357                              l404 1A43                              l236 036B  
                            l229 035B                              l239 0375                              l361 1B67  
                            l373 1B85                              l365 1B71                              l382 198C  
                            l376 1B87                              l392 1F80                              l369 1B7B  
                            l379 19EB                              l395 1CB2                              l388 1F80  
                            l732 1D06                              l741 1C61                              l901 17D6  
                            l398 1BB2                              l910 17FF                              l566 1A8F  
                            l719 1DBF                              l735 1C30                              l736 1C4C  
                            l752 108D                              l744 1020                              l760 1E91  
                            l568 1AA3                              l913 1A83                              l770 1E91  
                            l923 149F                              l747 1074                              l756 1998  
                            l925 15F7                              l909 17F8                              l871 16CB  
                            l767 1E7C                              l944 15C9                              l880 17FF  
                            l945 15E3                              l873 16A9                              l947 15F0  
                            l939 157D                              l963 072F                              l867 164E  
                            l892 177D                              l982 1AFD                              l975 0723  
                            l984 1B0D                              l888 175B                              l969 06AF  
                            l898 179F                              _IOC 0004                              _abs 1999  
                            _pad 1BE3                              _hor 0136                              _min 0137  
                            _seg 00EF                     ___awmod@sign 0026                              wreg 0009  
                   ___flmul@aexp 003B                     ___flmul@bexp 003C                     ___flmul@sign 0036  
                   ___flmul@temp 0041                     ___flmul@prod 003D                             ?_IOC 0070  
                   ___fltol@exp1 0029                             l1020 07A6                             l1021 07B2  
                           l1013 078C                             l1110 0B91                             l1007 0753  
                           l1120 0DEB                             l1009 07DA                             l1210 08EC  
                           ?_abs 0027                             l1204 19AA                             l1029 1AE9  
                           l1062 1C12                             l1070 10D4                             l1214 08E4  
                           l1230 1B5D                             l1224 19D4                             l1209 0843  
                           l1242 1D5F                             l1250 07FF                             l1058 1BEB  
                           l1074 10D2                             l1083 1164                             l1227 1B51  
                           l1091 0961                             l1164 144D                             l1156 12D6  
                           l1253 0003                             l1069 10B3                             l1149 1E20  
                           l1094 0FFF                             l1158 12E1                             l4001 0505  
                           l1186 1AC6                             l4011 0521                             l4003 050A  
                           l1267 1A07                             l1196 1FFF                             l4101 06B9  
                           l4021 0532                             l4013 0523                             l4005 0512  
                           l4111 06EE                             l4103 06C1                             l4031 054E  
                           l4023 053A                             l4015 0527                             l4007 0514  
                           l4121 071C                             l4113 06F8                             l4105 06C5  
                           l4041 0587                             l4025 053C                             l4017 0528  
                           l4009 051C                             l4201 0875                             l5001 026F  
                           l4131 1BE5                             l4123 0720                             l4115 0706  
                           l4107 06DD                             l4051 05CD                             l4043 0594  
                           l4035 0557                             l4027 0544                             l4019 052D  
                           l4211 08C5                             l4203 088C                             l5011 0275  
                           l5003 0270                             l4141 1C0B                             l4133 1BE9  
                           l4125 0721                             l4117 070F                             l4109 06E1  
                           l4061 0603                             l4053 05D8                             l4045 05AC  
                           l4037 0562                             l4029 0549                             l3501 1654  
                           l4213 08DC                             l4205 0894                             l4221 1B43  
                           l4301 091E                             l5101 03E9                             l5021 027D  
                           l5013 0276                             l5005 0271                             l4231 1B6E  
                           l4143 1999                             l4135 1BEE                             l4127 0727  
                           l4119 0711                             l4071 064E                             l4063 060A  
                           l4055 05DF                             l4047 05B9                             l4039 056F  
                           l3511 1662                             l3503 1658                             l4151 1F81  
                           l4207 08A5                             l4223 1B47                             l4311 0953  
                           l4303 0921                             l5111 040F                             l5103 03F0  
                           l5031 0287                             l5023 027F                             l5015 0277  
                           l5007 0272                             l4233 1B73                             l4225 1B60  
                           l4145 199E                             l3441 1D07                             l4137 1BF8  
                           l4241 1090                             l4081 0683                             l4073 0665  
                           l4065 061C                             l4057 05EA                             l4049 05C6  
                           l3601 177C                             l3521 166C                             l3513 1664  
                           l3505 165C                             l4161 1FD0                             l4153 1F99  
                           l4209 08BC                             l4217 1B38                             l4401 0CA1  
                           l4321 0982                             l4313 0958                             l4305 0943  
                           l5121 0493                             l5113 0417                             l5105 03F8  
                           l5041 0290                             l5033 0289                             l5025 0281  
                           l5017 0278                             l5009 0274                             l4235 1B78  
                           l4227 1B64                             l4147 199F                             l3451 1D42  
                           l3443 1D0D                             l4139 1BFD                             l4251 10AC  
                           l4243 1097                             l4091 0694                             l4083 0684  
                           l4075 066C                             l4067 0627                             l4059 05F1  
                           l3603 1781                             l3611 178D                             l3531 1676  
                           l3523 166E                             l3515 1666                             l3507 165E  
                           l4171 1FFB                             l4155 1FAE                             l4219 1B3D  
                           l4411 0D3B                             l4403 0CB3                             l4331 09C9  
                           l4323 098E                             l4315 095D                             l4307 0946  
                           l5131 04B5                             l5123 049B                             l5115 0422  
                           l5107 03FD                             l5051 0296                             l5043 0292  
                           l5035 028A                             l5027 0283                             l5019 027A  
                           l4237 1B7D                             l4229 1B69                             l3701 1D7A  
                           l3453 1D55                             l3445 1D12                             l4261 10CE  
                           l4253 10BB                             l4245 109C                             l4093 0698  
                           l4085 068B                             l4077 0678                             l4069 0639  
                           l3605 1784                             l3613 1791                             l3541 16AD  
                           l3533 1678                             l3525 1670                             l3517 1668  
                           l3509 1660                             l3461 15FE                             l4157 1FB4  
                           l4165 1FD5                             l4181 19C4                             l4501 0FDF  
                           l4421 0DE1                             l4413 0D43                             l4405 0D05  
                           l4333 09CF                             l4341 09FC                             l4325 0999  
                           l4317 0963                             l4309 094E                             l5133 04CE  
                           l5125 04A2                             l5117 0473                             l5109 040C  
                           l5061 02AE                             l5053 0298                             l5045 0293  
                           l5037 028B                             l5029 0285                             l4239 1B82  
                           l3711 1D8E                             l3703 1D7C                             l3447 1D17  
                           l4271 1100                             l4263 10D8                             l4255 10C0  
                           l4247 10A1                             l4095 06AC                             l4079 067F  
                           l4087 068F                             l3631 17D2                             l3623 17A4  
                           l3615 1792                             l3607 1786                             l3551 16C0  
                           l3543 16B1                             l3527 1672                             l3519 166A  
                           l3535 167A                             l3471 1615                             l3463 1602  
                           l4167 1FDB                             l4159 1FCB                             l4191 0835  
                           l4183 19C5                             l4175 19EE                             l4503 0FEA  
                           l4431 0DFE                             l4423 0DE7                             l4415 0D76  
                           l4407 0D0F                             l4351 0A33                             l4343 0A05  
                           l4335 09DB                             l4319 097C                             l4511 1DC4  
                           l5135 04D6                             l5127 04AA                             l5119 047A  
                           l5071 031C                             l5063 02B1                             l5055 029B  
                           l5047 0294                             l5039 028C                             l3721 1DAB  
                           l3713 1D92                             l3705 1D82                             l3449 1D22  
                           l4281 1136                             l4273 1104                             l4265 10DB  
                           l4257 10C4                             l4249 10A6                             l4089 0693  
                           l3801 198D                             l3641 17EE                             l3633 17DB  
                           l3625 17A9                             l3617 1796                             l3609 178B  
                           l3561 16DD                             l3545 16B3                             l3553 16C4  
                           l3537 167B                             l3529 1674                             l3481 1629  
                           l3473 1616                             l3465 1603                             l3457 15F8  
                           l4193 0842                             l4177 19F0                             l4505 0FEE  
                           l4441 0E87                             l4433 0E5D                             l4425 0DF8  
                           l4417 0DB0                             l4409 0D36                             l4361 0AF1  
                           l4353 0A5F                             l4345 0A07                             l4337 09E6  
                           l4329 09AF                             l4513 1DD5                             l4521 1E08  
                           l4601 13F6                             l5137 04DD                             l5129 04AE  
                           l5081 0351                             l5073 0324                             l5065 02B9  
                           l5057 029E                             l5049 0295                             l4531 19DE  
                           l3715 1DA1                             l3707 1D85                             l3723 1DB1  
                           l3731 1CB3                             l4291 1159                             l4283 1144  
                           l4267 10E0                             l4275 1114                             l4259 10C9  
                           l3651 1AEC                             l4099 06B4                             l3803 1996  
                           l3643 17F2                             l3635 17E0                             l3627 17B1  
                           l3619 179C                             l3571 16F3                             l3563 16E5  
                           l3555 16CF                             l3547 16B7                             l3539 1692  
                           l3491 1636                             l3483 162A                             l3467 1608  
                           l3475 1618                             l3459 15FC                             l3811 1E2B  
                           l4195 0848                             l4187 0802                             l4179 19BF  
                           l4451 0EA0                             l4443 0E8E                             l4435 0E79  
                           l4427 0DF9                             l4419 0DB5                             l4363 0B1D  
                           l4355 0A8F                             l4371 0B79                             l4523 1E1C  
                           l4515 1DDD                             l5139 04E5                             l5091 0365  
                           l5083 0354                             l5075 032A                             l5067 02C4  
                           l5059 02A1                             l4533 19E0                             l3725 1DB6  
                           l3717 1DA5                             l3709 1D8A                             l3741 1CC4  
                           l3733 1CB5                             l4277 1122                             l4285 1148  
                           l4269 10FC                             l3901 14C5                             l3661 1B09  
                           l3653 1AEE                             l3805 1998                             l3645 17F4  
                           l3637 17E8                             l3629 17B5                             l3581 171B  
                           l3573 16F7                             l3565 16E9                             l3557 16D4  
                           l3549 16B8                             l3493 163B                             l3485 162C  
                           l3477 1620                             l3469 160D                             l3821 1E4E  
                           l4197 0860                             l4189 081A                             l4461 0EBA  
                           l4453 0EA4                             l4445 0E92                             l4437 0E7E  
                           l4429 0DFB                             l4381 0B9F                             l4373 0B7F  
                           l4365 0B21                             l4357 0AB6                             l4349 0A26  
                           l4517 1DEB                             l4509 1DC2                             l4541 12C7  
                           l4613 142E                             l5093 036F                             l5085 0356  
                           l5077 0334                             l5069 0315                             ?_pad 002F  
                           l4535 19E9                             l4527 19D7                             l3727 1DBB  
                           l3719 1DA6                             l3751 1CDB                             l3743 1CC9  
                           l3735 1CB9                             l3671 07F1                             l4287 114E  
                           l4279 1129                             l3911 14EE                             l3655 1AF5  
                           l3647 17FA                             l3639 17ED                             l3591 1763  
                           l3583 173F                             l3575 16F8                             l3567 16ED  
                           l3495 1643                             l3487 1630                             l3479 1623  
                           l3831 1E5C                             l3823 1E50                             l3815 1E34  
                           l4471 0F40                             l4463 0EBE                             l4455 0EA8  
                           l4447 0E96                             l4439 0E83                             l4383 0BA3  
                           l4391 0BB7                             l4375 0B84                             l4359 0AE7  
                           l4295 08EF                             l4519 1E00                             l4607 1413  
                           l4551 12E4                             l4543 12CF                             l5095 0372  
                           l5087 0360                             l5079 0342                             l4713 1961  
                           l4721 195A                             l4529 19D9                             l3753 1CDF  
                           l3745 1CCF                             l3761 1CF8                             l3737 1CBE  
                           l3665 07DD                             l4289 1152                             l3921 150F  
                           l3913 14F6                             l3905 14CE                             l3657 1AF9  
                           l3649 17FE                             l3593 1768                             l3585 1745  
                           l3577 1700                             l3569 16F1                             l3497 1644  
                           l3489 1631                             l3841 1E81                             l3825 1E54  
                           l3833 1E6C                             l3817 1E45                             l3809 1E21  
                           l4481 0F71                             l4465 0EC2                             l4449 0E99  
                           l4457 0EAC                             l4473 0F44                             l4393 0BB9  
                           l4385 0BAB                             l4377 0B8C                             l4369 0B52  
                           l4297 08F0                             l3681 1A99                             l3673 1A84  
                           l4609 1424                             l4561 132E                             l4553 12FE  
                           l4545 12D3                             l4537 12AB                             l5097 0374  
                           l5089 0363                             l4715 1964                             l4651 1984  
                           l4731 1C69                             l3691 1D66                             l3763 1CFD  
                           l3755 1CE9                             l3747 1CD2                             l3739 1CC0  
                           l3667 07E0                             l3931 1532                             l3923 1510  
                           l3915 14F8                             l3907 14DE                             l3851 144E  
                           l3771 1C28                             l3659 1B04                             l3587 174A  
                           l3579 1705                             l3499 1646                             l3843 1E86  
                           l3819 1E46                             l4491 0FA4                             l4483 0F87  
                           l4475 0F56                             l4467 0F10                             l4459 0EB2  
                           l4395 0BC1                             l4387 0BAD                             l4379 0B99  
                           l4299 0900                             l3683 1A9F                             l3675 1A87  
                           l4571 1369                             l4563 1337                             l4555 1304  
                           l4547 12D7                             l4539 12BE                             l5099 037E  
                           l4725 197B                             l4717 1965                             l4733 1C6D  
                           l4741 1F09                             l4661 1B9F                             l4653 1B8A  
                           l4901 074B                             l3693 1D6B                             l3765 1D02  
                           l3757 1CED                             l3749 1CD7                             l3669 07EC  
                           l3941 154D                             l3917 14FD                             l3925 1517  
                           l3933 1536                             l3909 14E6                             l3861 145E  
                           l3853 1452                             l3773 1C44                             l3781 1003  
                           l3597 1771                             l3589 1753                             l3845 1A64  
                           l4493 0FB0                             l4485 0F8E                             l4477 0F66  
                           l4469 0F3C                             l4397 0BCA                             l4389 0BB3  
                           l3677 1A8B                             l4581 138B                             l4565 1341  
                           l4557 1317                             l5533 12F9                             l4719 1000  
                           l4735 1C76                             l4743 1F0E                             l4751 1F26  
                           l4671 1BB0                             l4663 1BA3                             l4655 1B90  
                           l4911 0772                             l4903 075B                             l3695 1D6D  
                           l3687 1D60                             l3759 1CF2                             l3951 1561  
                           l3943 1551                             l3935 153C                             l3927 1529  
                           l3919 150B                             l3871 1476                             l3863 1463  
                           l3855 1454                             l3775 1C5E                             l3791 1058  
                           l3783 1018                             l3599 1778                             l3847 1A67  
                           l3839 1E73                             l4495 0FB4                             l4487 0F9F  
                           l4479 0F6B                             l4399 0C9D                             l3679 1A94  
                           l4591 13AE                             l5535 1398                             l4583 138E  
                           l4575 1376                             l4567 134B                             l4559 1320  
                           l4737 1C82                             l4729 1C62                             l4753 1F2C  
                           l4761 1F44                             l4745 1F19                             l4665 1BA5  
                           l4657 1B92                             l4921 079C                             l4913 0779  
                           l3697 1D71                             l3689 1D62                             l3961 1582  
                           l3953 1562                             l3945 1552                             l3937 1544  
                           l3929 152A                             l3881 1487                             l3873 147B  
                           l3865 146B                             l3857 1458                             l3777 1C60  
                           l3769 1C13                             l3793 105C                             l3785 1034  
                           l4497 0FC6                             l5537 13DE                             l4593 13C2  
                           l4577 137F                             l4569 135A                             l4673 1AA6  
                           l4739 1C86                             l4763 1F4A                             l4771 1F62  
                           l4755 1F37                             l4747 1F1C                             l4667 1BAA  
                           l4659 1B9D                             l4931 07CD                             l4923 07A0  
                           l4915 077D                             l4907 0764                             l3699 1D76  
                           l3963 1587                             l3971 15AF                             l3955 1566  
                           l3947 1559                             l3939 1546                             l3891 14A7  
                           l3883 148C                             l3875 147D                             l3867 146C  
                           l3859 1459                             l3795 108A                             l3787 103C  
                           l4499 0FD9                             l5539 141F                             l4579 1386  
                           l4587 1390                             l4675 1AAF                             l4773 1F68  
                           l4765 1F55                             l4757 1F3A                             l4749 1F20  
                           l4669 1BAC                             l4781 1A25                             l4933 07D1  
                           l4925 07AA                             l4917 0785                             l4909 0767  
                           l3981 15E6                             l3973 15BC                             l3965 158F  
                           l3957 157A                             l3949 155D                             l3893 14B3  
                           l3885 1494                             l3877 1481                             l3869 146E  
                           l3797 108C                             l3789 1040                             l4597 13D6  
                           l4589 13A3                             l4677 1AB9                             l4775 1F73  
                           l4767 1F58                             l4759 1F3E                             l4783 1A29  
                           l4935 07D2                             l4927 07B4                             l4919 0793  
                           l3983 15EA                             l3975 15D7                             l3967 1593  
                           l3895 14B7                             l3887 1495                             l3879 1482  
                           l3991 04F5                             l4599 13E6                             l4679 1AC3  
                           l4791 1ACD                             l4777 1F76                             l4769 1F5C  
                           l4785 1A33                             l4929 07C8                             l3985 15EC  
                           l3977 15DA                             l3969 15AB                             l3889 1497  
                           l3993 04F9                             l4793 1ACF                             l4779 1F7A  
                           l4787 1A38                             l3979 15E2                             l3899 14C0  
                           l3995 04FB                             l4795 1AD1                             l3997 04FF  
                           l4797 1ADF                             l4789 1AC9                             l4895 0732  
                           l3999 0500                             l4991 0268                             l4897 0737  
                           l4993 026A                             l4899 073B                             l4995 026C  
                           l4997 026D                             l4999 026E                             STR_1 1832  
                           STR_2 1850                             STR_3 1871                             STR_4 1887  
                           STR_5 1871                             STR_6 1887                             STR_7 1811  
                           STR_8 1822                             STR_9 1813                             _LATA 010C  
                           _LATB 010D                             _LATC 010E                             u4000 1CE9  
                           _LATD 010F                             u4001 1CE8                             _LATE 0110  
                           u4020 1CF8                             u3300 1D0D                             u4100 105C  
                           u4021 1CF7                             u4005 1CE5                             u3301 1D0C  
                           u4101 105B                             u4030 1CFD                             u3310 1D12  
                           u4110 108A                             u4031 1CFC                             u4015 1CEE  
                           u3311 1D11                             u4111 1089                             u3320 1D22  
                           u4040 1C28                             u4120 1996                             u3400 163B  
                           u5000 08D2                             u3321 1D21                             u4041 1C27  
                           u4121 1995                             u3401 163A                             u3330 1D42  
                           u4050 1C44                             u3410 1654                             u4210 1E81  
                           u4130 1E2B                             u5010 08DC                             u3331 1D41  
                           u4051 1C43                             u4115 1086                             u3411 1653  
                           u4211 1E80                             u4131 1E2A                             u5011 08DB  
                           u5100 10A6                             u4300 14C5                             u4060 1C5E  
                           u3500 16CF                             u3420 1658                             u3340 1602  
                           u4220 1E86                             u4140 1E41                             u5020 1B5D  
                           u5101 10A5                             u4301 14C4                             u4061 1C5D  
                           u3501 16CE                             u3421 1657                             u3341 1601  
                           u4221 1E85                             u4205 1E74                             u5005 08CE  
                           u5021 1B5C                             u5030 1B64                             u5110 10C0  
                           u4310 14FD                             u4230 1458                             u4070 1018  
                           u3510 16D4                             u3430 1692                             u3350 1608  
                           u4150 1E54                             u5031 1B63                             u3335 1D3E  
                           u5111 10BF                             u4311 14FC                             u4231 1457  
                           u4071 1017                             u3511 16D3                             u3431 1691  
                           u3351 1607                             u4151 1E53                             u5040 1B6E  
                           u5120 10C9                             u4400 1551                             u4240 145E  
                           u4080 1034                             u3520 16E9                             u3440 169C  
                           u3360 160D                             u4160 1E5B                             u5200 0953  
                           u5041 1B6D                             u5121 10C8                             u4401 1550  
                           u4241 145D                             u4065 1C5A                             u4081 1033  
                           u3521 16E8                             u3441 169A                             u3361 160C  
                           u4161 1E5A                             u4145 1E3D                             u5201 0952  
                           u5050 1B78                             u5130 1122                             u4250 1463  
                           u4090 1040                             u3610 177C                             u3530 16ED  
                           u3450 169D                             u3370 1629                             u5210 0958  
                           u5051 1B77                             u5131 1121                             u4251 1462  
                           u4091 103F                             u3611 177B                             u3531 16EC  
                           u3435 168E                             u3371 1628                             u5211 0957  
                           u5060 1B82                             u6100 0792                             u5140 1129  
                           u4500 15D7                             u4420 1561                             u4340 150F  
                           u4260 1481                             u3700 17C3                             u3620 1781  
                           u3540 16F7                             u3460 16AD                             u3380 1630  
                           u4180 1E6B                             u5300 0B51                             u5220 097C  
                           u5061 1B81                             u6101 0791                             u5141 1128  
                           u4501 15D6                             u4421 1560                             u4341 150E  
                           u4325 14FE                             u4261 1480                             u3621 1780  
                           u3605 1772                             u3541 16F6                             u3461 16AC  
                           u3381 162F                             u4181 1E6A                             u5301 0B50  
                           u5221 097B                             u5150 1136                             u5070 1095  
                           u4510 15EA                             u4430 1566                             u4270 1487  
                           u3710 17D2                             u3630 178B                             u3470 16B7  
                           u3390 1636                             u4190 1E72                             u5310 0B79  
                           u5230 0982                             u5151 1135                             u5135 111E  
                           u5071 1093                             u4511 15E9                             u4431 1565  
                           u4415 1553                             u4335 1505                             u4271 1486  
                           u3711 17D1                             u3631 178A                             u3471 16B6  
                           u3391 1635                             u4191 1E71                             u4175 1E5D  
                           u5311 0B78                             u5231 0981                             u6120 07A0  
                           u6040 0737                             u3800 07FF                             u5160 1144  
                           u5080 1096                             u4440 157A                             u4360 1529  
                           u4280 148C                             u4520 04FF                             u3720 17DB  
                           u3640 1791                             u3560 171B                             u5400 0DB0  
                           u5320 0B84                             u5240 09C9                             u6121 079F  
                           u6041 0736                             u3801 07FE                             u5161 1143  
                           u4505 15D3                             u4441 1579                             u4361 1528  
                           u4281 148B                             u4521 04FE                             u3721 17DA  
                           u3705 17BF                             u3641 1790                             u3561 171A  
                           u5401 0DAF                             u5321 0B83                             u5241 09C8  
                           u6130 07A6                             u6050 073B                             u5170 1148  
                           u5090 109C                             u4450 1581                             u4370 153C  
                           u4290 14A7                             u4530 0505                             u3730 17E0  
                           u3650 1796                             u3570 174A                             u3490 16CB  
                           u5410 0DE7                             u5330 0B9F                             u5250 09CF  
                           u3810 1A8B                             u6131 07A5                             u6115 0796  
                           u6051 073A                             u5171 1147                             u5155 1132  
                           u5091 109B                             u4451 1580                             u4371 153B  
                           u4355 1511                             u4291 14A6                             u4531 0504  
                           u3731 17DF                             u3651 1795                             u3571 1749  
                           u3563 1717                             u3555 16FA                             u3491 16CA  
                           u5411 0DE6                             u5331 0B9E                             u5251 09CE  
                           u3811 1A8A                             u6140 07AA                             u6060 075B  
                           u5180 114E                             u4460 1587                             u4380 1544  
                           u4700 06AC                             u4620 0644                             u4540 050A  
                           u3740 17ED                             u3660 179C                             u3580 1763  
                           u5500 0FA3                             u5420 0E5D                             u5340 0BA3  
                           u5260 0A25                             u6300 0334                             u6141 07A9  
                           u6061 075A                             u5181 114D                             u5165 1140  
                           u4461 1586                             u4381 1543                             u4365 1525  
                           u4701 06AB                             u4605 05C7                             u4541 0509  
                           u3741 17EC                             u3661 179B                             u3581 1762  
                           u3485 16BA                             u5501 0FA2                             u5421 0E5C  
                           u5341 0BA2                             u5261 0A24                             u6301 0333  
                           u6150 07BE                             u3910 1DA1                             u4470 1593  
                           u4710 06B3                             u4630 065B                             u4550 0527  
                           u3750 17F2                             u3670 17A3                             u3590 1768  
                           u5510 0FC6                             u5430 0E83                             u5350 0BB3  
                           u5270 0A8F                             u5190 091E                             u6310 0339  
                           u3911 1DA0                             u4471 1592                             u4711 06B2  
                           u4615 05F2                             u4551 0526                             u3751 17F1  
                           u3671 17A2                             u3591 1767                             u5511 0FC5  
                           u5431 0E82                             u5351 0BB2                             u5271 0A8E  
                           u5191 091D                             u6311 0338                             u6160 07CD  
                           u6080 0778                             u4800 199E                             u4480 15A1  
                           u4720 06B9                             u4560 052D                             u3760 17FE  
                           u3680 17A9                             u5520 0FD9                             u5440 0E87  
                           u5360 0CB3                             u5280 0AB6                             u3840 1A9F  
                           u5600 134B                             u6400 036F                             u6320 033D  
                           u6161 07CC                             u6081 0777                             u3905 1D93  
                           u4801 199D                             u4721 06B8                             u4625 0640  
                           u4561 052C                             u3761 17FD                             u3681 17A8  
                           u5521 0FD8                             u5441 0E86                             u5425 0E59  
                           u5361 0CB2                             u5281 0AB5                             u3841 1A9E  
                           u3825 1A90                             u5601 134A                             u6401 036E  
                           u6321 033C                             u6170 07D1                             u3930 1DB1  
                           u3850 1D66                             u4490 15BC                             u3770 1AF9  
                           u4730 06C5                             u4570 0532                             u3690 17B5  
                           u4810 1FA6                             u5530 0FDF                             u5450 0EB2  
                           u5370 0D05                             u5290 0AE7                             u5610 13AD  
                           u6410 0379                             u6330 0342                             u6171 07D0  
                           u6155 07BA                             u6075 076C                             u3931 1DB0  
                           u3915 1D9D                             u3851 1D65                             u4491 15BB  
                           u4395 1547                             u3771 1AF8                             u4731 06C4  
                           u4635 0657                             u4571 0531                             u3691 17B4  
                           u5531 0FDE                             u5515 0FC2                             u5451 0EB1  
                           u5371 0D04                             u5291 0AE6                             u3835 1A95  
                           u5611 13AC                             u6411 0378                             u6331 0341  
                           u3940 1DB6                             u3860 1D71                             u4740 06D3  
                           u4660 0683                             u4580 0549                             u4820 1FB4  
                           u4900 19C4                             u5460 0F56                             u5380 0D36  
                           u5540 1DD5                             u6420 037E                             u6340 0348  
                           u3941 1DB5                             u3925 1DA7                             u3861 1D70  
                           u4485 159D                             u4661 0682                             u4645 0666  
                           u4581 0548                             u4821 1FB3                             u4901 19C3  
                           u5525 0FD5                             u5461 0F55                             u5381 0D35  
                           u5365 0CAF                             u5541 1DD4                             u6421 037D  
                           u6341 0347                             u5710 1F2C                             u3870 1D82  
                           u3950 1CB9                             u3790 1B09                             u4750 06EE  
                           u4590 054E                             u4830 1FC1                             u4910 0827  
                           u5470 0F66                             u5390 0D3B                             u5550 1E1C  
                           u6350 034C                             u6270 02B9                             u5711 1F2B  
                           u6095 0786                             u3871 1D81                             u3951 1CB8  
                           u4495 15B8                             u3791 1B08                             u4751 06ED  
                           u4655 0679                             u4591 054D                             u4815 1FA2  
                           u5471 0F65                             u5391 0D3A                             u5551 1E1B  
                           u6351 034B                             u6271 02B8                             u3960 1CC4  
                           u4760 0706                             u4680 0693                             u4840 1FCB  
                           u4920 0842                             u5480 0F94                             u5560 12BE  
                           u6360 0351                             u6280 032A                             u5705 1F14  
                           u3961 1CC3                             u3785 1AFE                             u4761 0705  
                           u4745 06CF                             u4681 0692                             u4841 1FCA  
                           u4921 0841                             u5481 0F92                             u5465 0F52  
                           u5561 12BD                             u6361 0350                             u6281 0329  
                           u5730 1F4A                             u3890 1D92                             u3970 1CCF  
                           u4770 0720                             u4690 0698                             u4850 1FDB  
                           u4930 0848                             u5490 0F95                             u5570 1304  
                           u6370 035B                             u6290 0330                             u5731 1F49  
                           u3891 1D91                             u3971 1CCE                             u4771 071F  
                           u4755 06EA                             u4691 0697                             u4675 0685  
                           u4851 1FDA                             u4835 1FBD                             u4931 0847  
                           u4915 0823                             u5475 0F62                             u5571 1303  
                           u6435 0387                             u6371 035A                             u6291 032F  
                           u4780 1BE9                             u4860 1FE8                             u4940 0856  
                           u5580 1317                             u6460 040C                             u6380 0360  
                           u5725 1F32                             u3885 1D86                             u4781 1BE8  
                           u4765 0702                             u4925 083E                             u5581 1316  
                           u6461 040B                             u6445 03A7                             u6381 035F  
                           u5750 1F68                             u3990 1CDF                             u4790 1C0B  
                           u4870 1FF3                             u4950 0874                             u5590 1341  
                           u5670 1AC3                             u6470 0417                             u6390 036A  
                           u5751 1F67                             u6607 1BA0                             u3991 1CDE  
                           u4791 1C0A                             u4871 1FF1                             u4951 0873  
                           u5591 1340                             u5671 1AC2                             u6471 0416  
                           u6455 03C7                             u6391 0369                             u4880 1FF4  
                           u4960 0882                             u5745 1F50                             u6617 1BAD  
                           u5665 1B96                             u3985 1CD3                             u4865 1FE4  
                           u4945 0852                             u6465 0408                             u5690 1F0E  
                           u5770 1A43                             u4970 088C                             u4890 1A07  
                           u6627 1C71                             u5691 1F0D                             u5771 1A42  
                           u4795 1C07                             u4971 088B                             u4891 1A06  
                           u4980 08B2                             u6637 1C7E                             u5765 1F6E  
                           u4965 087E                             u4990 08BC                             u6647 1C8A  
                           u4991 08BB                             u6657 19E4                             u4985 08AE  
                           u6587 02A7                             u6597 04EB                             _WPUB 020D  
                           _WPUE 0210                             abs@a 0027                ?_Lcd_Write_String 0025  
                           _dbuf 0220                             _labs 19BF                             _main 0268  
                           _dtoa 108E                             _prec 012E                             _temp 0128  
                           pad@i 0033                             pad@p 0030                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                  ___fpclassifyf 1F81                             start 0237               ??_Lcd_Write_String 0027  
                ___fldiv@new_exp 0046                  __end_of_Lcd_Cmd 19EC                            ??_IOC 007A  
                          ??_abs 0029                            ??_pad 0032                    ___fltol@sign1 0028  
                          ?_labs 0020                  __end_of___fladd 1800                            ?_main 0070  
                          ?_dtoa 0036                  __end_of___fldiv 15F8                  __end_of___awdiv 1DC0  
                __end_of___flneg 1999                            STR_10 1878                            STR_11 185F  
                          STR_12 1878                            STR_21 1883                            STR_13 1868  
                          STR_14 1813                            STR_15 1824                            STR_16 1841  
                          STR_17 1800                            STR_18 187F                  __end_of___awmod 1D07  
                __end_of___flmul 0730                  __end_of___flsub 1A84                  __end_of___fltol 1E92  
                ___awdiv@divisor 0020                            _IOCBF 0396                            _IOCBN 0395  
                          i1l300 1174                            i1l303 12A8                            i1l320 1208  
                          i1l312 11D1                            i1l304 119D                            i1l321 11F9  
                          i1l313 11C2                            i1l305 118E                            i1l340 128D  
                          i1l332 1259                            i1l324 1222                            i1l316 11EE  
                          i1l308 11B7                            i1l404 1A24                            i1l341 127E  
                          i1l333 124A                            i1l325 1213                            i1l317 11DF  
                          i1l309 11A8                            i1l336 1273                            i1l328 123C  
                          i1l345 1298                            i1l337 1264                            i1l329 122D  
                          i1l361 1A4C                            i1l373 1A62                            i1l365 1A54  
                          i1l382 197A                            i1l286 0232                            i1l287 0235  
                          i1l296 1971                            i1l376 1A63                            i1l392 1F06  
                          i1l369 1A5B                            i1l299 1183                            i1l379 19BE  
                          i1l388 1F06                            i1l398 1B35                ?i1_Lcd_Set_Cursor 0073  
                ___awdiv@counter 0025                    ??_Keypad_Init 0070                     vfpfcnvrt@fmt 006B  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                          _TRISD 008F                            _TRISE 0090                      ?i1_Lcd_Port 0070  
             ??i1_Lcd_Set_Cursor 0074                            _clave 0138                            _flags 007C  
            read_prec_or_width@c 002B              read_prec_or_width@n 002C                            _fputc 1D07  
                          _fputs 07DB                            _tecla 007D                            labs@a 0020  
                          pad@fp 0035                            _width 012C                            _putch 0003  
                          dtoa@d 0036                            dtoa@i 0041                            dtoa@p 003C  
                          dtoa@s 0040                            dtoa@w 003E                            status 0003  
                          wtemp0 007E                  __end_of_sprintf 1AEA                   ?___fpclassifyf 0020  
               __end_of_Lcd_Init 1CB3                 __end_of_Lcd_Port 1B88                  __initialization 0239  
                   __end_of_labs 19D5                     __end_of_main 04F5                     __end_of_dtoa 1165  
                         ??_labs 0024                           ??_main 014C                           ??_dtoa 0038  
     __end_of_read_prec_or_width 1E21                   _convertedValue 013D                           _ADCON0 009D  
                         _ADCON1 009E                           ?_fputc 0020                           ?_fputs 0028  
                         _ADRESH 009C                           _ADRESL 009B                 ___awdiv@dividend 0022  
                         _APFCON 011D                           _ANSELA 018C                           ?_putch 0070  
                         _ANSELB 018D                           _ANSELD 018F                           _ANSELE 0190  
            __end_of_Keypad_Init 1972                           _BORCON 0116                           i1l1261 1BE2  
                         i1l5201 00CC                           i1l5211 00EE                           i1l5203 00D9  
                         i1l5301 01E5                           i1l5221 0106                           i1l5213 00F5  
                         i1l5205 00DB                           i1l5141 0006                           i1l5311 0201  
                         i1l5303 01E7                           i1l5231 011C                           i1l5215 0102  
                         i1l5223 0112                           i1l5207 00DC                           i1l5151 0027  
                         i1l5143 0009                           i1l5321 0209                           i1l5313 0203  
                         i1l5305 01E8                           i1l5241 0121                           i1l5233 011D  
                         i1l5225 0115                           i1l5217 0104                           i1l5209 00E8  
                         i1l5161 0044                           i1l5153 0034                           i1l5145 000C  
                         i1l5331 0212                           i1l5323 020B                           i1l5315 0204  
                         i1l5307 01F4                           i1l5251 0136                           i1l5243 0122  
                         i1l5235 011E                           i1l5227 0117                           i1l5219 0105  
                         i1l5171 0062                           i1l5163 004A                           i1l5155 0038  
                         i1l5147 001A                           i1l4701 1B23                           i1l5333 0215  
                         i1l5325 020E                           i1l5309 01FA                           i1l5261 0152  
                         i1l5253 013A                           i1l5245 0125                           i1l5237 011F  
                         i1l5229 011A                           i1l5181 0081                           i1l5173 0068  
                         i1l5149 0020                           i1l4711 1B33                           i1l4703 1B27  
                         i1l5335 0217                           i1l5327 0210                           i1l5319 0206  
                         i1l5271 0183                           i1l5255 013F                           i1l5263 0157  
                         i1l5247 0128                           i1l5239 0120                           i1l5191 00AE  
                         i1l5183 0088                           i1l5175 0070                           i1l5159 003E  
                         i1l5167 004E                           i1l4801 1969                           i1l4641 1A52  
                         i1l4705 1B29                           i1l5345 021B                           i1l5337 0218  
                         i1l5329 0211                           i1l5281 019B                           i1l5273 0189  
                         i1l5265 0165                           i1l5257 0147                           i1l5249 012E  
                         i1l5193 00B1                           i1l5185 008C                           i1l5177 0074  
                         i1l5169 005E                           i1l4811 1187                           i1l4803 1165  
                         i1l4643 1A55                           i1l4635 1A45                           i1l4707 1B2D  
                         i1l5339 0219                           i1l5283 01A0                           i1l5291 01B8  
                         i1l5275 0190                           i1l5267 0174                           i1l5259 014E  
                         i1l5195 00B3                           i1l5179 0079                           i1l5187 0091  
                         i1l5347 022C                           i1l4813 1193                           i1l4805 116D  
                         i1l4645 1A59                           i1l4637 1A49                           i1l4709 1B2F  
                         i1l5293 01C6                           i1l5285 01A8                           i1l5277 0193  
                         i1l5269 0177                           i1l5197 00BF                           i1l5189 009F  
                         i1l5541 0056                           i1l4831 11E4                           i1l4823 11BB  
                         i1l4807 1179                           i1l4647 1A5C                           i1l4639 1A4E  
                         i1l5543 0221                           i1l5295 01D5                           i1l5287 01AF  
                         i1l5279 0197                           i1l5199 00C5                           i1l4841 120C  
                         i1l4825 11C7                           i1l4817 11A1                           i1l4649 1A60  
                         i1l5297 01D8                           i1l5289 01B3                           i1l4843 1218  
                         i1l4835 11F2                           i1l4819 11AD                           i1l4691 19BC  
                         i1l4683 19AC                           i1l5299 01DE                           i1l4861 1269  
                         i1l4853 1243                           i1l4837 11FE                           i1l4829 11D8  
                         i1l4685 19AE                           i1l4941 1E93                           i1l4693 1B0F  
                         i1l4871 1291                           i1l4855 124F                           i1l4847 1226  
                         i1l4687 19B2                           i1l4943 1E98                           i1l4951 1EAF  
                         i1l4695 1B15                           i1l4873 129D                           i1l4865 1277  
                         i1l4849 1232                           i1l4881 1BB4                           i1l4689 19B4  
                         i1l4953 1EB5                           i1l4961 1ECC                           i1l4945 1EA3  
                         i1l4697 1B17                           i1l4867 1283                           i1l4859 125D  
                         i1l4891 1BD4                           i1l4883 1BB5                           i1l4939 1972  
                         i1l4963 1ED2                           i1l4971 1EE9                           i1l4955 1EC0  
                         i1l4947 1EA6                           i1l4699 1B21                           i1l4877 12A7  
                         i1l4885 1BB9                           i1l4973 1EEF                           i1l4965 1EDD  
                         i1l4957 1EC3                           i1l4949 1EAA                           i1l4981 1A08  
                         i1l4887 1BBD                           i1l4975 1EFA                           i1l4967 1EE0  
                         i1l4959 1EC7                           i1l4983 1A0B                           i1l4889 1BCB  
                         i1l4977 1EFD                           i1l4969 1EE4                           i1l4985 1A15  
                         i1l4979 1F01                           i1l4987 1A19                           u600_20 1291  
                         u600_21 1290                           u601_20 129D                           u601_21 129C  
                         u602_20 1BCB                           u602_21 1BCA                           u603_20 1BD4  
                         u603_21 1BD3                           u620_20 1EB5                           u620_21 1EB4  
                         u621_25 1EBB                           u622_20 1ED2                           u622_21 1ED1  
                         u623_25 1ED8                           u624_20 1EEF                           u624_21 1EEE  
                         u625_25 1EF5                           u562_20 1A49                           u618_20 1E98  
                         u626_20 1A24                           u650_20 009F                           _OSCCON 0099  
                         u562_21 1A48                           u618_21 1E97                           u626_21 1A23  
                         u650_21 009E                           u650_25 009B                           u563_20 1A52  
                         u651_20 00BF                           u563_21 1A51                           u651_21 00BE  
                         u619_25 1E9E                ?i1_Lcd_Write_Char 0070                           u580_20 1187  
                         u564_20 1A59                           u652_20 013F                           u580_21 1186  
                         u564_21 1A58                           u652_21 013E                           u581_20 1193  
                         u565_20 1A60                           u653_20 0165                           u581_21 1192  
                         u565_21 1A5F                           u653_21 0164                           u653_25 0161  
                         u590_20 120C                           u582_20 11A1                           u654_20 0183  
                         u590_21 120B                           u582_21 11A0                           u654_21 0182  
                         u670_27 016A                           u591_20 1218                           u583_20 11AD  
                         u655_20 01A0                           u591_21 1217                           u583_21 11AC  
                         u655_21 019F                           u671_27 01CB                           u592_20 1226  
                         u584_20 11BB                           u656_20 01C6                           u648_20 003D  
                         u592_21 1225                           u584_21 11BA                           u656_21 01C5  
                         u648_21 003C                           u568_25 1B1A                           u656_25 01C2  
                      ??_Lcd_Cmd 0021                           u680_27 11A4                           u672_27 01ED  
                  vfpfcnvrt@done 00D1                           u593_20 1232                           u585_20 11C7  
                         u657_20 0232                           u649_20 0079                           u593_21 1231  
                         u585_21 11C6                           u657_21 0231                           u649_21 0078  
                         u681_27 11B0                           u673_27 1B24                           u594_20 1243  
                         u586_20 11D8                           u578_20 116D                           u594_21 1242  
                         u586_21 11D7                           u578_21 116C                           u690_27 1229  
                         u682_27 11BE                           u674_27 1B30                           u666_27 0013  
                         u595_20 124F                           u587_20 11E4                           u579_20 1179  
                         u595_21 124E                           u587_21 11E3                           u579_21 1178  
                         u691_27 1235                           u683_27 11CA                           u675_27 19B7  
                         u667_27 00A4                           u596_20 125D                           u588_20 11F2  
                         u596_21 125C                           u588_21 11F1                           u692_27 1246  
                         u684_27 11DB                           u676_27 1170                           u668_27 00E1  
                         u597_20 1269                           u589_20 11FE                           u597_21 1268  
                         u589_21 11FD                           u693_27 1252                           u685_27 11E7  
                         u677_27 117C                           u669_27 010B                           u598_20 1277  
                         u598_21 1276                           u694_27 1260                           u686_27 11F5  
                         u678_27 118A                           u599_20 1283                           u599_21 1282  
                         u695_27 126C                           u687_27 1201                           u679_27 1196  
                         u696_27 127A                           u688_27 120F                           u697_27 1286  
                         u689_27 121B                           u698_27 1294                           u699_27 12A0  
                         _WDTCON 0097                           _SSPADD 0212                     ?i1_Lcd_Clear 0070  
                         _SSPBUF 0211                 __end_of___xxtofl 07DB               ??i1_Lcd_Write_Char 0071  
              __end_ofi1_Lcd_Cmd 19BF                     vfprintf@cfmt 00DC                           ___flge 1003  
                         ___fleq 1C13                i1Lcd_Write_Char@a 0074                i1Lcd_Write_Char@y 0073  
                      ??___fladd 0028                           ___wmul 1A84                        ??___fldiv 003C  
                      ??___awdiv 0024                        ??___flneg 0024                        ??___awmod 0024  
                      ??___flmul 0031                        ??___flsub 004B                        ??___fltol 0024  
                         _efgtoa 08ED                           _buffer 01A0                           _floorf 0802  
                         _estado 0130                           _memcpy 1B36             read_prec_or_width@ap 0026  
               ___awdiv@quotient 0027                  ___awmod@divisor 0020                  ___awmod@counter 0025  
                         pad@buf 002F                           dtoa@fp 003B                           _strcmp 1BB3  
                         _strcpy 19EC                           fputc@c 0020                           fputs@c 002B  
                         fputs@i 002C                           fputs@s 002E                  ___fpclassifyf@e 002A  
                ___fpclassifyf@u 002C                  ___fpclassifyf@x 0020                           putch@c 0070  
               __end_of_vfprintf 1AC7                        ??_sprintf 00EC                  Lcd_Set_Cursor@a 0025  
                Lcd_Set_Cursor@b 0023                  Lcd_Set_Cursor@y 0027                  Lcd_Set_Cursor@z 0026  
                     ___flge@ff1 0043                       ___flge@ff2 0047                  ??___fpclassifyf 0024  
                   ___xxtofl@arg 0030                     ___xxtofl@exp 002F                     ___xxtofl@val 0026  
                     ___fleq@ff1 0020                       ___fleq@ff2 0024          __end_of__initialization 0264  
                     ___flneg@f1 0020                __end_of_Lcd_Clear 198D                       ___fltol@f1 0020  
                 __pcstackCOMMON 0070                     __pidataBANK2 194F                    __end_of_fputc 1D60  
                  __end_of_fputs 0800                    __end_of_putch 0004          _ADC_GetConversionResult 197B  
                 _Lcd_Set_Cursor 1F07                   _OPTION_REGbits 0095                      _Keypad_Init 1969  
                      ?_Lcd_Init 0070                        ?_Lcd_Port 0070                          ??_fputc 0023  
                        ??_fputs 0029                          ??_putch 0020                       __pbssBANK1 00EF  
                     __pbssBANK2 0120                       __pbssBANK3 01A0                       __pbssBANK4 0220  
              __end_of__Umul8_16 1B0E                       __pmaintext 0268                          ?___flge 0043  
                        ?___fleq 0020                          ?___wmul 0020                       __pintentry 0004  
                        ?_efgtoa 0062                          ?_floorf 004E                          ?_memcpy 0020  
         __end_of_Lcd_Set_Cursor 1F81                          ?_strcmp 0070                          ?_strcpy 0020  
                      ?___xxtofl 0026                     ??i1_Lcd_Port 0070                          _OSCTUNE 0098  
                     ??_Lcd_Init 0023                       ??_Lcd_Port 0020                 main@contadorTemp 00ED  
                 _Lcd_Write_Char 1B88                          _Lcd_Cmd 19D5             _ADC_InterruptHandler 0134  
             __end_ofi1_Lcd_Port 1A64                          ___fladd 15F8                          ___fldiv 144E  
                        ___awdiv 1D60                          ___flneg 198D                          ___awmod 1CB3  
                        ___flmul 04F5                          ___flsub 1A64                          ___fltol 1E21  
                      ?_vfprintf 006D        ??_ADC_GetConversionResult 0022                  ?_Lcd_Set_Cursor 0023  
                        __ptext1 1AC7                          __ptext2 1AA4                          __ptext3 12A9  
                        __ptext4 1DC0                          __ptext5 1A84                          __ptext6 08ED  
                        __ptext7 19EC                          __ptext8 1B36                          __ptext9 19BF  
          read_prec_or_width@fmt 002E                       ??___xxtofl 002A                 ___awmod@dividend 0022  
                        efgtoa@c 0066                          efgtoa@d 00AB                          efgtoa@e 00B0  
                        efgtoa@f 0062                          efgtoa@g 00C3                          efgtoa@h 00B8  
                        efgtoa@i 00C0                          efgtoa@l 00BC                          efgtoa@m 00AD  
                        efgtoa@n 00C7                          efgtoa@p 00A2                          efgtoa@t 00A4  
                        efgtoa@u 00C9                          efgtoa@w 00B2       __end_ofi1_Lcd_Write_String 1A25  
                        _sprintf 1AC7                          clrloop0 1955           __end_of_Lcd_Write_Char 1BB3  
           end_of_initialization 0264                          floorf@e 005C                          floorf@m 0058  
                        floorf@u 005E                          floorf@x 004E                ??_Keypad_Get_Char 0070  
                        memcpy@d 0026                          memcpy@n 0021                          memcpy@s 0027  
                        fputc@fp 0022                          fputs@fp 0028               _read_prec_or_width 1DC0  
   __end_of_ADC_IsConversionDone 1961                __end_of_vfpfcnvrt 144E                       efgtoa@mode 00A9  
                     efgtoa@sign 00C2              ?_read_prec_or_width 0026                 vfpfcnvrt@convarg 00D2  
                      Lcd_Port@a 0020                       ??_vfprintf 00DA                          strcmp@l 0073  
                        strcmp@r 0070                        i1_Lcd_Cmd 19AB                          strcpy@d 0024  
                      _PORTBbits 000D                      ___fladd@grs 0033                    ___xxtofl@sign 002E  
                      _TRISAbits 008C                        _TRISBbits 008D                        _TRISCbits 008E  
                      _TRISDbits 008F              _ADC_StartConversion 1000             ??_read_prec_or_width 0028  
                    ___fldiv@grs 0048                      ___fldiv@rem 0041                  ?_Lcd_Write_Char 0070  
              Lcd_Write_String@a 0025                Lcd_Write_String@i 0028                      ___flmul@grs 0037  
           ?_ADC_StartConversion 0070                        _Lcd_Clear 1984                   __end_of___flge 108E  
                 __end_of___fleq 1C62                      vfpfcnvrt@ap 006C                      vfpfcnvrt@cp 00D8  
                    vfpfcnvrt@fp 00D7                   __end_of___wmul 1AA4                       ?i1_Lcd_Cmd 0070  
               _Lcd_Write_String 1A25                   __end_of_efgtoa 1000                   _ADC_Initialize 1961  
                 __end_of_floorf 08ED                   __end_of_memcpy 1B5E                       floorf@F521 0120  
                   ?_Keypad_Init 0070                   __end_of_strcmp 1BE3                   __end_of_strcpy 1A08  
            start_initialization 0239                      __end_of_IOC 0237                      __end_of_abs 19AB  
                    __end_of_pad 1C13                 i1_Lcd_Set_Cursor 1E92            __end_of___fpclassifyf 2000  
          ??_ADC_StartConversion 0020                      vfprintf@fmt 006D                       ?_Lcd_Clear 0070  
                       ??___flge 004B                         ??___fleq 0028                         ??___wmul 0024  
                       ??_efgtoa 0067           __end_of_ADC_Initialize 1969                        __Umul8_16 1AEA  
                    __pdataBANK2 015E                         ??_floorf 0052                         ??_memcpy 0023  
                Lcd_Write_Char@a 0024                  Lcd_Write_Char@y 0023                         ??_strcmp 0072  
                       ??_strcpy 0022                        ___fladd@a 0024                        ___fladd@b 0020  
                      ___fldiv@a 0034                        ___fldiv@b 0038                        ___flmul@a 002D  
                      ___flmul@b 0029                      __pbssCOMMON 007C                        ___flsub@a 0043  
                      ___flsub@b 0047                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00A0                    __pcstackBANK2 013F             _ADC_IsConversionDone 195A  
           i1Lcd_Write_Char@temp 0072                         ?_Lcd_Cmd 0070                      _efgtoa$1370 00A6  
                      _dtoa$1339 0039                 ??_Lcd_Set_Cursor 0024                         ?___fladd 0020  
                       ?___fldiv 0034                         ?___awdiv 0020                         ?___flneg 0020  
                       ?___awmod 0020                         ?___flmul 0029                         ?___flsub 0043  
                       ?___fltol 0020                       ?__Umul8_16 0020                  ?_ADC_Initialize 0070  
                    _clave_enter 015E                 i1_Lcd_Write_Char 1B0E                      ??i1_Lcd_Cmd 0071  
           i1Lcd_Set_Cursor@temp 0078                  _Keypad_Get_Char 1165            ?_ADC_IsConversionDone 0070  
                       ?_sprintf 00DE                    ??i1_Lcd_Clear 0073                   ___wmul@product 0024  
                       _LATAbits 010C                         _LATBbits 010D                         _LATCbits 010E  
                       _LATDbits 010F                        clear_ram0 1954               i1_Lcd_Write_String 1A08  
                       Lcd_Cmd@a 0022                      ??_Lcd_Clear 0023              ?i1_Lcd_Write_String 0075  
                      _vfpfcnvrt 12A9                       _ADCON0bits 009D                ___wmul@multiplier 0020  
               ??_Lcd_Write_Char 0021                         _Lcd_Init 1C62                         _Lcd_Port 1B5E  
                     vfpfcnvrt@c 00D6             ??i1_Lcd_Write_String 0077         __end_of_Lcd_Write_String 1A44  
                      memcpy@tmp 0024                       vfprintf@ap 006F                       vfprintf@fp 00DB  
       ?_ADC_GetConversionResult 0020              __end_ofi1_Lcd_Clear 197B          __end_of_Keypad_Get_Char 12A9  
                    ??__Umul8_16 0022                       ?_vfpfcnvrt 006B         __end_ofi1_Lcd_Set_Cursor 1F07  
             ___fpclassifyf@F465 0124           ??_ADC_IsConversionDone 0020                       sprintf@fmt 00DE  
                       ___xxtofl 0730                i1Lcd_Set_Cursor@a 0075                i1Lcd_Set_Cursor@b 0073  
              i1Lcd_Set_Cursor@y 0077                i1Lcd_Set_Cursor@z 0076                         __ptext10 0802  
                       __ptext11 1F81                         __ptext20 144E                         __ptext12 1E21  
                       __ptext21 108E                         __ptext13 1A64                         __ptext30 1A25  
                       __ptext22 1BE3                         __ptext14 15F8                         __ptext31 1B88  
                       __ptext23 07DB                         __ptext15 198D                         __ptext40 197B  
                       __ptext32 1F07                         __ptext24 1D07                         __ptext16 04F5  
                       __ptext33 1C62                         __ptext25 0003                         __ptext17 1AEA  
                       __ptext50 1165                         __ptext42 1A08                         __ptext34 1984  
                       __ptext26 1999                         __ptext18 1003                         __ptext43 1B0E  
                       __ptext35 19D5                         __ptext27 1CB3                         __ptext19 1C13  
                       __ptext44 1E92                         __ptext36 1B5E                         __ptext28 1D60  
                       __ptext45 1972                         __ptext37 1000                         __ptext29 0730  
                       __ptext46 19AB                         __ptext38 195A                         __ptext47 1A44  
                       __ptext39 1961                         __ptext48 1BB3                         __ptext49 1969  
                       _cont_key 0132                       strcpy@dest 0025                      i1Lcd_Port@a 0070  
                       efgtoa@fp 00AF                         efgtoa@ne 00A0                         efgtoa@pp 00A8  
                       efgtoa@ou 00B4                         int$flags 007E                         _vfprintf 1AA4  
            i1Lcd_Write_String@a 0075              i1Lcd_Write_String@i 0078                       _INTCONbits 000B  
                       memcpy@d1 0025                         memcpy@s1 0020                   __pstringtext10 1878  
                 __pstringtext11 187F                   __pstringtext12 1883                   __pstringtext13 1887  
                 __pstringtext14 0000               Lcd_Write_Char@temp 0022                         intlevel1 0000  
                      sprintf@ap 0140         __end_ofi1_Lcd_Write_Char 1B36      __end_of_ADC_StartConversion 1003  
                    i1_Lcd_Clear 1972  __end_of_ADC_GetConversionResult 1984                       i1Lcd_Cmd@a 0072  
                      strcpy@src 0020                 ??_ADC_Initialize 0020                      efgtoa@nmode 00AA  
               ?_Keypad_Get_Char 0070                      ??_vfpfcnvrt 00CD               Lcd_Set_Cursor@temp 0028  
                  __pstringtext1 1800                    __pstringtext2 1811                    __pstringtext3 1822  
                  __pstringtext4 1832                    __pstringtext5 1841                    __pstringtext6 1850  
                  __pstringtext7 185F                    __pstringtext8 1868                    __pstringtext9 1871  
         __Umul8_16@multiplicand 0020                         sprintf@f 0141                         sprintf@s 013F  
                     i1_Lcd_Port 1A44                      _SSPCON1bits 0215                      _SSPCON2bits 0216  
                  ___fladd@signs 0030                     ___fladd@aexp 0031                     ___fladd@bexp 0032  
           __Umul8_16@multiplier 0028                       _SSPCONbits 0215                __Umul8_16@product 0024  
